<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Ansble常用模块</title>
    <url>/2019/01/01/Ansble%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%97/</url>
    <content><![CDATA[<h2 id="ansible查看帮助方法"><a href="#ansible查看帮助方法" class="headerlink" title="ansible查看帮助方法"></a>ansible查看帮助方法</h2><p>ansible-doc -l        — 查看所有模块说明信息</p>
<p>ansible-doc -s copy   — 表示指定查看某个模块参数用法信息</p>
<p>ansible kyd -m ping -vvvv  — 利用-v显示查看ansible命令执行过程</p>
 <span id="more"></span>

<h2 id="command-常用模块"><a href="#command-常用模块" class="headerlink" title="command(常用模块)"></a>command(常用模块)</h2><p>缺点：运行的命令中无法使用变量，管道。如果需要使用管道、变量，使用shell模块参数说明</p>
<p>chdir       —在执行一个命令前，进入一个目录中</p>
<p>creates     —定义一个文件是否存在，如果不存在运行相应命令，如果存在跳过此步骤</p>
<p>removes     —定义一个文件是否则存在，如果存在运行相应命令，如果不存在跳过此步骤</p>
<p>free_form*  —定义使用command模块是，-a后面必须接上linux命令命令</p>
<p>ansible kyd -a “hostname” &#x3D;&#x3D; ansible kyd -m command -a “hostname”</p>
<h2 id="copy-复制模块"><a href="#copy-复制模块" class="headerlink" title="copy(复制模块)"></a>copy(复制模块)</h2><p>参数说明</p>
<p>src           — 推送数据的源文件信息</p>
<p>dest          — 推送数据的目标路径或文件信息</p>
<p>remote_src    — 如果为False，将搜索源信息在本地&#x2F;管理及机器上，如果为True，将到远程&#x2F;目标主机的机器上搜索，默认为false，目前remote_src不支持递归拷贝</p>
<p>backup        — 对推送传输过去的文件，进行备份</p>
<p>content       — 直接批量在被管理端文件中添加内容</p>
<p>group         — 将本地文件推送到远端，指定文件属组信息</p>
<p>owner         — 将本地文件推送到远端，指定文件属主信息</p>
<p>mode          — 将本地文件推送到远端，指定文件权限信息</p>
<p>命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">复制本地数据推送远端并改名</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ansible 172.17.252.102 -m copy -a <span class="string">&quot;src=/etc/hosts dest=/tmp/kyd.txt&quot;</span></span></span><br><span class="line">复制本地数据推送远端并授权</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ansible 172.17.252.102 -m copy -a <span class="string">&quot;src=/etc/ansible/conf/rsync_conf/fuwuduan.password dest=/etc/rsync.password mode=600&quot;</span></span></span><br><span class="line">向推送远端文件中写入数据信息，会覆盖远端文件内原有的数据</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ansible 172.17.252.102 -m copy -a <span class="string">&quot;content=&#x27;rsync_backup:kyd123&#x27; dest=/etc/rsync.password&quot;</span></span></span><br><span class="line">在推送覆盖远程端文件前，对远端已有文件进行备份，按照时间信息备份</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ansible kyd -m copy -a <span class="string">&quot;src=/etc/hosts dest=/tmp/kyd123.txt backup=yes&quot;</span></span></span><br><span class="line">在被管理端主机上搜寻src文件信息，将数据信息复制到被管理端主机其他目录中</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ansible 172.17.252.102 -m copy -a <span class="string">&quot;src=/kyd/kyd.txt dest=/tmp remote_src=True&quot;</span></span></span><br></pre></td></tr></table></figure>


<h2 id="shell-万能模块"><a href="#shell-万能模块" class="headerlink" title="shell(万能模块)"></a>shell(万能模块)</h2><p>优点:执行的命令中有管道或者变量，就需要使用shell</p>
<p>命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">创建用户</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ansible 172.17.252.102 -m shell -a <span class="string">&quot;useradd rsync -s /sbin/nologin -M&quot;</span></span></span><br><span class="line">启动服务</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ansible 172.17.252.102 -m shell -a <span class="string">&quot;/etc/init.d/rpcbind start&quot;</span></span></span><br><span class="line">运行脚本</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ansible 172.17.252.102 -m shell -a <span class="string">&quot;/bin/sh /server/scripts/yum.sh&quot;</span></span> </span><br></pre></td></tr></table></figure>


<h2 id="script-脚本模块"><a href="#script-脚本模块" class="headerlink" title="script(脚本模块)"></a>script(脚本模块)</h2><p>优点：此模块可以本地执行脚本文件，相当于在远程执行一样，不用再将脚本文件进行推送</p>
<p>命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">运行脚本</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ansible 172.17.252.102 -m script -a <span class="string">&quot;/server/scripts/yum1.sh&quot;</span></span></span><br></pre></td></tr></table></figure>


<h2 id="yum-下载安装模块"><a href="#yum-下载安装模块" class="headerlink" title="yum(下载安装模块)"></a>yum(下载安装模块)</h2><p>参数说明</p>
<p>name      — 指定要安装的软件包名称,多个软件包用’,’隔开</p>
<p>state     — installed安装软件<br>          —removed 卸载软件</p>
<p>命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ansible kyd -m yum -a <span class="string">&quot;name=nmap state=installed&quot;</span></span></span><br></pre></td></tr></table></figure>


<p>​    </p>
<h2 id="service-管理服务模块"><a href="#service-管理服务模块" class="headerlink" title="service(管理服务模块)"></a>service(管理服务模块)</h2><p>参数说明</p>
<p>name      — 定义要启动服务的名称</p>
<p>state     — 指定服务状态是停止或是运行，停止和运行指令要写成过去时started&#x2F;stopped&#x2F;restarted</p>
<p>enabled   — 是否让服务开启自启动</p>
<p>命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">启动crond服务</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ansible kyd -m service -a <span class="string">&quot;name=crond state=stopped enabled=yes&quot;</span></span></span><br></pre></td></tr></table></figure>


<h2 id="file-文件操作模块"><a href="#file-文件操作模块" class="headerlink" title="file(文件操作模块)"></a>file(文件操作模块)</h2><p>参数说明</p>
<p>path            — 指定远程主机目录或文件信息</p>
<p>state           — directory  在远程创建目录              <br>   — touch 创建文件                            <br>   — link或hard表示创建链接文件                    <br>   — absent表示删除文件或目录</p>
<p>mode            — 设置文件或目录权限</p>
<p>owner           — 设置文件或目录属主信息</p>
<p>group           — 设置文件或目录属组信息</p>
<p>命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">批量创建目录</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ansible kyd -m file -a <span class="string">&quot;path=/tmp/alex/ state=directory&quot;</span></span></span><br><span class="line">批量创建文件</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ansible kyd -m file -a <span class="string">&quot;path=/tmp/alex.txt state=touch&quot;</span></span></span><br><span class="line">批量创建文件软连接</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ansible kyd -m file -a <span class="string">&quot;src=/tmp/alex.txt path=/tmp/alex_link state=link&quot;</span></span></span><br><span class="line">批量删除目录或文件</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ansible kyd -m file -a <span class="string">&quot;path=/tmp/alex/  state=absent&quot;</span></span></span><br><span class="line">批量修改文件或目录属性信息</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ansible kyd -m file -a <span class="string">&quot;path=/tmp/kyd/ mode=0777 owner=kyd&quot;</span></span></span><br></pre></td></tr></table></figure>


<h2 id="cron-定时任务模块"><a href="#cron-定时任务模块" class="headerlink" title="cron(定时任务模块)"></a>cron(定时任务模块)</h2><p>格式</p>
<p>ansible kyd -m cron -a “minute&#x3D;* hour&#x3D;* day&#x3D;* month&#x3D;* weekday&#x3D;*  job&#x3D;’&#x2F;bin&#x2F;sh &#x2F;server&#x2F;scripts&#x2F;test.sh’”</p>
<p>命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">创建每5分钟执行一次名称为cron01的定时任务</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ansible kyd -m cron -a <span class="string">&quot;minute=*/5 name=&#x27;cron01&#x27; job=&#x27;/bin/sh /server/scripts/test.sh&#x27;&quot;</span></span></span><br><span class="line">取消定时任务（注释）true/false = yes/no</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ansible kyd -m cron -a <span class="string">&quot;disabled=true name=&#x27;cron01&#x27; job=&#x27;/bin/sh /server/scripts/test.sh&#x27;&quot;</span></span></span><br><span class="line">删除定时任务</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ansible kyd -m cron -a <span class="string">&quot;state=absent name=&#x27;cron01&#x27; job=&#x27;/bin/sh /server/scripts/test.sh’&quot;</span></span></span><br></pre></td></tr></table></figure>


<h2 id="group-用户组模块"><a href="#group-用户组模块" class="headerlink" title="group(用户组模块)"></a>group(用户组模块)</h2><p>命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">创建hwq用户组</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ansible 172.17.252.102 -m group -a <span class="string">&quot;name=hwq&quot;</span></span></span><br></pre></td></tr></table></figure>


<h2 id="user-用户模块"><a href="#user-用户模块" class="headerlink" title="user(用户模块)"></a>user(用户模块)</h2><p>参数说明</p>
<p>name              —指定用户名</p>
<p>uid               —指定uid</p>
<p>groups            —指定属组</p>
<p>state             —创建还是删除present&#x2F;absent</p>
<p>remover           —当state&#x3D;absent时，remove&#x3D;yes则表示删除用户所有信息等同于userdel -r</p>
<p>createhome        —是否创建家目录 yes|no</p>
<p>shell             —命令编辑器</p>
<p>命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">创建一个虚拟用户</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ansible 172.17.252.102 -m user -a <span class="string">&quot;name=hwq uid=567  createhome=no shell=/sbin/nologin state=present&quot;</span></span></span><br><span class="line">创建一个用户 属组是hwq</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ansible 172.17.252.102 -m user -a <span class="string">&quot;name=hwq uid=567  createhome=yes shell=/bin/bash state=present groups=hwq&quot;</span></span></span><br><span class="line">删除一个用户</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ansible 172.17.252.102 -m user -a “name=hwq state=absent remove=<span class="built_in">yes</span><span class="string">&quot;</span></span></span><br></pre></td></tr></table></figure>


<h2 id="group-管理组模块"><a href="#group-管理组模块" class="headerlink" title="group(管理组模块)"></a>group(管理组模块)</h2><p>name              —指定用户组</p>
<p>gid               —指定gid</p>
<p>state             —创建还是删除present&#x2F;absent</p>
<p>system            — yes，创建系统组</p>
<p>命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">创建一个系统用户组</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ansble 172.17.252.102 -m group -a <span class="string">&quot;name=nginx gid=8080 system=yes&quot;</span></span></span><br></pre></td></tr></table></figure>


<h2 id="ping-测试模块"><a href="#ping-测试模块" class="headerlink" title="ping(测试模块)"></a>ping(测试模块)</h2><p>测试指定主机是否能连接，如果成功返回pong命令</p>
<p>命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ansible 172.17.252.102 -m ping</span></span><br></pre></td></tr></table></figure>


<h2 id="mount-挂载模块"><a href="#mount-挂载模块" class="headerlink" title="mount(挂载模块)"></a>mount(挂载模块)</h2><p>参数说明</p>
<p>name      —挂载点</p>
<p>src       —挂载目录</p>
<p>fstype    —文件系统类型</p>
<p>mounted   —自动创建挂载点并挂载</p>
<p>state     —状态</p>
<p>命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ansinle 172.17.252.102 -m mount -a <span class="string">&quot;name=/mnt src=172.17.252.102:/data fstype=nfs state=mounted&quot;</span></span></span><br></pre></td></tr></table></figure>


<h2 id="synchronize-同步模块"><a href="#synchronize-同步模块" class="headerlink" title="synchronize(同步模块)"></a>synchronize(同步模块)</h2><p>参数说明</p>
<p>delete&#x3D;yes      —使两边的内容一样（即以推送方为主）</p>
<p>compress&#x3D;yes    —开启压缩，默认为开启</p>
<p>–exclude&#x3D;.git  —排除 忽略同步.git结尾的文件</p>
<p>mode&#x3D;pull       —更改推送模式为拉取模式</p>
<p>命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">拉取被管理端的数据</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ansible 172.17.252.102 -m synchronize -a <span class="string">&quot;src=/tmp/kyd.txt dest=/tmp mode=pull&quot;</span></span></span><br><span class="line">推送数据到被管理端</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ansible 172.17.252.102 -m synchronize -a <span class="string">&quot;src=/tmp/kyd.txt dest=/tmp&quot;</span></span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>ansible</category>
      </categories>
      <tags>
        <tag>ansible</tag>
      </tags>
  </entry>
  <entry>
    <title>ECS搭建sendmail邮件服务器</title>
    <url>/2019/04/16/ECS%E6%90%AD%E5%BB%BAsendmail%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    <content><![CDATA[<h3 id="配置服务"><a href="#配置服务" class="headerlink" title="配置服务"></a>配置服务</h3><h4 id="安装服务"><a href="#安装服务" class="headerlink" title="安装服务"></a>安装服务</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum install -y sendmail sendmail-cf</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cd</span> /etc/mail</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim sendmail.mc</span> </span><br><span class="line">118 DAEMON_OPTIONS(&#x27;Family=inet,  Name=MTA-v4, Port=smtp, Addr=127.0.0.1’)dnl  将Addr=127.0.0.1修改为Addr=0.0.0.0，意思是可以连接到任何服务器。</span><br></pre></td></tr></table></figure>
 <span id="more"></span>
<p>备份原有配置文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mv</span> sendmail.cf sendmail.cf.bak</span>    </span><br></pre></td></tr></table></figure>
<p>生成新配置文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">m4 sendmail.mc &gt; sendmail.cf</span></span><br></pre></td></tr></table></figure>
<h4 id="配置域名"><a href="#配置域名" class="headerlink" title="配置域名"></a>配置域名</h4><p>1.将域名加入到local-host-names文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /etc/mail/local-host-names</span></span><br><span class="line">mail.devops.kydbj.com</span><br></pre></td></tr></table></figure>
<p>2.修改submit.cf文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vi /etc/mail/submit.cf</span></span><br><span class="line">62 #Dj$w.Foo.COM</span><br><span class="line">63 Djkydbj.com</span><br></pre></td></tr></table></figure>
<p>注意！一定是Dj+Domain形式！</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl restart sendmail.service</span></span><br></pre></td></tr></table></figure>
<p>至此，sendmail邮件命名配置完毕，重启sendmail使配置生效。</p>
<h4 id="添加域名MX记录"><a href="#添加域名MX记录" class="headerlink" title="添加域名MX记录"></a>添加域名MX记录</h4><p>1.添加域名A记录</p>
<table>
<thead>
<tr>
<th>域名</th>
<th>类型</th>
<th>记录</th>
</tr>
</thead>
<tbody><tr>
<td>mail.devops</td>
<td>A</td>
<td>106.12.11.107</td>
</tr>
</tbody></table>
<p>2.添加MX记录</p>
<table>
<thead>
<tr>
<th>域名</th>
<th>类型</th>
<th>记录</th>
</tr>
</thead>
<tbody><tr>
<td>mail.devops</td>
<td>MX</td>
<td><a href="http://mail.devops.kydbj.com/">mail.devops.kydbj.com</a></td>
</tr>
</tbody></table>
<p>3.使用nslookup检测MX记录是否能正确解析到邮件服务器</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum install bind-utils</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">nslookup</span></span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash"><span class="built_in">set</span> q=mx</span></span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">mail.devops.kydbj.com</span></span><br><span class="line">Server:         100.100.2.138</span><br><span class="line">Address:        100.100.2.138#53</span><br><span class="line">Non-authoritative answer:</span><br><span class="line">mail.devops.kydbj.com        mail exchanger = 10 mail.devops.kydbj.com.    </span><br></pre></td></tr></table></figure>
<h4 id="发送邮件测试"><a href="#发送邮件测试" class="headerlink" title="发送邮件测试"></a>发送邮件测试</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">sendmail -t &lt;&lt;<span class="string">EOF</span></span></span><br><span class="line">From:Mail test &lt;ops@mail.devops.kydbj.com&gt;</span><br><span class="line">To:weiqun_h@163.com</span><br><span class="line">Subject:Test</span><br><span class="line">Hello World！</span><br><span class="line">EOF    </span><br></pre></td></tr></table></figure>
<p><img src="/image/1555409963.png"></p>
<p>注：阿里云ecs默认封了25端口，需要去云盾控制台解封</p>
<h4 id="telnet测试mail服务"><a href="#telnet测试mail服务" class="headerlink" title="telnet测试mail服务"></a>telnet测试mail服务</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">telnet 172.17.252.103 25</span></span><br><span class="line">Trying 172.17.252.103...</span><br><span class="line">Connected to 172.17.252.103.</span><br><span class="line">Escape character is &#x27;^]&#x27;.</span><br><span class="line">220 localhost.localdomain ESMTP Sendmail 8.14.7/8.14.7; Wed, 17 Apr 2019 11:32:17 +0800</span><br><span class="line">helo hi                                 #打招呼，测试连接性</span><br><span class="line">250 localhost.localdomain Hello master02 [172.17.252.107], pleased to meet you</span><br><span class="line">mail from:ops@mail.devops.kydbj.com     #发件人邮箱</span><br><span class="line">250 2.1.0 ops@mail.devops.kydbj.com... Sender ok</span><br><span class="line">rcpt to:weiqun_h@163.com                #收件人邮箱</span><br><span class="line">250 2.1.5 weiqun_h@163.com... Recipient ok</span><br><span class="line">data                                    #开始写邮件</span><br><span class="line">354 Enter mail, end with &quot;.&quot; on a line by itself</span><br><span class="line">subject:test                            #邮件标题</span><br><span class="line">Hello World!                            #正文</span><br><span class="line">.                                       #结束</span><br><span class="line">250 2.0.0 x3H3WHdc032165 Message accepted for delivery</span><br><span class="line">quit                                    #退出telnet服务</span><br><span class="line">221 2.0.0 localhost.localdomain closing connection</span><br><span class="line">Connection closed by foreign host.    </span><br></pre></td></tr></table></figure>
<h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><h4 id="邮件发送较慢"><a href="#邮件发送较慢" class="headerlink" title="邮件发送较慢"></a>邮件发送较慢</h4><p>把`hostname`结果放入&#x2F;etc&#x2F;hosts里的127.0.0.1一行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">hostname</span></span><br><span class="line">heweiqun</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /etc/hosts</span></span><br><span class="line">127.0.0.1 heweiqun    </span><br></pre></td></tr></table></figure>
<h4 id="Relaying-denied（拒绝投递）"><a href="#Relaying-denied（拒绝投递）" class="headerlink" title="Relaying denied（拒绝投递）"></a>Relaying denied（拒绝投递）</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Apr 16 17:40:27 heweiqun sendmail[32149]: x3G9dvRk032149: ruleset=check_rcpt, arg1=weiqun_h@163.com, relay=test [172.17.252.104], reject=550 5.7.1 weiqun_h@163.com... Relaying denied    </span><br></pre></td></tr></table></figure>
<p>原因是把sendmail当做邮件中转站，需要将客户端的IP地址加入到access配置文件中。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /etc/access</span></span><br><span class="line">Connect:客户端IP                   RELAY    </span><br></pre></td></tr></table></figure>
<p>重新生成访问权限的数据库</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">makemap <span class="built_in">hash</span> /etc/mail/access.db &lt;/etc/mail/access</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl restart sendmail.service</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>ecs</category>
      </categories>
  </entry>
  <entry>
    <title>ELK+Kafka集群搭建</title>
    <url>/2018/11/22/ELK+Kafka%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h2 id="ELK介绍"><a href="#ELK介绍" class="headerlink" title="ELK介绍"></a><strong>ELK介绍</strong></h2><p>ELK是三个开源软件的缩写，分别表示：Elasticsearch , Logstash, Kibana , 它们都是开源软件。新增了一个FileBeat，它是一个轻量级的日志收集处理工具(Agent)，Filebeat占用资源少，适合于在各个服务器上搜集日志后传输给Logstash，官方也推荐此工具。 Elasticsearch是个开源分布式搜索引擎，提供搜集、分析、存储数据三大功能。它的特点有：分布式，零配置，自动发现，索引自动分片，索引副本机制，restful风格接口，多数据源，自动搜索负载等。 Logstash 主要是用来日志的搜集、分析、过滤日志的工具，支持大量的数据获取方式。一般工作方式为c&#x2F;s架构，client端安装在需要收集日志的主机上，server端负责将收到的各节点日志进行过滤、修改等操作在一并发往elasticsearch上去。 Kibana 也是一个开源和免费的工具，Kibana可以为 Logstash 和 ElasticSearch 提供的日志分析友好的 Web 界面，可以帮助汇总、分析和搜索重要数据日志。 <strong>Zookeeper+Kakfa</strong> kafka 是一个分布式的基于push-subscribe的消息系统，它具备快速、可扩展、可持久化的特点。它现在是Apache旗下的一个开源系统，作为Hadoop生态系统的一部分，被各种商业公司广泛应用。它的最大的特性就是可以实时的处理大量数据以满足各种需求场景：比如基于hadoop的批处理系统、低延迟的实时系统、storm&#x2F;spark流式处理引擎。 特点：<br> <span id="more"></span></p>
<ul>
<li><strong>高吞吐量、低延迟</strong>：kafka每秒可以处理几十万条消息，它的延迟最低只有几毫秒</li>
<li><strong>可扩展性</strong>：kafka集群支持热扩展</li>
<li><strong>持久性、可靠性</strong>：消息被持久化到本地磁盘，并且支持数据备份防止数据丢失</li>
<li><strong>容错性</strong>：允许集群中节点失败（若副本数量为n,则允许n-1个节点失败）</li>
<li><strong>高并发</strong>：支持数千个客户端同时读写</li>
</ul>
<p>ZooKeeper是一个分布式的，开放源码的分布式应用程序协调服务，它包含一个简单的原语集，分布式应用程序可以基于它实现同步服务，配置维护和命名服务等。 集群角色：</p>
<ul>
<li>Leader服务器是整个zookeeper集群工作机制中的核心</li>
<li>Follower服务器是zookeeper集群状态的跟随者</li>
<li>Observer 服务器充当一个观察者的角色</li>
</ul>
<h2 id="虚拟机准备环境"><a href="#虚拟机准备环境" class="headerlink" title="虚拟机准备环境"></a><strong>虚拟机准备环境</strong></h2><table>
<thead>
<tr>
<th>主机名</th>
<th>IP</th>
<th>备住</th>
<th>内存+磁盘</th>
</tr>
</thead>
<tbody><tr>
<td>ELK01</td>
<td>10.0.0.20&#x2F;172.16.1.20</td>
<td>ES+logstash+kibana</td>
<td>4G+100G</td>
</tr>
<tr>
<td>ELK02</td>
<td>10.0.0.21&#x2F;172.16.1.21</td>
<td>ES+logstash</td>
<td>3G+100G</td>
</tr>
<tr>
<td>ZK01</td>
<td>10.0.0.30&#x2F;172.16.1.30</td>
<td>Zookeeper+Kafka</td>
<td>2G+100G</td>
</tr>
<tr>
<td>ZK02</td>
<td>10.0.0.31&#x2F;172.16.1.31</td>
<td>Zookeeper+Kafka</td>
<td>2G+100G</td>
</tr>
<tr>
<td>ZK03</td>
<td>10.0.0.32&#x2F;172.16.1.32</td>
<td>Zookeeper+Kafka</td>
<td>2G+100G</td>
</tr>
<tr>
<td>online01</td>
<td>10.0.0.40&#x2F;172.16.1.40</td>
<td>filebeat</td>
<td>2G+100G</td>
</tr>
<tr>
<td>online02</td>
<td>10.0.0.41&#x2F;172.16.1.41</td>
<td>filebeat</td>
<td>2G+100G</td>
</tr>
</tbody></table>
<p>系统版本</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cat</span> /etc/redhat-release</span></span><br><span class="line">CentOS Linux release 7.4.1708 (Core)</span><br></pre></td></tr></table></figure>


<p>防火墙与selinux</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl status firewalld.service</span></span><br><span class="line">	* firewalld.service - firewalld - dynamic firewall daemon</span><br><span class="line">Loaded: loaded (/usr/lib/systemd/system/firewalld.service; disabled; vendor preset: enabled)</span><br><span class="line">Active: inactive (dead)</span><br><span class="line">Docs: man:firewalld(1)</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">sestatus</span></span><br><span class="line">SELinux status:                 disabled</span><br></pre></td></tr></table></figure>

<p>内存</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">free -m</span></span><br><span class="line">total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:           1984         105         870           8        1008        1691</span><br><span class="line">Swap:          1023           0        1023</span><br></pre></td></tr></table></figure>


<h2 id="ELK集群部署"><a href="#ELK集群部署" class="headerlink" title="ELK集群部署"></a><strong>ELK集群部署</strong></h2><h3 id="安装jdk（所有）"><a href="#安装jdk（所有）" class="headerlink" title="安装jdk（所有）"></a>安装jdk（所有）</h3><p><a href="https://pan.baidu.com/s/1wnS1HhAil4n1_ysQh56jPA">https://pan.baidu.com/s/1wnS1HhAil4n1_ysQh56jPA</a> jdk百度云链接</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cd</span> /server/tools</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">tar xf jdk-8u60-linux-x64.tar.gz -C /opt</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mv</span> /opt/jdk1.8.0_60/ /opt/jdk/</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /etc/profile</span></span><br><span class="line">export JAVA_HOME=/opt/jdk</span><br><span class="line">export JRE_HOME=/opt/jdk/jre</span><br><span class="line">export PATH=$JAVA_HOME/bin:$JAVA_HOME/jre/bin:$PATH</span><br><span class="line">export CLASSPATH=.$CLASSPATH:$JAVA_HOME/lib:$JAVA_HOME/jre/lib:$JAVA_HOME/lib/tools.jar</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">source</span> /etc/profile</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">java -version</span></span><br><span class="line">java version &quot;1.8.0_60&quot;</span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_60-b27)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.60-b23, mixed mode)</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">ln</span> -s /opt/jdk/bin/java /usr/bin/java</span></span><br></pre></td></tr></table></figure>


<h3 id="安装elasticsearch（Elk集群）"><a href="#安装elasticsearch（Elk集群）" class="headerlink" title="安装elasticsearch（Elk集群）"></a>安装elasticsearch（Elk集群）</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.2.4.rpm</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rpm -ivh elasticsearch-6.2.4.rpm</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl <span class="built_in">enable</span> elasticsearch.service</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cat</span> &gt;&gt; /etc/hosts &lt;&lt;<span class="string">EOF</span></span></span><br><span class="line">10.0.0.20 elk01</span><br><span class="line">10.0.0.21 elk02</span><br><span class="line">10.0.0.30 zk01</span><br><span class="line">10.0.0.31 zk02</span><br><span class="line">10.0.0.32 zk03</span><br><span class="line">10.0.0.40 online01</span><br><span class="line">10.0.0.41 online02</span><br><span class="line">EOF</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">mkdir -p /elk/&#123;data,logs&#125;</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">chown -R elasticsearch.elasticsearch /elk</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">vim /etc/elasticsearch/elasticsearch.yml</span></span></span><br></pre></td></tr></table></figure>


<p>elk01配置</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">grep -v <span class="string">&#x27;^#&#x27;</span> /etc/elasticsearch/elasticsearch.yml</span></span><br><span class="line">cluster.name: ELK                                     #集群名称</span><br><span class="line">node.name: elk01                                      #节点名称</span><br><span class="line">path.data: /elk/data                                  #data存储路径</span><br><span class="line">path.logs: /elk/logs                                  #log存储路径</span><br><span class="line">network.host: 0.0.0.0                                 #监听地址</span><br><span class="line">http.port: 9200                                       #监听端口</span><br><span class="line">discovery.zen.ping.unicast.hosts: [&quot;elk01&quot;, &quot;elk02&quot;]  #集群节点发现列表</span><br><span class="line">discovery.zen.minimum_master_nodes: 1                 #集群可做master的最小节点数</span><br><span class="line">node.master: true                                     #指定该节点是否有资格被选举成为node，默认是true，es是默认集群中的第一台机器为master，如果这台机挂了就会重新选举master</span><br><span class="line">node.data: true                                       # 指定该节点是否存储索引数据，默认为true</span><br><span class="line">transport.tcp.compress: true                          #设置是否压缩tcp传输时的数据，默认为false，不压缩</span><br><span class="line">http.cors.enabled: true                               #开启跨域访问支持，默认为false</span><br><span class="line">http.cors.allow-origin: &quot;*&quot;                           # 跨域访问允许的域名地址</span><br></pre></td></tr></table></figure>


<p>elk02配置</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">grep -v <span class="string">&#x27;^#&#x27;</span> /etc/elasticsearch/elasticsearch.yml</span></span><br><span class="line">cluster.name: ELK</span><br><span class="line">node.name: elk02</span><br><span class="line">path.data: /elk/data</span><br><span class="line">path.logs: /elk/logs</span><br><span class="line">network.host: 0.0.0.0</span><br><span class="line">http.port: 9200</span><br><span class="line">discovery.zen.ping.unicast.hosts: [&quot;elk01&quot;, &quot;elk02&quot;]</span><br><span class="line">gateway.recover_after_nodes: 1</span><br><span class="line">node.master: false</span><br><span class="line">node.data: true</span><br><span class="line">transport.tcp.compress: true</span><br><span class="line">http.cors.enabled: true</span><br><span class="line">http.cors.allow-origin: &quot;*&quot;</span><br></pre></td></tr></table></figure>


<p>启动</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl start elasticsearch.service</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">netstat -luntp|grep 9</span></span><br><span class="line">tcp6       0      0 :::9200                 :::*                    LISTEN      2658/java</span><br><span class="line">tcp6       0      0 :::9300                 :::*                    LISTEN      2658/java</span><br></pre></td></tr></table></figure>


<p>查看集群状态</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">curl -XGET <span class="string">&#x27;http://10.0.0.20:9200/_cluster/health?pretty&#x27;</span></span></span><br><span class="line">&#123;</span><br><span class="line">&quot;cluster_name&quot; : &quot;ELK&quot;,</span><br><span class="line">&quot;status&quot; : &quot;green&quot;,</span><br><span class="line">&quot;timed_out&quot; : false,</span><br><span class="line">&quot;number_of_nodes&quot; : 2,</span><br><span class="line">&quot;number_of_data_nodes&quot; : 2,</span><br><span class="line">&quot;active_primary_shards&quot; : 0,</span><br><span class="line">&quot;active_shards&quot; : 0,</span><br><span class="line">&quot;relocating_shards&quot; : 0,</span><br><span class="line">&quot;initializing_shards&quot; : 0,</span><br><span class="line">&quot;unassigned_shards&quot; : 0,</span><br><span class="line">&quot;delayed_unassigned_shards&quot; : 0,</span><br><span class="line">&quot;number_of_pending_tasks&quot; : 0,</span><br><span class="line">&quot;number_of_in_flight_fetch&quot; : 0,</span><br><span class="line">&quot;task_max_waiting_in_queue_millis&quot; : 0,</span><br><span class="line">&quot;active_shards_percent_as_number&quot; : 100.0</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h3 id="安装head插件"><a href="#安装head插件" class="headerlink" title="安装head插件"></a>安装head插件</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum install -y git npm</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cd</span> /usr/local/src/</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">git <span class="built_in">clone</span> git://github.com/mobz/elasticsearch-head.git</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cd</span> elasticsearch-head/</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">npm install grunt -save</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">npm install</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">npm run start &amp;</span></span><br></pre></td></tr></table></figure>


<h3 id="kibana安装汉化（elk01）"><a href="#kibana安装汉化（elk01）" class="headerlink" title="kibana安装汉化（elk01）"></a>kibana安装汉化（elk01）</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget https://artifacts.elastic.co/downloads/kibana/kibana-6.2.4-x86_64.rpm</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rpm -ivh kibana-6.2.4-x86_64.rpm</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /etc/kibana/kibana.yml</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">egrep -v <span class="string">&#x27;^#|^$&#x27;</span> /etc/kibana/kibana.yml</span></span><br><span class="line">server.port: 5601</span><br><span class="line">server.host: &quot;172.17.1.20&quot; #内网地址</span><br><span class="line">elasticsearch.url: &quot;http://10.0.0.20:9200&quot;</span><br><span class="line">logging.dest: /var/log/kibana.log</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">touch</span> /var/log/kibana.log ; <span class="built_in">chmod</span> 777 /var/log/kibana.log</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">git <span class="built_in">clone</span> https://github.com/anbai-inc/Kibana_Hanization.git</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cd</span> Kibana_Hanization/</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">python main.py /usr/share/kibana/</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl <span class="built_in">enable</span> kibana.service</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl start kibana.service</span></span><br></pre></td></tr></table></figure>


<p>nginx验证登录kibana</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget https://artifacts.elastic.co/downloads/kibana/kibana-6.2.4-x86_64.rpm</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rpm -ivh kibana-6.2.4-x86_64.rpm</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /etc/kibana/kibana.yml</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">egrep -v <span class="string">&#x27;^#|^$&#x27;</span> /etc/kibana/kibana.yml</span></span><br><span class="line">server.port: 5601</span><br><span class="line">server.host: &quot;172.17.1.20&quot; #内网地址</span><br><span class="line">elasticsearch.url: &quot;http://10.0.0.20:9200&quot;</span><br><span class="line">logging.dest: /var/log/kibana.log</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">touch</span> /var/log/kibana.log ; <span class="built_in">chmod</span> 777 /var/log/kibana.log</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">git <span class="built_in">clone</span> https://github.com/anbai-inc/Kibana_Hanization.git</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cd</span> Kibana_Hanization/</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">python main.py /usr/share/kibana/</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl <span class="built_in">enable</span> kibana.service</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl start kibana.service</span></span><br><span class="line">nginx验证登录kibana</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum -y install epel-release nginx httpd-tools</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /etc/nginx/nginx.conf</span></span><br><span class="line">server &#123;</span><br><span class="line">listen 80;</span><br><span class="line">server_name elk01;</span><br><span class="line">auth_basic &quot;Restricted Access&quot;;</span><br><span class="line">auth_basic_user_file /etc/nginx/kibana-user;</span><br><span class="line">location / &#123;</span><br><span class="line">proxy_pass http://172.16.1.20:5601;</span><br><span class="line">proxy_http_version 1.1;</span><br><span class="line">proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">proxy_set_header Connection &#x27;upgrade&#x27;;</span><br><span class="line">proxy_set_header Host $host;</span><br><span class="line">proxy_cache_bypass $http_upgrade;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">htpasswd -cm /etc/nginx/kibana-user kibana</span></span><br><span class="line">New password:</span><br><span class="line">Re-type new password:</span><br><span class="line">Adding password for user kibana</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">nginx</span></span><br></pre></td></tr></table></figure>


<h3 id="logstash安装-ELK集群"><a href="#logstash安装-ELK集群" class="headerlink" title="logstash安装(ELK集群)"></a>logstash安装(ELK集群)</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget https://artifacts.elastic.co/downloads/logstash/logstash-6.4.2.rpm</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rpm -ivh logstash-6.4.2.rpm</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /etc/logstash/logstash.yml</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">egrep -v <span class="string">&#x27;^#|^$&#x27;</span> /etc/logstash/logstash.yml</span></span><br><span class="line">path.data: /var/lib/logstash</span><br><span class="line">http.host: &quot;10.0.0.20&quot;</span><br><span class="line">path.logs: /var/log/logstash</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl <span class="built_in">enable</span> logstash.service</span></span><br></pre></td></tr></table></figure>


<h2 id="ZK集群部署"><a href="#ZK集群部署" class="headerlink" title="ZK集群部署"></a><strong>ZK集群部署</strong></h2><h3 id="安装zookeeper"><a href="#安装zookeeper" class="headerlink" title="安装zookeeper"></a>安装zookeeper</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget http://mirror.bit.edu.cn/apache/zookeeper/stable/zookeeper-3.4.12.tar.gz</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">tar -xf zookeeper-3.4.12.tar.gz -C /application/</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mv</span> zookeeper-3.4.12/ zookeeper</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cp</span> zookeeper/conf/zoo_sample.cfg zookeeper/conf/zoo.cfg</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mkdir</span> -p zookeeper/&#123;<span class="built_in">log</span>,/data&#125;</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim zookeeper/conf/zoo.cfg</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">egrep -v <span class="string">&#x27;^#|^$&#x27;</span> zookeeper/conf/zoo.cfg</span></span><br><span class="line">tickTime=2000</span><br><span class="line">initLimit=10</span><br><span class="line">syncLimit=5</span><br><span class="line">dataDir=/application/zookeeper/data</span><br><span class="line">dataLogDir=/application/zookeeper/log</span><br><span class="line">clientPort=2181</span><br><span class="line">server.1=10.0.0.30:2888:3888</span><br><span class="line">server.2=10.0.0.31:2888:3888</span><br><span class="line">server.3=10.0.0.32:2888:3888</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cd</span> zookeeper/data/</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">touch</span> myid |<span class="built_in">echo</span> 1 &gt; myid</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">touch</span> myid |<span class="built_in">echo</span> 2 &gt; myid</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">touch</span> myid |<span class="built_in">echo</span> 3 &gt; myid</span></span><br><span class="line">注：</span><br><span class="line">在配置的dataDir 下创建myid 文件，内容就是对应的你当前 ip 下的 server.x</span><br><span class="line">例：server的ip为10.0.0.30文件中的是server.1=10.0.0.30:2888:3888 myid 对应的内容就是 1</span><br><span class="line">server的ip为10.0.0.31 文件中的是server.2=10.0.0.31:2888:3888 myid 对应的内容就是 2</span><br><span class="line">即：server.x  =&gt;  myid = x</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">/application/zookeeper/bin/zkServer.sh start    <span class="comment">#启动zookeeper（每台）</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">/application/zookeeper/bin/zkServer.sh status   <span class="comment">#查看三台zookeeper集群状态，正确的是一主两从</span></span></span><br><span class="line">Mode: follower</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">/application/zookeeper/bin/zkServer.sh status</span></span><br><span class="line">Mode: leader</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">/application/zookeeper/bin/zkServer.sh status</span></span><br><span class="line">Mode: follower</span><br></pre></td></tr></table></figure>


<h3 id="安装kafka"><a href="#安装kafka" class="headerlink" title="安装kafka"></a>安装kafka</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget http://mirror.bit.edu.cn/apache/kafka/2.0.0/kafka_2.11-2.0.0.tgz</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">tar xf kafka_2.11-2.0.0.tgz -C /application/</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cd</span> /application/</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mv</span> kafka_2.11-2.0.0/ kafka</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mkdir</span> -p kafka/log</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim kafka/config/server.properties</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">egrep -v <span class="string">&#x27;^$|^#&#x27;</span> kafka/config/server.properties</span></span><br><span class="line">broker.id=1        #每台id不同</span><br><span class="line">listeners=PLAINTEXT://10.0.0.30:9092</span><br><span class="line">num.network.threads=3</span><br><span class="line">num.io.threads=8</span><br><span class="line">socket.send.buffer.bytes=102400</span><br><span class="line">socket.receive.buffer.bytes=102400</span><br><span class="line">socket.request.max.bytes=104857600</span><br><span class="line">log.dirs=/application/kafka/log</span><br><span class="line">num.partitions=1</span><br><span class="line">num.recovery.threads.per.data.dir=1</span><br><span class="line">offsets.topic.replication.factor=1</span><br><span class="line">transaction.state.log.replication.factor=1</span><br><span class="line">transaction.state.log.min.isr=1</span><br><span class="line">log.retention.hours=168</span><br><span class="line">log.segment.bytes=1073741824</span><br><span class="line">log.retention.check.interval.ms=300000</span><br><span class="line">zookeeper.connect=10.0.0.30:2181,10.0.0.31:2181,10.0.0.32:2181</span><br><span class="line">zookeeper.connection.timeout.ms=6000</span><br><span class="line">启动服务（所有）</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">/application/kafka/bin/kafka-server-start.sh -daemon /application/kafka/config/server.properties</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">netstat -luntp|grep 9092   <span class="comment">#kafka</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">netstat -luntp|grep 2181   <span class="comment">#zookeeper</span></span></span><br><span class="line">测试消息生产和消费</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">/application/kafka/bin/kafka-topics.sh --create --zookeeper 10.0.0.30:2181 --replication-factor 1 --partitions 1 --topic <span class="built_in">test</span>             <span class="comment">#创建topic</span></span></span><br><span class="line">Created topic &quot;test&quot;.</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">/application/kafka/bin/kafka-topics.sh --list --zookeeper 10.0.0.30:2181</span> </span><br><span class="line">test                                  #查看创建的topic</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">/application/kafka/bin/kafka-console-producer.sh --broker-list 10.0.0.30:9092 --topic <span class="built_in">test</span></span>   </span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash"><span class="string">&quot;Hello World!&quot;</span>                       <span class="comment">#模拟客户端发送消息(开2个终端效果会更好)</span></span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash"><span class="built_in">exit</span></span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># /application/kafka/bin/kafka-console-consumer.sh --bootstrap-server 10.0.0.30:9092 --topic test --from-beginning</span></span>     </span><br><span class="line">&quot;Hello World!&quot;                         #模拟客户端接收信息 </span><br><span class="line">exit</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">/application/kafka/bin/kafka-topics.sh --delete --zookeeper 10.0.0.30:2181 --topic <span class="built_in">test</span></span></span><br><span class="line">Topic test is marked for deletion.     #删除topic</span><br><span class="line">Note: This will have no impact if delete.topic.enable is not set to true.</span><br></pre></td></tr></table></figure>


<h3 id="filebeat安装-online集群"><a href="#filebeat安装-online集群" class="headerlink" title="filebeat安装(online集群)"></a><strong>filebeat安装(online集群)</strong></h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-6.4.2-x86_64.rpm</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rpm -ivh filebeat-6.4.2-x86_64.rpm</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">/etc/init.d/filebeat start                   <span class="comment">#启动程序</span></span></span><br></pre></td></tr></table></figure>


<h3 id="filebeat配置收集业务日志"><a href="#filebeat配置收集业务日志" class="headerlink" title="filebeat配置收集业务日志"></a><strong>filebeat配置收集业务日志</strong></h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /etc/filebeat/filebeat.yml</span></span><br><span class="line">filebeat.prospectors:</span><br><span class="line">- type: log</span><br><span class="line">  enabled: true</span><br><span class="line">  paths:</span><br><span class="line">    - /var/log/messages</span><br><span class="line">  fields:</span><br><span class="line">    log_topics: syslog</span><br><span class="line">- type: log</span><br><span class="line">  enabed: true</span><br><span class="line">  paths:</span><br><span class="line">    - /application/tomcat/logs/catalina.out</span><br><span class="line">  fields:</span><br><span class="line">    log_topics: tomcat</span><br><span class="line">output.kafka:</span><br><span class="line">  enabled: true</span><br><span class="line">  hosts: [&quot;10.0.0.30:9092&quot;,&quot;10.0.0.31:9092&quot;,&quot;10.0.0.32:9092&quot;]</span><br><span class="line">  topic: &#x27;%&#123;[fields.log_topics]&#125;&#x27;</span><br><span class="line">  partition.hash:</span><br><span class="line">    reachable_only: false</span><br><span class="line">  compression: gzip</span><br><span class="line">  max_message_bytes: 1000000</span><br><span class="line">  required_acks: 1</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">/etc/init.d/filebeat start</span></span><br></pre></td></tr></table></figure>


<h3 id="测试kafka是否接受到数据"><a href="#测试kafka是否接受到数据" class="headerlink" title="测试kafka是否接受到数据"></a><strong>测试kafka是否接受到数据</strong></h3><p>online发出一个信息</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">echo</span> <span class="string">&#x27;hello word!!!&#x27;</span> &gt;&gt; /application/tomcat/logs/catalina.out! &gt;&gt; /application/tomcat/logs/catalina.out</span></span><br></pre></td></tr></table></figure>


<p>查看kafka是否接受数据 [root@zk01 ~]</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">/application/kafka/bin/kafka-console-consumer.sh --bootstrap-server 10.0.0.30:9092,10.0.0.31:9092,10.0.0.32:9092 --topic tomcat --from-beginning</span></span><br><span class="line">&#123;&quot;@timestamp&quot;:&quot;2018-11-08T10:30:11.723Z&quot;,&quot;@metadata&quot;:&#123;&quot;beat&quot;:&quot;filebeat&quot;,&quot;type&quot;:&quot;doc&quot;,&quot;version&quot;:&quot;6.4.2&quot;,&quot;topic&quot;:&quot;tomcat&quot;&#125;,&quot;prospector&quot;:&#123;&quot;type&quot;:&quot;log&quot;&#125;,&quot;input&quot;:&#123;&quot;type&quot;:&quot;log&quot;&#125;,&quot;fields&quot;:&#123;&quot;log_topics&quot;:&quot;tomcat&quot;&#125;,&quot;host&quot;:&#123;&quot;name&quot;:&quot;online02&quot;&#125;,&quot;beat&quot;:&#123;&quot;name&quot;:&quot;online02&quot;,&quot;hostname&quot;:&quot;online02&quot;,&quot;version&quot;:&quot;6.4.2&quot;&#125;,&quot;source&quot;:&quot;/application/tomcat/logs/catalina.out&quot;,&quot;offset&quot;:6612,&quot;message&quot;:&quot;hello word!!!&quot;&#125;</span><br></pre></td></tr></table></figure>


<h3 id="配置logstash从ZK将日志传入ES"><a href="#配置logstash从ZK将日志传入ES" class="headerlink" title="配置logstash从ZK将日志传入ES"></a><strong>配置logstash从ZK将日志传入ES</strong></h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cd</span> /etc/logstash/conf.d/</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim logstash.conf</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cat</span> logstash.conf</span></span><br><span class="line">input&#123;</span><br><span class="line">  kafka &#123;</span><br><span class="line">    type =&gt; &quot;tomcat&quot;</span><br><span class="line">    bootstrap_servers =&gt; &quot;10.0.0.30:9092,10.0.0.31:9092,10.0.0.32:9092&quot;</span><br><span class="line">    group_id =&gt; &quot;ecs&quot;    #logstash 集群需相同</span><br><span class="line">    topics =&gt; [&quot;tomcat&quot;]</span><br><span class="line">  &#125;</span><br><span class="line">  kafka &#123;</span><br><span class="line">    type =&gt; &quot;syslog&quot;</span><br><span class="line">    bootstrap_servers =&gt; &quot;10.0.0.30:9092,10.0.0.31:9092,10.0.0.32:9092&quot;</span><br><span class="line">    group_id =&gt; &quot;ecs1&quot;</span><br><span class="line">    topics =&gt; [&quot;syslog&quot;]</span><br><span class="line">    codec =&gt; &quot;json&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;    </span><br><span class="line">filter &#123;</span><br><span class="line">  if [type] == &quot;tomcat&quot; &#123;</span><br><span class="line">    grok &#123;</span><br><span class="line">      match =&gt; &#123; &quot;message&quot; =&gt; &quot;%&#123;COMBINEDAPACHELOG&#125;&quot;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">output &#123;</span><br><span class="line">  if [type] == &quot;tomcat&quot; &#123;</span><br><span class="line">    elasticsearch &#123;</span><br><span class="line">      hosts =&gt; [&quot;10.0.0.20:9200&quot;,&quot;10.0.0.21:9200&quot;]</span><br><span class="line">      index =&gt; &quot;tomcat-%&#123;+YYYY.MM.dd&#125;&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  if [type] == &quot;syslog&quot; &#123;</span><br><span class="line">    elasticsearch &#123;</span><br><span class="line">      hosts =&gt; [&quot;10.0.0.20:9200&quot;,&quot;10.0.0.21:9200&quot;]</span><br><span class="line">      index =&gt; &quot;syslog-%&#123;+YYYY.MM.dd&#125;&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<p>测试logstash是否拉取数据</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">  <span class="built_in">echo</span> 121212 &gt;&gt; /application/tomcat/logs/catalina.out</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">  <span class="built_in">echo</span> 121212 &gt;&gt; /application/tomcat/logs/catalina.out</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">  <span class="built_in">echo</span> 121212 &gt;&gt; /application/tomcat/logs/catalina.out</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">  <span class="built_in">echo</span> 121212 &gt;&gt; /application/tomcat/logs/catalina.out</span></span><br></pre></td></tr></table></figure>
<p><img src="/image/elk-imgae.png"> </p>
]]></content>
      <categories>
        <category>ELK</category>
      </categories>
      <tags>
        <tag>elk</tag>
      </tags>
  </entry>
  <entry>
    <title>Flannel安装部署</title>
    <url>/2019/11/29/Flannel%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<p>Kubernetes设计了网络模型，但且将它的实现交给了网络插件，CNI网络插件最主要的功能就是实现POD资源能够跨宿主机就行通信</p>
<ul>
<li><p>Flannel</p>
</li>
<li><p>Calico</p>
</li>
<li><p>Canal</p>
</li>
<li><p>Contiv</p>
</li>
<li><p>OpenContrail</p>
</li>
<li><p>NSX-T</p>
</li>
<li><p>Kube-router</p>
</li>
</ul>
   <span id="more"></span>

<h2 id="主机环境"><a href="#主机环境" class="headerlink" title="主机环境"></a>主机环境</h2><table>
<thead>
<tr>
<th>主机名</th>
<th>角色</th>
<th>ip</th>
</tr>
</thead>
<tbody><tr>
<td>HDSS7-21.host.com</td>
<td>flannel</td>
<td>10.4.7.21</td>
</tr>
<tr>
<td>HDSS7-22.host.com</td>
<td>flannel</td>
<td>10.4.7.22</td>
</tr>
</tbody></table>
<p>注意：这里部署文档以HDSS7-21.host.com主机为例，另外一台运算节点安装部署方法类似</p>
<h2 id="下载软件，解压"><a href="#下载软件，解压" class="headerlink" title="下载软件，解压"></a>下载软件，解压</h2><p><a href="https://github.com/coreos/flannel">flannel</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 src]# wget https://github.com/coreos/flannel/releases/download/v0.11.0/flannel-v0.11.0-linux-amd64.tar.gz</span><br><span class="line">[root@hdss7-21 src]# mkdir /opt/flannel-v0.11.0</span><br><span class="line">[root@hdss7-21 src]# tar xf flannel-v0.11.0-linux-amd64.tar.gz -C /opt/flannel-v0.11.0</span><br><span class="line">[root@hdss7-21 src]# ln -s /opt/flannel-v0.11.0/ /opt/flannel</span><br><span class="line">[root@hdss7-21 src]# cd /opt/flannel</span><br></pre></td></tr></table></figure>


<h2 id="拷贝证书"><a href="#拷贝证书" class="headerlink" title="拷贝证书"></a>拷贝证书</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 flannel]# mkdir cert</span><br><span class="line">[root@hdss7-21 flannel]# cd cert/</span><br><span class="line">[root@hdss7-21 cert]# scp hdss7-200:/opt/certs/ca.pem .</span><br><span class="line">root@hdss7-200&#x27;s password:</span><br><span class="line">ca.pem                               100% 1354   109.5KB/s   00:00    </span><br><span class="line">[root@hdss7-21 cert]# scp hdss7-200:/opt/certs/client.pem .</span><br><span class="line">root@hdss7-200&#x27;s password:</span><br><span class="line">client.pem                           100% 1371    64.0KB/s   00:00    </span><br><span class="line">[root@hdss7-21 cert]# scp hdss7-200:/opt/certs/client-key.pem .</span><br><span class="line">root@hdss7-200&#x27;s password:</span><br><span class="line">client-key.pem                       100% 1675    59.7KB/s   00:00</span><br><span class="line">[root@hdss7-21 cert]# ll</span><br><span class="line">total 12</span><br><span class="line">-rw-r--r-- 1 root root 1354 Nov 29 10:09 ca.pem</span><br><span class="line">-rw------- 1 root root 1675 Nov 29 10:10 client-key.pem</span><br><span class="line">-rw-r--r-- 1 root root 1371 Nov 29 10:10 client.pem</span><br></pre></td></tr></table></figure>


<h2 id="创建配置文件"><a href="#创建配置文件" class="headerlink" title="创建配置文件"></a>创建配置文件</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 cert]# cd ../</span><br><span class="line">[root@hdss7-21 flannel]# vim subnet.env</span><br><span class="line">FLANNEL_NETWORK=172.7.0.0/16      # pod的ip地址范围</span><br><span class="line">FLANNEL_SUBNET=172.7.21.1/24        # 本机的ip地址范围</span><br><span class="line">FLANNEL_MTU=1500</span><br><span class="line">FLANNEL_IPMASQ=false</span><br></pre></td></tr></table></figure>


<p>注意：flannel集群各主机的配置略有不同，部署其他节点时注意修改</p>
<h2 id="创建flanneld启动脚本"><a href="#创建flanneld启动脚本" class="headerlink" title="创建flanneld启动脚本"></a>创建flanneld启动脚本</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 flannel]# vim flanneld.sh</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line">./flanneld \</span><br><span class="line">  --public-ip=10.4.7.21 \</span><br><span class="line">  --etcd-endpoints=https://10.4.7.12:2379,https://10.4.7.21:2379,https://10.4.7.22:2379 \</span><br><span class="line">  --etcd-keyfile=./cert/client-key.pem \</span><br><span class="line">  --etcd-certfile=./cert/client.pem \</span><br><span class="line">  --etcd-cafile=./cert/ca.pem \</span><br><span class="line">  --iface=eth0 \</span><br><span class="line">  --subnet-file=./subnet.env \</span><br><span class="line">  --healthz-port=2401</span><br><span class="line">[root@hdss7-21 flannel]# chmod +x flanneld.sh</span><br></pre></td></tr></table></figure>


<p>注意：flannel集群各主机的配置略有不同，部署其他节点时注意修改</p>
<h2 id="操作etcd，增加host-gw"><a href="#操作etcd，增加host-gw" class="headerlink" title="操作etcd，增加host-gw"></a>操作etcd，增加host-gw</h2><p>启动flannel之前，需要在etcd中添加网络配置记录</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 flannel]# cd /opt/etcd</span><br><span class="line">[root@hdss7-21 etcd]# ./etcdctl set /coreos.com/network/config &#x27;&#123;&quot;Network&quot;: &quot;172.7.0.0/16&quot;, &quot;Backend&quot;: &#123;&quot;Type&quot;: &quot;host-gw&quot;&#125;&#125;&#x27;</span><br><span class="line">&#123;&quot;Network&quot;: &quot;172.7.0.0/16&quot;, &quot;Backend&quot;: &#123;&quot;Type&quot;: &quot;host-gw&quot;&#125;&#125;</span><br><span class="line">[root@hdss7-21 etcd]# ./etcdctl get /coreos.com/network/config</span><br><span class="line">&#123;&quot;Network&quot;: &quot;172.7.0.0/16&quot;, &quot;Backend&quot;: &#123;&quot;Type&quot;: &quot;host-gw”&#125;&#125;</span><br></pre></td></tr></table></figure>


<p>host-gw：直接路由的方式，将容器网络的路由信息直接更新到主机的路由表中，仅适用于二层直接可达的网络</p>
<h2 id="创建supervisor配置"><a href="#创建supervisor配置" class="headerlink" title="创建supervisor配置"></a>创建supervisor配置</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 etcd]# mkdir /data/logs/flanneld</span><br><span class="line">[root@hdss7-21 etcd]# vim /etc/supervisord.d/flannel.ini</span><br><span class="line">[program:flanneld-7-21]</span><br><span class="line">command=/opt/flannel/flanneld.sh            ; the program (relative uses PATH, can take args)</span><br><span class="line">numprocs=1                                  ; number of processes copies to start (def 1)</span><br><span class="line">directory=/opt/flannel                      ; directory to cwd to before exec (def no cwd)</span><br><span class="line">autostart=true                              ; start at supervisord start (default: true)</span><br><span class="line">autorestart=true                            ; retstart at unexpected quit (default: true)</span><br><span class="line">startsecs=30                                ; number of secs prog must stay running (def. 1)</span><br><span class="line">startretries=3                              ; max # of serial start failures (default 3)</span><br><span class="line">exitcodes=0,2                               ; &#x27;expected&#x27; exit codes for process (default 0,2)</span><br><span class="line">stopsignal=QUIT                             ; signal used to kill process (default TERM)</span><br><span class="line">stopwaitsecs=10                             ; max num secs to wait b4 SIGKILL (default 10)</span><br><span class="line">user=root                                   ; setuid to this UNIX account to run the program</span><br><span class="line">redirect_stderr=true                        ; redirect proc stderr to stdout (default false)</span><br><span class="line">stdout_logfile=/data/logs/flanneld/flanneld.stdout.log       ; stderr log path, NONE for none; default AUTO</span><br><span class="line">stdout_logfile_maxbytes=64MB                ; max # logfile bytes b4 rotation (default 50MB)</span><br><span class="line">stdout_logfile_backups=4                    ; # of stdout logfile backups (default 10)</span><br><span class="line">stdout_capture_maxbytes=1MB                 ; number of bytes in &#x27;capturemode&#x27; (default 0)</span><br><span class="line">stdout_events_enabled=false                 ; emit events on stdout writes (default false)</span><br><span class="line">stopasgroup=true                            ;默认为false,进程被杀死时，是否向这个进程组发送stop信号，包括子进程</span><br><span class="line">killasgroup=true                            ;默认为false，向进程组发送kill信号，包括子进程</span><br></pre></td></tr></table></figure>


<h2 id="启动服务并检查"><a href="#启动服务并检查" class="headerlink" title="启动服务并检查"></a>启动服务并检查</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 etcd]# supervisorctl update</span><br><span class="line">flanneld-7-21: added process group</span><br><span class="line">[root@hdss7-21 etcd]# supervisorctl status</span><br><span class="line">etcd-server-7-21                 RUNNING   pid 4044, uptime 6 days, 12:02:50</span><br><span class="line">flanneld-7-21                    STARTING  </span><br><span class="line">kube-apiserver-7-21              RUNNING   pid 4048, uptime 6 days, 12:02:50</span><br><span class="line">kube-controller-manager-7-21     RUNNING   pid 4050, uptime 6 days, 12:02:50</span><br><span class="line">kube-kubelet-7-21                RUNNING   pid 4035, uptime 6 days, 12:02:50</span><br><span class="line">kube-proxy-7-21                  RUNNING   pid 4055, uptime 6 days, 12:02:50</span><br><span class="line">kube-scheduler-7-21              RUNNING   pid 4057, uptime 6 days, 12:02:50</span><br></pre></td></tr></table></figure>


<h2 id="测试两个node中容器跨网络通信"><a href="#测试两个node中容器跨网络通信" class="headerlink" title="测试两个node中容器跨网络通信"></a>测试两个node中容器跨网络通信</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 flannel]# ping 172.7.21.2</span><br><span class="line">PING 172.7.21.2 (172.7.21.2) 56(84) bytes of data.</span><br><span class="line">64 bytes from 172.7.21.2: icmp_seq=1 ttl=64 time=0.146 ms</span><br><span class="line">64 bytes from 172.7.21.2: icmp_seq=2 ttl=64 time=0.126 ms</span><br><span class="line"></span><br><span class="line">[root@hdss7-21 flannel]# ping 172.7.22.2</span><br><span class="line">PING 172.7.22.2 (172.7.22.2) 56(84) bytes of data.</span><br><span class="line">64 bytes from 172.7.22.2: icmp_seq=1 ttl=63 time=1.95 ms</span><br><span class="line">64 bytes from 172.7.22.2: icmp_seq=2 ttl=63 time=13.0 ms</span><br></pre></td></tr></table></figure>


<h2 id="在各运算节点上增加iptables规则"><a href="#在各运算节点上增加iptables规则" class="headerlink" title="在各运算节点上增加iptables规则"></a>在各运算节点上增加iptables规则</h2><p>注意：iptables规则各主机的略有不同，其他运算节点上执行时注意修改。</p>
<p>因为centos7，需要安装iptables</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 ~]# yum install -y iptables-services</span><br><span class="line">[root@hdss7-21 ~]# systemctl start iptables</span><br><span class="line">[root@hdss7-21 ~]# systemctl enable iptables</span><br></pre></td></tr></table></figure>


<p>优化SNAT规则，各运算节点之间的各POD之间的网络通信不再出网</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 ~]# iptables -t nat -D POSTROUTING -s 172.7.21.0/24 ! -o docker0 -j MASQUERADE</span><br><span class="line">[root@hdss7-21 ~]# iptables -t nat -I POSTROUTING -s 172.7.21.0/24 ! -d 172.7.0.0/16 ! -o docker0 -j MASQUERADE</span><br></pre></td></tr></table></figure>

<p>10.4.7.21主机上的，来源是172.7.21.0&#x2F;24段的docker的ip，目标ip不是172.7.0.0&#x2F;16段，网络发包不从docker0桥设备出站的，才进行SNAT转换</p>
<p>删除拒绝所有的规则</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 ~]# iptables-save|grep -i reject</span><br><span class="line">-A INPUT -j REJECT --reject-with icmp-host-prohibited</span><br><span class="line">-A FORWARD -j REJECT --reject-with icmp-host-prohibited</span><br><span class="line">[root@hdss7-21 ~]# iptables -t filter -D INPUT -j REJECT --reject-with icmp-host-prohibited</span><br><span class="line">[root@hdss7-21 ~]# iptables -t filter -D FORWARD -j REJECT --reject-with icmp-host-prohibited</span><br></pre></td></tr></table></figure>


<p>测试ping</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 ~]# ping 172.7.22.2</span><br><span class="line">PING 172.7.22.2 (172.7.22.2) 56(84) bytes of data.</span><br><span class="line">64 bytes from 172.7.22.2: icmp_seq=1 ttl=63 time=4.98 ms</span><br><span class="line">64 bytes from 172.7.22.2: icmp_seq=2 ttl=63 time=4.93 ms</span><br></pre></td></tr></table></figure>


<p>各运算节点保存iptables规则</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 ~]# iptables-save &gt;/etc/sysconfig/iptables</span><br><span class="line">[root@hdss7-21 ~]# service iptables save</span><br><span class="line">iptables: Saving firewall rules to /etc/sysconfig/iptables:[  OK  ]</span><br><span class="line">[root@hdss7-21 ~]# systemctl restart docker</span><br></pre></td></tr></table></figure>


<p>创建nginx-daemonset资源</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 ~]# vim nginx-ds.yml</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: DaemonSet</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-ds</span><br><span class="line">  labels:</span><br><span class="line">    addonmanager.kubernetes.io/mode: Reconcile</span><br><span class="line">spec:</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: nginx-ds</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: my-nginx</span><br><span class="line">        image: harbor.od.com/public/nginx:curl   # 带有curl的nginx自建镜像</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 80</span><br><span class="line">[root@hdss7-21 ~]# kubectl apply -f nginx-ds.ym</span><br><span class="line">[root@hdss7-21 ~]# kubectl get pod -o wide</span><br><span class="line">NAME             READY   STATUS    RESTARTS   AGE   IP           NODE                NOMINATED NODE   READINESS GATES</span><br><span class="line">nginx-ds-wkf9w   1/1     Running   0          41m   172.7.21.2   hdss7-21.host.com   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">nginx-ds-x5lrc   1/1     Running   0          41m   172.7.22.2   hdss7-22.host.com   &lt;none&gt;           &lt;none&gt;</span><br></pre></td></tr></table></figure>


<p>curl nginx查看访问ip是那个</p>
<p>容器网络里坦诚相待，不需要遮掩</p>
<p>hdss7-21</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 ~]# kubectl exec -it nginx-ds-wkf9w sh</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">curl 172.7.22.2</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">curl 172.7.22.2</span></span><br></pre></td></tr></table></figure>


<p>hdss7-22</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-22 ~]# kubectl logs -f nginx-ds-x5lrc</span><br><span class="line">10.4.7.21 - - [29/Nov/2019:07:33:56 +0000] &quot;GET / HTTP/1.1&quot; 200 612 &quot;-&quot; &quot;curl/7.38.0&quot; &quot;-&quot;</span><br><span class="line">iptables优化后的日志</span><br><span class="line">172.7.21.2 - - [29/Nov/2019:07:41:02 +0000] &quot;GET / HTTP/1.1&quot; 200 612 &quot;-&quot; &quot;curl/7.38.0&quot; &quot;-&quot;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
  </entry>
  <entry>
    <title>Consul注册中心安装</title>
    <url>/2018/12/06/Consul%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h2 id="consul简介"><a href="#consul简介" class="headerlink" title="consul简介"></a><strong>consul简介</strong></h2><h2 id="Consul-是-HashiCorp-公司推出的开源工具，用于实现分布式系统的服务发现与配置。与其他分布式服务注册与发现的方案，Consul的方案更“一站式”，内置了服务注册与发现框-架、分布一致性协议实现、健康检查、Key-x2F-Value存储、多数据中心方案，不再需要依赖其他工具（比如ZooKeeper等）。使用起来也较-为简单。Consul使用Go语言编写，因此具有天然可移植性-支持Linux、windows和Mac-OS-X-；安装包仅包含一个可执行文件，方便部署，与Docker等轻量级容器可无缝配合-linux上安装"><a href="#Consul-是-HashiCorp-公司推出的开源工具，用于实现分布式系统的服务发现与配置。与其他分布式服务注册与发现的方案，Consul的方案更“一站式”，内置了服务注册与发现框-架、分布一致性协议实现、健康检查、Key-x2F-Value存储、多数据中心方案，不再需要依赖其他工具（比如ZooKeeper等）。使用起来也较-为简单。Consul使用Go语言编写，因此具有天然可移植性-支持Linux、windows和Mac-OS-X-；安装包仅包含一个可执行文件，方便部署，与Docker等轻量级容器可无缝配合-linux上安装" class="headerlink" title="Consul 是 HashiCorp 公司推出的开源工具，用于实现分布式系统的服务发现与配置。与其他分布式服务注册与发现的方案，Consul的方案更“一站式”，内置了服务注册与发现框 架、分布一致性协议实现、健康检查、Key&#x2F;Value存储、多数据中心方案，不再需要依赖其他工具（比如ZooKeeper等）。使用起来也较 为简单。Consul使用Go语言编写，因此具有天然可移植性(支持Linux、windows和Mac OS X)；安装包仅包含一个可执行文件，方便部署，与Docker等轻量级容器可无缝配合 linux上安装"></a>Consul 是 HashiCorp 公司推出的开源工具，用于实现分布式系统的服务发现与配置。与其他分布式服务注册与发现的方案，Consul的方案更“一站式”，内置了服务注册与发现框 架、分布一致性协议实现、健康检查、Key&#x2F;Value存储、多数据中心方案，不再需要依赖其他工具（比如ZooKeeper等）。使用起来也较 为简单。Consul使用Go语言编写，因此具有天然可移植性(支持Linux、windows和Mac OS X)；安装包仅包含一个可执行文件，方便部署，与Docker等轻量级容器可无缝配合<br> <span id="more"></span><br><strong>linux上安装</strong></h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget https://releases.hashicorp.com/consul/0.7.5/consul_0.7.5_linux_amd64.zip</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">unzip consul_0.7.5_linux_amd64.zip</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mv</span> consul /opt</span></span><br><span class="line">我的本机ip为192.168.1.220</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">nohup</span> /opt/consul agent -dev -ui -node=consul-dev -client=192.168.1.220 &amp;</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">netstat -luntp|grep 8500</span></span><br><span class="line">tcp        0      0 192.168.1.220:8500      0.0.0.0:*               LISTEN      24587/consul</span><br></pre></td></tr></table></figure>
<h2 id="windows上安装"><a href="#windows上安装" class="headerlink" title="windows上安装"></a><strong>windows上安装</strong></h2><p>官网下载：<a href="https://www.consul.io/downloads.html">https://www.consul.io/downloads.html</a></p>
<p><img src="/image/15441526781.png"></p>
<p>配置环境变量</p>
<p>我的电脑 右键属性 &#x3D;&gt; 环境变量 &#x3D;&gt; 系统变量 &#x3D;&gt; path &#x3D;&gt; 新建</p>
<p><img src="/image/15441526981.png"></p>
<p>启动服务</p>
<p><img src="/image/1544152773-Image.png"> </p>
]]></content>
      <categories>
        <category>consul</category>
      </categories>
      <tags>
        <tag>consul</tag>
        <tag>注册中心</tag>
      </tags>
  </entry>
  <entry>
    <title>Helm部署dashboard</title>
    <url>/2019/11/08/Helm%E9%83%A8%E7%BD%B2dashboard/</url>
    <content><![CDATA[<p><strong>从helm仓库下载dashboard</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">helm fetch stable/kubernetes-dashboard</span></span><br><span class="line">Error: no cached repo found. (try &#x27;helm repo update&#x27;). open /root/.helm/repository/cache/stable-index.yaml: no such file or directory</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">helm repo update</span></span><br><span class="line">Hang tight while we grab the latest from your chart repositories...</span><br><span class="line">...Skip local chart repository</span><br><span class="line">...Successfully got an update from the &quot;stable&quot; chart repository</span><br><span class="line">Update Complete. ⎈ Happy Helming!⎈</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">helm repo list</span></span><br><span class="line">NAME      URL                                             </span><br><span class="line">stable    https://kubernetes-charts.storage.googleapis.com</span><br><span class="line">local     http://127.0.0.1:8879/charts</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">helm fetch stable/kubernetes-dashboard</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">tar xf kubernetes-dashboard-1.10.1.tgz</span></span><br></pre></td></tr></table></figure>
 <span id="more"></span>
<p><strong>创建Kubernetes-dashboard .yaml等同于values.yaml</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cd</span> kubernetes-dashboard</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim kubernetes-dashboard.yaml</span></span><br><span class="line">image:</span><br><span class="line">  repository: harbor.ui.com/library/kubernetes-dashboard-amd64      # 私有仓库的镜像</span><br><span class="line">  tag: v1.10.1</span><br><span class="line">ingress:      # nginx配置（前提安装了ingress-nginx）</span><br><span class="line">  enabled: true</span><br><span class="line">  hosts:</span><br><span class="line">    - k8s.ui.com</span><br><span class="line">  annotations:</span><br><span class="line">    nginx.ingress.kubernetes.io/ssl-redirect: &quot;true&quot;</span><br><span class="line">    nginx.ingress.kubernetes.io/backend-protocol: &quot;HTTPS&quot;</span><br><span class="line">  tls:</span><br><span class="line">    - secretName: k8s-cert   # 证书</span><br><span class="line">      hosts:</span><br><span class="line">      - k8s.ui.com</span><br><span class="line">rbac:  </span><br><span class="line">  clusterAdminRole: true # 使用admin用户权限</span><br></pre></td></tr></table></figure>
<p><strong>创建dashboard服务</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">helm install stable/kubernetes-dashboard -n kubernetes-dashboard --namespace kube-system  -f kubernetes-dashboard.yaml</span></span><br><span class="line">NAME:   kubernetes-dashboard</span><br><span class="line">LAST DEPLOYED: Fri Nov  8 15:18:37 2019</span><br><span class="line">NAMESPACE: kube-system</span><br><span class="line">STATUS: DEPLOYED</span><br><span class="line"></span><br><span class="line">RESOURCES:</span><br><span class="line">==&gt; v1/ClusterRoleBinding</span><br><span class="line">NAME                  AGE</span><br><span class="line">kubernetes-dashboard  1s</span><br><span class="line"></span><br><span class="line">==&gt; v1/Deployment</span><br><span class="line">NAME                  READY  UP-TO-DATE  AVAILABLE  AGE</span><br><span class="line">kubernetes-dashboard  0/1    1           0          1s</span><br><span class="line"></span><br><span class="line">==&gt; v1/Pod(related)</span><br><span class="line">NAME                                  READY  STATUS             RESTARTS  AGE</span><br><span class="line">kubernetes-dashboard-77985b494-4w64x  0/1    ContainerCreating  0         1s</span><br><span class="line"></span><br><span class="line">==&gt; v1/Secret</span><br><span class="line">NAME                  TYPE    DATA  AGE</span><br><span class="line">kubernetes-dashboard  Opaque  0     1s</span><br><span class="line"></span><br><span class="line">==&gt; v1/Service</span><br><span class="line">NAME                  TYPE       CLUSTER-IP     EXTERNAL-IP  PORT(S)  AGE</span><br><span class="line">kubernetes-dashboard  ClusterIP  10.105.119.76  &lt;none&gt;       443/TCP  1s</span><br><span class="line"></span><br><span class="line">==&gt; v1/ServiceAccount</span><br><span class="line">NAME                  SECRETS  AGE</span><br><span class="line">kubernetes-dashboard  1        1s</span><br><span class="line"></span><br><span class="line">==&gt; v1beta1/Ingress</span><br><span class="line">NAME                  HOSTS            ADDRESS  PORTS  AGE</span><br><span class="line">kubernetes-dashboard  k8s.ui.com  80, 443  1s</span><br><span class="line"></span><br><span class="line">NOTES:</span><br><span class="line">*********************************************************************************</span><br><span class="line">*** PLEASE BE PATIENT: kubernetes-dashboard may take a few minutes to install ***</span><br><span class="line">*********************************************************************************</span><br><span class="line">From outside the cluster, the server URL(s) are:</span><br><span class="line">     https://k8s.ui.com</span><br></pre></td></tr></table></figure>
<p><strong>获取web登录token</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl -n kube-system get secret | grep kubernetes-dashboard-token</span>  </span><br><span class="line">kubernetes-dashboard-token-t2z6c                 kubernetes.io/service-account-token   3      4m56s</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl describe secret kubernetes-dashboard-token-t2z6c -n kube-system</span></span><br><span class="line">Name:         kubernetes-dashboard-token-t2z6c</span><br><span class="line">Namespace:    kube-system</span><br><span class="line">Labels:       &lt;none&gt;</span><br><span class="line">Annotations:  kubernetes.io/service-account.name: kubernetes-dashboard</span><br><span class="line">              kubernetes.io/service-account.uid: f773a231-005b-466e-a0c8-b7135d47947b</span><br><span class="line"></span><br><span class="line">Type:  kubernetes.io/service-account-token</span><br><span class="line"></span><br><span class="line">Data</span><br><span class="line">====</span><br><span class="line">namespace:  11 bytes</span><br><span class="line">token:      eyJhbGciOiJSUzI1NiIsImtpZCI6IiJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJrdWJlcm5ldGVzLWRhc2hib2FyZC10b2tlbi10Mno2YyIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJrdWJlcm5ldGVzLWRhc2hib2FyZCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6ImY3NzNhMjMxLTAwNWItNDY2ZS1hMGM4LWI3MTM1ZDQ3OTQ3YiIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDprdWJlLXN5c3RlbTprdWJlcm5ldGVzLWRhc2hib2FyZCJ9.c4ZJdBywjLypYKYYyjzoiH8P4IBPM9VM4_8s4oy48buSAWn_UrFVbMoaVVrzwPcKwVVTrsH91uhUL4Wcyr3g4-O9_So2ZZKkjavNHilPrLWgvFLYrLIwLmWVw1zT83B9jANjVOub9Zpxnu719z0k1wJ_gg2v8agOX_Fq6FYby_uwctLN_FKhk1kAipSVW9qYcdQGR7aBWxRJ_5Mw5MuA9XIyGIkjdzFY5MK5JZW6Wo5YNeVqPzzHdekd8b7FnInsFWI7nD7KntqEe8bck-qCeuUS8Omeb5R9hnrfzLkU8rRKBh9VrvLzD7zVfiiUMqEjXAJB9zOKPUaPc7dg0fg3lA</span><br><span class="line">ca.crt:     1025 bytes</span><br></pre></td></tr></table></figure>
<p><img src="/image/1573202232-Image.png"></p>
<p><strong>修改token过期时间</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl edit deployment kubernetes-dashboard -n kube-system</span></span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - args:</span><br><span class="line">        - --auto-generate-certificates</span><br><span class="line">        - --token-ttl=43200</span><br><span class="line">        image: harbor.ui.com/library/kubernetes-dashboard-amd64:v1.10.1</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
  </entry>
  <entry>
    <title>Go语言学习目录</title>
    <url>/2022/11/22/Go%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%9B%AE%E5%BD%95/</url>
    <content><![CDATA[<ol>
<li><a href="https://www.wqblogs.com:4443/2022/11/22/go%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/">学习go环境配置</a></li>
<li><a href="https://www.wqblogs.com:4443/2022/11/23/%E5%A6%82%E4%BD%95%E7%BC%96%E5%86%99golang%E4%BB%A3%E7%A0%81/">如何编写golang代码</a></li>
<li><a href="https://www.wqblogs.com:4443/2022/11/24/go%E8%AF%AD%E8%A8%80%E5%8F%98%E9%87%8F%E5%8F%8A%E5%B8%B8%E9%87%8F/">GO语言变量及常量</a></li>
</ol>
]]></content>
      <categories>
        <category>Go语言</category>
      </categories>
      <tags>
        <tag>Go语言</tag>
      </tags>
  </entry>
  <entry>
    <title>Java项目配置Nexus</title>
    <url>/2022/11/03/Java%E9%A1%B9%E7%9B%AE%E9%85%8D%E7%BD%AENexus/</url>
    <content><![CDATA[<h3 id="Java项目引入nexus配置"><a href="#Java项目引入nexus配置" class="headerlink" title="Java项目引入nexus配置"></a>Java项目引入nexus配置</h3><p>POM文件中引入nexus</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 配置nexus仓库 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus-releases<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>Team Nexus Repository<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://172.22.96.91:18081/repository/maven-public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">releases</span>&gt;</span>         </span><br><span class="line">    <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 配置从那个库中下载插件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus-releases<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>Team Nexus Repository<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://172.22.96.91:18081/repository/maven-public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">pluginRepositories</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="Maven镜像中Mvn-命令配置"><a href="#Maven镜像中Mvn-命令配置" class="headerlink" title="Maven镜像中Mvn 命令配置"></a>Maven镜像中Mvn 命令配置</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line">cat &lt;&lt;&#x27;EOF&#x27; &gt; settings.xml</span><br><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;settings xmlns=&quot;http://maven.apache.org/SETTINGS/1.0.0&quot;</span><br><span class="line">          xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">          xsi:schemaLocation=&quot;http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd&quot;&gt;</span><br><span class="line">  &lt;!-- 本地nexus私服认证 --&gt;</span><br><span class="line">  &lt;servers&gt;</span><br><span class="line">      &lt;server&gt;</span><br><span class="line">          &lt;id&gt;nexus-releases&lt;/id&gt;  &lt;!-- 与 pom.xml 里的 repository 上的 ID 对应 --&gt;</span><br><span class="line">          &lt;username&gt;$&#123;username&#125;&lt;/username&gt;</span><br><span class="line">          &lt;password&gt;$&#123;password&#125;&lt;/password&gt;</span><br><span class="line">      &lt;/server&gt;</span><br><span class="line">  &lt;/servers&gt;</span><br><span class="line">  &lt;mirrors&gt;</span><br><span class="line">      &lt;!-- 所有maven下载都通过本地nexus私服 --&gt;</span><br><span class="line">      &lt;mirror&gt;</span><br><span class="line">          &lt;id&gt;nexus&lt;/id&gt;</span><br><span class="line">          &lt;name&gt;local nexus maven&lt;/name&gt;</span><br><span class="line">          &lt;mirrorOf&gt;*&lt;/mirrorOf&gt;</span><br><span class="line">          &lt;url&gt;http://172.22.96.91:18081/repository/maven-public/&lt;/url&gt;</span><br><span class="line">      &lt;/mirror&gt;     </span><br><span class="line">  &lt;/mirrors&gt;  </span><br><span class="line">&lt;/settings&gt;</span><br><span class="line">EOF</span><br><span class="line">  </span><br><span class="line">mvn -Dusername=$NEXUS_USERNAME -Dpassword=$NEXUS_PASSWORD -Dmaven.test.skip=true -DskipDocker -s ./settings.xml clean package</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>jenkins</category>
        <category>maven</category>
      </categories>
      <tags>
        <tag>jenkins</tag>
        <tag>maven</tag>
      </tags>
  </entry>
  <entry>
    <title>K8s部署Ingress Traefik</title>
    <url>/2019/09/28/K8s%E9%83%A8%E7%BD%B2Ingress%20Traefik/</url>
    <content><![CDATA[<h3 id="服务介绍"><a href="#服务介绍" class="headerlink" title="服务介绍"></a>服务介绍</h3><h4 id="Ingress"><a href="#Ingress" class="headerlink" title="Ingress"></a>Ingress</h4><p>ngress可以给service提供集群外部访问的URL、负载均衡、SSL终止、HTTP路由等。为了配置这些Ingress规则，集群管理员需要部署一个Ingress controller，它监听Ingress和service的变化，并根据规则配置负载均衡并提供访问入口</p>
 <span id="more"></span>

<h4 id="TraeFik"><a href="#TraeFik" class="headerlink" title="TraeFik"></a>TraeFik</h4><p>Traefik是一个用Golang开发的轻量级的Http反向代理和负载均衡器。由于可以自动配置和刷新backend节点，目前可以被绝大部分容器平台支持，例如Kubernetes，Swarm，Rancher等。由于traefik会实时与Kubernetes API交互,所以对于Service的节点变化，traefik的反应会更加迅速。总体来说traefik可以在Kubernetes中完美的运行.</p>
<p><img src="/image/1569639253-15696392461.png"></p>
<h4 id="RBAC"><a href="#RBAC" class="headerlink" title="RBAC"></a>RBAC</h4><p>基于角色的访问控制</p>
<p>RBAC引入了4个新的顶级资源对象：Role、ClusterRole、RoleBinding、ClusterRoleBinding。同其他API资源对象一样，用户可以使用kubectl或者API调用等方式操作这些资源对象。</p>
<p>- 角色(Role)和集群角色(ClusterRole)</p>
<p>　  一个角色就是一组权限的集合，这里的权限都是许可形式的，不存在拒绝的规则。在一个命名空间中，可以用角色来定义一个角色，如果是集群级别的，就需要使用ClusterRole了</p>
<p>- 角色绑定(RoleBinding)和集群角色绑定(ClusterRoleBinding)</p>
<p>　  角色绑定或集群角色绑定用来把一个角色绑定到一个目标上，绑定目标可以是User、Group或者Service Account。使用RoleBinding为某个命名空间授权，ClusterRoleBinding为集群范围内授权</p>
<p><img src="/image/1569639341-15696393291.png"></p>
<h3 id="部署traefik服务"><a href="#部署traefik服务" class="headerlink" title="部署traefik服务"></a>部署traefik服务</h3><p>官方主要定义了两种部署模式，分别是Daemonset和Deployment，它们之间的区别主要是：</p>
<ul>
<li><p>相比一个节点只部署一个daemonset的traefik，采用deployment会更易于伸缩和扩展；</p>
</li>
<li><p>采用Daemonset方式，可以在任何节点上访问80和443端口，而使用deployment者必须依赖service里面定义的对象去访问。</p>
</li>
</ul>
<p>DaemonSet保证在每个Node上都运行一个容器副本，常用来部署一些集群的日志、监控或者其他系统管理应用。典型的应用包括：</p>
<ul>
<li>日志收集，比如fluentd，logstash等</li>
<li>系统监控，比如Prometheus Node Exporter，collectd，New Relic agent，Ganglia gmond等</li>
<li>系统程序，比如kube-proxy, kube-dns, glusterd, ceph等</li>
</ul>
<p>这里是daemonset去部署的</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim traefik_http.yml</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建rbac集群角色 traefik-ingress-controller</span></span><br><span class="line">---</span><br><span class="line">kind: ClusterRole</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1beta1</span><br><span class="line">metadata:</span><br><span class="line">  name: traefik-ingress-controller</span><br><span class="line">rules:</span><br><span class="line">  - apiGroups:</span><br><span class="line">      - &quot;&quot;</span><br><span class="line">    resources:</span><br><span class="line">      - services</span><br><span class="line">      - endpoints</span><br><span class="line">      - secrets</span><br><span class="line">    verbs:</span><br><span class="line">      - get</span><br><span class="line">      - list</span><br><span class="line">      - watch</span><br><span class="line">  - apiGroups:</span><br><span class="line">      - extensions</span><br><span class="line">    resources:</span><br><span class="line">      - ingresses</span><br><span class="line">    verbs:</span><br><span class="line">      - get</span><br><span class="line">      - list</span><br><span class="line">      - watch</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建serviceaccount用户</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Service account是为了方便Pod里面的进程调用Kubernetes API或其他外部服务而设计的</span></span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ServiceAccount</span><br><span class="line">metadata:</span><br><span class="line">  name: traefik-ingress-controller</span><br><span class="line">  namespace: kube-system</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">集群角色绑定</span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">traefik-ingress-controller用户与traefik-ingress-controller角色进行绑定，这就授予了traefik-ingress-controller能够访问kube-system命名空间下的Pod</span></span><br><span class="line">---</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1beta1</span><br><span class="line">metadata:</span><br><span class="line">  name: traefik-ingress-controller</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: traefik-ingress-controller</span><br><span class="line">subjects:</span><br><span class="line">- kind: ServiceAccount</span><br><span class="line">  name: traefik-ingress-controller</span><br><span class="line">  namespace: kube-system</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建traefik服务</span></span><br><span class="line">---</span><br><span class="line">kind: DaemonSet</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">metadata:</span><br><span class="line">  name: traefik-ingress-controller</span><br><span class="line">  namespace: kube-system</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: traefik-ingress-lb</span><br><span class="line">spec:</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        k8s-app: traefik-ingress-lb</span><br><span class="line">        name: traefik-ingress-lb</span><br><span class="line">    spec:</span><br><span class="line">      serviceAccountName: traefik-ingress-controller</span><br><span class="line">      tolerations:</span><br><span class="line">      - key: node-role.kubernetes.io/master</span><br><span class="line">        effect: NoSchedule</span><br><span class="line">      terminationGracePeriodSeconds: 60</span><br><span class="line">      hostNetwork: true</span><br><span class="line">      containers:</span><br><span class="line">      - image: traefik:1.7.9</span><br><span class="line">        name: traefik-ingress-lb</span><br><span class="line">        ports:</span><br><span class="line">        - name: http</span><br><span class="line">          containerPort: 80</span><br><span class="line">          hostPort: 80</span><br><span class="line">        - name: admin</span><br><span class="line">          containerPort: 8080</span><br><span class="line">        securityContext:</span><br><span class="line">          privileged: true</span><br><span class="line">        args:</span><br><span class="line">        - -d</span><br><span class="line">        - --web</span><br><span class="line">        - --kubernetes</span><br><span class="line">---</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">traefik的ui服务</span></span><br><span class="line">kind: Service</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  name: traefik-ingress-service</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    k8s-app: traefik-ingress-lb</span><br><span class="line">  ports:</span><br><span class="line">    - protocol: TCP</span><br><span class="line">      port: 80</span><br><span class="line">      name: web</span><br><span class="line">    - protocol: TCP</span><br><span class="line">      port: 8080</span><br><span class="line">      name: admin</span><br><span class="line">  type: NodePort</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: traefik-web-ui</span><br><span class="line">  namespace: kube-system</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    k8s-app: traefik-ingress-lb</span><br><span class="line">  ports:</span><br><span class="line">  - port: 80</span><br><span class="line">    targetPort: 8080</span><br><span class="line">---</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">traefik的ui ingress</span></span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: traefik-web-ui</span><br><span class="line">  namespace: kube-system</span><br><span class="line">  annotations:</span><br><span class="line">    kubernetes.io/ingress.class: traefik</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: traefik.ui.com    # 域名</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - backend:</span><br><span class="line">          serviceName: traefik-web-ui  # traefik服务名</span><br><span class="line">          servicePort: 80   </span><br></pre></td></tr></table></figure>

<p>创建服务</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl apply -f traefik.yml</span></span><br><span class="line">clusterrole.rbac.authorization.k8s.io/traefik-ingress-controller unchanged</span><br><span class="line">clusterrolebinding.rbac.authorization.k8s.io/traefik-ingress-controller unchanged</span><br><span class="line">serviceaccount/traefik-ingress-controller unchanged</span><br><span class="line">configmap/traefik-conf configured</span><br><span class="line">daemonset.extensions/traefik-ingress-controller configured</span><br><span class="line">service/traefik-web-ui unchanged</span><br><span class="line">ingress.extensions/traefik-web-ui configured</span><br></pre></td></tr></table></figure>

<p>查看web服务</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get svc -n kube-system</span></span><br><span class="line">NAME                   TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)                  AGE</span><br><span class="line">heapster               ClusterIP   10.254.173.231   &lt;none&gt;        80/TCP                   29h</span><br><span class="line">kube-dns               ClusterIP   10.254.0.10      &lt;none&gt;        53/UDP,53/TCP,9153/TCP   4d5h</span><br><span class="line">kubernetes-dashboard   NodePort    10.254.252.116   &lt;none&gt;        443:30195/TCP            4d3h</span><br><span class="line">monitoring-grafana     ClusterIP   10.254.48.16     &lt;none&gt;        80/TCP                   29h</span><br><span class="line">monitoring-influxdb    ClusterIP   10.254.68.108    &lt;none&gt;        8086/TCP                 29h</span><br><span class="line">traefik-web-ui         ClusterIP   10.254.219.247   &lt;none&gt;        80/TCP                   10m</span><br></pre></td></tr></table></figure>

<p><img src="/image/1569639592-15696395851.png"></p>
]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>Kubernetes学习目录</title>
    <url>/2019/10/31/Kubernetes%E5%AD%A6%E4%B9%A0%E7%9B%AE%E5%BD%95/</url>
    <content><![CDATA[<ul>
<li><a href="https://www.wqblogs.com:4443/2019/07/03/%E5%88%9D%E8%AF%86kubernetes/">初识kubernetes</a></li>
<li><a href="https://www.wqblogs.com:4443/2019/07/03/kubernetes%E4%B9%8B%E2%80%9CHello%20World%E2%80%9D/">kubernetes之“Hello World”</a></li>
<li><a href="https://www.wqblogs.com:4443/2019/07/22/kubeadm%E9%83%A8%E7%BD%B2k8s%E9%9B%86%E7%BE%A4/">kubeadm部署k8s集群</a></li>
<li><a href="https://www.wqblogs.com:4443/2019/09/23/%E5%AE%89%E8%A3%85harbor/">安装harbor</a></li>
<li><a href="https://www.wqblogs.com:4443/2019/09/23/kubernetes%E5%AE%89%E8%A3%85dashboard/">kubernetes安装dashboard</a></li>
<li><a href="https://www.wqblogs.com:4443/2019/10/03/Liveness,%20Readiness%E4%B8%8EStartup%20Probes/">Liveness, Readiness与Startup Probes</a></li>
<li><a href="https://www.wqblogs.com:4443/2019/10/17/kubernetes%20POD%E6%8E%A7%E5%88%B6%E5%99%A8/">kubernetes POD控制器</a></li>
<li><a href="https://www.wqblogs.com:4443/2019/09/21/RS%E4%B8%8EDeployment/">RS与Deployment</a></li>
<li><a href="https://www.wqblogs.com:4443/2019/11/09/Service%E8%B5%84%E6%BA%90/">Service资源</a></li>
<li><a href="https://www.wqblogs.com:4443/2019/09/28/K8s%E9%83%A8%E7%BD%B2Ingress%20Traefik/">K8s部署Ingress Traefik</a></li>
<li><a href="https://www.wqblogs.com:4443/2019/09/28/traefik%E9%85%8D%E7%BD%AEdashboard%20https%E8%AE%BF%E9%97%AE/">traefik配置dashboard https访问</a></li>
<li><a href="https://www.wqblogs.com:4443/2019/10/24/Kubernetes%E9%83%A8%E7%BD%B2nginx-ingress%E4%BD%BF%E7%94%A8/">Kubernetes部署nginx-ingress使用</a></li>
<li><a href="https://www.wqblogs.com:4443/2019/10/29/Kubernetes%E7%9A%84ConfigMap%E4%BD%BF%E7%94%A8/">Kubernetes的ConfigMap使用</a></li>
<li><a href="https://www.wqblogs.com:4443/2019/10/30/Kubernetes%E7%9A%84Secret%E4%BD%BF%E7%94%A8/">Kubernetes的Secret使用</a></li>
<li><a href="https://www.wqblogs.com:4443/2019/10/31/Kubernetes%E7%9A%84Volume%E4%BD%BF%E7%94%A8/">Kubernetes的Volume使用</a></li>
<li><a href="https://www.wqblogs.com:4443/2019/11/01/Kubernetes%E7%9A%84PV%E3%80%81PVC%E4%BD%BF%E7%94%A8/">Kubernetes的PV、PVC使用</a></li>
<li><a href="https://www.wqblogs.com:4443/2019/11/04/Kubernetes%E9%9B%86%E7%BE%A4%E7%9A%84%E6%B1%A1%E7%82%B9%E4%B8%8E%E5%AE%B9%E5%BF%8D/">Kubernetes集群的污点与容忍</a></li>
<li><a href="https://www.wqblogs.com:4443/2019/11/04/Kubernetes%E5%AE%89%E5%85%A8%E4%B9%8Bkubeconfig%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/">Kubernetes安全之kubeconfig访问控制</a></li>
<li><a href="https://www.wqblogs.com:4443/2019/11/05/Kubernetes%E7%9A%84helm%E9%83%A8%E7%BD%B2/">Kubernetes的helm部署</a></li>
<li><a href="https://www.wqblogs.com:4443/2019/11/08/Helm%E9%83%A8%E7%BD%B2dashboard/">Helm部署dashboard</a></li>
<li><a href="https://www.wqblogs.com:4443/2019/11/09/k8s%E9%83%A8%E7%BD%B2prometheus%E3%80%81grafana%E7%9B%91%E6%8E%A7/">k8s部署prometheus、grafana监控</a></li>
<li><a href="https://www.wqblogs.com:4443/2019/11/17/%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%83%A8%E7%BD%B2%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4/">二进制部署高可用集群</a></li>
<li><a href="https://www.wqblogs.com:4443/categories/Kubernetes/ELK/">日志收集</a></li>
<li><a href="https://www.wqblogs.com:4443/2020/04/17/k8s%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F/">k8s监控系统</a></li>
<li><a href="https://www.wqblogs.com:4443/2020/03/23/Spinnaker%E7%9A%84Armory%E5%8F%91%E8%A1%8C%E7%89%88%E9%83%A8%E7%BD%B2">Spinnaker持续交付</a></li>
<li>待更新</li>
</ul>
]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
  </entry>
  <entry>
    <title>Kubernetes安全之kubeconfig访问控制</title>
    <url>/2019/11/04/Kubernetes%E5%AE%89%E5%85%A8%E4%B9%8Bkubeconfig%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/</url>
    <content><![CDATA[<p><a href="https://www.wqblogs.com:4443/wp-content/uploads/2019/11/1572864235-Image.png"><img src="/image/1572864235-Image.png"></a></p>
<p>需求：创建一个用户只能管理 dev 空间</p>
 <span id="more"></span>

<h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><p>安装cfssl</p>
<p>链接：<a href="https://pan.baidu.com/s/1IjGDZ0Icyd9vDUK2JqwqJQ">https://pan.baidu.com/s/1IjGDZ0Icyd9vDUK2JqwqJQ</a>  提取码：8gx8</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cp</span> cfssl* /usr/local/bin/</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">chmod</span> a+x /usr/local/bin/*</span></span><br></pre></td></tr></table></figure>

<p>创建matrixdb用户</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">useradd matrixdb</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">echo</span> <span class="string">&quot;123456&quot;</span>|passwd --stdin matrixdb</span></span><br><span class="line">Changing password for user matrixdb.</span><br><span class="line">passwd: all authentication tokens updated successfully.</span><br></pre></td></tr></table></figure>

<h3 id="创建证书"><a href="#创建证书" class="headerlink" title="创建证书"></a>创建证书</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim matrixdb-csr.json</span></span><br><span class="line">&#123;</span><br><span class="line">  &quot;CN&quot;: &quot;matrixdb&quot;,         # User</span><br><span class="line">  &quot;hosts&quot;: [],</span><br><span class="line">  &quot;key&quot;: &#123;</span><br><span class="line">    &quot;algo&quot;: &quot;rsa&quot;,</span><br><span class="line">    &quot;size&quot;: 2048</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;names&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;C&quot;: &quot;CN&quot;,</span><br><span class="line">      &quot;ST&quot;: &quot;BeiJing&quot;,</span><br><span class="line">      &quot;L&quot;: &quot;BeiJing&quot;,</span><br><span class="line">      &quot;O&quot;: &quot;K8s&quot;,</span><br><span class="line">      &quot;OU&quot;: &quot;System&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">cfssl gencert -ca=/etc/kubernetes/pki/ca.crt -ca-key=/etc/kubernetes/pki/ca.key -profile=kubernetes ./matrixdb-csr.json | cfssljson -bare matrixdb</span></span><br><span class="line">2022/04/18 10:33:22 [INFO] generate received request</span><br><span class="line">2022/04/18 10:33:22 [INFO] received CSR</span><br><span class="line">2022/04/18 10:33:22 [INFO] generating key: rsa-2048</span><br><span class="line">2022/04/18 10:33:22 [INFO] encoded CSR</span><br><span class="line">2022/04/18 10:33:22 [INFO] signed certificate with serial number 363553375249453135373207601794306330152387338480</span><br><span class="line">2022/04/18 10:33:22 [WARNING] This certificate lacks a &quot;hosts&quot; field. This makes it unsuitable for</span><br><span class="line">websites. For more information see the Baseline Requirements for the Issuance and Management</span><br><span class="line">of Publicly-Trusted Certificates, v.1.1.6, from the CA/Browser Forum (https://cabforum.org);</span><br><span class="line">specifically, section 10.2.3 (&quot;Information Requirements&quot;).</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cp</span> matrixdb.csr matrixdb.pem matrixdb-key.pem /etc/kubernetes/pki/</span></span><br></pre></td></tr></table></figure>

<h3 id="生成kubeconfig授权文件"><a href="#生成kubeconfig授权文件" class="headerlink" title="生成kubeconfig授权文件"></a>生成kubeconfig授权文件</h3><h4 id="设置集群参数"><a href="#设置集群参数" class="headerlink" title="设置集群参数"></a>设置集群参数</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">export</span> KUBE_APISERVER=<span class="string">&quot;https://192.168.3.50:6443&quot;</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl config set-cluster kubernetes \</span></span><br><span class="line"><span class="language-bash"> --certificate-authority=/etc/kubernetes/pki/ca.crt \</span></span><br><span class="line"><span class="language-bash"> --embed-certs=<span class="literal">true</span> \</span></span><br><span class="line"><span class="language-bash"> --server=<span class="variable">$&#123;KUBE_APISERVER&#125;</span> \</span></span><br><span class="line"><span class="language-bash"> --kubeconfig=matrixdb.kubeconfig</span></span><br><span class="line">Cluster &quot;kubernetes&quot; set.</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cat</span> matrixdb.kubeconfig</span></span><br><span class="line">    server: https://192.168.3.50:6443</span><br><span class="line">  name: kubernetes</span><br><span class="line">contexts: []</span><br><span class="line">current-context: &quot;&quot;</span><br><span class="line">kind: Config</span><br><span class="line">preferences: &#123;&#125;</span><br><span class="line">users: []</span><br></pre></td></tr></table></figure>

<h4 id="设置用户参数"><a href="#设置用户参数" class="headerlink" title="设置用户参数"></a>设置用户参数</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl config set-credentials matrixdb \</span></span><br><span class="line"><span class="language-bash">&gt; --client-certificate=/etc/kubernetes/pki/matrixdb.pem \</span></span><br><span class="line"><span class="language-bash">&gt; --client-key=/etc/kubernetes/pki/matrixdb-key.pem \</span></span><br><span class="line"><span class="language-bash">&gt; --embed-certs=<span class="literal">true</span> \</span></span><br><span class="line"><span class="language-bash">&gt; --kubeconfig=matrixdb.kubeconfig</span></span><br><span class="line">User &quot;matrixdb&quot; set.</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cat</span> matrixdb.kubeconfig</span></span><br><span class="line">    server: https://192.168.3.50:6443</span><br><span class="line">  name: kubernetes</span><br><span class="line">contexts: []</span><br><span class="line">current-context: &quot;&quot;</span><br><span class="line">kind: Config</span><br><span class="line">preferences: &#123;&#125;</span><br><span class="line">users:</span><br><span class="line">- name: matrixdb</span><br></pre></td></tr></table></figure>

<h4 id="配置上下文"><a href="#配置上下文" class="headerlink" title="配置上下文"></a>配置上下文</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl config set-context kubernetes \</span></span><br><span class="line"><span class="language-bash"> --cluster=kubernetes \</span></span><br><span class="line"><span class="language-bash"> --user=matrixdb \</span></span><br><span class="line"><span class="language-bash"> --namespace=matrixdb-test,matrixdb-operator,cert-manager \           <span class="comment"># 绑定多个namespace</span></span></span><br><span class="line"> --kubeconfig=matrixdb.kubeconfig</span><br><span class="line">Context &quot;kubernetes&quot; created.</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cat</span> matrixdb.kubeconfig</span></span><br><span class="line">    server: https://192.168.3.50:6443</span><br><span class="line">  name: kubernetes</span><br><span class="line">contexts:</span><br><span class="line">- context:</span><br><span class="line">    cluster: kubernetes</span><br><span class="line">    namespace: matrixdb-test,matrixdb-operator,cert-manager</span><br><span class="line">    user: matrixdb</span><br><span class="line">  name: kubernetes</span><br><span class="line">current-context: &quot;&quot;</span><br><span class="line">kind: Config</span><br><span class="line">preferences: &#123;&#125;</span><br><span class="line">users:</span><br><span class="line">- name: matrixdb</span><br><span class="line">  user:</span><br></pre></td></tr></table></figure>

<h4 id="完整的kubeconfig"><a href="#完整的kubeconfig" class="headerlink" title="完整的kubeconfig"></a>完整的kubeconfig</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">clusters:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">cluster:</span></span><br><span class="line">    <span class="attr">certificate-authority-data:</span> <span class="string">LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM2VENDQWRHZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQ0FYRFRJeU1ETXhNREV4TlRjMU0xb1lEekl4TWpJd01qRTBNVEUxTnpVeldqQVZNUk13RVFZRApWUVFERXdwcmRXSmxjbTVsZEdWek1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBCjF3Nk9RcEh5dmJMeWpueXVQMXB5TEFhVG55elpobTE2MUJWQ3FzVkJKSmN6YXN6cVJlR0FHMERwSFVSc2ZvWEcKMW8zbEhYYlpDSHFnbVVpN3Rubm9BQk1jc01FUndrRzZFekR6Q1g5SENVcTEzbUZhZmNqcnh5MHYya2t5YXM5dwp1MlF2NFpYVjJRVnNjeC9SSG43NXo4Q245KzhORWFDKzdiOVhGWGVnM1pDbkczMng3TmVxd0pmVTNzeGVCVWZIClZOVWxUdGhpWkdobDlGSDRNSE9XU29SaE5LbW9SckxOdjMyMnN3d3M2S2hVbERBUitVcVM1cXc4VU9IK3daSlkKUlNrSDZtSlNiSkhvWmI5YS9mSFNYN3ZxRHVxSkpaSTdCYS8vdlF6S2QyeUlYU2JjcFRTYms0MG02SmIrSG1xdgo1THFqM3QxVlFOT2ZjWW8rcHF4dDJ3SURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WURWUjBUCkFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVU4aTd6L1RpczdPQ29xbHh3RXVtUXZndDJlL0l3RFFZSktvWkkKaHZjTkFRRUxCUUFEZ2dFQkFNd1RKVjVYdVc4ZnRIaHpaWTdDNkN4bitzbno5a2JaS0l5OHgyODdkd2w2d2N1cwprR0ZYanpCeC9pcThma2xjbm4xek1hN2VJREVqNVVJdVowVWpuNkpzdk0vc1NGOWFyR29peUdscHU2emZkUDBXCnVXdXNKbUJUend2WG41NEs2YXp0Qy9PQWFWSytaREdOOHUyVTBjdExwSXlaL0V4U2drRW1leXViUjMwMkIyMzYKZ1Y4dm5mQTNpQzgrdFk0djdrUDYxdnZRUDBicHZEeUltV002OS9kYjYybHY1WUs4Z2dlVGRQelJEbGp1ZzRnOApPcE1SdG45TExtY09xVXRIeDlSUlhodG1yd2ZlWTNMbHBZY2pnUm1BMFFNSUVJKzJZRGk5WTFCTWUvcnkwTDFyCkdWUitDOU8rWmZXVVVsQjZiZUw1Yitwd0krQkxJRThmZHR3a2t0az0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=</span></span><br><span class="line">    <span class="attr">server:</span> <span class="string">https://192.168.3.50:6443</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes</span></span><br><span class="line"><span class="attr">contexts:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">context:</span></span><br><span class="line">    <span class="attr">cluster:</span> <span class="string">kubernetes</span></span><br><span class="line">    <span class="attr">namespace:</span> <span class="string">matrixdb-test,matrixdb-operator,cert-manager</span></span><br><span class="line">    <span class="attr">user:</span> <span class="string">matrixdb</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes</span></span><br><span class="line"><span class="attr">current-context:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Config</span></span><br><span class="line"><span class="attr">preferences:</span> &#123;&#125;</span><br><span class="line"><span class="attr">users:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">matrixdb</span></span><br><span class="line">  <span class="attr">user:</span></span><br><span class="line">    <span class="attr">client-certificate-data:</span> <span class="string">LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURoVENDQW0yZ0F3SUJBZ0lVRHZma3Fmb1J3MTN2NzFzWHhINWg2SnJMTDBRd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0ZURVRNQkVHQTFVRUF4TUthM1ZpWlhKdVpYUmxjekFlRncweU1qQTBNREl3TXpJME1EQmFGdzB5TXpBMApNREl3TXpJME1EQmFNR014Q3pBSkJnTlZCQVlUQWtOT01SQXdEZ1lEVlFRSUV3ZENaV2xLYVc1bk1SQXdEZ1lEClZRUUhFd2RDWldsS2FXNW5NUXd3Q2dZRFZRUUtFd05MT0hNeER6QU5CZ05WQkFzVEJsTjVjM1JsYlRFUk1BOEcKQTFVRUF4TUliV0YwY21sNFpHSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDbApNZ2hRWjBKQ0kzSFZ0RFhPMjZlckNFMHFRNnBHQ29DUCszUm5xdmVkVExEeVZycXU0Ym1uMSt5dkNpeVBHdUJCCjRmT3ZDdFlaemVkcm9KN0VZL1hJYkFCbWlkL2xCekRtclI1dU9TRjlBK2tRVUNwMVZLRWRQYldvRkllZyt4MEkKNzU5VGNzL2N1U096ak1zKzlQQmlzUVR6K0FiN042NjZGSUcxN3djL2VrZkhkU3FObzdUWGxZeWgxTlREbTJwbgpvcmppNkVkTFFkcnBOOTYvNmhRWjdFUjhZRVNVZVVTdmFUVWtlMTY1akdJcUZCTWF6SVVGNmgzTGZ5Mk5wQ0drClVKVm00MDEybkVneFBNYnM0bWNDQ3g3K2l6L0xXVHFhSG92ZHFhNHdDVExSL0dnSkpDYnB3MSt4YTBtMzloUWIKL1hDRkdxT1RTaFBseXNlWi9ORjVBZ01CQUFHamZ6QjlNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRQpGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVCml0OGVmRzVuMlFEZ25YQlVCalRHc21takJFSXdId1lEVlIwakJCZ3dGb0FVOGk3ei9UaXM3T0NvcWx4d0V1bVEKdmd0MmUvSXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRzdadUF1Q05hUk00Zm8vOXg1U0RLV3dzRkxpaHJwawpPV1dQV3hhT3JzTnBsdGlYYTQ2OWVSWmpDTzY2UlRpZXozOXEzTEs5SnE3TU9tcnVnb3hxVkdINGdRdjEwUzhsCjZqWURrV0NVMHF3M05FMEdxN3J3TE1aMEVMWFpVdHpxM0JsVldSUTZlamxmUGJxVkNxQk1hOTNES2I2TEFLMUgKKzdKanRrYWk3R2RzNmMrVlZraUFOM0pjTmk2UE90ZTdsTlRxU2Q4YldWVkJKTCt2MzF0RGpSalI2ZGM0aTJlbAoySjdWLzFDLzJLMy84cCs1TTdSVTNwdklDT090SWZpcG9vRUIwRnIxTDdGTXdzQkRob1JoZUU2QXJaMjdCN3FhClh3clVRNWNqU1E0bkhRKzNYUk5rYStZMGRMTG05TTdWa2lPbDlzbHhFd0lMOWpBNldMamtFQ0E9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K</span></span><br><span class="line">    <span class="attr">client-key-data:</span> <span class="string">LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcFRJSVVHZENRaU54MWJRMXp0dW5xd2hOS2tPcVJncUFqL3QwWjZyM25VeXc4bGE2CnJ1RzVwOWZzcndvc2p4cmdRZUh6cndyV0djM25hNkNleEdQMXlHd0Fab25mNVFjdzVxMGViamtoZlFQcEVGQXEKZFZTaEhUMjFxQlNIb1BzZENPK2ZVM0xQM0xranM0ekxQdlR3WXJFRTgvZ0cremV1dWhTQnRlOEhQM3BIeDNVcQpqYU8wMTVXTW9kVFV3NXRxWjZLNDR1aEhTMEhhNlRmZXYrb1VHZXhFZkdCRWxIbEVyMmsxSkh0ZXVZeGlLaFFUCkdzeUZCZW9keTM4dGphUWhwRkNWWnVOTmRweElNVHpHN09KbkFnc2Uvb3MveTFrNm1oNkwzYW11TUFreTBmeG8KQ1NRbTZjTmZzV3RKdC9ZVUcvMXdoUnFqazBvVDVjckhtZnpSZVFJREFRQUJBb0lCQUMxNk9xTzM2WnUvbWtVVQoyWU5iSVN1S200TzVJUlVyS3YxNFlqRnY5YjhPTCtCblUvbDFGdUZJSmxhQjNJYUJCWi9kam5KdjcwVW5WRUJpCjlaSm5XbkNVbXYrZmtVM0J6d3FTT2tCcDVmZytyVmphV1BYNEdHcXVaR1lqVUx0V3BrV2hnaUU5Q0ZCaGY1eWMKZEErZTZ0YWdtUlo0LzZNRlQwclcvbWFScVZNbDY0WmxuU29LbXQ3dUpPVEkvWE9IeXdoZFgzTEJwZE9aTkwxMQpZMElzcHgwWmVZNUxZcy9QaXF5Vy90SkxTam9GY2tHQkpQUmJ4ZUJkcm4vQmNkbnNpbFVCSE43dWlFNDN2Skt3Ci9nUkZwTERSWWpzM3lENmpDZWNtblpta0RRTkpFd0VpMFVKNzlSY2RWOFRIU3dxVmdZVCtWVU5UK2pEb2pqcEsKRXZhamJBRUNnWUVBemhhWUt5NnBsSEluY0hsbXNnQkQvajFNd211eXNjZ2cwRHFlcXFpeUhoVS9XWVFYSDJMNAo0R1htNEU5NU9qNitLRlJlSStZZTMrT0lWdHN5MHgvWTlYZzNycXYvdnJiWGZKaTN4ejQzOU5kYjloVzNlbFpGCkxjWFpQMUtkdFl0aE9hOEdyRXA2OGZ5MFVWa0pzUkgvc3JndlRuN2xKZ1MxSzZvaUdFOEV6RUVDZ1lFQXpUUVkKcnVVdVZGMEVDT0E4MXVhUjBTSUQ1VVJCUFR6OTU1amI0ZFFUdENmcHNka0hKblFTWkE3cHFqUXY5MGh3V01ndQp5bTlFM29xZkZ4WTJYWjIvVG90MHZDbDh3UTJVeStiZ3c0OHJ1VGdpYXRMVmUweVFleUgyZ3FnanI2bnU2aVplCktONTBxQU5ORzAvM1djclJadkhscDZJK1JDS2V5NGZacGRVeGx6a0NnWUVBcktFdWpCV0ZSV3l0N3NBeXJ1NGMKQm01d3l2Y044Mi9SVkx1Vnh4eVNQekxMSXYvTG9xWDBGWHdtZmtUMEpqOENhS1ByUzZUcXZkNUppWUFKdmVJUwppZVJPdUVrcGJDYWFzS3I0WHJTV2lNaVJKcnlnT2FEa1IraFFCNFA3eVdQY2FFWmRqNXJBQzg0RGVaVGMwbTlpClFlR1k5dWJDcWlzTlcyc2pManVhcUVFQ2dZQkpqL0dCVVR0b2x1ZkpYc213cUh1Qm8xWU9MSWZPc2p5N2Q3cnIKbkNGc0pockszT2lKU25jRlU2dEVqdXpiRXlialRQQXBOZlpVYVJGYkwyVlI3aWtVdVQyaDdxV0FkNlB0N05pSwpncHJFRFhHWkpmZk4rY2FadmJVblphdFZYKy84Rk1FUW1aN3NWREtpSmVxZ1QrcjlvcDRYbUR3R0pQc1VMNkZBCnA4cmRVUUtCZ1FDMW8rSDdZeDBPQTdwY1NNVmJtMWVkWnZ5VzNzenBLSjdHUEFVeHFJNGMyaDcrQm0xM2NPcjAKRTl6VmpTQkxYYlJmb0kvazBVa0lKc3gyMmhBWStjZ1dlODVxVkNQejloNzZlM0FzRkl3b2c5aDk1U0loLzdDagpFd1pMRzUxVm0wRlF1NU5UL2xiYWpBSzBJVXRZYTNibXAxRlVNR3ZmaDh5MkxPK2hwTGtYQnc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=</span></span><br></pre></td></tr></table></figure>

<h3 id="配置权限"><a href="#配置权限" class="headerlink" title="配置权限"></a>配置权限</h3><p>可以在matrixdb-test命名空间内有admin的权限,cluster资源需要配置clusterrole去进行绑定，普通资源只需要创建相应的role进行绑定</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl create rolebinding matrixdb-admin-binding --clusterrole=admin --user=matrixdb --namespace=matrixdb-test</span></span><br><span class="line">rolebinding.rbac.authorization.k8s.io/devuser-admin-binding created</span><br></pre></td></tr></table></figure>

<h2 id="验证用户权限"><a href="#验证用户权限" class="headerlink" title="验证用户权限"></a>验证用户权限</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mkdir</span> /home/matrixdb/.kube</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cp</span> matrixdb.kubeconfig /home/matrixdb/.kube/config</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">chown</span> matrixdb.matrixdb -R /home/matrixdb/.kube</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">su matrixdb</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">kubectl config use-context kubernetes --kubeconfig=.kube/config       <span class="comment"># 切换集群</span></span></span><br><span class="line">Switched to context &quot;kubernetes&quot;.</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">kubectl get po -nmatrixdb-test</span></span><br><span class="line">NAME                            READY   STATUS    RESTARTS   AGE</span><br><span class="line">db0-0-0                         1/1     Running   0          2d15h</span><br><span class="line">db0-0-1                         1/1     Running   0          2d15h</span><br><span class="line">db0-1-0                         1/1     Running   0          2d15h</span><br><span class="line">db0-1-1                         1/1     Running   0          2d15h</span><br><span class="line">db0-2-0                         1/1     Running   0          2d15h</span><br><span class="line">db0-2-1                         1/1     Running   0          2d15h</span><br><span class="line">db0-cylinder-6c74497ff6-k9hq8   1/1     Running   0          2d15h</span><br><span class="line">db0-gate-0                      1/1     Running   0          2d15h</span><br><span class="line">db0-ui-7fcd96fdb5-6xvrt         1/1     Running   0          2d15h</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">kubectl get po</span></span><br><span class="line">Error from server (Forbidden): pods is forbidden: User &quot;matrixdb&quot; cannot list resource &quot;pods&quot; in API group &quot;&quot; in the namespace &quot;matrixdb-test,matrixdb-operator,cert-manager&quot;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
  </entry>
  <entry>
    <title>Kubernetes的PV、PVC使用</title>
    <url>/2019/11/01/Kubernetes%E7%9A%84PV%E3%80%81PVC%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>PersistentVolume（PV）</p>
<p>是由管理员设置的存储，它是群集的一部分。就像节点是集群中的资源一样，PV 也是集群中的资源。 PV 是Volume 之类的卷插件，但具有独立于使用 PV 的 Pod 的生命周期。此 API 对象包含存储实现的细节，即 NFS、iSCSI 或特定于云供应商的存储系统</p>
<p>PersistentVolumeClaim（PVC）</p>
<p>是用户存储的请求。它与 Pod 相似。Pod 消耗节点资源，PVC 消耗 PV 资源。Pod 可以请求特定级别的资源（CPU 和内存）。声明可以请求特定的大小和访问模式（例如，可以以读&#x2F;写一次或只读多次模式挂载）</p>
 <span id="more"></span>

<h3 id="PV-生命周期"><a href="#PV-生命周期" class="headerlink" title="PV 生命周期"></a>PV 生命周期</h3><ul>
<li>Binding</li>
</ul>
<p>在动态配置的情况下，用户创建或已经创建了具有特定数量的存储请求和特定访问模式的PersistentVolumeClaim。 主机中的控制回路监视新的PVC，找到匹配的PV（如果可能），并将它们绑定在一起。 如果为新的PVC动态配置PV，则循环将始终将该PV绑定到PVC。 否则，用户总是至少得到他们要求的内容，但是卷可能超出了要求。 一旦绑定，PersistentVolumeClaim绑定是排他的，不管用于绑定它们的模式。</p>
<p>如果匹配的卷不存在，PVC将保持无限期。 随着匹配卷变得可用，PVC将被绑定。 例如，提供许多50Gi PV的集群将不匹配要求100Gi的PVC。 当集群中添加100Gi PV时，可以绑定PVC。</p>
<ul>
<li>Using</li>
</ul>
<p>Pod使用PVC作为卷。 集群检查声明以找到绑定的卷并挂载该卷的卷。 对于支持多种访问模式的卷，用户在将其声明用作pod中的卷时指定所需的模式。</p>
<p>一旦用户有声明并且该声明被绑定，绑定的PV属于用户，只要他们需要它。 用户通过在其Pod的卷块中包含persistentVolumeClaim来安排Pods并访问其声明的PV。</p>
<ul>
<li>Releasing</li>
</ul>
<p>当用户完成卷时，他们可以从允许资源回收的API中删除PVC对象。 当声明被删除时，卷被认为是“释放的”，但是它还不能用于另一个声明。 以前的索赔人的数据仍然保留在必须根据政策处理的卷上.</p>
<ul>
<li>Reclaiming</li>
</ul>
<p>PersistentVolume的回收策略告诉集群在释放其声明后，该卷应该如何处理。 目前，卷可以是保留，回收或删除。 保留可以手动回收资源。 对于那些支持它的卷插件，删除将从Kubernetes中删除PersistentVolume对象，以及删除外部基础架构（如AWS EBS，GCE PD，Azure Disk或Cinder卷）中关联的存储资产。 动态配置的卷始终被删除</p>
<ul>
<li>Recycling</li>
</ul>
<p>如果受适当的卷插件支持，回收将对卷执行基本的擦除（rm -rf &#x2F; thevolume &#x2F; *），并使其再次可用于新的声明。</p>
<h3 id="PV访问模式"><a href="#PV访问模式" class="headerlink" title="PV访问模式"></a>PV访问模式</h3><p>PersistentVolume可以以资源提供者支持的任何方式挂载到主机上。如下表所示，供应商具有不同的功能，每个PV 的访问模式都将被设置为该卷支持的特定模式。例如，NFS 可以支持多个读&#x2F;写客户端，但特定的 NFS PV 可能以只读方式导出到服务器上。每个 PV 都有一套自己的用来描述特定功能的访问模式</p>
<ul>
<li><p>ReadWriteOnce      该卷可以被单个节点以读&#x2F;写模式挂载</p>
</li>
<li><p>ReadOnlyMany       该卷可以被多个节点以只读模式挂载</p>
</li>
<li><p>ReadWriteMany       该卷可以被多个节点以读&#x2F;写模式挂载</p>
</li>
</ul>
<p>在命令行中，访问模式缩写为：</p>
<ul>
<li><p>RWO - ReadWriteOnce</p>
</li>
<li><p>ROX - ReadOnlyMany</p>
</li>
<li><p>RWX - ReadWriteMany</p>
</li>
</ul>
<h3 id="回收策略"><a href="#回收策略" class="headerlink" title="回收策略"></a>回收策略</h3><ul>
<li><p>Retain（保留）  手动回收</p>
</li>
<li><p>Recycle（回收） 基本擦除（rm -rf &#x2F;thevolume&#x2F;*）</p>
</li>
<li><p>Delete（删除）  关联的存储资产（例如 AWS EBS、GCE PD、Azure Disk 和 OpenStack Cinder 卷）将被删除</p>
</li>
</ul>
<p>当前, HostPath 支持回收策略。AWS EBS、GCE PD、Azure Disk 和 Cinder 卷支持删除策略</p>
<h3 id="卷状态"><a href="#卷状态" class="headerlink" title="卷状态"></a>卷状态</h3><p>卷可以处于以下的某种状态：</p>
<ul>
<li><p>Available（可用）  一块空闲资源还没有被任何声明绑定</p>
</li>
<li><p>Bound（已绑定）    卷已经被声明绑定</p>
</li>
<li><p>Released（已释放） 声明被删除，但是资源还未被集群重新声明</p>
</li>
<li><p>Failed（失败）     该卷的自动回收失败</p>
</li>
</ul>
<h2 id="tomcat-demo项目"><a href="#tomcat-demo项目" class="headerlink" title="tomcat-demo项目"></a>tomcat-demo项目</h2><p>链接：<a href="https://pan.baidu.com/s/1ogvYrZUpu4LEpuEeyrW2MQ">https://pan.baidu.com/s/1ogvYrZUpu4LEpuEeyrW2MQ</a>提取码：s1ue</p>
<h3 id="NFS类型"><a href="#NFS类型" class="headerlink" title="NFS类型"></a>NFS类型</h3><h4 id="创建PV"><a href="#创建PV" class="headerlink" title="创建PV"></a>创建PV</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim nfs_pv.yml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolume</span><br><span class="line">metadata:</span><br><span class="line">  name: tomcat-mysql</span><br><span class="line">  labels:</span><br><span class="line">    type: nfs</span><br><span class="line">spec:</span><br><span class="line">  capacity:</span><br><span class="line">    storage: 5Gi      # 挂载空间大小</span><br><span class="line">  accessModes:</span><br><span class="line">    - ReadWriteMany   # 读写权限</span><br><span class="line">  persistentVolumeReclaimPolicy: Recycle  # Pod删除就会回收</span><br><span class="line">  nfs:</span><br><span class="line">    path: &quot;/docker&quot;         # nfs共享目录</span><br><span class="line">    server: 192.168.9.20    # nfs服务端</span><br><span class="line">    readOnly: false         # 不只读</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl apply -f nfs_pv.yml</span></span><br><span class="line">persistentvolume/tomcat-mysql created</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get pv</span></span><br><span class="line">NAME           CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS      CLAIM                        STORAGECLASS   REASON   AGE</span><br><span class="line">tomcat-mysql   5Gi        RWX            Recycle          Available                                                        6s</span><br></pre></td></tr></table></figure>

<h4 id="创建PVC"><a href="#创建PVC" class="headerlink" title="创建PVC"></a>创建PVC</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl create ns tomcat</span></span><br><span class="line">namespace/tomcat created</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim nfs_pvc.yml</span></span><br><span class="line">kind: PersistentVolumeClaim</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  name: tomcat-mysql</span><br><span class="line">  namespace: tomcat</span><br><span class="line">spec:</span><br><span class="line">  accessModes:</span><br><span class="line">    - ReadWriteMany</span><br><span class="line">  resources:</span><br><span class="line">    requests:</span><br><span class="line">      storage: 5Gi</span><br><span class="line">  selector:</span><br><span class="line">     matchLabels:</span><br><span class="line">       type: nfs</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl apply -f nfs_pvc.yml</span></span><br><span class="line">persistentvolumeclaim/tomcat-mysql created</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get pvc -n tomcat</span></span><br><span class="line">NAME           STATUS   VOLUME         CAPACITY   ACCESS MODES   STORAGECLASS   AGE</span><br><span class="line">tomcat-mysql   Bound    tomcat-mysql   5Gi        RWX                           6s</span><br></pre></td></tr></table></figure>

<h4 id="PVC使用"><a href="#PVC使用" class="headerlink" title="PVC使用"></a>PVC使用</h4><h5 id="创建Mysql-Pod"><a href="#创建Mysql-Pod" class="headerlink" title="创建Mysql Pod"></a>创建Mysql Pod</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim mysql.yml</span></span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  namespace: tomcat</span><br><span class="line">  name: mysql</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: mysql</span><br><span class="line">    spec:</span><br><span class="line">      volumes:</span><br><span class="line">      - name: mysql</span><br><span class="line">        persistentVolumeClaim:      # 引用PVC</span><br><span class="line">          claimName: tomcat-mysql   # PVC名称</span><br><span class="line">      containers:</span><br><span class="line">        - name: mysql</span><br><span class="line">          image: harbor.ui.com/library/mysql:5.7</span><br><span class="line">          imagePullPolicy: IfNotPresent</span><br><span class="line">          ports:</span><br><span class="line">          - containerPort: 3306</span><br><span class="line">          volumeMounts:</span><br><span class="line">          - mountPath: /var/lib/mysql  # 挂载mysql数据目录</span><br><span class="line">            name: mysql</span><br><span class="line">          env:</span><br><span class="line">          - name: MYSQL_ROOT_PASSWORD</span><br><span class="line">            value: &#x27;123456&#x27;</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: mysql</span><br><span class="line">  namespace: tomcat</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">    - port: 3306</span><br><span class="line">      targetPort: 3306</span><br><span class="line">  selector:</span><br><span class="line">    app: mysql</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl apply -f mysql.yml</span></span><br><span class="line">deployment.extensions/mysql unchanged</span><br><span class="line">service/mysql created</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get pod -n tomcat</span></span><br><span class="line">NAME                     READY   STATUS    RESTARTS   AGE</span><br><span class="line">mysql-76867cccbf-mlnpr   1/1     Running   6          7m26s</span><br></pre></td></tr></table></figure>

<h5 id="创建Tomcat-app-Pod"><a href="#创建Tomcat-app-Pod" class="headerlink" title="创建Tomcat-app Pod"></a>创建Tomcat-app Pod</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim tomcat.yml</span></span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: myweb</span><br><span class="line">  namespace: tomcat</span><br><span class="line">spec:</span><br><span class="line">  replicas: 3</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: myweb</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">        - name: myweb</span><br><span class="line">          image: harbor.ui.com/library/tomcat-app:v2</span><br><span class="line">          imagePullPolicy: IfNotPresent</span><br><span class="line">          ports:</span><br><span class="line">          - containerPort: 8080</span><br><span class="line">          env:</span><br><span class="line">          - name: MYSQL_SERVICE_HOST</span><br><span class="line">            value: &#x27;mysql&#x27;</span><br><span class="line">          - name: MYSQL_SERVICE_PORT</span><br><span class="line">            value: &#x27;3306&#x27;</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: myweb</span><br><span class="line">  namespace: tomcat</span><br><span class="line">spec:</span><br><span class="line">  type: NodePort</span><br><span class="line">  ports:</span><br><span class="line">    - port: 8080</span><br><span class="line">      nodePort: 30008</span><br><span class="line">  selector:</span><br><span class="line">    app: myweb</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl apply -f tomcat.yml</span></span><br><span class="line">deployment.extensions/myweb unchanged</span><br><span class="line">service/myweb created</span><br><span class="line">查看状态</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get pod -n tomcat</span></span><br><span class="line">NAME                     READY   STATUS    RESTARTS   AGE</span><br><span class="line">mysql-76867cccbf-mlnpr   1/1     Running   6          16m</span><br><span class="line">myweb-5498f5f498-449ks   1/1     Running   0          3m10s</span><br><span class="line">myweb-5498f5f498-dmzgv   1/1     Running   0          3m10s</span><br><span class="line">myweb-5498f5f498-f2jn6   1/1     Running   0          3m10s</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get svc -n tomcat</span></span><br><span class="line">NAME    TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)          AGE</span><br><span class="line">mysql   ClusterIP   10.100.4.65      &lt;none&gt;        3306/TCP         10m</span><br><span class="line">myweb   NodePort    10.110.218.116   &lt;none&gt;        8080:30008/TCP   2m44s</span><br></pre></td></tr></table></figure>

<p><img src="/image/1572590902-Image.png"></p>
<h3 id="Glusterfs类型"><a href="#Glusterfs类型" class="headerlink" title="Glusterfs类型"></a>Glusterfs类型</h3><h4 id="创建endpoint"><a href="#创建endpoint" class="headerlink" title="创建endpoint"></a>创建endpoint</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"> vim glusterfs.yaml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: glusterfs</span><br><span class="line">  namespace: tomcat</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">  - port: 49152</span><br><span class="line">    protocol: TCP</span><br><span class="line">    targetPort: 49152</span><br><span class="line">  sessionAffinity: None</span><br><span class="line">  type: ClusterIP</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Endpoints</span><br><span class="line">metadata:</span><br><span class="line">  name: glusterfs</span><br><span class="line">  namespace: tomcat</span><br><span class="line">subsets:</span><br><span class="line">- addresses:</span><br><span class="line">  - ip: 192.168.9.20</span><br><span class="line">  - ip: 192.168.9.21</span><br><span class="line">  - ip: 192.168.9.22</span><br><span class="line">  - ip: 192.168.9.23</span><br><span class="line">  ports:</span><br><span class="line">  - port: 49152</span><br><span class="line">    protocol: TCP</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl apply -f glusterfs.yaml</span></span><br><span class="line">service/glusterfs created</span><br><span class="line">endpoints/glusterfs created</span><br></pre></td></tr></table></figure>

<h4 id="创建pv"><a href="#创建pv" class="headerlink" title="创建pv"></a>创建pv</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim glusterfs-pv.yml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolume</span><br><span class="line">metadata:</span><br><span class="line">  name: glusterfs</span><br><span class="line">  labels:</span><br><span class="line">    type: glusterfs</span><br><span class="line">spec:</span><br><span class="line">  capacity:</span><br><span class="line">    storage: 50Gi</span><br><span class="line">  accessModes:</span><br><span class="line">    - ReadWriteMany</span><br><span class="line">  glusterfs:</span><br><span class="line">    endpoints: &quot;glusterfs&quot;  </span><br><span class="line">    path: &quot;tomcat-data&quot;</span><br><span class="line">    readOnly: false</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl apply -f glusterfs-pv.yml</span></span><br><span class="line">persistentvolume/glusterfs created</span><br><span class="line">[root@matser tomcat]# kubectl get pv glusterfs</span><br><span class="line">NAME        CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS      CLAIM   STORAGECLASS   REASON   AGE</span><br><span class="line">glusterfs   50Gi       RWX            Retain           Available                                   10s</span><br></pre></td></tr></table></figure>

<h4 id="创建pvc"><a href="#创建pvc" class="headerlink" title="创建pvc"></a>创建pvc</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim glusterfs_pvc.yml</span></span><br><span class="line">kind: PersistentVolumeClaim</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  name: tomcat.mysql</span><br><span class="line">  namespace: tomcat</span><br><span class="line">spec:</span><br><span class="line">  accessModes:</span><br><span class="line">    - ReadWriteMany</span><br><span class="line">  resources:</span><br><span class="line">    requests:</span><br><span class="line">      storage: 10Gi</span><br><span class="line">  selector:</span><br><span class="line">     matchLabels:</span><br><span class="line">       type: glusterfs</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl apply -f glusterfs-pvc.yml</span></span><br><span class="line">persistentvolumeclaim/tomcat.mysql created</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get pvc -n tomcat</span></span><br><span class="line">NAME           STATUS   VOLUME         CAPACITY   ACCESS MODES   STORAGECLASS   AGE</span><br><span class="line">tomcat-mysql   Bound    tomcat-mysql   5Gi        RWX                           3h50m</span><br><span class="line">tomcat.mysql   Bound    glusterfs      50Gi       RWX                           19s</span><br></pre></td></tr></table></figure>

<h4 id="更新mysql-yml"><a href="#更新mysql-yml" class="headerlink" title="更新mysql.yml"></a>更新mysql.yml</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">tomcat</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">mysql</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">mysql</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">mysql</span></span><br><span class="line">        <span class="attr">persistentVolumeClaim:</span></span><br><span class="line">          <span class="attr">claimName:</span> <span class="string">tomcat.mysql</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">mysql</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">harbor.ui.com/library/mysql:5.7</span></span><br><span class="line">          <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">3306</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/var/lib/mysql</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">mysql</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MYSQL_ROOT_PASSWORD</span></span><br><span class="line">            <span class="attr">value:</span> <span class="string">&#x27;123456&#x27;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
  </entry>
  <entry>
    <title>kubernetes实现jenkins slave动态伸缩</title>
    <url>/2021/04/23/Kubernetes%E6%90%AD%E5%BB%BAjenkins%E9%9B%86%E7%BE%A4/</url>
    <content><![CDATA[<h1 id="kubernetes实现jenkins-slave动态伸缩"><a href="#kubernetes实现jenkins-slave动态伸缩" class="headerlink" title="kubernetes实现jenkins slave动态伸缩"></a>kubernetes实现jenkins slave动态伸缩</h1><ul>
<li>在Kubernetes中使用Jenkins的优点：</li>
</ul>
<ol>
<li>Master服务高可用：当Jenkins Master出现故障时，Kubernetes 会自动创建一个新的Jenkins Master容器，并且将Volume分配给新创建的容器，保证数据不丢失，从而达到集群服务高可用。</li>
<li>Slave动态伸缩：合理使用资源，每次运行Job时，会自动创建一个Jenkins Slave，Job完成后，Slave自动注销并删除容器，资源自动释放，而且Kubernetes会根据每个资源使用情况，动态分配Slave到空闲的节点上创建，降低出现因某节点资源利用率高，还排队等待在该节点的情况。</li>
<li>扩展性好：当Kubernetes集群的资源严重不足而导致Job排队等待时，可以很容易的添加一个Kubernetes Node到集群中，从而实现扩展。</li>
</ol>
<ul>
<li>Kubernetes搭建jenkins集群</li>
</ul>
<p><img src="https://www.wqblogs.com:4443/image/jenkins-slave/k8s-jenkins.png"></p>
<p>当Jenkins Master 接收到Build请求时，会根据配置的Label动态创建一个运行在Pod中的Jenkins Slave并注册到Master上，当运行完Job后，这个Slave会被注销并且这个Pod也会自动删除，恢复到最初状态</p>
<h2 id="部署-jenkins"><a href="#部署-jenkins" class="headerlink" title="部署 jenkins"></a>部署 jenkins</h2><h3 id="部署思路"><a href="#部署思路" class="headerlink" title="部署思路"></a>部署思路</h3><ol>
<li>在jenkins-master里使用Kubernetes plugin创建进行slave的动态伸缩</li>
<li>使用nfs存储做为挂载jenkins-master的jenkins_home目录，构建时slave的maven缓存的m2目录，保留slave每次构建产生的数据（workspace目录中的每个job）</li>
</ol>
<h3 id="所需镜像"><a href="#所需镜像" class="headerlink" title="所需镜像"></a>所需镜像</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">jenkins:2.276</span><br><span class="line">jenkins/inbound-agent:4.3-4</span><br><span class="line">tomcat:8.5.64-jdk8</span><br><span class="line">docker:20.10.6</span><br><span class="line">maven:3.6-jdk-8</span><br><span class="line">bitnami/kubectl:1.18.18</span><br></pre></td></tr></table></figure>

<h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><p>部署方式可以使用<a href="https://github.com/jenkinsci/kubernetes-plugin/tree/master/src/main/kubernetes">Kubernetes plugin官网</a> 提供的部署yaml，咱们使用自定义的deployment</p>
<div class="tabs" id="treafik"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#treafik-1">RBAC</button></li><li class="tab"><button type="button" data-href="#treafik-2">Deployment</button></li><li class="tab"><button type="button" data-href="#treafik-3">SVC</button></li><li class="tab"><button type="button" data-href="#treafik-4">PVC</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="treafik-1"><p>service-account.yml 此文件用于创建k8s的rbac，授权给后面的Jenkins应用可以创建和删除slave的pod</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">jenkins</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">demo</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">jenkins</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;extensions&quot;</span>, <span class="string">&quot;apps&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;deployments&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;create&quot;</span>, <span class="string">&quot;delete&quot;</span>, <span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>, <span class="string">&quot;patch&quot;</span>, <span class="string">&quot;update&quot;</span>]</span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;services&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;create&quot;</span>, <span class="string">&quot;delete&quot;</span>, <span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>, <span class="string">&quot;patch&quot;</span>, <span class="string">&quot;update&quot;</span>]</span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;pods&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;create&quot;</span>,<span class="string">&quot;delete&quot;</span>,<span class="string">&quot;get&quot;</span>,<span class="string">&quot;list&quot;</span>,<span class="string">&quot;patch&quot;</span>,<span class="string">&quot;update&quot;</span>,<span class="string">&quot;watch&quot;</span>]</span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;pods/exec&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;create&quot;</span>,<span class="string">&quot;delete&quot;</span>,<span class="string">&quot;get&quot;</span>,<span class="string">&quot;list&quot;</span>,<span class="string">&quot;patch&quot;</span>,<span class="string">&quot;update&quot;</span>,<span class="string">&quot;watch&quot;</span>]</span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;pods/log&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>,<span class="string">&quot;list&quot;</span>,<span class="string">&quot;watch&quot;</span>]</span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;secrets&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>]</span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">jenkins</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">jenkins</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">jenkins</span></span><br><span class="line">    <span class="attr">namespace:</span> <span class="string">demo</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="treafik-2"><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">jenkins</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">demo</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">jenkins</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">jenkins</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">jenkins</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">jenkins</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">serviceAccount:</span> <span class="string">jenkins</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">data</span></span><br><span class="line">          <span class="attr">persistentVolumeClaim:</span></span><br><span class="line">            <span class="attr">claimName:</span> <span class="string">jenkins-home</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">jenkins</span></span><br><span class="line">        <span class="attr">image:</span> <span class="number">10.166</span><span class="number">.33</span><span class="number">.110</span><span class="string">/infra/jenkins:v2.276</span>   <span class="comment"># 官方镜像为jenkins为jenkins:v2.276，为了节省下载时间已经push到自己到harbor仓库</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">Always</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8080</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">web</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">50000</span>              <span class="comment"># agent连接端口</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">agent</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">        <span class="attr">resources:</span></span><br><span class="line">          <span class="attr">limits:</span></span><br><span class="line">            <span class="attr">cpu:</span> <span class="string">2048m</span></span><br><span class="line">            <span class="attr">memory:</span> <span class="string">4096Mi</span></span><br><span class="line">          <span class="attr">requests:</span></span><br><span class="line">            <span class="attr">cpu:</span> <span class="string">512m</span></span><br><span class="line">            <span class="attr">memory:</span> <span class="string">1024Mi</span></span><br><span class="line">        <span class="attr">livenessProbe:</span></span><br><span class="line">          <span class="attr">httpGet:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/login</span></span><br><span class="line">            <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">60</span></span><br><span class="line">          <span class="attr">timeoutSeconds:</span> <span class="number">5</span></span><br><span class="line">          <span class="attr">failureThreshold:</span> <span class="number">5</span></span><br><span class="line">        <span class="attr">readinessProbe:</span></span><br><span class="line">          <span class="attr">httpGet:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/login</span></span><br><span class="line">            <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">60</span></span><br><span class="line">          <span class="attr">timeoutSeconds:</span> <span class="number">5</span></span><br><span class="line">          <span class="attr">failureThreshold:</span> <span class="number">5</span>          </span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">JAVA_OPTS</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">&quot;-Xms2G -Xmx2G -Duser.timezone=Asia/Shanghai&quot;</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">TRY_UPGRADE_IF_NO_MARKER</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">data</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/var/jenkins_home</span>          </span><br><span class="line">      <span class="attr">securityContext:</span>             <span class="comment"># root权限</span></span><br><span class="line">        <span class="attr">runAsUser:</span> <span class="number">0</span></span><br><span class="line">      <span class="attr">imagePullSecrets:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">harbor</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="treafik-3"><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">jenkins</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">demo</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">web</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">8080</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">agent</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">50000</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">50000</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">jenkins</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span>    </span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="treafik-4"><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolumeClaim</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">jenkins-home</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">demo</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">accessModes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ReadWriteMany</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">    <span class="attr">requests:</span></span><br><span class="line">      <span class="attr">storage:</span> <span class="string">1Gi</span></span><br><span class="line">  <span class="attr">storageClassName:</span> <span class="string">nfs</span></span><br><span class="line">  <span class="attr">volumeMode:</span> <span class="string">Filesystem</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolumeClaim</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">jenkins-agent</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">demo</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">accessModes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ReadWriteMany</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">    <span class="attr">requests:</span></span><br><span class="line">      <span class="attr">storage:</span> <span class="string">1Gi</span></span><br><span class="line">  <span class="attr">storageClassName:</span> <span class="string">nfs</span></span><br><span class="line">  <span class="attr">volumeMode:</span> <span class="string">Filesystem</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolumeClaim</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">jenkins-m2</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">demo</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">accessModes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ReadWriteMany</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">    <span class="attr">requests:</span></span><br><span class="line">      <span class="attr">storage:</span> <span class="string">1Gi</span></span><br><span class="line">  <span class="attr">storageClassName:</span> <span class="string">nfs</span></span><br><span class="line">  <span class="attr">volumeMode:</span> <span class="string">Filesystem</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>

<p>查看创建状态</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get po -ndemo -l app=jenkins</span></span><br><span class="line">NAME                       READY   STATUS    RESTARTS   AGE</span><br><span class="line">jenkins-7d96c568cf-trvfs   1/1     Running   0          24h</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get pvc -ndemo |grep jenkins</span></span><br><span class="line">jenkins-agent   Bound    pvc-1168ca97-4765-492b-a1ac-6c98d4c2df60   1Gi        RWX            nfs            25m</span><br><span class="line">jenkins-home    Bound    pvc-d7fdfcde-da3c-44dd-b882-5f49b7ee5a9b   1Gi        RWX            nfs            2d5h</span><br><span class="line">jenkins-m2      Bound    pvc-3c9d2f99-e239-45f1-942a-6874058c2b68   1Gi        RWX            nfs            29h</span><br></pre></td></tr></table></figure>

<p>查看jenkins密码</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl <span class="built_in">exec</span> -it jenkins-7d96c568cf-trvfs -n demo -- <span class="built_in">cat</span> /var/jenkins_home/secrets/initialAdminPassword</span></span><br></pre></td></tr></table></figure>

<h2 id="jenkins-配置"><a href="#jenkins-配置" class="headerlink" title="jenkins 配置"></a>jenkins 配置</h2><h3 id="插件配置"><a href="#插件配置" class="headerlink" title="插件配置"></a>插件配置</h3><p>更换插件源</p>
<p>系统管理&#x3D;&gt; 插件管理&#x3D;&gt; 高级 &#x3D;&gt; <a href="https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json">https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json</a> #清华源<br>安装插件</p>
<ul>
<li>选择系统管理 &#x3D;&gt; 插件管理 &#x3D;&gt; 可选插件 &#x3D;&gt; Blue Ocean</li>
<li>选择系统管理 &#x3D;&gt; 插件管理 &#x3D;&gt; 可选插件 &#x3D;&gt; Kubernetes</li>
</ul>
<h3 id="Cloud配置"><a href="#Cloud配置" class="headerlink" title="Cloud配置"></a>Cloud配置</h3><ul>
<li>后端master节点生成证书</li>
</ul>
<p>打开~&#x2F;.kube&#x2F;config文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">复制certificate-authority-data的内容，运行以下命令生成client.crt</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">echo</span> <span class="string">&quot;&lt;certificate-authority-data&gt;&quot;</span> | <span class="built_in">base64</span> -d &gt; ca.crt</span></span><br><span class="line">复制client-certificate-data的内容，运行以下命令生成client.crt</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">echo</span> <span class="string">&quot;&lt;client-certificate-data&gt;&quot;</span> | <span class="built_in">base64</span> -d &gt; client.crt</span></span><br><span class="line">复制client-key-data的内容，运行以下命令生成client.key</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">echo</span> <span class="string">&quot;&lt;client-key-data&gt;&quot;</span> | <span class="built_in">base64</span> -d &gt; client.key</span></span><br><span class="line"></span><br><span class="line">再根据前面步骤生成的ca.crt, client.crt和client.key来生成PKCS12格式的cert.pfx</span><br><span class="line">以下命令运行时，需要输入4位以上的密码</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">openssl pkcs12 -<span class="built_in">export</span> -out cert.pfx -inkey client.key -<span class="keyword">in</span> client.crt -certfile ca.crt</span></span><br><span class="line">Enter Export Password:</span><br><span class="line">Verifying - Enter Export Password:</span><br></pre></td></tr></table></figure>

<ul>
<li>jenkins创建证书凭证</li>
</ul>
<p>选择 Certificate 类型  添加证书</p>
<p><img src="/image/jenkins-slave/jenkins-k8s-crt.png"></p>
<ul>
<li>配置Kubernetes集群</li>
</ul>
<p>系统配置拉到最后会看见一个Cloud</p>
<p><img src="/image/jenkins-slave/cloud-k8s.png"></p>
<p>配置jenkins地址</p>
<p><img src="/image/jenkins-slave/cloud-jenkins.png"></p>
<h3 id="gitlab配置公钥"><a href="#gitlab配置公钥" class="headerlink" title="gitlab配置公钥"></a>gitlab配置公钥</h3><p>代码仓库：代码仓库：<a href="https://github.com/wq-h/demo-2048.git">https://github.com/wq-h/demo-2048.git</a></p>
<ul>
<li>创建密钥</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ssh-keygen -t rsa -b 2048 -C <span class="string">&quot;weiqun_h@163.com&quot;</span> -N <span class="string">&quot;&quot;</span> -f /root/.ssh/id_rsa</span></span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Your identification has been saved in /root/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved in /root/.ssh/id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:lo1dX2Kj+5Z8n7LiICLc9yYJdkhlY9W2YpNsTn/pmrI weiqun_h@163.com</span><br><span class="line">The key&#x27;s randomart image is:</span><br><span class="line">+---[RSA 2048]----+</span><br><span class="line">|        ...      |</span><br><span class="line">|       =   o     |</span><br><span class="line">|      + o o o + .|</span><br><span class="line">|     .   &amp; o + + |</span><br><span class="line">|    . . S * . o  |</span><br><span class="line">|  . .+ o . . +   |</span><br><span class="line">|   o.ooo..  +. . |</span><br><span class="line">|    . oooo...++ o|</span><br><span class="line">|        oE++oo+oo|</span><br><span class="line">+----[SHA256]-----+</span><br></pre></td></tr></table></figure>
<ul>
<li>gitlab配置公钥</li>
</ul>
<p><img src="/image/gitlab_key.png"></p>
<ul>
<li>jenkins 创建凭据</li>
</ul>
<p>选择ssh username with private key类型  添加私钥<br><img src="/image/jenkins_key.png"></p>
<h2 id="jenkins动态slave测试"><a href="#jenkins动态slave测试" class="headerlink" title="jenkins动态slave测试"></a>jenkins动态slave测试</h2><p>pipeline文件</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">def</span> <span class="string">label</span> <span class="string">=</span> <span class="string">&quot;jenkins-slave-$&#123;UUID.randomUUID().toString()&#125;&quot;</span> <span class="string">//</span></span><br><span class="line"><span class="string">podTemplate(label:</span> <span class="string">label,</span> <span class="attr">cloud:</span> <span class="string">&#x27;kubernetes&#x27;</span><span class="string">)</span> &#123;</span><br><span class="line">    <span class="string">node(label)</span> &#123;</span><br><span class="line">        <span class="string">stage(&#x27;Run</span> <span class="string">shell&#x27;)</span> &#123;</span><br><span class="line">            <span class="string">sh</span> <span class="string">&#x27;sleep 10s&#x27;</span></span><br><span class="line">            <span class="string">sh</span> <span class="string">&#x27;echo hello world.&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="/image/jenkins-slave/slave-test-pipeline.png"></p>
<h2 id="配置java流水线"><a href="#配置java流水线" class="headerlink" title="配置java流水线"></a>配置java流水线</h2><h3 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h3><ul>
<li>.docker&#x2F;config.json</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker login -u &lt;用户名&gt; -p &lt;密码&gt; 10.166.33.110</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl create secret generic jenkins-docker-cfg -n demo --from-file=/root/.docker/config.json</span></span><br><span class="line">secret/jenkins-docker-cfg created</span><br></pre></td></tr></table></figure>

<ul>
<li>.kube&#x2F;config</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl create secret generic jenkins-k8s-cfg -n demo --from-file=/root/.kube/config</span></span><br><span class="line">secret/jenkins-k8s-cfg created</span><br></pre></td></tr></table></figure>

<h3 id="jenkins配置模板"><a href="#jenkins配置模板" class="headerlink" title="jenkins配置模板"></a>jenkins配置模板</h3><p><a href="https://plugins.jenkins.io/kubernetes/">Kubernetes Plugin</a></p>
<ul>
<li>配置pod模板</li>
</ul>
<p>系统配置 &#x3D;&gt; Cloud &#x3D;&gt; Pod Templates</p>
<p><img src="/image/jenkins-slave/cloud-pod-templates.png"></p>
<ul>
<li>配置容器模板</li>
</ul>
<p>jnlp agent镜像</p>
<p><img src="/image/jenkins-slave/jnlp.template.png"></p>
<p>maven镜像</p>
<p><img src="/image/jenkins-slave/maven-template.png"></p>
<p>docker镜像</p>
<p><img src="/image/jenkins-slave/docker-template.png"></p>
<p>kubectl镜像</p>
<p><img src="/image/jenkins-slave/kubetcl-template.png"></p>
<ul>
<li>配置存储卷</li>
</ul>
<p>本地文件挂载</p>
<p><img src="/image/jenkins-slave/pod-hostvolume.png"></p>
<p>pvc挂载</p>
<p><img src="/image/jenkins-slave/pod-pvcvolume.png"></p>
<p>secret挂载</p>
<p><img src="/image/jenkins-slave/pod-secretvolume.png"></p>
<h3 id="创建jenkins项目"><a href="#创建jenkins项目" class="headerlink" title="创建jenkins项目"></a>创建jenkins项目</h3><ul>
<li>创建pipeline项目</li>
</ul>
<p><img src="/image/jenkins-slave/jenkins-pipeline.png"></p>
<ul>
<li>参数化构建工程，选择字符参数</li>
</ul>
<p>名称:   APP_NAME<br>默认值: demo-2048<br>描述:   项目名称，用于创建deployment名称，例如demo-2048</p>
<p>名称:   APP_NS<br>默认值: demo<br>描述:   namespace名称，deployment资源创建指定的ns</p>
<p>名称:   GIT_VER<br>默认值: master<br>描述:   项目所在git中央仓库对应项目的分支或者版本号，例如master分支：master，commit ID：b8028aae</p>
<p>名称:   GIT_REPO<br>默认值: ssh:&#x2F;&#x2F;<a href="mailto:&#103;&#105;&#116;&#x40;&#x31;&#x30;&#46;&#49;&#54;&#54;&#46;&#51;&#51;&#x2e;&#49;&#49;&#x36;">&#103;&#105;&#116;&#x40;&#x31;&#x30;&#46;&#49;&#54;&#54;&#46;&#51;&#51;&#x2e;&#49;&#49;&#x36;</a>:19922&#x2F;root&#x2F;demo-2048.git<br>描述:   项目所在的git中央仓库的地址</p>
<p>名称:   MVN_DIR<br>默认值: .&#x2F;<br>描述:   编译项目目录，默认为项目的根目录</p>
<p>名称:   MVN_CMD<br>默认值: mvn clean package -Dmaven.test.skip&#x3D;true<br>描述:   执行mvn编译所用的命令</p>
<p>名称:   IMAGE_NAME<br>默认值: demo&#x2F;demo-2048<br>描述:   docker镜像名称，格式：&lt;仓库名&gt;&#x2F;&lt;镜像名&gt; 例如：demo&#x2F;demo-2048</p>
<p>名称:   IMAGE_REPO<br>默认值: 10.166.33.110<br>描述:   docker镜像仓库名称</p>
<p><img src="/image/jenkins-slave/jenkins-parameter.png"></p>
<h3 id="pipeline文件"><a href="#pipeline文件" class="headerlink" title="pipeline文件"></a>pipeline文件</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">//</span> <span class="string">流水线的最外层结构，代表整条pipeline，包含着pipeline完整逻辑</span></span><br><span class="line"><span class="string">pipeline</span> &#123;</span><br><span class="line">  <span class="string">//</span> <span class="string">环境变量的定义</span></span><br><span class="line">  <span class="string">environment</span> &#123;</span><br><span class="line">   <span class="string">IMAGE=&quot;$</span>&#123;<span class="string">params.IMAGE_REPO</span>&#125;<span class="string">/$</span>&#123;<span class="string">params.IMAGE_NAME</span>&#125;<span class="string">:$</span>&#123;<span class="string">params.GIT_VER</span>&#125;<span class="string">-$</span>&#123;<span class="string">BUILD_NUMBER</span>&#125;<span class="string">&quot;  // 通过 $&#123;params.xxx&#125; 的方式对此参数进行引用</span></span><br><span class="line"><span class="string">   APP_NS=&quot;</span><span class="string">$</span>&#123;<span class="string">params.APP_NS</span>&#125;<span class="string">&quot;</span></span><br><span class="line"><span class="string">   APP_NAME=&quot;</span><span class="string">$</span>&#123;<span class="string">params.APP_NAME</span>&#125;<span class="string">&quot;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  // pipeline中单独指令，用于指定流水的执行位置，它可能是代表着slave主机的某个物理机、虚拟机或者容器</span></span><br><span class="line"><span class="string">  agent &#123;</span></span><br><span class="line"><span class="string">    node &#123;</span></span><br><span class="line"><span class="string">	  // label设置为cloud配置的pod 模板所定义的标签</span></span><br><span class="line"><span class="string">      label &#x27;jenkins-mvn&#x27;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  // 用于包含所有的stage的定义</span></span><br><span class="line"><span class="string">  stages &#123;</span></span><br><span class="line"><span class="string">    // 阶段，代表流水线的一个单独的功能完成时期，例如编译等</span></span><br><span class="line"><span class="string">    stage(&#x27;检出代码&#x27;) &#123;</span></span><br><span class="line"><span class="string">	  // 步骤，用于在stage中定义完成该阶段功能所需经历的一系列步骤</span></span><br><span class="line"><span class="string">      steps &#123;</span></span><br><span class="line"><span class="string">        // 递归删除WORKSPACE下的文件和文件夹,避免缓存导致构建问题</span></span><br><span class="line"><span class="string">        deleteDir()</span></span><br><span class="line"><span class="string">		// credentialsId为ssh 凭据的id</span></span><br><span class="line"><span class="string">        checkout([$class: &#x27;GitSCM&#x27;, branches: [[name: &quot;</span><span class="string">$</span>&#123;<span class="string">params.GIT_VER</span>&#125;<span class="string">&quot;]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: &quot;</span><span class="string">gitlabauth&quot;</span>, <span class="attr">url:</span> <span class="string">&quot;$&#123;params.GIT_REPO&#125;&quot;</span>]]]<span class="string">)</span>	</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="string">stage(&#x27;构建代码&#x27;)</span> &#123;</span><br><span class="line">      <span class="string">steps</span>&#123;</span><br><span class="line">          <span class="string">//</span> <span class="string">用于创建容器的容器模板</span></span><br><span class="line">    	  <span class="string">container(&#x27;maven&#x27;)</span> &#123;</span><br><span class="line">          <span class="string">sh</span> <span class="string">&quot;cd $&#123;params.MVN_DIR&#125; &amp;&amp; $&#123;params.MVN_CMD&#125;&quot;</span></span><br><span class="line">		  <span class="string">sh</span> <span class="string">&quot;cd target &amp;&amp; jar -xf $&#123;params.APP_NAME&#125;.war&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">	  <span class="string">//</span> <span class="string">post定义将在pipeline运行或stage结束时运行的操作</span></span><br><span class="line">      <span class="string">post</span> &#123;</span><br><span class="line">        <span class="string">//</span> <span class="string">成功之后提取制品</span></span><br><span class="line">        <span class="string">success</span> &#123;</span><br><span class="line">          <span class="string">archiveArtifacts</span> <span class="string">&quot;target/*.war&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="string">stage(&#x27;构建镜像&#x27;)</span> &#123;</span><br><span class="line">      <span class="string">steps</span> &#123;</span><br><span class="line">	    <span class="string">container(&#x27;docker&#x27;)</span> &#123;</span><br><span class="line">		  <span class="string">sh</span> <span class="string">&quot;cp ./Dockerfiles/Dockerfile ./target&quot;</span></span><br><span class="line">          <span class="string">sh</span> <span class="string">&quot;cd ./target &amp;&amp; docker build -t $&#123;params.IMAGE_REPO&#125;/$&#123;params.IMAGE_NAME&#125;:$&#123;params.GIT_VER&#125;-$&#123;BUILD_NUMBER&#125; .&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">	  &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="string">stage(&#x27;推送镜像&#x27;)</span> &#123;</span><br><span class="line">      <span class="string">steps</span> &#123;</span><br><span class="line">	    <span class="string">container(&#x27;docker&#x27;)</span> &#123;</span><br><span class="line">          <span class="string">sh</span> <span class="string">&quot;docker push $&#123;params.IMAGE_REPO&#125;/$&#123;params.IMAGE_NAME&#125;:$&#123;params.GIT_VER&#125;-$&#123;BUILD_NUMBER&#125;&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">	  &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="string">stage(&#x27;更新服务&#x27;)</span> &#123;</span><br><span class="line">      <span class="string">steps</span> &#123;</span><br><span class="line">	    <span class="string">container(&#x27;kubectl&#x27;)</span> &#123;</span><br><span class="line">		  <span class="comment"># envsubst 将环境变量传递给文件</span></span><br><span class="line">	      <span class="string">sh</span> <span class="string">&quot;envsubst &lt; template/$&#123;params.APP_NAME&#125;.yaml |kubectl --kubeconfig=/home/jenkins/agent/.kube/config apply -f -&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="执行结果"><a href="#执行结果" class="headerlink" title="执行结果"></a>执行结果</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get po -ndemo|egrep <span class="string">&#x27;demo-2048|jenkins-mvn&#x27;</span></span></span><br><span class="line">demo-2048-6b7ffc87bc-9jd7m                 1/1     Running   0          6m14s</span><br><span class="line">jenkins-mvn-qq4n9                          4/4     Running   0          6m43s</span><br></pre></td></tr></table></figure>

<p><img src="/image/jenkins-slave/jenkins-java-build.png"></p>
]]></content>
      <categories>
        <category>Kubernetes</category>
        <category>jenkins</category>
      </categories>
      <tags>
        <tag>jenkins</tag>
        <tag>kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>Kubernetes的ConfigMap使用</title>
    <url>/2019/10/29/Kubernetes%E7%9A%84ConfigMap%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p>ConfigMap 功能在 Kubernetes1.2 版本中引入，许多应用程序会从配置文件、命令行参数或环境变量中读取配置信息。ConfigMap API 给我们提供了向容器中注入配置信息的机制，ConfigMap 可以被用来保存单个属性，也可以用来保存整个配置文件或者 JSON 二进制大对象</p>
 <span id="more"></span>

<h2 id="ConfigMap的创建"><a href="#ConfigMap的创建" class="headerlink" title="ConfigMap的创建"></a>ConfigMap的创建</h2><p>可以使用 kubectl create configmap 从文件、目录或者 key-value 字符串创建等创建 ConfigMap。也可以通过 kubectl create -f从描述文件创建</p>
<h3 id="从key-value字符串创建"><a href="#从key-value字符串创建" class="headerlink" title="从key-value字符串创建"></a>从key-value字符串创建</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl create configmap auth-conf --from-literal=user=nginx --from-literal=password=nginx</span></span><br><span class="line">configmap/auth.conf created</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl describe configmap auth-conf</span></span><br><span class="line">Name:         auth-conf</span><br><span class="line">Namespace:    default</span><br><span class="line">Labels:       &lt;none&gt;</span><br><span class="line">Annotations:  &lt;none&gt;</span><br><span class="line">Data</span><br><span class="line">====</span><br><span class="line">password:</span><br><span class="line">----</span><br><span class="line">nginx</span><br><span class="line">user:</span><br><span class="line">----</span><br><span class="line">nginx</span><br><span class="line">Events:  &lt;none&gt;</span><br></pre></td></tr></table></figure>

<p>–from-literal参数传递配置信息，该参数可以使用多次</p>
<h3 id="从文件中创建"><a href="#从文件中创建" class="headerlink" title="从文件中创建"></a>从文件中创建</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl <span class="built_in">exec</span> -it nginx-2trdc -- <span class="built_in">cat</span> /etc/nginx/nginx.conf &gt; nginx.conf</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl create configmap nginx-conf --from-file=nginx.conf</span></span><br><span class="line">configmap/nginx-conf created</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl describe configmap nginx-conf</span></span><br><span class="line">Name:         nginx-conf</span><br><span class="line">Namespace:    default</span><br><span class="line">Labels:       &lt;none&gt;</span><br><span class="line">Annotations:  &lt;none&gt;</span><br><span class="line">Data</span><br><span class="line">====</span><br><span class="line">nginx.conf:</span><br><span class="line">----</span><br><span class="line">user  nginx;</span><br><span class="line">worker_processes  1;</span><br><span class="line">error_log  /var/log/nginx/error.log warn;</span><br><span class="line">pid        /var/run/nginx.pid;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       /etc/nginx/mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line">    log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span><br><span class="line">                      &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span><br><span class="line">                      &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span><br><span class="line">    access_log  /var/log/nginx/access.log  main;</span><br><span class="line">    sendfile        on;</span><br><span class="line">    #tcp_nopush     on;</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line">    #gzip  on;</span><br><span class="line">    include /etc/nginx/conf.d/*.conf;</span><br><span class="line">&#125;</span><br><span class="line">Events:  &lt;none&gt;</span><br></pre></td></tr></table></figure>

<p>–from-file  这个参数可以使用多次，键的名字是文件名，值就是文件内容</p>
<h3 id="从目录中创建"><a href="#从目录中创建" class="headerlink" title="从目录中创建"></a>从目录中创建</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mkdir</span> conf</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cp</span> auth nginx.conf ./conf/</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl create configmap test-conf --from-file=./conf</span></span><br><span class="line">configmap/test-conf created</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl describe configmap test-conf</span></span><br><span class="line">Name:         test-conf</span><br><span class="line">Namespace:    default</span><br><span class="line">Labels:       &lt;none&gt;</span><br><span class="line">Annotations:  &lt;none&gt;</span><br><span class="line">Data</span><br><span class="line">====</span><br><span class="line">auth:</span><br><span class="line">----</span><br><span class="line">nginx:$apr1$PL4TCLUW$D7dCXfXMdHblzokqOaeA0.</span><br><span class="line">nginx.conf:</span><br><span class="line">----</span><br><span class="line">user  nginx;</span><br><span class="line">worker_processes  1;</span><br><span class="line">error_log  /var/log/nginx/error.log warn;</span><br><span class="line">pid        /var/run/nginx.pid;</span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line">http &#123;</span><br><span class="line">    include       /etc/nginx/mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line">    log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span><br><span class="line">                      &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span><br><span class="line">                      &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span><br><span class="line">    access_log  /var/log/nginx/access.log  main;</span><br><span class="line">    sendfile        on;</span><br><span class="line">    #tcp_nopush     on;</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line">    #gzip  on;</span><br><span class="line">    include /etc/nginx/conf.d/*.conf;</span><br><span class="line">&#125;</span><br><span class="line">Events:  &lt;none&gt;</span><br></pre></td></tr></table></figure>

<p>–from-file指定在目录下的所有文件都会被用在 ConfigMap 里面创建一个键值对，键的名字就是文件名，值就是文件的内容</p>
<h2 id="ConfigMap的使用"><a href="#ConfigMap的使用" class="headerlink" title="ConfigMap的使用"></a>ConfigMap的使用</h2><h3 id="将ConfigMap中的数据设置为环境变量"><a href="#将ConfigMap中的数据设置为环境变量" class="headerlink" title="将ConfigMap中的数据设置为环境变量"></a>将ConfigMap中的数据设置为环境变量</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim config.yml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ConfigMap      # configmap类型</span><br><span class="line">metadata:       </span><br><span class="line">  name: ceshi-config</span><br><span class="line">data:                # 存储 key-value的数据</span><br><span class="line">  application.user: nginx</span><br><span class="line">  applocation.passwd: nginx</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim nginx.yml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: myweb</span><br><span class="line">    image: nginx:1.13</span><br><span class="line">    command: [ &quot;/bin/sh&quot;,&quot;-c&quot;,&quot;env&quot; ]</span><br><span class="line">    ports:</span><br><span class="line">    - containerPort: 80</span><br><span class="line">    env:</span><br><span class="line">      - name: AUTH_USER        # 变量名称</span><br><span class="line">        valueFrom:</span><br><span class="line">          configMapKeyRef:</span><br><span class="line">            name: ceshi-config     # 引用的configmap名称</span><br><span class="line">            key: application.user  # key值</span><br><span class="line">      - name: AUTH_PASSWD</span><br><span class="line">        valueFrom:</span><br><span class="line">          configMapKeyRef:</span><br><span class="line">            name: ceshi-config</span><br><span class="line">            key: applocation.passwd</span><br><span class="line">  restartPolicy: Never        # 不进行重启</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl create  -f .</span></span><br><span class="line">configmap/ceshi-config created</span><br><span class="line">pod/nginx created</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl logs -f nginx|grep AUTH</span></span><br><span class="line">AUTH_USER=nginx</span><br><span class="line">AUTH_PASSWD=nginx</span><br></pre></td></tr></table></figure>

<h3 id="将ConfigMap中的数据设置为命令行参数"><a href="#将ConfigMap中的数据设置为命令行参数" class="headerlink" title="将ConfigMap中的数据设置为命令行参数"></a>将ConfigMap中的数据设置为命令行参数</h3><p>将ConfigMap用作命令行参数时，需要先把ConfigMap的数据保存在环境变量中，然后通过$(VAR_NAME)的方式引用环境变量</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim jvm.yml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  name: spring-jvm</span><br><span class="line">  namespace: default</span><br><span class="line">data:</span><br><span class="line">  JAVA_OPTS: &quot;-XX:MetaspaceSize=512m -XX:MaxMetaspaceSize=512m -Xms3000m -Xmx3000m -Xmn512m -Xss256k -XX:ParallelGCThreads=20 -XX:+UseConcMarkSweepGC -Denv=PRO&quot;</span><br><span class="line">  RUN_OPTS: &quot;--server.port=8764&quot;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim nginx1.yml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: myweb</span><br><span class="line">    image: nginx:1.13</span><br><span class="line">    command: [ &quot;/bin/sh&quot;,&quot;-c&quot;,&quot;echo $(JAVA_OPTS) $(RUN_OPTS)&quot; ]</span><br><span class="line">    ports:</span><br><span class="line">    - containerPort: 80</span><br><span class="line">    env:</span><br><span class="line">      - name: JAVA_OPTS</span><br><span class="line">        valueFrom:</span><br><span class="line">          configMapKeyRef:</span><br><span class="line">            name: spring-jvm</span><br><span class="line">            key: JAVA_OPTS</span><br><span class="line">      - name: RUN_OPTS</span><br><span class="line">        valueFrom:</span><br><span class="line">          configMapKeyRef:</span><br><span class="line">            name: spring-jvm</span><br><span class="line">            key:  RUN_OPTS</span><br><span class="line">  restartPolicy: Never  </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl apply -f .</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl logs -f nginx</span></span><br><span class="line">-XX:MetaspaceSize=512m -XX:MaxMetaspaceSize=512m -Xms3000m -Xmx3000m -Xmn512m -Xss256k -XX:ParallelGCThreads=20 -XX:+UseConcMarkSweepGC -Denv=PRO --server.port=8764</span><br></pre></td></tr></table></figure>

<h3 id="使用Volume将ConfigMap作为文件或目录挂载"><a href="#使用Volume将ConfigMap作为文件或目录挂载" class="headerlink" title="使用Volume将ConfigMap作为文件或目录挂载"></a>使用Volume将ConfigMap作为文件或目录挂载</h3><p>将创建的ConfigMap中index.html这个key挂载到&#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html&#x2F;目录下的index.html文件。如果存在同名文件，直接覆盖</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim nginx-html.yml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  name: index-html</span><br><span class="line">  namespace: default</span><br><span class="line">data:</span><br><span class="line">  index.html: Hello World</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim nginx.yml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx</span><br><span class="line">  labels:</span><br><span class="line">    app: nginx</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: nginx</span><br><span class="line">    image: nginx:1.13</span><br><span class="line">    ports:</span><br><span class="line">    - containerPort: 80</span><br><span class="line">    volumeMounts:</span><br><span class="line">    - name: html-volume</span><br><span class="line">      mountPath: /usr/share/nginx/html/</span><br><span class="line">  volumes:</span><br><span class="line">    - name: html-volume</span><br><span class="line">      configMap:</span><br><span class="line">        name: index-html</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">    - port: 80       </span><br><span class="line">      targetPort: 80  </span><br><span class="line">  selector:</span><br><span class="line">    app: nginx</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl apply -f .</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get svc</span></span><br><span class="line">NAME         TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)   AGE</span><br><span class="line">kubernetes   ClusterIP   10.96.0.1        &lt;none&gt;        443/TCP   11d</span><br><span class="line">myweb        ClusterIP   10.104.41.213    &lt;none&gt;        80/TCP    118m</span><br><span class="line">nginx        ClusterIP   10.100.163.244   &lt;none&gt;        80/TCP    10m</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">curl 10.100.163.244</span></span><br><span class="line">Hello World</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
  </entry>
  <entry>
    <title>Kubernetes的Secret使用</title>
    <url>/2019/10/30/Kubernetes%E7%9A%84Secret%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p>Secret 是一种包含少量敏感信息例如密码、token 或 key 的对象。这样的信息可能会被放在 Pod spec 中或者镜像中；将其放在一个 secret 对象中可以更好地控制它的用途，并降低意外暴露的风险。</p>
<p>用户可以创建 secret，同时系统也创建了一些 secret。</p>
<p>要使用 secret，pod 需要引用 secret。Pod 可以用两种方式使用 secret：作为 volume 中的文件被挂载到 pod 中的一个或者多个容器里，或者当 kubelet 为 pod 拉取镜像时使用。</p>
 <span id="more"></span>

<p>Secret 有三种类型：</p>
<ul>
<li><p>Service Account：用来访问 Kubernetes API，由 Kubernetes 自动创建，并且会自动挂载到 Pod 的&#x2F;run&#x2F;secrets&#x2F;kubernetes.io&#x2F;serviceaccount目录中</p>
</li>
<li><p>Opaque：base64编码格式的Secret，用来存储密码、密钥等</p>
</li>
<li><p>kubernetes.io&#x2F;dockerconfigjson：用来存储私有 docker registry 的认证</p>
</li>
</ul>
<h2 id="Service-Account"><a href="#Service-Account" class="headerlink" title="Service Account"></a>Service Account</h2><p>Kubernetes 自动创建包含访问 API 凭据的 secret，并自动修改您的 pod 以使用此类型的 secret。</p>
<p>如果需要，可以禁用或覆盖自动创建和使用API凭据。但是，如果您需要的只是安全地访问 apiserver，我们推荐这样的工作流程。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl <span class="built_in">exec</span> -it nginx <span class="built_in">ls</span> /run/secrets/kubernetes.io/serviceaccount</span></span><br><span class="line">ca.crt    namespace  token</span><br></pre></td></tr></table></figure>

<h2 id="Opaque"><a href="#Opaque" class="headerlink" title="Opaque"></a>Opaque</h2><p>Opaque 类型的数据是一个 map 类型，要求 value 是 base64 编码格式</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># echo -n &#x27;admin&#x27; | base64</span></span><br><span class="line"><span class="string">YWRtaW4=</span></span><br><span class="line"><span class="comment"># echo -n &#x27;1f2d1e2e67df&#x27; | base64</span></span><br><span class="line"><span class="string">MWYyZDFlMmU2N2Rm</span></span><br><span class="line"><span class="comment"># vim secret.yml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Secret</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">mysecret</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">Opaque</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">username:</span> <span class="string">YWRtaW4=</span></span><br><span class="line">  <span class="attr">password:</span> <span class="string">MWYyZDFlMmU2N2Rm</span></span><br><span class="line"><span class="comment"># kubectl apply -f secret.yml</span></span><br><span class="line"><span class="string">secret/mysecret</span> <span class="string">created</span></span><br></pre></td></tr></table></figure>

<h3 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h3><h4 id="将Secret挂载到Volume中"><a href="#将Secret挂载到Volume中" class="headerlink" title="将Secret挂载到Volume中"></a>将Secret挂载到Volume中</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim nginx.yml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">volumes:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">secrets</span></span><br><span class="line">    <span class="attr">secret:</span></span><br><span class="line">      <span class="attr">secretName:</span> <span class="string">mysecret</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">nginx:1.13</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">volumeMounts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">secrets</span></span><br><span class="line">      <span class="attr">mountPath:</span> <span class="string">&quot;/etc/secrets&quot;</span></span><br><span class="line">      <span class="attr">readOnly:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># kubectl apply -f nginx.yml</span></span><br><span class="line"><span class="string">pod/nginx</span> <span class="string">created</span></span><br><span class="line"><span class="comment"># kubectl exec -it nginx ls /etc/secrets</span></span><br><span class="line"><span class="string">password</span>  <span class="string">username</span></span><br><span class="line"><span class="comment"># kubectl exec -it nginx cat /etc/secrets/password</span></span><br><span class="line"><span class="string">1f2d1e2e67df</span></span><br></pre></td></tr></table></figure>

<h4 id="将Secret导入环境变量中"><a href="#将Secret导入环境变量中" class="headerlink" title="将Secret导入环境变量中"></a>将Secret导入环境变量中</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim nginx.yml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">nginx:1.13</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">env:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">TEST_USER</span></span><br><span class="line">      <span class="attr">valueFrom:</span></span><br><span class="line">        <span class="attr">secretKeyRef:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">mysecret</span></span><br><span class="line">          <span class="attr">key:</span> <span class="string">username</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">TEST_PASSWORD</span></span><br><span class="line">      <span class="attr">valueFrom:</span></span><br><span class="line">        <span class="attr">secretKeyRef:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">mysecret</span></span><br><span class="line">          <span class="attr">key:</span> <span class="string">password</span></span><br><span class="line"><span class="comment"># kubectl apply -f .</span></span><br><span class="line"><span class="comment"># kubectl exec -it nginx env|grep TEST</span></span><br><span class="line"><span class="string">TEST_USER=admin</span></span><br><span class="line"><span class="string">TEST_PASSWORD=1f2d1e2e67df</span></span><br></pre></td></tr></table></figure>

<h2 id="kubernetes-io-x2F-dockerconfigjson"><a href="#kubernetes-io-x2F-dockerconfigjson" class="headerlink" title="kubernetes.io&#x2F;dockerconfigjson"></a>kubernetes.io&#x2F;dockerconfigjson</h2><p>使用 Kuberctl 创建 docker registry 认证的 secret</p>
<h3 id="配置私有仓库"><a href="#配置私有仓库" class="headerlink" title="配置私有仓库"></a>配置私有仓库</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker tag nginx:1.13 harbor.ui.com/secret/nginx:1.13</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker  push harbor.ui.com/secret/nginx:1.13</span></span><br><span class="line">The push refers to repository [harbor.ui.com/secret/nginx]</span><br><span class="line">7ab428981537: Preparing</span><br><span class="line">82b81d779f83: Preparing</span><br><span class="line">d626a8ad97a1: Preparing</span><br><span class="line">denied: requested access to the resource is denied</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker login harbor.ui.com</span></span><br><span class="line">Username: admin</span><br><span class="line">Password:</span><br><span class="line">Login Succeeded</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker  push harbor.ui.com/secret/nginx:1.13</span></span><br><span class="line">The push refers to repository [harbor.ui.com/secret/nginx]</span><br><span class="line">7ab428981537: Pushed</span><br><span class="line">82b81d779f83: Pushed</span><br><span class="line">d626a8ad97a1: Pushed</span><br><span class="line">1.13: digest: sha256:e4f0474a75c510f40b37b6b7dc2516241ffa8bde5a442bde3d372c9519c84d90 size: 948</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker <span class="built_in">logout</span> harbor.ui.com</span></span><br><span class="line">Removing login credentials for harbor.ui.com</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker rmi harbor.ui.com/secret/nginx:1.13</span></span><br><span class="line">Untagged: harbor.ui.com/secret/nginx:1.13</span><br><span class="line">Untagged: harbor.ui.com/secret/nginx@sha256:e4f0474a75c510f40b37b6b7dc2516241ffa8bde5a442bde3d372c9519c84d90</span><br></pre></td></tr></table></figure>

<h3 id="创建secrets"><a href="#创建secrets" class="headerlink" title="创建secrets"></a>创建secrets</h3><pre><code>kubectl create secret docker-registry myregistrykey --docker-server=DOCKER_REGISTRY_SERVER --docker-username=DOCKER_USER --docker-password=DOCKER_PASSWORD --docker-email=DOCKER_EMAIL
# kubectl create secret docker-registry registrykey --docker-server=harbor.ui.com --docker-username=admin --docker-password=Harbor12345 --docker-email=weiqun_h@163.com
secret/registrykey created
</code></pre>
<h3 id="pull私有镜像"><a href="#pull私有镜像" class="headerlink" title="pull私有镜像"></a>pull私有镜像</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim nginx.yml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">harbor.ui.com/secret/nginx:1.13</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">  <span class="attr">imagePullSecrets:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">registrykey</span>   <span class="comment"># 引用创建的secrets</span></span><br><span class="line"><span class="comment"># kubectl apply -f nginx.yml</span></span><br><span class="line"><span class="comment"># kubectl describe pod nginx</span></span><br><span class="line"><span class="attr">Events:</span></span><br><span class="line">  <span class="string">Type</span>    <span class="string">Reason</span>     <span class="string">Age</span>   <span class="string">From</span>               <span class="string">Message</span></span><br><span class="line">  <span class="string">----</span>    <span class="string">------</span>     <span class="string">----</span>  <span class="string">----</span>               <span class="string">-------</span></span><br><span class="line">  <span class="string">Normal</span>  <span class="string">Scheduled</span>  <span class="string">6s</span>    <span class="string">default-scheduler</span>  <span class="string">Successfully</span> <span class="string">assigned</span> <span class="string">default/nginx</span> <span class="string">to</span> <span class="string">node02</span></span><br><span class="line">  <span class="string">Normal</span>  <span class="string">Pulling</span>    <span class="string">4s</span>    <span class="string">kubelet,</span> <span class="string">node02</span>    <span class="string">Pulling</span> <span class="string">image</span> <span class="string">&quot;harbor.ui.com/secret/nginx:1.13&quot;</span></span><br><span class="line">  <span class="string">Normal</span>  <span class="string">Pulled</span>     <span class="string">3s</span>    <span class="string">kubelet,</span> <span class="string">node02</span>    <span class="string">Successfully</span> <span class="string">pulled</span> <span class="string">image</span> <span class="string">&quot;harbor.ui.com/secret/nginx:1.13&quot;</span></span><br><span class="line">  <span class="string">Normal</span>  <span class="string">Created</span>    <span class="string">3s</span>    <span class="string">kubelet,</span> <span class="string">node02</span>    <span class="string">Created</span> <span class="string">container</span> <span class="string">nginx</span></span><br><span class="line">  <span class="string">Normal</span>  <span class="string">Started</span>    <span class="string">3s</span>    <span class="string">kubelet,</span> <span class="string">node02</span>    <span class="string">Started</span> <span class="string">container</span> <span class="string">nginx</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
  </entry>
  <entry>
    <title>Kubernetes的Volume使用</title>
    <url>/2019/10/31/Kubernetes%E7%9A%84Volume%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h2 id="存储卷概述"><a href="#存储卷概述" class="headerlink" title="存储卷概述"></a>存储卷概述</h2><p>容器磁盘上的文件的生命周期是短暂的，这就使得在容器中运行重要应用时会出现一些问题。首先，当容器崩溃时，kubelet 会重启它，但是容器中的文件将丢失，容器以干净的状态（镜像最初的状态）重新启动。其次，在Pod中同时运行多个容器时，这些容器之间通常需要共享文件。Kubernetes 中的Volume抽象就很好的解决了这些问题</p>
 <span id="more"></span>

<p>Kubernetes 中的卷有明确的寿命 与封装它的 Pod 相同。所以，卷的生命比 Pod 中的所有容器都长，当这个容器重启时数据仍然得以保存。当然，当 Pod 不再存在时，卷也将不复存在。也许更重要的是，Kubernetes支持多种类型的卷，Pod 可以同时使用任意数量的卷</p>
<h2 id="Kubernetes支持的类型"><a href="#Kubernetes支持的类型" class="headerlink" title="Kubernetes支持的类型"></a>Kubernetes支持的类型</h2><ul>
<li><p>awsElasticBlockStore azureDisk azureFile cephfs csi downwardAPI emptyDir</p>
</li>
<li><p>fc flocker gcePersistentDisk gitRepo glusterfs hostPath iscsi local nfs</p>
</li>
<li><p>persistentVolumeClaim projected portworxVolume quobyte rbd scaleIO secret</p>
</li>
<li><p>storageos vsphereVolume</p>
</li>
</ul>
<h3 id="emptyDir"><a href="#emptyDir" class="headerlink" title="emptyDir"></a>emptyDir</h3><p>当 Pod 被分配给节点时，首先创建emptyDir卷，并且只要该 Pod 在该节点上运行，该卷就会存在。正如卷的名字所述，它最初是空的。Pod 中的容器可以读取和写入emptyDir卷中的相同文件，尽管该卷可以挂载到每个容器中的相同或不同路径上。当出于任何原因从节点中删除 Pod 时，emptyDir中的数据将被永久删除。</p>
<p>emptyDir的用法有：</p>
<ul>
<li><p>暂存空间，例如用于基于磁盘的合并排序，临时缓存数据</p>
</li>
<li><p>用作长时间计算崩溃恢复时的检查点</p>
</li>
<li><p>Web服务器容器提供数据时，保存内容管理器容器提取的文件</p>
</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim emptydir.yml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">harbor.ui.com/secret/nginx:1.13</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">volumeMounts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/cache</span>    <span class="comment"># 挂载的目录</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">cache-volume</span>   <span class="comment"># 卷名称</span></span><br><span class="line">  <span class="attr">imagePullSecrets:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">registrykey</span></span><br><span class="line">  <span class="attr">volumes:</span>   </span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">cache-volume</span>    <span class="comment"># 创建的卷名称</span></span><br><span class="line">    <span class="attr">emptyDir:</span> &#123;&#125;          <span class="comment"># 创建的空目录</span></span><br><span class="line"><span class="comment"># kubectl apply -f emptydir.yml</span></span><br><span class="line"><span class="comment"># kubectl exec -it nginx ls /|grep cache</span></span><br><span class="line"><span class="string">bin</span>   <span class="string">cache</span>  <span class="string">etc</span>   <span class="string">lib</span>      <span class="string">media</span>  <span class="string">opt</span>   <span class="string">root</span>  <span class="string">sbin</span>  <span class="string">sys</span>    <span class="string">usr</span></span><br></pre></td></tr></table></figure>

<h3 id="HostPath"><a href="#HostPath" class="headerlink" title="HostPath"></a>HostPath</h3><p>hostPath允许挂载Node上的文件系统到Pod里面去。如果Pod需要使用Node上的文件，可以使用hostPath</p>
<p>使用这种卷类型是请注意，因为：</p>
<ul>
<li><p>由于每个节点上的文件都不同，具有相同配置（例如从 podTemplate 创建的）的 pod 在不同节点上的行为可能会有所不同</p>
</li>
<li><p>当 Kubernetes 按照计划添加资源感知调度时，将无法考虑hostPath使用的资源</p>
</li>
<li><p>在底层主机上创建的文件或目录只能由 root 写入。您需要在特权容器中以 root 身份运行进程，或修改主机上的文件权限以便写入hostPath卷</p>
</li>
</ul>
<p>下面yml文件定义一个nginx的Pod资源，通过hostPath类型的存储卷，将Pod的宿主机的&#x2F;etc&#x2F;localtime挂载到容器中的&#x2F;etc&#x2F;localtime文件，实现时间同步</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim hostpath.yml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">harbor.ui.com/secret/nginx:1.13</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">volumeMounts:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">host-time</span></span><br><span class="line">        <span class="attr">mountPath:</span> <span class="string">/etc/localtime</span>  <span class="comment"># 同步主机时间</span></span><br><span class="line">  <span class="attr">imagePullSecrets:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">registrykey</span></span><br><span class="line">  <span class="string">volumes:</span>  </span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">host-time</span></span><br><span class="line">    <span class="attr">hostPath:</span></span><br><span class="line">      <span class="attr">path:</span> <span class="string">/etc/localtime</span></span><br><span class="line"><span class="comment"># kubectl apply -f hostpath.yml</span></span><br><span class="line"><span class="string">pod/nginx</span> <span class="string">created</span></span><br><span class="line"><span class="comment"># kubectl exec -it nginx date</span></span><br><span class="line"><span class="string">Thu</span> <span class="string">Oct</span> <span class="number">31</span> <span class="number">11</span><span class="string">:51:28</span> <span class="string">CST</span> <span class="number">2019</span></span><br></pre></td></tr></table></figure>


<h3 id="NFS"><a href="#NFS" class="headerlink" title="NFS"></a>NFS</h3><p>NFS 是Network File System的缩写，即网络文件系统。Kubernetes中通过简单地配置就可以挂载NFS到Pod中，而NFS中的数据是可以永久保存的，同时NFS支持同时写操作。Pod被删除时，Volume被卸载，内容被保留。</p>
<h4 id="部署nfs"><a href="#部署nfs" class="headerlink" title="部署nfs"></a>部署nfs</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum install -y nfs-utils    <span class="comment"># 所有节点安装</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl <span class="built_in">enable</span> rpcbind.service nfs</span></span><br><span class="line">Created symlink from /etc/systemd/system/multi-user.target.wants/nfs-server.service to /usr/lib/systemd/system/nfs-server.service.</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /etc/exports</span></span><br><span class="line">/docker 192.168.9.0/24(rw,async,no_root_squash,no_all_squash)</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">chown</span> nfsnobody.nfsnobody /docker/</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl start rpcbind.service nfs</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">showmount -e 192.168.9.20  <span class="comment"># 查看挂载是否正常</span></span></span><br><span class="line">Export list for 192.168.9.20:</span><br><span class="line">/docker 192.168.9.0/24</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">echo</span> <span class="string">&quot;Hello World&quot;</span> &gt;index.html</span></span><br></pre></td></tr></table></figure>

<p> ro                 该主机对该共享目录有只读权限<br>rw                该主机对该共享目录有读写权限<br>root_squash      客户机用root用户访问该共享文件夹时，将root用户映射成匿名用户<br>no_root_squash  客户机用root访问该共享文件夹时，不映射root用户<br>all_squash        客户机上的任何用户访问该共享目录时都映射成匿名用户<br>anonuid          将客户机上的用户映射成指定的本地用户ID的用户<br>anongid          将客户机上的用户映射成属于指定的本地用户组ID<br>sync              资料同步写入到内存与硬盘中<br>async             资料会先暂存于内存中，而非直接写入硬盘<br>insecure          允许从这台机器过来的非授权访问</p>
<h4 id="创建nfs类型volume"><a href="#创建nfs类型volume" class="headerlink" title="创建nfs类型volume"></a>创建nfs类型volume</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim nfs.yml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">harbor.ui.com/secret/nginx:1.13</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">volumeMounts:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx-html</span></span><br><span class="line">        <span class="attr">mountPath:</span> <span class="string">/usr/share/nginx/html</span> <span class="comment"># 挂载至html目录</span></span><br><span class="line">  <span class="attr">imagePullSecrets:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">registrykey</span></span><br><span class="line">  <span class="string">volumes:</span>  </span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx-html</span></span><br><span class="line">    <span class="string">nfs:</span>             <span class="comment"># nfs类型</span></span><br><span class="line">      <span class="attr">path:</span> <span class="string">/docker</span>  <span class="comment"># 挂载的目录 </span></span><br><span class="line">      <span class="attr">server:</span> <span class="number">192.168</span><span class="number">.9</span><span class="number">.20</span> <span class="comment"># nfs server</span></span><br><span class="line"><span class="comment"># kubectl delete -f nfs.yml</span></span><br><span class="line"><span class="string">pod</span> <span class="string">&quot;nginx&quot;</span> <span class="string">deleted</span></span><br><span class="line"><span class="comment"># kubectl exec -it nginx ls /usr/share/nginx/html</span></span><br><span class="line"><span class="string">index.html</span></span><br></pre></td></tr></table></figure>


<h3 id="GlusterFs"><a href="#GlusterFs" class="headerlink" title="GlusterFs"></a>GlusterFs</h3><p>Glusterfs是一个开源分布式文件系统，具有强大的横向扩展能力，可支持数PB存储容量和数千客户端，通过网络互联成一个并行的网络文件系统。具有可扩展性、高性能、高可用性等特点</p>
<h4 id="安装glusterfs（所有节点）"><a href="#安装glusterfs（所有节点）" class="headerlink" title="安装glusterfs（所有节点）"></a>安装glusterfs（所有节点）</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum install  centos-release-gluster -y</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">yum install  glusterfs-server -y</span>   </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl start glusterd.service</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl <span class="built_in">enable</span> glusterd.service</span></span><br><span class="line">Created symlink from /etc/systemd/system/multi-user.target.wants/glusterd.service to /usr/lib/systemd/system/glusterd.service.</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mkdir</span> -p /gfs/data       <span class="comment"># 这个目录生产环境是硬盘，这里作为实验</span></span></span><br></pre></td></tr></table></figure>


<h4 id="添加资源池"><a href="#添加资源池" class="headerlink" title="添加资源池"></a>添加资源池</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">gluster peer probe master</span></span><br><span class="line">peer probe: success.</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">gluster peer probe node01</span></span><br><span class="line">peer probe: success.</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">gluster peer probe node02</span></span><br><span class="line">peer probe: success.</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">gluster pool list</span></span><br><span class="line">UUID                    Hostname     State</span><br><span class="line">bb8c5f28-4984-477c-a8fc-1e6347cc9a2c    master       Connected</span><br><span class="line">9ff5a852-27ad-47e7-8798-006db8962ad4    node01       Connected</span><br><span class="line">988ed87a-d429-466c-8ffc-5d8ce707ebd6    node02       Connected</span><br><span class="line">3bc23b91-2f7f-472f-ad57-1f6a4ca149f9    localhost    Connected</span><br></pre></td></tr></table></figure>


<p>查看资源节点状态</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">gluster peer status</span></span><br><span class="line">Number of Peers: 3</span><br><span class="line"></span><br><span class="line">Hostname: master</span><br><span class="line">Uuid: bb8c5f28-4984-477c-a8fc-1e6347cc9a2c</span><br><span class="line">State: Peer in Cluster (Connected)</span><br><span class="line"></span><br><span class="line">Hostname: node01</span><br><span class="line">Uuid: 9ff5a852-27ad-47e7-8798-006db8962ad4</span><br><span class="line">State: Peer in Cluster (Connected)</span><br><span class="line"></span><br><span class="line">Hostname: node02</span><br><span class="line">Uuid: 988ed87a-d429-466c-8ffc-5d8ce707ebd6</span><br><span class="line">State: Peer in Cluster (Connected)</span><br></pre></td></tr></table></figure>


<h4 id="创建卷"><a href="#创建卷" class="headerlink" title="创建卷"></a>创建卷</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">gluster volume create tomcat-data transport tcp \</span></span><br><span class="line"><span class="language-bash">&gt; harbor:/gfs/data \</span></span><br><span class="line"><span class="language-bash">&gt; master:/gfs/data \</span></span><br><span class="line"><span class="language-bash">&gt; node01:/gfs/data \</span></span><br><span class="line"><span class="language-bash">&gt; node02:/gfs/data</span></span><br><span class="line">volume create: tomcat-data: failed: The brick harbor:/gfs/data is being created in the root partition. It is recommended that you don&#x27;t use the system&#x27;s root partition for storage backend. Or use &#x27;force&#x27; at the end of the command if you want to override this behavior.  # 错误提示让使用磁盘，可以force放在命令结尾，强制创建</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">gluster volume create tomcat-data transport tcp \</span></span><br><span class="line"><span class="language-bash">harbor:/gfs/data \</span></span><br><span class="line"><span class="language-bash">master:/gfs/data \</span></span><br><span class="line"><span class="language-bash">node01:/gfs/data \</span></span><br><span class="line"><span class="language-bash">node02:/gfs/data \</span></span><br><span class="line"><span class="language-bash">force</span></span><br><span class="line">volume create: tomcat-data: success: please start the volume to access data</span><br></pre></td></tr></table></figure>


<p>查看卷状态</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">gluster volume info tomcat-data</span></span><br><span class="line">Volume Name: tomcat-data</span><br><span class="line">Type: Distribute</span><br><span class="line">Volume ID: 0131a258-7ab7-4533-8ec3-73e9ca2d51db</span><br><span class="line">Status: Created</span><br><span class="line">Snapshot Count: 0</span><br><span class="line">Number of Bricks: 4</span><br><span class="line">Transport-type: tcp</span><br><span class="line">Bricks:</span><br><span class="line">Brick1: harbor:/gfs/data</span><br><span class="line">Brick2: master:/gfs/data</span><br><span class="line">Brick3: node01:/gfs/data</span><br><span class="line">Brick4: node02:/gfs/data</span><br><span class="line">Options Reconfigured:</span><br><span class="line">transport.address-family: inet</span><br><span class="line">nfs.disable: on</span><br></pre></td></tr></table></figure>


<h4 id="启动卷"><a href="#启动卷" class="headerlink" title="启动卷"></a>启动卷</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">gluster volume start tomcat-data</span></span><br><span class="line">volume start: tomcat-data: success</span><br></pre></td></tr></table></figure>


<h4 id="挂载卷"><a href="#挂载卷" class="headerlink" title="挂载卷"></a>挂载卷</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">mount -t glusterfs 192.168.9.20:/tomcat-data /mnt</span></span><br></pre></td></tr></table></figure>


<h4 id="glusterfs对接k8s"><a href="#glusterfs对接k8s" class="headerlink" title="glusterfs对接k8s"></a>glusterfs对接k8s</h4><p>借助kubernetes的Endpoints直接将外部服务器映射为kubernetes内部的一个服务</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vi  glusterfs-ep.yaml</span></span><br><span class="line"><span class="attr">iapiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">glusterfs</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">tomcat</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">49152</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">49152</span></span><br><span class="line">  <span class="attr">sessionAffinity:</span> <span class="string">None</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ClusterIP</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Endpoints</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">glusterfs</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">tomcat</span></span><br><span class="line"><span class="attr">subsets:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">addresses:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">ip:</span> <span class="number">192.168</span><span class="number">.9</span><span class="number">.20</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">ip:</span> <span class="number">192.168</span><span class="number">.9</span><span class="number">.21</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">ip:</span> <span class="number">192.168</span><span class="number">.9</span><span class="number">.22</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">ip:</span> <span class="number">192.168</span><span class="number">.9</span><span class="number">.23</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">49152</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line"><span class="comment"># kubectl apply -f glusterfs-ep.yaml</span></span><br><span class="line"><span class="string">service/glusterfs</span> <span class="string">created</span></span><br><span class="line"><span class="string">endpoints/glusterfs</span> <span class="string">unchanged</span></span><br></pre></td></tr></table></figure>


<p>查看glusterfs信息</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl describe svc -n tomcat glusterfs</span></span><br><span class="line">Name:              glusterfs</span><br><span class="line">Namespace:         tomcat</span><br><span class="line">Labels:            &lt;none&gt;</span><br><span class="line">Annotations:       kubectl.kubernetes.io/last-applied-configuration:</span><br><span class="line">                     &#123;&quot;apiVersion&quot;:&quot;v1&quot;,&quot;kind&quot;:&quot;Service&quot;,&quot;metadata&quot;:&#123;&quot;annotations&quot;:&#123;&#125;,&quot;name&quot;:&quot;glusterfs&quot;,&quot;namespace&quot;:&quot;tomcat&quot;&#125;,&quot;spec&quot;:&#123;&quot;ports&quot;:[&#123;&quot;port&quot;:49152,&quot;...</span><br><span class="line">Selector:          &lt;none&gt;</span><br><span class="line">Type:              ClusterIP</span><br><span class="line">IP:                10.107.22.219</span><br><span class="line">Port:              &lt;unset&gt;  49152/TCP</span><br><span class="line">TargetPort:        49152/TCP</span><br><span class="line">Endpoints:         192.168.9.20:49152,192.168.9.21:49152,192.168.9.22:49152 + 1 more...</span><br><span class="line">Session Affinity:  None</span><br><span class="line">Events:            &lt;none&gt;</span><br></pre></td></tr></table></figure>


<p>创建glusterfs类型volume</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim glusterfs.yml</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">harbor.ui.com/secret/nginx:1.13</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">volumeMounts:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx-html</span></span><br><span class="line">        <span class="attr">mountPath:</span> <span class="string">/usr/share/nginx/html</span></span><br><span class="line">  <span class="attr">imagePullSecrets:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">registrykey</span></span><br><span class="line">  <span class="attr">volumes:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx-html</span></span><br><span class="line">    <span class="attr">glusterfs:</span></span><br><span class="line">      <span class="attr">path:</span> <span class="string">tomcat-data</span>     <span class="comment"># 卷名称</span></span><br><span class="line">      <span class="attr">endpoints:</span> <span class="string">glusterfs</span>  </span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">80</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line"><span class="comment"># kubectl exec -it nginx -- /bin/bash</span></span><br><span class="line"><span class="string">root@nginx:/#</span> <span class="string">cd</span> <span class="string">/usr/share/nginx/html/</span></span><br><span class="line"><span class="string">root@nginx:/#</span> <span class="string">echo</span> <span class="string">&#x27;123&#x27;</span> <span class="string">&gt;</span> <span class="string">index.html</span></span><br><span class="line"><span class="comment"># ll /gfs/data/</span></span><br><span class="line"><span class="string">total</span> <span class="number">4</span></span><br><span class="line"><span class="string">-rw-r--r--</span> <span class="number">2</span> <span class="string">root</span> <span class="string">root</span> <span class="number">4</span> <span class="string">Nov</span>  <span class="number">1</span> <span class="number">11</span><span class="string">:51</span> <span class="string">index.html</span></span><br><span class="line"><span class="comment"># kubectl get svc nginx</span></span><br><span class="line"><span class="string">NAME</span>    <span class="string">TYPE</span>        <span class="string">CLUSTER-IP</span>    <span class="string">EXTERNAL-IP</span>   <span class="string">PORT(S)</span>   <span class="string">AGE</span></span><br><span class="line"><span class="string">nginx</span>   <span class="string">ClusterIP</span>   <span class="number">10.99</span><span class="number">.87</span><span class="number">.35</span>   <span class="string">&lt;none&gt;</span>        <span class="number">80</span><span class="string">/TCP</span>    <span class="string">44h</span></span><br><span class="line"><span class="comment"># curl 10.99.87.35/index.html</span></span><br><span class="line"><span class="number">123</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>Kubernetes的helm部署</title>
    <url>/2019/11/05/Kubernetes%E7%9A%84helm%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>在没使用 helm 之前，向 kubernetes 部署应用，我们要依次部署 deployment、svc 等，步骤较繁琐。况且随着很多项目微服务化，复杂的应用在容器中部署以及管理显得较为复杂，helm 通过打包的方式，支持发布的版本管理和控制，很大程度上简化了 Kubernetes 应用的部署和管理</p>
<p>Helm 本质就是让 K8s 的应用管理（Deployment,Service 等 ) 可配置，能动态生成。通过动态生成 K8s 资源清单文件（deployment.yaml，service.yaml）。然后调用 Kubectl 自动执行 K8s 资源部署</p>
 <span id="more"></span>

<p>Helm 是官方提供的类似于 YUM 的包管理器，是部署环境的流程封装。Helm 有两个重要的概念：chart 和release</p>
<ul>
<li><p>chart 是创建一个应用的信息集合，包括各种 Kubernetes 对象的配置模板、参数定义、依赖关系、文档说明等。chart 是应用部署的自包含逻辑单元。可以将 chart 想象成 apt、yum 中的软件安装包</p>
</li>
<li><p>release 是 chart 的运行实例，代表了一个正在运行的应用。当 chart 被安装到 Kubernetes 集群，就生成一个 release。chart 能够多次安装到同一个集群，每次安装都是一个 release</p>
</li>
</ul>
<p>helm包含两个组件：Helm客户端和Tiller服务器：如下图所示</p>
<p><img src="/image/1572954382-Image.png"></p>
<p>Helm 客户端负责 chart 和 release 的创建和管理以及和 Tiller 的交互。Tiller 服务器运行在 Kubernetes 集群中，它会处理 Helm 客户端的请求，与 Kubernetes API Server 交互</p>
<h2 id="部署helm"><a href="#部署helm" class="headerlink" title="部署helm"></a>部署helm</h2><h3 id="安装helm"><a href="#安装helm" class="headerlink" title="安装helm"></a>安装helm</h3><p>越来越多的公司和团队开始使用 Helm 这个 Kubernetes 的包管理器，我们也将使用 Helm 安装 Kubernetes 的常用组件。 Helm 由客户端命 helm 令行工具和服务端 tiller 组成，Helm 的安装十分简单。下载 helm 命令行工具到master 节点 node1 的 &#x2F;usr&#x2F;local&#x2F;bin 下，这里下载的 2.13. 1版本</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget https://storage.googleapis.com/kubernetes-helm/helm-v2.13.1-linux-amd64.tar.gz</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">tar xf helm-v2.13.1-linux-amd64.tar.gz</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cd</span> linux-amd64/</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cp</span> helm /usr/local/bin/</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">chmod</span> a+x /usr/local/bin/helm</span></span><br></pre></td></tr></table></figure>


<p>为了安装服务端 tiller，还需要在这台机器上配置好 kubectl 工具和 kubeconfig 文件，确保 kubectl 工具可以在这台机器上访问 apiserver 且正常使用，这里使用的master节点</p>
<p>因为 Kubernetes APIServer 开启了 RBAC 访问控制，所以需要创建 tiller 使用的 service account: tiller 并分配合适的角色给它。详细内容可以查看helm文档中的<a href="https://helm.sh/docs/using_helm/#role-based-access-control">Role-based Access Control</a>。这里简单起见直接分配cluster- admin 这个集群内置的 ClusterRole 给它</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim rabc-config.yml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ServiceAccount</span><br><span class="line">metadata:</span><br><span class="line">  name: tiller</span><br><span class="line">  namespace: kube-system</span><br><span class="line">---</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  name: tiller</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: cluster-admin</span><br><span class="line">subjects:</span><br><span class="line">  - kind: ServiceAccount</span><br><span class="line">    name: tiller</span><br><span class="line">    namespace: kube-system</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl create -f rabc-config.yml</span></span><br><span class="line">serviceaccount/tiller created</span><br><span class="line">clusterrolebinding.rbac.authorization.k8s.io/tiller created</span><br></pre></td></tr></table></figure>


<h3 id="安装tiller"><a href="#安装tiller" class="headerlink" title="安装tiller"></a>安装tiller</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">helm init --service-account tiller --skip-refresh</span></span><br><span class="line">Creating /root/.helm</span><br><span class="line">Creating /root/.helm/repository</span><br><span class="line">Creating /root/.helm/repository/cache</span><br><span class="line">Creating /root/.helm/repository/local</span><br><span class="line">Creating /root/.helm/plugins</span><br><span class="line">Creating /root/.helm/starters</span><br><span class="line">Creating /root/.helm/cache/archive</span><br><span class="line">Creating /root/.helm/repository/repositories.yaml</span><br><span class="line">Adding stable repo with URL: https://kubernetes-charts.storage.googleapis.com</span><br><span class="line">Adding local repo with URL: http://127.0.0.1:8879/charts</span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">HELM_HOME has been configured at /root/.helm.</span></span><br><span class="line">Tiller (the Helm server-side component) has been installed into your Kubernetes Cluster.</span><br><span class="line">Please note: by default, Tiller is deployed with an insecure &#x27;allow unauthenticated users&#x27; policy.</span><br><span class="line">To prevent this, run `helm init` with the --tiller-tls-verify flag.</span><br><span class="line">For more information on securing your installation see: https://docs.helm.sh/using_helm/#securing-your-helm-installation</span><br><span class="line">Happy Helming!</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get pod -n kube-system|grep tiller</span></span><br><span class="line">tiller-deploy-58565b5464-ghqwd          0/1     ImagePullBackOff   0          53s</span><br><span class="line">因为tiller需要科学上网才能下载</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl describe pod tiller-deploy-58565b5464-ghqwd -n kube-system</span></span><br><span class="line">Events:</span><br><span class="line">  Type     Reason     Age                    From               Message</span><br><span class="line">  ----     ------     ----                   ----               -------</span><br><span class="line">  Normal   Scheduled  4m53s                  default-scheduler  Successfully assigned kube-system/tiller-deploy-58565b5464-ghqwd to node02</span><br><span class="line">  Normal   Pulling    2m34s (x4 over 4m53s)  kubelet, node02    Pulling image &quot;gcr.io/kubernetes-helm/tiller:v2.13.1&quot;</span><br><span class="line">  Warning  Failed     2m19s (x4 over 4m38s)  kubelet, node02    Failed to pull image &quot;gcr.io/kubernetes-helm/tiller:v2.13.1&quot;: rpc error: code = Unknown desc = Error response from daemon: Get https://gcr.io/v2/: net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)</span><br><span class="line">  Warning  Failed     2m19s (x4 over 4m38s)  kubelet, node02    Error: ErrImagePull</span><br><span class="line">  Normal   BackOff    2m7s (x6 over 4m38s)   kubelet, node02    Back-off pulling image &quot;gcr.io/kubernetes-helm/tiller:v2.13.1&quot;</span><br><span class="line">  Warning  Failed     114s (x7 over 4m38s)   kubelet, node02    Error: ImagePullBackOff</span><br><span class="line"></span><br><span class="line">镜像包sftp至node02</span><br><span class="line">链接：https://pan.baidu.com/s/1dMtQ9h5_mRZ7aVbPp9BOOA提取码：c5bi</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker load -i helm-tiller.tar</span></span><br><span class="line">3fc64803ca2d: Loading layer  4.463MB/4.463MB</span><br><span class="line">79395a173ae6: Loading layer  6.006MB/6.006MB</span><br><span class="line">c33cd2d4c63e: Loading layer  37.16MB/37.16MB</span><br><span class="line">d727bd750bf2: Loading layer  36.89MB/36.89MB</span><br><span class="line">Loaded image: gcr.io/kubernetes-helm/tiller:v2.13.1</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get pod -n kube-system|grep tiller</span></span><br><span class="line">tiller-deploy-58565b5464-ghqwd          1/1     Running   0          4m54s</span><br></pre></td></tr></table></figure>


<p>检查helm</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">helm version</span></span><br><span class="line">Client: &amp;version.Version&#123;SemVer:&quot;v2.13.1&quot;, GitCommit:&quot;618447cbf203d147601b4b9bd7f8c37a5d39fbb4&quot;, GitTreeState:&quot;clean&quot;&#125;</span><br><span class="line">Server: &amp;version.Version&#123;SemVer:&quot;v2.13.1&quot;, GitCommit:&quot;618447cbf203d147601b4b9bd7f8c37a5d39fbb4&quot;, GitTreeState:&quot;clean&quot;&#125;</span><br></pre></td></tr></table></figure>


<h3 id="自定义helm包"><a href="#自定义helm包" class="headerlink" title="自定义helm包"></a>自定义helm包</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mkdir</span> hello-world</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cd</span> hello-world</span></span><br></pre></td></tr></table></figure>


<p>创建自描述文件 Chart.yaml , 这个文件必须有 name 和 version 定义</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cat</span> &lt;&lt;<span class="string">&#x27;EOF&#x27;</span> &gt; ./Chart.yaml</span></span><br><span class="line">name: hello-world</span><br><span class="line">version: 1.0.0</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>


<p>创建模板文件，用于生成 Kubernetes 资源清单（manifests）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mkdir</span> ./templates</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cat</span> &lt;&lt;<span class="string">&#x27;EOF&#x27;</span> &gt; ./templates/deployment.yaml</span></span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: hello-world</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: hello-world</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">        - name: hello-world</span><br><span class="line">          image: harbor.ui.com/library/nginx:1.13</span><br><span class="line">          ports:</span><br><span class="line">            - containerPort: 80</span><br><span class="line">              protocol: TCP</span><br><span class="line">EOF</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cat</span> &lt;&lt;<span class="string">&#x27;EOF&#x27;</span> &gt; ./templates/service.yaml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: hello-world</span><br><span class="line">spec:</span><br><span class="line">  type: NodePort</span><br><span class="line">  ports:</span><br><span class="line">  - port: 80</span><br><span class="line">    targetPort: 80</span><br><span class="line">    protocol: TCP</span><br><span class="line">  selector:</span><br><span class="line">    app: hello-world</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>


<p>使用命令 helm install RELATIVE_PATH_TO_CHART 创建一次Release</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">helm install .</span></span><br><span class="line">NAME:   busted-mandrill</span><br><span class="line">LAST DEPLOYED: Tue Nov  5 18:19:13 2019</span><br><span class="line">NAMESPACE: default</span><br><span class="line">STATUS: DEPLOYED</span><br><span class="line">RESOURCES:</span><br><span class="line">==&gt; v1/Pod(related)</span><br><span class="line">NAME                          READY  STATUS   RESTARTS  AGE</span><br><span class="line">hello-world-79779b5fdc-2g7n7  0/1    Pending  0         0s</span><br><span class="line">==&gt; v1/Service</span><br><span class="line">NAME         TYPE      CLUSTER-IP     EXTERNAL-IP  PORT(S)       AGE</span><br><span class="line">hello-world  NodePort  10.101.227.55  &lt;none&gt;       80:31968/TCP  0s</span><br><span class="line">==&gt; v1beta1/Deployment</span><br><span class="line">NAME         READY  UP-TO-DATE  AVAILABLE  AGE</span><br><span class="line">hello-world  0/1    0           0          0s</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">helm list</span></span><br><span class="line">NAME               REVISION    UPDATED                     STATUS      CHART                 APP VERSION    NAMESPACE</span><br><span class="line">busted-mandrill    1           Tue Nov  5 18:19:13 2019    DEPLOYED    hello-world-1.0.0                    default  </span><br></pre></td></tr></table></figure>


<h3 id="helm常见操作"><a href="#helm常见操作" class="headerlink" title="helm常见操作"></a>helm常见操作</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">列出已经部署的 Release</span><br><span class="line">helm ls</span><br><span class="line"></span><br><span class="line">查询一个特定的 Release 的状态</span><br><span class="line">helm status RELEASE_NAME</span><br><span class="line"></span><br><span class="line">移除所有与这个 Release 相关的 Kubernetes 资源</span><br><span class="line">helm delete cautious-shrimp</span><br><span class="line"></span><br><span class="line">查看以移除Release</span><br><span class="line">helm ls --deleted</span><br><span class="line"></span><br><span class="line">helm rollback RELEASE_NAME REVISION_NUMBER</span><br><span class="line">helm rollback cautious-shrimp 1</span><br><span class="line"></span><br><span class="line">使用 helm delete --purge RELEASE_NAME 移除所有与指定 Release 相关的 Kubernetes 资源和所有这个Release 的记录</span><br><span class="line">helm delete --purge cautious-shrimp</span><br></pre></td></tr></table></figure>


<h3 id="使用VAlues模板"><a href="#使用VAlues模板" class="headerlink" title="使用VAlues模板"></a>使用VAlues模板</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim values.yaml</span></span><br><span class="line">image:</span><br><span class="line">  repository: harbor.ui.com/library/nginx</span><br><span class="line">  tag: &#x27;1.15&#x27;</span><br></pre></td></tr></table></figure>


<p>这个文件中定义的值，在模板文件中可以通过 .VAlues对象访问到</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim ./templates/deployment.yaml</span></span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: hello-world</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: hello-world</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">        - name: hello-world</span><br><span class="line">          image: &#123; &#123; .Values.image.repository &#125;&#125;:&#123; &#123; .Values.image.tag &#125;&#125;</span><br><span class="line">          ports:</span><br><span class="line">            - containerPort: 80</span><br><span class="line">              protocol: TCP</span><br></pre></td></tr></table></figure>


<h3 id="升级版本"><a href="#升级版本" class="headerlink" title="升级版本"></a>升级版本</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">helm upgrade -f values.yaml busted-mandrill .</span></span><br><span class="line">Release &quot;busted-mandrill&quot; has been upgraded. Happy Helming!</span><br><span class="line">LAST DEPLOYED: Tue Nov  5 18:23:20 2019</span><br><span class="line">NAMESPACE: default</span><br><span class="line">STATUS: DEPLOYED</span><br><span class="line">RESOURCES:</span><br><span class="line">==&gt; v1/Pod(related)</span><br><span class="line">NAME                          READY  STATUS             RESTARTS  AGE</span><br><span class="line">hello-world-79779b5fdc-2g7n7  1/1    Terminating        0         4m6s</span><br><span class="line">hello-world-df9f97985-hv8dz   0/1    ContainerCreating  0         0s</span><br><span class="line">==&gt; v1/Service</span><br><span class="line">NAME         TYPE      CLUSTER-IP     EXTERNAL-IP  PORT(S)       AGE</span><br><span class="line">hello-world  NodePort  10.101.227.55  &lt;none&gt;       80:31968/TCP  4m6s</span><br><span class="line">==&gt; v1beta1/Deployment</span><br><span class="line">NAME         READY  UP-TO-DATE  AVAILABLE  AGE</span><br><span class="line">hello-world  0/1    1           0          4m6s  </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get pod</span></span><br><span class="line">NAME                          READY   STATUS    RESTARTS   AGE</span><br><span class="line">hello-world-df9f97985-hv8dz   1/1     Running   0          26s</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">helm <span class="built_in">history</span> busted-mandrill</span></span><br><span class="line">REVISION    UPDATED                     STATUS        CHART                DESCRIPTION     </span><br><span class="line">1           Tue Nov  5 18:19:13 2019    SUPERSEDED    hello-world-1.0.0    Install complete</span><br><span class="line">2           Tue Nov  5 18:23:20 2019    DEPLOYED      hello-world-1.0.0    Upgrade complete</span><br></pre></td></tr></table></figure>


<p>在 values.yaml 中的值可以被部署 release 时用到的参数 –values YAML_FILE_PATH 或 –setkey1&#x3D;value1, key2&#x3D;value2 覆盖掉</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">helm install --<span class="built_in">set</span> image.tag=<span class="string">&#x27;latest&#x27;</span> .</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
  </entry>
  <entry>
    <title>Kubernetes部署nginx-ingress使用</title>
    <url>/2019/10/24/Kubernetes%E9%83%A8%E7%BD%B2nginx-ingress%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h1 id="ingress的部署"><a href="#ingress的部署" class="headerlink" title="ingress的部署"></a>ingress的部署</h1><ul>
<li>Deployment+LoadBalancer模式的Service</li>
</ul>
<p>如果要把ingress部署在公有云，那用这种方式比较合适。用Deployment部署ingress-controller，创建一个type为LoadBalancer的service关联这组pod。大部分公有云，都会为LoadBalancer的service自动创建一个负载均衡器，通常还绑定了公网地址。只要把域名解析指向该地址，就实现了集群服务的对外暴露。</p>
 <span id="more"></span>

<ul>
<li>Deployment+NodePort模式的Service</li>
</ul>
<p>同样用deployment模式部署ingress-controller，并创建对应的服务，但是type为NodePort。这样，ingress就会暴露在集群节点ip的特定端口上。由于nodeport暴露的端口是随机端口，一般会在前面再搭建一套负载均衡器来转发请求。该方式一般用于宿主机是相对固定的环境ip地址不变的场景。</p>
<p>NodePort方式暴露ingress虽然简单方便，但是NodePort多了一层NAT，在请求量级很大时可能对性能会有一定影响。</p>
<ul>
<li>DaemonSet+HostNetwork+nodeSelector</li>
</ul>
<p>用DaemonSet结合nodeselector来部署ingress-controller到特定的node上，然后使用HostNetwork直接把该pod与宿主机node的网络打通，直接使用宿主机的80&#x2F;433端口就能访问服务。这时，ingress-controller所在的node机器就很类似传统架构的边缘节点，比如机房入口的nginx服务器。该方式整个请求链路最简单，性能相对NodePort模式更好。缺点是由于直接利用宿主机节点的网络和端口，一个node只能部署一个ingress-controller pod。比较适合大并发的生产环境使用。</p>
<h2 id="镜像准备"><a href="#镜像准备" class="headerlink" title="镜像准备"></a>镜像准备</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget  https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/static/mandatory.yaml</span></span><br><span class="line">链接：https://pan.baidu.com/s/1H6Tks0Zyhr2BQpadJE8Jdw提取码：1a36</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">tar xf ingree.contro.tar.gz</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker load -i ingree.contro.tar</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker tag quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.25.0 harbor.ui.com/library/nginx-ingress-controller:0.25.0</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker push harbor.ui.com/library/nginx-ingress-controller:0.25.0</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim mandatory.yaml</span></span><br><span class="line">      containers:</span><br><span class="line">        - name: nginx-ingress-controller</span><br><span class="line">          image: harbor.ui.com/library/nginx-ingress-controller:0.25.0</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl apply -f mandatory.yaml</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get pod -n ingress-nginx</span></span><br><span class="line">NAME READY STATUS RESTARTS AGE</span><br></pre></td></tr></table></figure>

<h2 id="Deployment-NodePort模式的Service"><a href="#Deployment-NodePort模式的Service" class="headerlink" title="Deployment+NodePort模式的Service"></a>Deployment+NodePort模式的Service</h2><p>通过ingress-controller对外提供服务，现在还需要手动给ingress-controller建立一个servcie，接收集群外部流量</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/static/provider/baremetal/service-nodeport.yaml</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl apply -f service-nodeport.yaml</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get svc -n ingress-nginx</span></span><br><span class="line">NAME            TYPE       CLUSTER-IP     EXTERNAL-IP   PORT(S)                      AGE</span><br></pre></td></tr></table></figure>

<h3 id="ingress-http代理访问"><a href="#ingress-http代理访问" class="headerlink" title="ingress http代理访问"></a>ingress http代理访问</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim nginx.yml</span></span><br><span class="line"><span class="comment"># nginx RS</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ReplicaSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span>  </span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">myweb</span> </span><br><span class="line">  <span class="attr">template:</span>    </span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">myweb</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">myweb</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">nginx:1.13</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># nginx service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">myweb</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span>       </span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">80</span>  </span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">myweb</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># ingress</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-ingress</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">kubernetes.io/ingress.class:</span> <span class="string">&quot;nginx&quot;</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">rules:</span>   <span class="comment"># </span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">www.nginx.com</span>  <span class="comment"># 域名</span></span><br><span class="line">      <span class="attr">http:</span> </span><br><span class="line">        <span class="attr">paths:</span>  </span><br><span class="line">        <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/</span>          <span class="comment"># 路径</span></span><br><span class="line">          <span class="attr">backend:</span>         <span class="comment"># 匹配后端service</span></span><br><span class="line">            <span class="attr">serviceName:</span> <span class="string">myweb</span></span><br><span class="line">            <span class="attr">servicePort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure>



<p><img src="/image/1571916142-Image.png"></p>
<h3 id="ingress-https代理访问"><a href="#ingress-https代理访问" class="headerlink" title="ingress https代理访问"></a>ingress https代理访问</h3><p>创建证书</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout tls.key -out tls.crt -subj <span class="string">&quot;/C=CN/ST=Beijing/L=Beijing/O=DevOps/CN=www.nginx.com&quot;</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl create secret tls https-secret --key tls.key --cert tls.crt</span></span><br></pre></td></tr></table></figure>



<p>创建ingress资源</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim nginx.yml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-ingress</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">kubernetes.io/ingress.class:</span> <span class="string">&quot;nginx&quot;</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">tls:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">hosts:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">www.nginx.com</span></span><br><span class="line">      <span class="attr">secretName:</span> <span class="string">https-secret</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">www.nginx.com</span></span><br><span class="line">      <span class="attr">http:</span></span><br><span class="line">        <span class="attr">paths:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">          <span class="attr">backend:</span></span><br><span class="line">            <span class="attr">serviceName:</span> <span class="string">myweb</span></span><br></pre></td></tr></table></figure>



<p><img src="/image/1571916315-Image.png"></p>
<h3 id="Nginx-进行-BasicAuth"><a href="#Nginx-进行-BasicAuth" class="headerlink" title="Nginx 进行 BasicAuth"></a>Nginx 进行 BasicAuth</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum install -y htppd</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">htpasswd -c auth nginx</span></span><br><span class="line">New password:</span><br><span class="line">Re-type new password:</span><br><span class="line">Adding password for user nginx</span><br></pre></td></tr></table></figure>



<p>创建ingress资源</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim nginx.yml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-ingress</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">kubernetes.io/ingress.class:</span> <span class="string">&quot;nginx&quot;</span></span><br><span class="line">    <span class="attr">nginx.ingress.kubernetes.io/auth-type:</span> <span class="string">basic</span></span><br><span class="line">    <span class="attr">nginx.ingress.kubernetes.io/auth-secret:</span> <span class="string">basic-auth</span></span><br><span class="line">    <span class="attr">nginx.ingress.kubernetes.io/auth-realm:</span> <span class="string">&#x27;Authentication Required - nginx&#x27;</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">tls:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">hosts:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">www.nginx.com</span></span><br><span class="line">      <span class="attr">secretName:</span> <span class="string">https-secret</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">www.nginx.com</span></span><br><span class="line">      <span class="attr">http:</span></span><br><span class="line">        <span class="attr">paths:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">          <span class="attr">backend:</span></span><br><span class="line">            <span class="attr">serviceName:</span> <span class="string">myweb</span></span><br><span class="line">            <span class="attr">servicePort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure>



<p><img src="/image/1571916631-Image.png"></p>
<h2 id="DaemonSet-HostNetwork-nodeSelector"><a href="#DaemonSet-HostNetwork-nodeSelector" class="headerlink" title="DaemonSet+HostNetwork+nodeSelector"></a>DaemonSet+HostNetwork+nodeSelector</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim mandatory.yaml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">DaemonSet</span>  <span class="comment"># 修改成DaemonSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-ingress-controller</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="comment">#  replicas: 1   # 注释副本</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">      <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">        <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line">      <span class="attr">annotations:</span></span><br><span class="line">        <span class="attr">prometheus.io/port:</span> <span class="string">&quot;10254&quot;</span></span><br><span class="line">        <span class="attr">prometheus.io/scrape:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="comment"># wait up to five minutes for the drain of connections</span></span><br><span class="line">      <span class="attr">terminationGracePeriodSeconds:</span> <span class="number">300</span></span><br><span class="line">      <span class="attr">serviceAccountName:</span> <span class="string">nginx-ingress-serviceaccount</span></span><br><span class="line">      <span class="attr">hostNetwork:</span> <span class="literal">true</span>   <span class="comment"># 启用主机网络</span></span><br><span class="line">      <span class="attr">dnsPolicy:</span> <span class="string">&quot;ClusterFirstWithHostNet&quot;</span></span><br><span class="line">      <span class="attr">nodeSelector:</span></span><br><span class="line">        <span class="attr">kubernetes.io/os:</span> <span class="string">linux</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx-ingress-controller</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">harbor.ui.com/library/nginx-ingress-controller:0.25.0</span></span><br><span class="line">          <span class="attr">args:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">/nginx-ingress-controller</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--configmap=$(POD_NAMESPACE)/nginx-configuration</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--tcp-services-configmap=$(POD_NAMESPACE)/tcp-services</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--udp-services-configmap=$(POD_NAMESPACE)/udp-services</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--publish-service=$(POD_NAMESPACE)/ingress-nginx</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--annotations-prefix=nginx.ingress.kubernetes.io</span></span><br><span class="line">          <span class="attr">securityContext:</span></span><br><span class="line">            <span class="attr">allowPrivilegeEscalation:</span> <span class="literal">true</span></span><br><span class="line">            <span class="attr">capabilities:</span></span><br><span class="line">              <span class="attr">drop:</span></span><br><span class="line">                <span class="bullet">-</span> <span class="string">ALL</span></span><br><span class="line">              <span class="attr">add:</span></span><br><span class="line">                <span class="bullet">-</span> <span class="string">NET_BIND_SERVICE</span></span><br><span class="line">            <span class="comment"># www-data -&gt; 33</span></span><br><span class="line">            <span class="attr">runAsUser:</span> <span class="number">33</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POD_NAME</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">fieldRef:</span></span><br><span class="line">                  <span class="attr">fieldPath:</span> <span class="string">metadata.name</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POD_NAMESPACE</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">fieldRef:</span></span><br><span class="line">                  <span class="attr">fieldPath:</span> <span class="string">metadata.namespace</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">              <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">              <span class="attr">hostPort:</span> <span class="number">80</span>   <span class="comment"># 开放端口</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">https</span></span><br><span class="line">              <span class="attr">containerPort:</span> <span class="number">443</span></span><br><span class="line">              <span class="attr">hostPort:</span> <span class="number">443</span></span><br><span class="line">          <span class="attr">livenessProbe:</span></span><br><span class="line">            <span class="attr">failureThreshold:</span> <span class="number">3</span></span><br><span class="line">            <span class="attr">httpGet:</span></span><br><span class="line">              <span class="attr">path:</span> <span class="string">/healthz</span></span><br><span class="line">              <span class="attr">port:</span> <span class="number">10254</span></span><br><span class="line">              <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">            <span class="attr">initialDelaySeconds:</span> <span class="number">10</span></span><br><span class="line">            <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">            <span class="attr">successThreshold:</span> <span class="number">1</span></span><br><span class="line">            <span class="attr">timeoutSeconds:</span> <span class="number">10</span></span><br><span class="line">          <span class="attr">readinessProbe:</span></span><br><span class="line">            <span class="attr">failureThreshold:</span> <span class="number">3</span></span><br><span class="line">            <span class="attr">httpGet:</span></span><br><span class="line">              <span class="attr">path:</span> <span class="string">/healthz</span></span><br><span class="line">              <span class="attr">port:</span> <span class="number">10254</span></span><br><span class="line">              <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">            <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">            <span class="attr">successThreshold:</span> <span class="number">1</span></span><br><span class="line">            <span class="attr">timeoutSeconds:</span> <span class="number">10</span></span><br><span class="line">          <span class="attr">lifecycle:</span></span><br><span class="line">            <span class="attr">preStop:</span></span><br><span class="line">              <span class="attr">exec:</span></span><br><span class="line">                <span class="attr">command:</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="string">/wait-shutdown</span></span><br><span class="line"><span class="comment"># sed  -i &#x27;s/type: NodePort/type: ClusterIP/g&#x27; service-nodeport.yaml # 不暴露端口</span></span><br><span class="line"><span class="comment"># kubectl apply -f mandatory.yaml</span></span><br><span class="line"><span class="comment"># kubectl apply -f service-nodeport.yaml</span></span><br><span class="line"><span class="comment"># kubectl get svc -n ingress-nginx</span></span><br><span class="line"><span class="string">NAME</span>            <span class="string">TYPE</span>        <span class="string">CLUSTER-IP</span>      <span class="string">EXTERNAL-IP</span>   <span class="string">PORT(S)</span>          <span class="string">AGE</span></span><br><span class="line"><span class="string">ingress-nginx</span>   <span class="string">ClusterIP</span>   <span class="number">10.100</span><span class="number">.130</span><span class="number">.12</span>   <span class="string">&lt;none&gt;</span>        <span class="number">80</span><span class="string">/TCP,443/TCP</span>   <span class="string">20m</span></span><br></pre></td></tr></table></figure>

<h2 id="常用重写规则"><a href="#常用重写规则" class="headerlink" title="常用重写规则"></a>常用重写规则</h2><table>
<thead>
<tr>
<th>名称</th>
<th>名称</th>
<th>值</th>
</tr>
</thead>
<tbody><tr>
<td><a href="http://nginx.ingress.kubernetes.io/rewrite-target">nginx.ingress.kubernetes.io&#x2F;rewrite-target</a></td>
<td>url重定向</td>
<td>字符串</td>
</tr>
<tr>
<td><a href="http://nginx.ingress.kubernetes.io/ssl-redirect">nginx.ingress.kubernetes.io&#x2F;ssl-redirect</a></td>
<td>指示位置部分是否可访问SSL（当Ingress包含证书时默认为True）</td>
<td>布尔值</td>
</tr>
<tr>
<td><a href="http://nginx.ingress.kubernetes.io/force-ssl-redirect">nginx.ingress.kubernetes.io&#x2F;force-ssl-redirect</a></td>
<td>即使Ingress未启用TLS，也强制重定向到HTTPS</td>
<td>布尔值</td>
</tr>
<tr>
<td><a href="http://nginx.ingress.kubernetes.io/app-root">nginx.ingress.kubernetes.io&#x2F;app-root</a></td>
<td>定义Controller必须重定向的应用程序跟</td>
<td>字符串</td>
</tr>
<tr>
<td><a href="http://nginx.ingress.kubernetes.io/use-regex">nginx.ingress.kubernetes.io&#x2F;use-regex</a></td>
<td>只是Ingress上定义的路径是否使用正则表达式</td>
<td>布尔值</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
  </entry>
  <entry>
    <title>Kubernetes集群的污点与容忍</title>
    <url>/2019/11/04/Kubernetes%E9%9B%86%E7%BE%A4%E7%9A%84%E6%B1%A1%E7%82%B9%E4%B8%8E%E5%AE%B9%E5%BF%8D/</url>
    <content><![CDATA[<h2 id="Taint-和-Toleration"><a href="#Taint-和-Toleration" class="headerlink" title="Taint 和 Toleration"></a>Taint 和 Toleration</h2><p>节点亲和性，是pod的一种属性（偏好或硬性要求），它使pod被吸引到一类特定的节点。Taint 则相反，它使节点能够排斥一类特定的 pod</p>
<p>Taint 和 toleration 相互配合，可以用来避免 pod 被分配到不合适的节点上。每个节点上都可以应用一个或多个taint ，这表示对于那些不能容忍这些 taint 的 pod，是不会被该节点接受的。如果将 toleration 应用于 pod上，则表示这些 pod 可以（但不要求）被调度到具有匹配 taint 的节点上</p>
 <span id="more"></span>

<h3 id="污点-Taint"><a href="#污点-Taint" class="headerlink" title="污点(Taint)"></a>污点(Taint)</h3><p>污点 ( Taint ) 的组成</p>
<p>使用kubectl taint命令可以给某个 Node 节点设置污点，Node 被设置上污点之后就和 Pod 之间存在了一种相斥的关系，可以让 Node 拒绝 Pod 的调度执行，甚至将 Node 已经存在的 Pod 驱逐出去</p>
<p>每个污点的组成如下：</p>
<p>key&#x3D;value:effect</p>
<p>每个污点有一个 key 和 value 作为污点的标签，其中 value 可以为空，effect 描述污点的作用。</p>
<p>当前 tainteffect 支持如下三个选项：</p>
<ul>
<li><p>NoSchedule：表示 k8s 将不会将 Pod 调度到具有该污点的 Node 上</p>
</li>
<li><p>PreferNoSchedule：表示 k8s 将尽量避免将 Pod 调度到具有该污点的 Node 上</p>
</li>
<li><p>NoExecute：表示 k8s 将不会将 Pod 调度到具有该污点的 Node 上，同时会将 Node 上已经存在的 Pod 驱逐出去</p>
</li>
</ul>
<h3 id="污点的设置、查看和去除"><a href="#污点的设置、查看和去除" class="headerlink" title="污点的设置、查看和去除"></a>污点的设置、查看和去除</h3><p># 设置污点</p>
<p>kubectl taint nodes node1 key1&#x3D;value1:NoSchedule</p>
<p># 节点说明中，查找 Taints 字段</p>
<p>kubectl describe node node-name</p>
<p># 去除污点</p>
<p>kubectl taint nodes node1 key1:NoSchedule-</p>
<h4 id="设置污点"><a href="#设置污点" class="headerlink" title="设置污点"></a>设置污点</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl taint nodes node01 check=node01:NoExecute</span>      </span><br><span class="line">node/node01 tainted</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl taint nodes node02 check=node02:NoExecute</span></span><br><span class="line">node/node02 tainted</span><br></pre></td></tr></table></figure>


<h4 id="查看node节点Taints字段"><a href="#查看node节点Taints字段" class="headerlink" title="查看node节点Taints字段"></a>查看node节点Taints字段</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get node</span></span><br><span class="line">NAME     STATUS   ROLES    AGE   VERSION</span><br><span class="line">matser   Ready    master   16d   v1.15.1</span><br><span class="line">node01   Ready    node     16d   v1.15.1</span><br><span class="line">node02   Ready    node     16d   v1.15.1</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl describe node matser|grep Taint       <span class="comment"># master节点自带不调度污点</span></span></span><br><span class="line">Taints:             node-role.kubernetes.io/master:NoSchedule</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl describe node node01|grep Taints</span></span><br><span class="line">Taints:             check=node01:NoExecute</span><br></pre></td></tr></table></figure>


<p>查看是否生效</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim nginx-deploy.yml</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-deployment</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">nginx:1.15</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line"><span class="comment"># kubectl apply -f  nginx-deploy.yml</span></span><br><span class="line"><span class="string">deployment.extensions/nginx-deployment</span> <span class="string">created</span></span><br><span class="line"><span class="comment"># kubectl get pod</span></span><br><span class="line"><span class="string">NAME</span>                                <span class="string">READY</span>   <span class="string">STATUS</span>    <span class="string">RESTARTS</span>   <span class="string">AGE</span></span><br><span class="line"><span class="string">nginx-deployment-6f6d9b887f-9dddq</span>   <span class="number">0</span><span class="string">/1</span>     <span class="string">Pending</span>   <span class="number">0</span>          <span class="string">91s</span></span><br><span class="line"><span class="string">nginx-deployment-6f6d9b887f-f2hhk</span>   <span class="number">0</span><span class="string">/1</span>     <span class="string">Pending</span>   <span class="number">0</span>          <span class="string">91s</span></span><br><span class="line"><span class="string">nginx-deployment-6f6d9b887f-v7w54</span>   <span class="number">0</span><span class="string">/1</span>     <span class="string">Pending</span>   <span class="number">0</span>          <span class="string">91s</span></span><br><span class="line"><span class="comment"># kubectl describe pod nginx-deployment-6f6d9b887f-9dddq</span></span><br><span class="line"><span class="attr">Events:</span></span><br><span class="line">  <span class="string">Type</span>     <span class="string">Reason</span>            <span class="string">Age</span>               <span class="string">From</span>               <span class="string">Message</span></span><br><span class="line">  <span class="string">----</span>     <span class="string">------</span>            <span class="string">----</span>              <span class="string">----</span>               <span class="string">-------</span></span><br><span class="line">  <span class="string">Warning</span>  <span class="string">FailedScheduling</span>  <span class="string">1s</span> <span class="string">(x3</span> <span class="string">over</span> <span class="string">69s)</span>  <span class="string">default-scheduler</span>  <span class="attr">0/3 nodes are available:</span> <span class="number">3</span> <span class="string">node(s)</span> <span class="string">had</span> <span class="string">taints</span> <span class="string">that</span> <span class="string">the</span> <span class="string">pod</span> <span class="string">didn&#x27;t</span> <span class="string">tolerate.</span></span><br></pre></td></tr></table></figure>


<h3 id="容忍"><a href="#容忍" class="headerlink" title="容忍"></a>容忍</h3><p>设置了污点的 Node 将根据 taint 的 effect：NoSchedule、PreferNoSchedule、NoExecute 和 Pod 之间产生互斥的关系，Pod 将在一定程度上不会被调度到 Node 上。但我们可以在 Pod 上设置容忍 ( Toleration ) ，意思是设置了容忍的 Pod 将可以容忍污点的存在，可以被调度到存在污点的 Node 上</p>
<ul>
<li><p>其中 key, vaule, effect 要与 Node 上设置的 taint 保持一致</p>
</li>
<li><p>operator 的值为 Exists 将会忽略 value 值</p>
</li>
<li><p>tolerationSeconds 用于描述当 Pod 需要被驱逐时可以在 Pod 上继续保留运行的时间</p>
</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim nginx-deploy.yml</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-deployment</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">nginx:1.15</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">      <span class="attr">tolerations:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">&quot;check&quot;</span></span><br><span class="line">        <span class="attr">operator:</span> <span class="string">&quot;Equal&quot;</span></span><br><span class="line">        <span class="attr">value:</span> <span class="string">&quot;node01&quot;</span></span><br><span class="line">        <span class="attr">effect:</span> <span class="string">&quot;NoExecute&quot;</span></span><br><span class="line">        <span class="attr">tolerationSeconds:</span> <span class="number">3600</span></span><br><span class="line"><span class="comment"># kubectl apply -f nginx-deploy.yml</span></span><br><span class="line"><span class="string">deployment.extensions/nginx-deployment</span> <span class="string">configured</span></span><br><span class="line">[<span class="string">root@matser</span> <span class="string">nginx</span>]<span class="comment"># kubectl get pod</span></span><br><span class="line"><span class="string">NAME</span>                                <span class="string">READY</span>   <span class="string">STATUS</span>              <span class="string">RESTARTS</span>   <span class="string">AGE</span></span><br><span class="line"><span class="string">nginx-deployment-77f8d88b85-9vzzb</span>   <span class="number">0</span><span class="string">/1</span>     <span class="string">ContainerCreating</span>   <span class="number">0</span>          <span class="string">1s</span></span><br><span class="line"><span class="string">nginx-deployment-77f8d88b85-d5kd8</span>   <span class="number">1</span><span class="string">/1</span>     <span class="string">Running</span>             <span class="number">0</span>          <span class="string">3s</span></span><br><span class="line"><span class="string">nginx-deployment-77f8d88b85-jgjst</span>   <span class="number">1</span><span class="string">/1</span>     <span class="string">Running</span>             <span class="number">0</span>          <span class="string">3s</span></span><br></pre></td></tr></table></figure>

<ul>
<li><p>当不指定 key 值时，表示容忍所有的污点 key</p>
  <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">tolerations:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">operator:</span> <span class="string">&quot;Exists&quot;</span></span><br></pre></td></tr></table></figure>

</li>
<li><p>当不指定 effect 值时，表示容忍所有的污点作用</p>
  <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">tolerations:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">key:</span> <span class="string">&quot;key&quot;</span></span><br><span class="line"> <span class="attr">operator:</span> <span class="string">&quot;Exists&quot;</span></span><br></pre></td></tr></table></figure>

</li>
<li><p>有多个 Master 存在时，防止资源浪费，可以如下设置</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kubectl taint nodes Node-Name node-role.kubernetes.io/master=:PreferNoSchedule</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
  </entry>
  <entry>
    <title>Liveness, Readiness与Startup Probes</title>
    <url>/2019/10/03/Liveness,%20Readiness%E4%B8%8EStartup%20Probes/</url>
    <content><![CDATA[<h3 id="探针的种类"><a href="#探针的种类" class="headerlink" title="探针的种类"></a>探针的种类</h3><ul>
<li><p>livenessProbe：健康状态检查，周期性检查服务是否存活，检查结果失败，将重启容器</p>
</li>
<li><p>readinessProbe：可用性检查，周期性检查服务是否可用，不可用将从service的endpoints中移除</p>
</li>
<li><p>startupProbe：启动探针，首次初始化时需要额外启动时间的应用程序，超过设定的启动时间，将被杀死</p>
 <span id="more"></span></li>
</ul>
<p>kubelet使用活跃度探头知道什么时候重新启动的容器。例如，活动性探针可能会陷入僵局，而应用程序正在运行，但无法取得进展。在这种状态下重新启动容器可以帮助使应用程序尽管存在错误也更可用。</p>
<p>Kubelet使用就绪性探测器来了解何时Container准备开始接受流量。当Pod的所有容器都准备就绪时，即视为准备就绪。此信号的一种用法是控制将哪些Pod用作服务的后端。当Pod尚未就绪时，会将其从服务负载平衡器中删除。</p>
<p>kubelet使用启动探针来了解何时启动Container应用程序。如果配置了这样的探针，它将禁用活动性和就绪性检查，直到成功为止，以确保这些探针不会干扰应用程序的启动。这可用于对启动缓慢的容器进行活动检查，避免它们在启动和运行之前被kubelet杀死。</p>
<h3 id="探针的检测方法"><a href="#探针的检测方法" class="headerlink" title="探针的检测方法"></a>探针的检测方法</h3><ul>
<li><p> exec：执行一段命令</p>
</li>
<li><p> httpGet：检测某个 http 请求的返回状态码</p>
</li>
<li><p> tcpSocket：测试某个端口是否能够连接</p>
</li>
</ul>
<h3 id="探针常用参数"><a href="#探针常用参数" class="headerlink" title="探针常用参数"></a>探针常用参数</h3><ul>
<li><p>initialDelaySeconds：启动容器后，启动活动或就绪探针之前的秒数。</p>
</li>
<li><p>periodSeconds：执行探测的频率（以秒为单位）。默认为10秒。最小值为1。</p>
</li>
<li><p>timeoutSeconds：探测超时的秒数。默认为1秒。最小值为1。</p>
</li>
<li><p>successThreshold：探测失败后，连续最小成功探测为成功。默认值为1。为保持活力，必须为1。最小值为1。</p>
</li>
<li><p>failureThreshold：当Pod启动并且探测失败时，Kubernetes会尝试尝试failureThreshold多次，然后放弃。放弃活动探针意味着重新启动容器。如果准备就绪，则将Pod标记为“未就绪”。默认值为3。最小值为1。</p>
</li>
</ul>
<h3 id="exec的使用"><a href="#exec的使用" class="headerlink" title="exec的使用"></a>exec的使用</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim liveness_exec.yml</span></span><br><span class="line">  containers:</span><br><span class="line">  - name: liveness</span><br><span class="line">    image: harbor.ui.com/library/busybox:latest</span><br><span class="line">    args:</span><br><span class="line">    - /bin/sh</span><br><span class="line">    - -c</span><br><span class="line">    - touch /tmp/healthy; sleep 30; rm -rf /tmp/healthy; sleep 600</span><br><span class="line">    livenessProbe:</span><br><span class="line">      exec:</span><br><span class="line">        command:</span><br><span class="line">        - cat</span><br><span class="line">        - /tmp/healthy</span><br><span class="line">      initialDelaySeconds: 5  # 执行第一次探测之前应等待时间，生产环境应该设长一点</span><br><span class="line">      periodSeconds: 5        # 没5秒执行一次活动性探测</span><br></pre></td></tr></table></figure>

<p>说明：</p>
<p>在容器寿命的前30秒中，有一个&#x2F;tmp&#x2F;healthy文件。因此，在前30秒内，该命令cat &#x2F;tmp&#x2F;healthy将返回成功代码。30秒后，cat &#x2F;tmp&#x2F;healthy返回失败代码，则为检测不健康，执行杀死容器并重新创建</p>
<p>查看30秒是否判定不健康</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl describe pod liveness</span></span><br><span class="line">Events:</span><br><span class="line">  Type     Reason     Age               From               Message</span><br><span class="line">  ----     ------     ----              ----               -------</span><br><span class="line">  Normal   Scheduled  51s               default-scheduler  Successfully assigned default/liveness-exec to node02</span><br><span class="line">  Normal   Pulling    50s               kubelet, node02    Pulling image &quot;harbor.ui.com/library/busybox:latest&quot;</span><br><span class="line">  Normal   Pulled     50s               kubelet, node02    Successfully pulled image &quot;harbor.ui.com/library/busybox:latest&quot;</span><br><span class="line">  Normal   Created    50s               kubelet, node02    Created container liveness</span><br><span class="line">  Normal   Started    49s               kubelet, node02    Started container liveness</span><br><span class="line">  Warning  Unhealthy  6s (x3 over 16s)  kubelet, node02    Liveness probe failed: cat: can&#x27;t open &#x27;/tmp/healthy&#x27;: No such file or directory</span><br><span class="line">  Normal   Killing    6s                kubelet, node02    Container liveness failed liveness probe, will be restarted</span><br></pre></td></tr></table></figure>

<p>查看是否创建新的pod</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl describe pod liveness</span></span><br><span class="line">Events:</span><br><span class="line">  Type     Reason     Age                  From               Message</span><br><span class="line">  ----     ------     ----                 ----               -------</span><br><span class="line">  Normal   Scheduled  2m50s                default-scheduler  Successfully assigned default/liveness-exec to node02</span><br><span class="line">  Warning  Unhealthy  50s (x6 over 2m15s)  kubelet, node02    Liveness probe failed: cat: can&#x27;t open &#x27;/tmp/healthy&#x27;: No such file or directory</span><br><span class="line">  Normal   Killing    50s (x2 over 2m5s)   kubelet, node02    Container liveness failed liveness probe, will be restarted</span><br><span class="line">  Normal   Pulling    20s (x3 over 2m49s)  kubelet, node02    Pulling image &quot;harbor.ui.com/library/busybox:latest&quot;</span><br><span class="line">  Normal   Pulled     20s (x3 over 2m49s)  kubelet, node02    Successfully pulled image &quot;harbor.ui.com/library/busybox:latest&quot;</span><br><span class="line">  Normal   Created    20s (x3 over 2m49s)  kubelet, node02    Created container liveness</span><br><span class="line">  Normal   Started    19s (x3 over 2m48s)  kubelet, node02    Started container liveness</span><br></pre></td></tr></table></figure>

<h3 id="httpGet的使用"><a href="#httpGet的使用" class="headerlink" title="httpGet的使用"></a>httpGet的使用</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim liveness_httpGet.yml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">httpget</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">      <span class="attr">image:</span> <span class="string">harbor.ui.com/library/nginx:latest</span></span><br><span class="line">      <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">      <span class="attr">livenessProbe:</span></span><br><span class="line">        <span class="attr">httpGet:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">/index.html</span></span><br><span class="line">          <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">        <span class="attr">initialDelaySeconds:</span> <span class="number">3</span></span><br><span class="line">        <span class="attr">periodSeconds:</span> <span class="number">3</span></span><br></pre></td></tr></table></figure>

<p>说明：</p>
<p>为了执行探测，kubelet将HTTP GET请求发送到在Container中运行并在端口80上侦听的服务器。如果服务器&#x2F;index.html路径的处理程序返回成功代码，则kubelet认为Container处于活动状态且运行状况良好。如果处理程序返回失败代码，则kubelet将杀死Container并重新启动它</p>
<p>删除index.html文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl <span class="built_in">exec</span> -it httpget /bin/bash</span></span><br><span class="line">root@httpget:/# rm -rf /usr/share/nginx/html/index.html</span><br></pre></td></tr></table></figure>

<p>查看是否不健康</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl describe pod httpget</span></span><br><span class="line">Events:</span><br><span class="line">  Type     Reason     Age                 From               Message</span><br><span class="line">  ----     ------     ----                ----               -------</span><br><span class="line">  Normal   Scheduled  7m44s               default-scheduler  Successfully assigned default/httpget to node02</span><br><span class="line">  Normal   Pulling    2s (x2 over 7m43s)  kubelet, node02    Pulling image &quot;harbor.ui.com/library/nginx:latest&quot;</span><br><span class="line">  Normal   Pulled     2s (x2 over 7m42s)  kubelet, node02    Successfully pulled image &quot;harbor.ui.com/library/nginx:latest&quot;</span><br><span class="line">  Normal   Created    2s (x2 over 7m42s)  kubelet, node02    Created container nginx</span><br><span class="line">  Warning  Unhealthy  2s (x3 over 8s)     kubelet, node02    Liveness probe failed: HTTP probe failed with statuscode: 404</span><br><span class="line">  Normal   Killing    2s                  kubelet, node02    Container nginx failed liveness probe, will be restarted</span><br><span class="line">  Normal   Started    1s (x2 over 7m40s)  kubelet, node02    Started container nginx</span><br></pre></td></tr></table></figure>

<h2 id="tcpSocket的使用"><a href="#tcpSocket的使用" class="headerlink" title="tcpSocket的使用"></a>tcpSocket的使用</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim liveness_tcpSocket.yml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">tcpsocket</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">      <span class="attr">image:</span> <span class="string">harbor.ui.com/library/nginx:latest</span></span><br><span class="line">      <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">      <span class="attr">readinessProbe:</span></span><br><span class="line">        <span class="attr">tcpSocket:</span></span><br><span class="line">          <span class="attr">port:</span> <span class="number">81</span></span><br><span class="line">        <span class="attr">initialDelaySeconds:</span> <span class="number">5</span></span><br><span class="line">        <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">      <span class="attr">livenessProbe:</span></span><br><span class="line">        <span class="attr">tcpSocket:</span></span><br><span class="line">          <span class="attr">port:</span> <span class="number">81</span>  </span><br><span class="line">        <span class="attr">initialDelaySeconds:</span> <span class="number">15</span>  </span><br><span class="line">        <span class="attr">periodSeconds:</span> <span class="number">20</span></span><br></pre></td></tr></table></figure>

<p>说明：</p>
<p>TCP检查的配置与HTTP检查非常相似。此示例同时使用了就绪和活跃度探针（可用性）。容器启动后5秒钟内，kubelet将发送第一个就绪探测器。这将尝试连接到nginx端口81上的容器。如果探测成功，则容器将标记为就绪。kubelet将继续每10秒运行一次此检查。</p>
<p>除了就绪探针之外，此配置还包括活动探针。容器启动后15秒钟，kubelet将运行第一个活动探针。就像就绪探针一样，这将尝试nginx在端口81上连接到容器。如果活动探针失败，则将重新启动容器</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl describe pod tcpsocket</span></span><br><span class="line">Events:</span><br><span class="line">  Type     Reason     Age   From               Message</span><br><span class="line">  ----     ------     ----  ----               -------</span><br><span class="line">  Normal   Scheduled  19s   default-scheduler  Successfully assigned default/tcpsocket to node02</span><br><span class="line">  Normal   Pulling    18s   kubelet, node02    Pulling image &quot;harbor.ui.com/library/nginx:latest&quot;</span><br><span class="line">  Normal   Pulled     18s   kubelet, node02    Successfully pulled image &quot;harbor.ui.com/library/nginx:latest&quot;</span><br><span class="line">  Normal   Created    18s   kubelet, node02    Created container nginx</span><br><span class="line">  Normal   Started    17s   kubelet, node02    Started container nginx</span><br><span class="line">  Warning  Unhealthy  9s    kubelet, node02    Readiness probe failed: dial tcp 10.244.3.46:81: connect: connection refused</span><br><span class="line">  Warning  Unhealthy  2s    kubelet, node02    Liveness probe failed: dial tcp 10.244.3.46:81: connect: connection refused</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
  </entry>
  <entry>
    <title>RS与Deployment</title>
    <url>/2019/09/21/RS%E4%B8%8EDeployment/</url>
    <content><![CDATA[<h2 id="RS"><a href="#RS" class="headerlink" title="RS"></a>RS</h2><p>Replication Controller(简称rc)用来管理Pod的副本，保证集群中存在指定数量的Pod副本。集群中副本的数量大于指定数量，则会停止指定数量之外的多余容器数量，反之，则会启动少于指定数量个数的容器，保证数量不变。Replication Controller是实现弹性伸缩、动态扩容和滚动升级的核心。</p>
<p>Kubernetes 官方建议使用 RS（ReplicaSet ）替代 RC （ReplicationController ）进行部署，RS 跟 RC 没有本质的不同，只是名字不一样，并且 RS 支持集合式的 selector。</p>
 <span id="more"></span>

<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim nginx.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ReplicaSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">5</span>   <span class="comment"># 副本数</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">myweb</span>  <span class="comment"># 标签</span></span><br><span class="line">  <span class="attr">template:</span>     <span class="comment"># 副本模版</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">myweb</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">myweb</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">harbor.ui.com/library/nginx:1.13</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure>


<p>伸缩扩容</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl scale rs nginx --replicas=4</span></span><br></pre></td></tr></table></figure>


<p>更改镜像</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">方法一</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl <span class="built_in">set</span> image rs nginx nginx=harbor.ui.com/library/nginx:1.13</span></span><br><span class="line">方法二</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim nginx.yaml</span></span><br><span class="line">        image: harbor.ui.com/library/nginx:1.13 =&gt; image: harbor.ui.com/library/nginx:1.15</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl replace --force -f nginx.yaml  更新配置</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl delete pod --all  删除pod之后重新创建新的pod</span></span><br></pre></td></tr></table></figure>


<h2 id="RS与Deployment的关联"><a href="#RS与Deployment的关联" class="headerlink" title="RS与Deployment的关联"></a>RS与Deployment的关联</h2><p><img src="/image/1571297370-12E35882-97DF-4F33-A089-364F15CE5C4D.png"></p>
<h2 id="Deployment"><a href="#Deployment" class="headerlink" title="Deployment"></a>Deployment</h2><p>Deployment为Pod和ReplicaSet（下一代Replication Controller）提供声明式更新</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim nginx-deploy.yml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-deployment</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">harbor.ui.com/library/nginx:1.13</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure>


<p>创建</p>
<p>–record 创建时备注信息 创建deploy时推荐，可以查看版本历史</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl create -f nginx-deploy.yml --record</span></span><br></pre></td></tr></table></figure>


<p>查看pod资源</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get pod</span></span><br></pre></td></tr></table></figure>


<p>扩展式查看</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get pod -o wide</span></span><br></pre></td></tr></table></figure>


<p>详细查看信息</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"> kubectl describe deploy nginx-deployment -n kube-public</span></span><br></pre></td></tr></table></figure>


<p>删除pod（重启）</p>
<p>强制删除参数：–force –grace-period&#x3D;0</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl delete pod nginx-deployment-5dfc689474-5b76h</span></span><br><span class="line">pod &quot;nginx-deployment-5dfc689474-5b76h&quot; deleted</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get pod -n kube-public</span></span><br><span class="line">NAME                        READY   STATUS    RESTARTS   AGE</span><br><span class="line">nginx-deployment-5dfc689474-c7kmt   1/1     Running   0          13s</span><br></pre></td></tr></table></figure>


<p>扩容</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl scale deployment nginx-deployment --replicas 10</span></span><br></pre></td></tr></table></figure>


<p>修改资源配置清单</p>
<p>在线修改</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># kubectl edit deploy nginx-deployment</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">harbor.ui.com/library/nginx:1.15</span> </span><br></pre></td></tr></table></figure>


<p>离线修改</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim nginx-deploy.yml</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">harbor.ui.com/library/nginx:1.15</span> </span><br><span class="line"><span class="comment"># kubectl apply -f nginx-deploy.yml</span></span><br></pre></td></tr></table></figure>


<p>暂停更新</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl rollout pause deploy/nginx-deployment</span></span><br></pre></td></tr></table></figure>


<p>回滚</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl rollout undo deploy/nginx-deployment</span></span><br></pre></td></tr></table></figure>


<p>查看历史版本</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl rollout <span class="built_in">history</span> deployment nginx-deployment</span></span><br><span class="line">deployment.extensions/nginx-deployment</span><br><span class="line">REVISION  CHANGE-CAUSE</span><br><span class="line">2         kubectl apply --filename=nginx-deploy.yml --record=true</span><br><span class="line">3         kubectl apply --filename=nginx-deploy.yml --record=true</span><br></pre></td></tr></table></figure>


<p>回滚上一个版本</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl rollout undo deployment nginx-deployment</span></span><br></pre></td></tr></table></figure>


<p>回滚指定版本</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl rollout undo deployment nginx-deployment --to-revision=1</span></span><br></pre></td></tr></table></figure>


<p>查看pod状态</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl rollout status deploy/nginx-deployment</span></span><br></pre></td></tr></table></figure>


<p>删除deploy资源</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">陈述式</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl delete -f nginx-deploy.yml</span></span><br><span class="line">声明式</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl delete delpoy nginx-deployment</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>RabbitMQ安装</title>
    <url>/2018/12/06/RabbitMQ%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h2 id="rabbitmq简介"><a href="#rabbitmq简介" class="headerlink" title="rabbitmq简介"></a><strong>rabbitmq简介</strong></h2><p>MQ全称为Message Queue, 消息队列（MQ）是一种应用程序对应用程序的通信方法。应用程序通过读写出入队列的消息（针对应用程序的数据）来通信，而无需专用连接来链接它们。消息传递指的是程序之间通过在消息中发送数据进行通信，而不是通过直接调用彼此来通信，直接调用通常是用于诸如远程过程调用的技术。排队指的是应用程序通过 队列来通信。队列的使用除去了接收和发送应用程序同时执行的要求</p>
 <span id="more"></span>

<p>MQ是消费-生产者模型的一个典型的代表，一端往消息队列中不断写入消息，而另一端则可以读取或者订阅队列中的消息。MQ和JMS类似，但不同的是JMS是SUN JAVA消息中间件服务的一个标准和API定义，而MQ则是遵循了AMQP协议的具体实现和产品。</p>
<p>RabbitMQ是一个在AMQP基础上完成的，可复用的企业消息系统。他遵循Mozilla Public License开源协议</p>
<h2 id="linux上安装"><a href="#linux上安装" class="headerlink" title="linux上安装"></a><strong>linux上安装</strong></h2><p>安装依赖</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum install -y socat</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">wget https://github.com/rabbitmq/erlang-rpm/releases/download/v21.2.2/erlang-21.2.2-1.el7.centos.x86_64.rpm</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">wget https://github.com/rabbitmq/rabbitmq-server/releases/download/v3.7.10/rabbitmq-server-3.7.10-1.el7.noarch.rpm</span></span><br></pre></td></tr></table></figure>

<p>安装rabbitmq</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rpm -ivh erlang-21.2.2-1.el7.centos.x86_64.rpm</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rpm -ivh rabbitmq-server-3.7.10-1.el7.noarch.rpm</span></span><br></pre></td></tr></table></figure>

<p>安装管控台插件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rabbitmq-plugins <span class="built_in">enable</span> rabbitmq_management</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl start rabbitmq-server</span></span><br></pre></td></tr></table></figure>

<p>web访问</p>
<p>默认账户密码</p>
<p>guest  guest</p>
<p>如果你使用guest在外部访问的话</p>
<p><img src="/image/1547014291-Image.png"></p>
<p>需要创建用户</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@keyida tools]# rabbitmqctl add_user admin 123456</span><br><span class="line">[root@keyida tools]# rabbitmqctl set_user_tags admin administrator  授权为管理员</span><br></pre></td></tr></table></figure>

<p><img src="/image/15441617641.png"></p>
<h2 id="windows上安装"><a href="#windows上安装" class="headerlink" title="windows上安装"></a><strong>windows上安装</strong></h2><p>链接：<a href="https://pan.baidu.com/s/1sUWk9HvUZ9Z0kqOOkLTSzQ">https://pan.baidu.com/s/1sUWk9HvUZ9Z0kqOOkLTSzQ</a>提取码：1b99</p>
<p>先安装opt_win64_21.1.exe</p>
<p>再安装rabbitmq</p>
<p>启动mq</p>
<p><img src="/image/15441617851.png"></p>
<p><img src="/image/15441618031.png"></p>
<p><img src="/image/15441618171.png"></p>
<p>rabbitmq-plugins enable rabbitmq_management </p>
]]></content>
      <categories>
        <category>rabbitmq</category>
      </categories>
      <tags>
        <tag>rabbitmq</tag>
      </tags>
  </entry>
  <entry>
    <title>Service资源</title>
    <url>/2019/11/09/Service%E8%B5%84%E6%BA%90/</url>
    <content><![CDATA[<h2 id="Service的概念"><a href="#Service的概念" class="headerlink" title="Service的概念"></a>Service的概念</h2><p>Kubernetes Service定义了这样一种抽象：一个Pod的逻辑分组，一种可以访问它们的策略 —— 通常称为微服务。这一组Pod能够被Service访问到，通常是通过<a href="http://docs.kubernetes.org.cn/247.html">Label Selector</a></p>
 <span id="more"></span>

<p>Service 的概念Kubernetes Service定义了这样一种抽象：一个Pod的逻辑分组，一种可以访问它们的策略 —— 通常称为微服务。这一组Pod能够被Service访问到，通常是通过Label SelectorService能够提供负载均衡的能力，但是在使用上有以下限制：只提供 4 层负载均衡能力，而没有 7 层功能，但有时我们可能需要更多的匹配规则来转发请求，这点上 4 层负载均衡是不支持的</p>
<h2 id="Service的类型"><a href="#Service的类型" class="headerlink" title="Service的类型"></a>Service的类型</h2><p>Service 在 K8s 中有以下四种类型</p>
<ul>
<li><p>ClusterIp：默认类型，自动分配一个仅 Cluster 内部可以访问的虚拟 IP</p>
</li>
<li><p>NodePort：在 ClusterIP 基础上为 Service 在每台机器上绑定一个端口，这样就可以通过: NodePort 来访问该服务</p>
</li>
<li><p>LoadBalancer：在 NodePort 的基础上，借助 cloud provider 创建一个外部负载均衡器，并将请求转发到: NodePort</p>
</li>
<li><p>ExternalName：把集群外部的服务引入到集群内部来，在集群内部直接使用。没有任何类型代理被创建，这只有 kubernetes 1.7 或更高版本的 kube-dns 才支持</p>
</li>
</ul>
<p>Service 创建网络服务一般分为集群内部访问（clusterIP ）和集群外部访问（NodePort）模式：</p>
<p>clusterIP 的方式会创建一个虚拟IP地址，该地址没有基于某个实际网卡创建，所以在宿主机上是无法访问的，仅能在集群内部访问，也就是在容器内部访问。</p>
<p>NodePort 是通过映射端口到宿主机的方式，访问地址为宿主机IP地址加上端口的方式，和hostPort 类似，但是NodePort 会在kubernetes集群的所有node上监听，也就是说创建一个Service ，配置了一个NodePort 监听30000端口，那么集群内所有的node都会监听30000端口，不管访问该node上有没有对应的pod，随意访问任何一台node的30000端口都可以被转发到正确的后端pod中。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">myweb</span> <span class="comment"># Service名称</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span>   <span class="comment"># Nodeport类型</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span>           <span class="comment"># clusterIP port</span></span><br><span class="line">      <span class="attr">nodePort:</span> <span class="number">30000</span>  <span class="comment"># node port</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">80</span>     <span class="comment"># pod port</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">myweb</span>          <span class="comment"># svc对应的pod标签</span></span><br></pre></td></tr></table></figure>

<h2 id="VIP与Service代理"><a href="#VIP与Service代理" class="headerlink" title="VIP与Service代理"></a>VIP与Service代理</h2><p>在 Kubernetes 集群中，每个 Node 运行一个 kube-proxy 进程。kube-proxy 负责为 Service 实现了一种 VIP（虚拟 IP）的形式，而不是 ExternalName 的形式。 在 Kubernetes v1.0 版本，代理完全在 userspace。在 Kubernetes v1.1 版本，新增了 iptables 代理，但并不是默认的运行模式。 从 Kubernetes v1.2 起，默认就是 iptables 代理。</p>
<p>在 Kubernetes v1.0 版本，Service 是 “4层”（TCP&#x2F;UDP over IP）概念。 在 Kubernetes v1.1 版本，新增了 Ingress API（beta 版），用来表示 “7层”（HTTP）服务</p>
<h2 id="代理模式的分类"><a href="#代理模式的分类" class="headerlink" title="代理模式的分类"></a>代理模式的分类</h2><h3 id="iptable代理模式"><a href="#iptable代理模式" class="headerlink" title="iptable代理模式"></a>iptable代理模式</h3><p>这种模式，kube-proxy 会监视 Kubernetes master 对 Service 对象和 Endpoints 对象的添加和移除。 对每个 Service，它会安装 iptables 规则，从而捕获到达该 Service 的 clusterIP（虚拟 IP）和端口的请求，进而将请求重定向到 Service 的一组 backend 中的某个上面。 对于每个 Endpoints 对象，它也会安装 iptables 规则，这个规则会选择一个 backend Pod</p>
<p><img src="/image/1574936791.png"></p>
<h3 id="ipvs代理模式"><a href="#ipvs代理模式" class="headerlink" title="ipvs代理模式"></a>ipvs代理模式</h3><p>这种模式，kube-proxy 会监视 Kubernetes Service对象和Endpoints，调用netlink接口以相应地创建ipvs 规则并定期与 Kubernetes Service对象和Endpoints对象同步 ipvs 规则，以确保 ipvs 状态与期望一致。访问服务时，流量将被重定向到其中一个后端 Pod</p>
<p>与 iptables 类似，ipvs 于 netfilter 的 hook 功能，但使用哈希表作为底层数据结构并在内核空间中工作。这意味着 ipvs 可以更快地重定向流量，并且在同步代理规则时具有更好的性能。此外，ipvs 为负载均衡算法提供了更多选项，例如：</p>
<ul>
<li><p>rr：轮询调度</p>
</li>
<li><p>lc：最小连接数</p>
</li>
<li><p>dh：目标哈希</p>
</li>
<li><p>sh：源哈希</p>
</li>
<li><p>sed：最短期望延迟</p>
</li>
<li><p>nq：不排队调度</p>
</li>
</ul>
<p><img src="/image/1574946151.png"></p>
<h2 id="Headless-Servic"><a href="#Headless-Servic" class="headerlink" title="Headless Servic"></a>Headless Servic</h2><p>有时不需要或不想要负载均衡，以及单独的 Service IP 。遇到这种情况，可以通过指定 ClusterIP(spec.clusterIP) 的值为 “None” 来创建 Headless Service 。这类 Service 并不会分配 Cluster IP， kube-proxy 不会处理它们，而且平台也不会为它们进行负载均衡和路由</p>
]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
  </entry>
  <entry>
    <title>spinnaker的Armory发行版部署</title>
    <url>/2020/03/23/Spinnaker%E7%9A%84Armory%E5%8F%91%E8%A1%8C%E7%89%88%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<h3 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h3><p>Spinnaker是一个开源的多云持续交付平台，提供快速、可靠、稳定的软件变更服务。主要包含两类功能：集群管理和部署管理</p>
<h4 id="集群管理"><a href="#集群管理" class="headerlink" title="集群管理"></a>集群管理</h4><p>集群管理主要用于管理云资源，Spinnaker所说的”云“可以理解成AWS，即主要是laaS的资源，比如OpenStak，Google云，微软云等，后来还支持了容器与Kubernetes，但是管理方式还是按照管理基础设施的模式来设计的。</p>
<span id="more"></span>

<h4 id="部署管理"><a href="#部署管理" class="headerlink" title="部署管理"></a>部署管理</h4><p>管理部署流程是Spinnaker的核心功能，使用minio作为持久化层，同时对接jenkins流水线创建的镜像，部署到Kubernetes集群中去，让服务真正运行起来。</p>
<h4 id="逻辑架构"><a href="#逻辑架构" class="headerlink" title="逻辑架构"></a>逻辑架构</h4><p>Spinnaker自己就是Spinnake一个微服务,由若干组件组成，整改逻辑架构图如下：</p>
<p><img src="/image/spinnaker%E6%9E%B6%E6%9E%84%E5%9B%BE.png" alt="spinnaker架构图"></p>
<ul>
<li>Deck是基于浏览器的UI。</li>
<li>Gate是API网关。<br>   Spinnaker UI和所有api调用程序都通过Gate与Spinnaker进行通信。</li>
<li>Clouddriver是负责对云提供商的所有变异调用，并为所有部署的资源编制索引&#x2F;缓存。</li>
<li>Front50用于管理数据持久化，用于保存应用程序，管道，项目和通知的元数据。</li>
<li>Igor用于通过Jenkins和Travis CI等系统中的持续集成作业来触发管道，并且它允许在管道中使用Jenkins &#x2F; Travis阶段。</li>
<li>Orca是编排引擎。它处理所有临时操作和流水线。</li>
<li>Rosco是管理调度虚拟机。</li>
<li>Kayenta为Spinnaker提供自动化的金丝雀分析。</li>
<li>Fiat 是Spinnaker的认证服务。</li>
<li>Echo是信息通信服务。<br>   它支持发送通知（例如，Slack，电子邮件，SMS），并处理来自Github之类的服务中传入的Webhook。</li>
</ul>
<h4 id="部署集群"><a href="#部署集群" class="headerlink" title="部署集群"></a>部署集群</h4><ul>
<li><a href="https://www.wqblogs.com:4443/2020/03/23/spinnaker%E4%B9%8Bminio%E9%83%A8%E7%BD%B2/">spinnaker之minio部署</a></li>
<li><a href="https://www.wqblogs.com:4443/2020/03/23/spinnaker%E4%B9%8Bredis%E9%83%A8%E7%BD%B2/">spinnaker之redis部署</a></li>
<li><a href="https://www.wqblogs.com:4443/2020/03/23/spinnaker%E4%B9%8BCloudDriver%E9%83%A8%E7%BD%B2/">spinnaker之CloudDriver部署</a></li>
<li><a href="https://www.wqblogs.com:4443/2020/03/25/spinnaker%E4%B9%8Bfront50%E9%83%A8%E7%BD%B2/">spinnaker之front50部署</a></li>
<li><a href="https://www.wqblogs.com:4443/2020/03/25/spinnaker%E4%B9%8Borca%E9%83%A8%E7%BD%B2/">spinnaker之orca部署</a></li>
<li><a href="https://www.wqblogs.com:4443/2020/03/25/spinnaker%E4%B9%8Becho%E9%83%A8%E7%BD%B2/">spinnaker之echo部署</a></li>
<li><a href="https://www.wqblogs.com:4443/2020/03/25/spinnaker%E4%B9%8Bigor%E9%83%A8%E7%BD%B2/">spinnaker之igor部署</a></li>
<li><a href="https://www.wqblogs.com:4443/2020/03/23/spinnaker%E4%B9%8Bgate%E9%83%A8%E7%BD%B2/">spinnaker之gate部署</a></li>
<li><a href="https://www.wqblogs.com:4443/2020/03/25/spinnaker%E4%B9%8Bdeck%E9%83%A8%E7%BD%B2/">spinnaker之deck部署</a></li>
<li><a href="https://www.wqblogs.com:4443/2020/03/25/spinnaker%E4%B9%8Bnginx%E9%83%A8%E7%BD%B2/">spinnaker之nginx部署</a></li>
<li>未完待续</li>
</ul>
]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
        <tag>spinnaker</tag>
      </tags>
  </entry>
  <entry>
    <title>VMware安装os X 10.11</title>
    <url>/2018/11/27/VMware%E5%AE%89%E8%A3%85os%20X%2010.11/</url>
    <content><![CDATA[<h2 id="虚拟机安装10-11镜像"><a href="#虚拟机安装10-11镜像" class="headerlink" title="虚拟机安装10.11镜像"></a>虚拟机安装10.11镜像</h2><p>链接: <a href="https://pan.baidu.com/s/1NFEKgrfFQ9r8kPe78_C6vw">https://pan.baidu.com/s/1NFEKgrfFQ9r8kPe78_C6vw</a> 提取码: g414</p>
<p>虚拟机新建虚拟机</p>
 <span id="more"></span>

<p><img src="/image/15433193061.png"></p>
<p><img src="/image/1543319488-1543319480.png"></p>
<p>选择镜像</p>
<p><img src="/image/1543319546-Image.png"></p>
<p>选择操作系统</p>
<p><img src="/image/1543319587-Image.png"></p>
<p>创建虚拟名称，存放位置</p>
<p><img src="/image/1543319610-Image.png"></p>
<p><img src="/image/1543319634-Image.png"></p>
<p>为虚拟机加内存</p>
<p><img src="/image/1543319653-Image.png"></p>
<p>选择网络类型</p>
<p><img src="/image/1543319671-Image.png"></p>
<p><img src="/image/1543319687-Image.png"></p>
<p>虚拟机创建磁盘</p>
<p><img src="/image/1543319706-Image.png"></p>
<p>指定容量</p>
<p><img src="/image/1543319727-Image.png"></p>
<p><img src="/image/1543319743-Image.png"></p>
<p>配置详细</p>
<p><img src="/image/1543319758-Image.png"></p>
<p>开启虚拟机报错</p>
<p><img src="/image/1543319775-Image.png"></p>
<p>关闭虚拟机，找到新建的苹果虚拟机目录（例如我的是C:\Users\msi-pc\Documents\Virtual Machines\OS X 10.11），用记事本打开OS X 10.11.vmx，在文件最后添加smc.version &#x3D; “0”，保存，重启虚拟机</p>
<p><img src="/image/1543319788-Image.png"></p>
<p>选择语言</p>
<p><img src="/image/1543319803-Image.png"></p>
<p><img src="/image/1543319828-Image.png"></p>
<p><img src="/image/1543319858-Image.png"></p>
<p>格式化磁盘</p>
<p><img src="/image/1543319885-Image.png"></p>
<p>实用工具 &#x3D;&gt; 磁盘工具</p>
<p>点击左边的VMware Virtual SATA Hard选项，再点击上面的抹掉</p>
<p><img src="/image/1543319909-Image.png"></p>
<p>创建新的盘并抹掉</p>
<p><img src="/image/1543319927-Image.png"></p>
<p><img src="/image/1543319947-Image.png"></p>
<p>退出磁盘工具，安装系统到新磁盘中</p>
<p><img src="/image/1543319969-Image.png"></p>
<p><img src="/image/1543319994-Image.png"></p>
<h2 id="VMTool以及Darwin6-0-3的安装"><a href="#VMTool以及Darwin6-0-3的安装" class="headerlink" title="VMTool以及Darwin6.0.3的安装"></a>VMTool以及Darwin6.0.3的安装</h2><p>VMware Tools是VMware虚拟机中自带的一种增强工具，相当于VirtualBox中的增强功能（Sun VirtualBox Guest Additions），是VMware提供的增强虚拟显卡和硬盘性能、以及同步虚拟机与主机时钟的驱动程序。</p>
<p>只有在VMware虚拟机中安装好了VMware Tools，才能实现主机与虚拟机之间的文件共享，同时可支持自由拖拽的功能，鼠标也可在虚拟机与主机之间自由移动（不用再按ctrl+alt），且虚拟机屏幕也可实现全屏化。</p>
<p>点击finder选择偏好设置</p>
<p><img src="/image/1543320060-Image.png"></p>
<p>点击DVD，退出安装盘</p>
<p><img src="/image/1543320086-Image.png"></p>
<p>点击虚拟机右键 &#x3D;&gt; 可移动设备 &#x3D;&gt; CD&#x2F;DVD &#x3D;&gt; 设置</p>
<p>选择下载的 Darwin6.0.3.iso</p>
<p>链接: <a href="https://pan.baidu.com/s/1Wt0AlFNG3OByOMUlHMdhnw">https://pan.baidu.com/s/1Wt0AlFNG3OByOMUlHMdhnw</a> 提取码: 14ny</p>
<p><img src="/image/1543320105-Image.png"></p>
<p>虚拟机CD设置连接</p>
<p>安装VMware Tools</p>
<p><img src="/image/1543320121-Image.png"></p>
<p><img src="/image/1543320137-Image.png"></p>
<h3 id="配置共享目录"><a href="#配置共享目录" class="headerlink" title="配置共享目录"></a><strong>配置共享目录</strong></h3><p><img src="/image/1543320157-Image.png"></p>
<p><img src="/image/1543320175-Image.png"></p>
<p><img src="/image/1543320194-Image.png"></p>
<p><img src="/image/1543320220-Image.png"></p>
]]></content>
      <categories>
        <category>无聊操作</category>
      </categories>
  </entry>
  <entry>
    <title>Windows使用vagrant安装虚拟机</title>
    <url>/2018/12/11/Windows%E4%BD%BF%E7%94%A8vagrant%E5%AE%89%E8%A3%85%E8%99%9A%E6%8B%9F%E6%9C%BA/</url>
    <content><![CDATA[<h2 id="vargrant简介"><a href="#vargrant简介" class="headerlink" title="vargrant简介"></a>vargrant简介</h2><p>vagrant是一个操作虚拟机的工具.是一个基于Ruby的工具，用于创建和部署虚拟化开发环境。通过命令和配置文件来管理虚拟机,通过代码的方式快速地、可重复地创建针对不同虚拟环境的虚拟机。它使得我们可以一次性地、自动创建多个环境相同的虚拟机，对于软件开发和测试尤其有用</p>
<p>vagrant是简便虚拟机操作的一个软件，而使用虚拟机有几个好处：<br> <span id="more"></span></p>
<ol>
<li><p>为了开发环境与生产环境一致（很多开发环境为windows而生产环境为linux），不至于出现在开发环境正常而移步到正式生产环境时出现各种问题，而vagrant通过共享文件，可以实现在主机（windows）下的IDE编写代码操作，直接在虚拟机（linux）中运行展示出效果。</p>
</li>
<li><p>在vagrant中只需要搭配一次开发环境，然后就可以将搭配好的环境系统镜像打包发送给其他的同事用了，其他同事只需要下载vagrant和virtualBox，然后配置下共享目录后就可以开发了，再也不需要关心配置环境的问题了。</p>
</li>
<li><p>目前好多扩展如swoole、redis等对linux支持更好，甚至有些只支持linux，所以采用虚拟机，再也不需要为学习新技术找借口了。</p>
</li>
</ol>
<h2 id="下载安装VirturlBox和Vagrant"><a href="#下载安装VirturlBox和Vagrant" class="headerlink" title="下载安装VirturlBox和Vagrant"></a>下载安装VirturlBox和Vagrant</h2><p>Vagrant</p>
<p><a href="https://www.vagrantup.com/downloads.html">https://www.vagrantup.com/downloads.html</a></p>
<p><img src="/image/15445194551.png"></p>
<p> VirtualBox</p>
<p><a href="https://www.virtualbox.org/wiki/Downloads">https://www.virtualbox.org/wiki/Downloads</a></p>
<p><img src="/image/1544519492-Image.png"></p>
<p>下一步，下一步安装即可</p>
<p><img src="/image/1544519563-Image.png"></p>
<h2 id="创建一个虚拟机"><a href="#创建一个虚拟机" class="headerlink" title="创建一个虚拟机"></a>创建一个虚拟机</h2><p>下载镜像</p>
<p><a href="http://www.vagrantbox.es/">http://www.vagrantbox.es/</a>  下载的centos7.2</p>
<p>链接：<a href="https://pan.baidu.com/s/1GNgmei5aUIWAeBc72kdRgQ">https://pan.baidu.com/s/1GNgmei5aUIWAeBc72kdRgQ</a>  提取码：q2ev</p>
<p><img src="/image/15445195901.png"></p>
<p>加载镜像文件到vagrant中去</p>
<p>vagrant box add new_box centos7.2.box</p>
<p><img src="/image/1544519619-Image.png"></p>
<p>初始化</p>
<p>vagrant init new_box</p>
<p><img src="/image/15445196291.png"></p>
<p>启动虚拟机</p>
<p>vagrant up</p>
<p><img src="/image/1544519677-Image.png"></p>
<p>xshell连接</p>
<p><img src="/image/15445196911.png"></p>
<p>选择密钥登陆</p>
<p><img src="/image/1544519747-Image.png"></p>
<p>导入key文件</p>
<p><img src="/image/1544519776-Image.png"></p>
<p>连接</p>
<p><img src="/image/1544519803-Image.png"> </p>
]]></content>
      <categories>
        <category>无聊操作</category>
      </categories>
  </entry>
  <entry>
    <title>Zookeeper集群安装</title>
    <url>/2019/12/31/Zookeeper%E9%9B%86%E7%BE%A4%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><table>
<thead>
<tr>
<th><strong>主机名</strong></th>
<th><strong>角色</strong></th>
<th><strong>ip</strong></th>
</tr>
</thead>
<tbody><tr>
<td><a href="http://hdss7-11.host.com/">HDSS7-11.host.com</a></td>
<td>k8s代理节点1，zk1</td>
<td>10.4.7.11</td>
</tr>
<tr>
<td><a href="http://hdss7-12.host.com/">HDSS7-12.host.com</a></td>
<td>k8s代理节点2，zk2</td>
<td>10.4.7.12</td>
</tr>
<tr>
<td><a href="http://hdss7-21.host.com/">HDSS7-21.host.com</a></td>
<td>k8s运算节点1，zk3</td>
<td>10.4.7.21</td>
</tr>
<tr>
<td><a href="http://hdss7-22.host.com/">HDSS7-22.host.com</a></td>
<td>k8s运算节点2，jenkins</td>
<td>10.4.7.22</td>
</tr>
<tr>
<td><a href="http://hdss7-200.host.com/">HDSS7-200.host.com</a></td>
<td>k8s运维节点(docker仓库)</td>
<td>10.4.7.200</td>
</tr>
</tbody></table>
<h2 id="安装zookeeper集群"><a href="#安装zookeeper集群" class="headerlink" title="安装zookeeper集群"></a>安装zookeeper集群</h2> <span id="more"></span>
<p><a href="https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html">jdk8</a>安装</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-11 src]# wget https://download.oracle.com/otn/java/jdk/8u231-b11/5b13a193868b4bf28bcb45c792fce896/jdk-8u231-linux-x64.tar.gz?AuthParam=1575439604_232e0955f570ebdcbe325b0f57a333da  # 需要登录账号，复制浏览器的url </span><br><span class="line">[root@hdss7-11 src]# mv jdk-8u231-linux-x64.tar.gz\?AuthParam\=1575439604_232e0955f570ebdcbe325b0f57a333da jdk-8u231-linux-x64.tar.gz     </span><br><span class="line">[root@hdss7-11 src]# mkdir /usr/java                </span><br><span class="line">[root@hdss7-11 src]# tar xf jdk-8u231-linux-x64.tar.gz -C /usr/java </span><br><span class="line">[root@hdss7-11 src]# ln -s /usr/java/jdk1.8.0_231/ /usr/java/jdk </span><br><span class="line">[root@hdss7-11 src]# vim /etc/profile </span><br><span class="line">export JAVA_HOME=/usr/java/jdk </span><br><span class="line">export PATH=$JAVA_HOME/bin:$JAVA_HOME/bin:$PATH </span><br><span class="line">export CLASSPATH=$CLASSPATH:$JAVA_HOME/lib:$JAVA_HOME/lib/tools.jar </span><br><span class="line">[root@hdss7-11 src]# source /etc/profile </span><br></pre></td></tr></table></figure>



<p><a href="https://archive.apache.org/dist/zookeeper/">zookeeper</a>安装</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-11 src]# wget https://archive.apache.org/dist/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz </span><br><span class="line">[root@hdss7-11 src]# tar xf zookeeper-3.4.14.tar.gz -C /opt </span><br><span class="line">[root@hdss7-11 src]# ln -s /opt/zookeeper-3.4.14/ /opt/zookeeper </span><br></pre></td></tr></table></figure>

<p>配置文件 </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-11 src]# mkdir -p /data/zookeeper/data /data/zookeeper/logs </span><br><span class="line">[root@hdss7-11 src]# vi /opt/zookeeper/conf/zoo.cfg </span><br><span class="line">tickTime=2000 </span><br><span class="line">initLimit=10 </span><br><span class="line">syncLimit=5 </span><br><span class="line">dataDir=/data/zookeeper/data </span><br><span class="line">dataLogDir=/data/zookeeper/logs </span><br><span class="line">clientPort=2181 </span><br><span class="line">server.1=[zk1.od.com:2888:3888]</span><br><span class="line">server.2=[zk2.od.com:2888:3888]</span><br><span class="line">server.3=[zk3.od.com:2888:3888]</span><br></pre></td></tr></table></figure>

<p>注意：各节点zk配置相同 </p>
<p>添加A记录 </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-11 src]# vim /var/named/od.com.zone </span><br><span class="line">@ IN SOA dns.od.com.dnsadmin.od.com. ( </span><br><span class="line">   2019111406 ; serial </span><br><span class="line">   10800   ; refresh (3 hours) </span><br><span class="line">   900    ; retry (15 minutes) </span><br><span class="line">   604800  ; expire (1 week) </span><br><span class="line">   86400   ; minimum (1 day) </span><br><span class="line">) </span><br><span class="line">   NS dns.od.com. </span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">TTL 60 ; 1 minutes</span> </span><br><span class="line">dns    A 10.4.7.11 </span><br><span class="line">harbor  A 10.4.7.200 </span><br><span class="line">k8s-yaml A 10.4.7.200 </span><br><span class="line">traefik  A 10.4.7.10 </span><br><span class="line">dashboard A 10.4.7.10 </span><br><span class="line">zk1    A 10.4.7.11 </span><br><span class="line">zk2    A 10.4.7.12 </span><br><span class="line">[root@hdss7-11 src]# systemctl restart named </span><br><span class="line">[root@hdss7-11 src]# dig -t A zk1.od.com @10.4.7.11 +short </span><br><span class="line">10.4.7.11 </span><br></pre></td></tr></table></figure>

<p>myid </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-11 src]# echo &#x27;1&#x27; &gt; /data/zookeeper/data/myid </span><br><span class="line">[root@hdss7-12 src]# echo &#x27;2&#x27; &gt; /data/zookeeper/data/myid </span><br><span class="line">[root@hdss7-21 src]# echo &#x27;3&#x27; &gt; /data/zookeeper/data/myid </span><br></pre></td></tr></table></figure>



<p>启动zk </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-11 src]# /opt/zookeeper/bin/zkServer.sh start </span><br><span class="line">ZooKeeper JMX enabled by default </span><br><span class="line">Using config: /opt/zookeeper/bin/../conf/zoo.cfg </span><br><span class="line">Starting zookeeper ... STARTED </span><br></pre></td></tr></table></figure>

<p>查看集群状态 </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-11 src]# /opt/zookeeper/bin/zkServer.sh status </span><br><span class="line">ZooKeeper JMX enabled by default </span><br><span class="line">Using config: /opt/zookeeper/bin/../conf/zoo.cfg </span><br><span class="line">Mode: follower </span><br><span class="line">[root@hdss7-12 src]# /opt/zookeeper/bin/zkServer.sh status </span><br><span class="line">ZooKeeper JMX enabled by default </span><br><span class="line">Using config: /opt/zookeeper/bin/../conf/zoo.cfg </span><br><span class="line">Mode: leader </span><br><span class="line">[root@hdss7-21 src]# /opt/zookeeper/bin/zkServer.sh status </span><br><span class="line">ZooKeeper JMX enabled by default </span><br><span class="line">Using config: /opt/zookeeper/bin/../conf/zoo.cfg </span><br><span class="line">Mode: follower </span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>zookeeper</tag>
      </tags>
  </entry>
  <entry>
    <title>About Me</title>
    <url>/2020/01/04/about/</url>
    <content><![CDATA[<h3 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h3><p>邮箱：<a href="mailto:&#119;&#101;&#x69;&#113;&#x75;&#110;&#95;&#104;&#64;&#49;&#x36;&#x33;&#46;&#99;&#x6f;&#109;">&#119;&#101;&#x69;&#113;&#x75;&#110;&#95;&#104;&#64;&#49;&#x36;&#x33;&#46;&#99;&#x6f;&#109;</a><br>QQ: <a href="http://wpa.qq.com/msgrd?v=3&uin=1589732463&site=qq&menu=yes">1589732463</a><br>  IT界一名搬运工…</p>
<h3 id="求职意向"><a href="#求职意向" class="headerlink" title="求职意向"></a>求职意向</h3><p>linux运维工程师     目标工作地点：北京  在职</p>
<h3 id="专业技能"><a href="#专业技能" class="headerlink" title="专业技能"></a>专业技能</h3><p>       熟练Redhat、Centos6&#x2F;7等系列操作系统安装(包括批量无人值守)及性能调优、优化<br>       熟练LNMP安装、PHP的扩展及缓存加速的安装，Nginx、Tomcat优化<br>       熟练Nginx、LVS负载均衡，部署和优化及Keepalive高可用<br>       熟练使用常见Promethues、Zabbix开源监控工具<br>       熟练Docker、Kubernetes技术,有生产级容器集群实际运维经验<br>       熟练使用Gitlab+Jenkins+K8s、Gitlab+Drone+K8s等CICD方案<br>       熟悉SpringCloud框架部署及其k8s应用<br>       熟悉阿里云（腾讯）云产品的使用，ECS、SLB、Polardb、日志等<br>       熟悉基本MySQL语句及MySQL的备份与还原、主从复制、读写分离、MHA高可用</p>
]]></content>
      <categories>
        <category>无聊操作</category>
      </categories>
  </entry>
  <entry>
    <title>acme.sh创建ssl证书</title>
    <url>/2019/06/24/acme.sh%E5%88%9B%E5%BB%BAssl%E8%AF%81%E4%B9%A6/</url>
    <content><![CDATA[<p>acme.sh 实现了 acme 协议, 可以从 letsencrypt 生成免费的证书</p>
<h3 id="安装came-sh"><a href="#安装came-sh" class="headerlink" title="安装came.sh"></a>安装came.sh</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">curl  https://get.acme.sh | sh</span></span><br></pre></td></tr></table></figure>


<p>安装过程：</p>
<ol>
<li>默认安装到用户目录，<del>&#x2F;.acme.sh&#x2F;。并将变量加载到用户环境配置文件 .bashrc，方便你的使用：alias acme.sh&#x3D;</del>&#x2F;.acme.sh&#x2F;acme.sh</li>
<li>自动创建cron定时任务，每天凌晨0点自动检测所有的证书，如果快要过期了，需要更新，则会自动更新证书</li>
</ol>
<h3 id="生成证书"><a href="#生成证书" class="headerlink" title="生成证书"></a>生成证书</h3><ul>
<li>http方式</li>
</ul>
<p>需要在你的网站跟目录来验证你的域名所有权，完成验证就可以生成证书了</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">acme.sh --issue -d test.wqblogs.com:4443 --webroot /usr/share/nginx/html/test/</span></span><br></pre></td></tr></table></figure>


<ul>
<li>dns方式</li>
</ul>
<p>在域名上添加一条txt解析记录，验证域名所有权 。</p>
<p>我使用的腾讯云，所以登录dnspod（用户中心&#x3D;&gt;安全设置）创建api id</p>
<p><a href="https://github.com/Neilpang/acme.sh/blob/master/dnsapi/README.md">其他api配置</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">export</span> DP_Id=<span class="string">&quot;1234&quot;</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">export</span> DP_Key=<span class="string">&quot;sADDsdasdgdsf&quot;</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">acme.sh --issue --dns dns_dp -d test.wqblogs.com:4443</span></span><br></pre></td></tr></table></figure>


<h3 id="部署证书"><a href="#部署证书" class="headerlink" title="部署证书"></a><strong>部署证书</strong></h3><p>证书默认放在安装目录下，使用–installcert命令，复制到指定目标位置</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">acme.sh  --installcert  -d  &lt;domain&gt;.com   \</span></span><br><span class="line"><span class="language-bash">        --key-file   /etc/nginx/ssl/&lt;domain&gt;.key \</span></span><br><span class="line"><span class="language-bash">        --fullchain-file /etc/nginx/ssl/fullchain.cer \</span></span><br><span class="line"><span class="language-bash">        --reloadcmd  <span class="string">&quot;nginx -s reload&quot;</span></span></span><br></pre></td></tr></table></figure>


<p>说明：</p>
<p>使用命令之前现在conf里配置好路径，不然nginx重启之后，不会生效</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">   listen 443 ssl;</span><br><span class="line">   ssl_certificate  /etc/nginx/ssl/fullchain.cer;</span><br><span class="line">   ssl_certificate_key /etc/nginx/ssl/&lt;domain&gt;.key;</span><br><span class="line">   ssl_session_timeout 5m;</span><br><span class="line">   ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">   ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;</span><br><span class="line">   ssl_prefer_server_ciphers on;</span><br></pre></td></tr></table></figure>


<h3 id="更新证书"><a href="#更新证书" class="headerlink" title="更新证书"></a><strong>更新证书</strong></h3><p>目前证书在 60 天以后会自动更新, 你无需任何操作. 今后有可能会缩短这个时间, 不过都是自动的, 你不用关心</p>
<h3 id="更新acme-sh"><a href="#更新acme-sh" class="headerlink" title="更新acme.sh"></a><strong>更新acme.sh</strong></h3><p>目前由于 acme 协议和 letsencrypt CA 都在频繁的更新, 因此 acme.sh 也经常更新以保持同步</p>
<p>升级 acme.sh 到最新版 :</p>
<p>acme.sh –upgrade</p>
<p>如果你不想手动升级, 可以开启自动升级:</p>
<p>acme.sh  –upgrade  –auto-upgrade</p>
<p>你也可以随时关闭自动更新:</p>
<p>acme.sh –upgrade  –auto-upgrade  0</p>
<p><a href="https://github.com/Neilpang/acme.sh/wiki/%E8%AF%B4%E6%98%8E">github</a> </p>
]]></content>
      <categories>
        <category>ecs</category>
      </categories>
  </entry>
  <entry>
    <title>Vagrantfile文件粗解</title>
    <url>/2018/12/11/Vagrantfile%E6%96%87%E4%BB%B6%E7%B2%97%E8%A7%A3/</url>
    <content><![CDATA[<p><strong>Vagrantfile文件</strong> </p>
<p>最简单的配置文件，只需要写好Vagrantfile，不需要vagrant init，放入所需目录就可以vagrant up<br>Vagrant.configure(“2”) do |config|<br>config.vm.box &#x3D; “new_box”<br>end</p>
 <span id="more"></span>

<h2 id="配置详解"><a href="#配置详解" class="headerlink" title="配置详解"></a>配置详解</h2><p>config.vm.hostname：配置虚拟机主机名 config.vm.network：这是配置虚拟机网络，由于比较复杂，我们其后单独讨论 config.vm.synced_folder：除了默认的目录绑定外，还可以手动指定绑定 config.ssh.username：默认的用户是vagrant，从官方下载的box往往使用的是这个用户名。如果是自定制的box，所使用的用户名可能会有所不同，通过这个配置设定所用的用户名。 config.vm.provision：我们可以通过这个配置在虚拟机第一次启动的时候进行一些安装配置 需要注意的是，Vagrantfile文件只会在第一次执行vagrant up时调用执行，其后如果不明确使用vagrant reload进行重新加载，否则不会被强制重新加载。</p>
<h2 id="box设置"><a href="#box设置" class="headerlink" title="box设置"></a>box设置</h2><p>config.vm.box &#x3D; “new_box” 该名称是在使用vagrant init中后面的名字</p>
<h2 id="hostname设置"><a href="#hostname设置" class="headerlink" title="hostname设置"></a>hostname设置</h2><p>config.vm.host_name &#x3D; “node1” 可以通过vagrant up node1启动虚拟机</p>
<h2 id="虚拟机网络设置"><a href="#虚拟机网络设置" class="headerlink" title="虚拟机网络设置"></a>虚拟机网络设置</h2><p>NAT : 缺省创建，用于让vm可以通过host转发访问局域网甚至互联网。 host-only（仅主机） : 只有主机可以访问vm，其他机器无法访问它。 bridge （桥接）: 此模式下vm就像局域网中的一台独立的机器，可以被其他机器访问 <strong>host-only:</strong> 配置当前vm的host-only网络的IP地址为192.168.33.10 config.vm.network :private_network, ip: “192.168.33.10” host-only 模式的IP可以不指定，而是采用dhcp自动生成的方式，如 : config.vm.network “private_network”, type: “dhcp” <strong>bridge:</strong> 创建一个bridge桥接网络，指定IP config.vm.network “public_network”, ip: “192.168.0.17” 创建一个bridge桥接网络，指定桥接适配器 config.vm.network “public_network”, bridge: “en1: Wi-Fi (AirPort)” 创建一个bridge桥接网络，不指定桥接适配器 config.vm.network “public_network”</p>
<h2 id="挂载目录设置"><a href="#挂载目录设置" class="headerlink" title="挂载目录设置"></a>挂载目录设置</h2><p>config.vm.synced_folder “D:&#x2F;xxx&#x2F;code”, “&#x2F;home&#x2F;www&#x2F;“ 前面的路径(D:&#x2F;xxx&#x2F;code)是本机代码的地址，后面的地址就是虚拟机的目录，虚拟机启动后自动挂载</p>
<h2 id="端口装发设置"><a href="#端口装发设置" class="headerlink" title="端口装发设置"></a>端口装发设置</h2><p>config.vm.network “forwarded_port”, guest: 80, host: 8080 将宿主机的8080端口映射到客户虚拟机的80端口上，不推荐使用，涉及端口占用</p>
<h2 id="vm的configure节点设置"><a href="#vm的configure节点设置" class="headerlink" title="vm的configure节点设置"></a>vm的configure节点设置</h2><p>表示在config配置中，定义一个名为web的vm配置 config.vm.define “web” do |web| … end Vagrantfile里可以建立多个虚拟机 适合与分布式服务或系统，灾难测试 Vagrant.configure(“2”) do |config| config.vm.define “web” do |web| web.vm.box &#x3D; “apache” end config.vm.define “db” do |db| db.vm.box &#x3D; “mysql” end end</p>
<h2 id="vm通用配置"><a href="#vm通用配置" class="headerlink" title="vm通用配置"></a>vm通用配置</h2><p>指定vm-name，也就是virtualbox管理控制台中的虚机名称。如果不指定该选项会生成一个随机的名字，不容易区分。 vb.name &#x3D; “centos7” vagrant up启动时，是否自动打开virtual box的窗口，缺省为false vb.gui &#x3D; true 指定vm内存，单位为MB vb.memory &#x3D; “1024” 设置CPU个数 vb.cpus &#x3D; 2</p>
<h2 id="provision任务"><a href="#provision任务" class="headerlink" title="provision任务"></a>provision任务</h2><p>可以写一些命令，让vagrant在启动虚拟机的时候自动执行 脚本何时会被执行 第一次执行vagrant up命令 执行vagrant provision命令 执行vagrant reload –provision或者vagrant up –provision命令 你也可以在启动虚拟机的时候添加–no-provision参数以阻止脚本被执行 <strong>单行脚本</strong> 单行脚本使用的基本格式： config.vm.provision “shell”, inline: “echo Hello World” <strong>多行命令</strong> config.vm.provision “shell”, inline: &lt;&lt;-SHELL yum install -y vim yum install -y lrzsz wget SHELL <strong>外部脚本</strong> config.vm.provision “shell”, path: “script.sh” script.sh echo Hello World 修改完Vagrantfile的配置后，记得要重启虚拟机，才能使用虚拟机更新后的配置 </p>
]]></content>
      <categories>
        <category>无聊操作</category>
      </categories>
  </entry>
  <entry>
    <title>alertmanager报警</title>
    <url>/2020/04/10/alertmanager%E6%8A%A5%E8%AD%A6/</url>
    <content><![CDATA[<h3 id="alertmanager"><a href="#alertmanager" class="headerlink" title="alertmanager"></a>alertmanager</h3><p>Prometheus的警报分为两个部分。Prometheus服务器中的警报规则将警报发送到Alertmanager。该<a href="https://prometheus.io/docs/alerting/alertmanager">Alertmanager</a> 然后管理这些警报，包括沉默，抑制，聚集和通过的方法，如电子邮件发出通知，也可以通过webhook接入钉钉等国内IM工具。</p>
<p>设置警报和通知的主要步骤是：</p>
<ul>
<li>设置和<a href="https://prometheus.io/docs/alerting/configuration">配置</a> Alertmanager</li>
<li><a href="https://prometheus.io/docs/prometheus/latest/configuration/configuration/#alertmanager_config">配置Prometheus</a>与Alertmanager连接</li>
<li>在Prometheus中创建<a href="https://prometheus.io/docs/prometheus/latest/configuration/alerting_rules/">警报规则</a></li>
</ul>
<h3 id="alertmanager配置文件"><a href="#alertmanager配置文件" class="headerlink" title="alertmanager配置文件"></a>alertmanager配置文件</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim /opt/alertmanager/config.yml</span></span><br><span class="line"><span class="comment"># 全局配置项</span></span><br><span class="line"><span class="attr">global:</span> </span><br><span class="line">  <span class="attr">resolve_timeout:</span> <span class="string">5m</span> <span class="comment"># 超时,默认5min</span></span><br><span class="line">  <span class="comment"># 邮箱smtp服务</span></span><br><span class="line">  <span class="attr">smtp_from:</span> <span class="string">&#x27;XXXX@qq.com&#x27;</span></span><br><span class="line">  <span class="attr">smtp_smarthost:</span> <span class="string">&#x27;smtp.qq.com:465&#x27;</span></span><br><span class="line">  <span class="attr">smtp_auth_username:</span> <span class="string">‘XXXX@qq.com&#x27;</span></span><br><span class="line">  <span class="comment"># 这里为第三方登录 QQ 邮箱的授权码，非 QQ 账户登录密码</span></span><br><span class="line">  <span class="attr">smtp_auth_password:</span> <span class="string">&#x27;passwd&#x27;</span></span><br><span class="line">  <span class="attr">smtp_require_tls:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">smtp_hello:</span> <span class="string">&#x27;XXXX@qq.com&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 邮件模板</span></span><br><span class="line"><span class="attr">templates:</span>   </span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;/etc/alertmanager/*.tmpl&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 路由</span></span><br><span class="line"><span class="attr">route:</span></span><br><span class="line">  <span class="attr">group_by:</span> [<span class="string">&#x27;alertname&#x27;</span>, <span class="string">&#x27;cluster&#x27;</span>] <span class="comment"># 报警分组依据</span></span><br><span class="line">  <span class="attr">group_wait:</span> <span class="string">20s</span>     <span class="comment"># 组等待时间</span></span><br><span class="line">  <span class="attr">group_interval:</span> <span class="string">20s</span> <span class="comment"># 发送前等待时间</span></span><br><span class="line">  <span class="attr">repeat_interval:</span> <span class="string">12h</span> <span class="comment">#重复周期</span></span><br><span class="line">  <span class="attr">receiver:</span> <span class="string">&#x27;email&#x27;</span> <span class="comment"># 默认警报接收者</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 警报接收者</span></span><br><span class="line"><span class="attr">receivers:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">&#x27;email&#x27;</span></span><br><span class="line">  <span class="attr">email_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">to:</span> <span class="string">&#x27;weiqun_h@163.com&#x27;</span>                   <span class="comment"># 接收警报的邮件</span></span><br><span class="line">    <span class="attr">send_resolved:</span> <span class="literal">true</span> <span class="comment"># 恢复后通知</span></span><br><span class="line">    <span class="attr">html:</span> <span class="string">&#x27;<span class="template-variable">&#123;&#123; template &quot;email.to.html&quot; . &#125;&#125;</span>&#x27;</span> <span class="comment"># 邮件模板</span></span><br><span class="line">    <span class="attr">headers:</span> &#123; <span class="attr">Subject:</span> <span class="string">&quot; <span class="template-variable">&#123;&#123; .CommonLabels.instance &#125;&#125;</span> <span class="template-variable">&#123;&#123; .CommonAnnotations.summary &#125;&#125;</span>&quot;</span> &#125;   <span class="comment">#标题</span></span><br></pre></td></tr></table></figure>

<h3 id="邮件模板"><a href="#邮件模板" class="headerlink" title="邮件模板"></a>邮件模板</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim /opt/alertmanager/email.tmpl</span></span><br><span class="line">&#123;&#123; <span class="string">define</span> <span class="string">&quot;email.to.html&quot;</span> &#125;&#125;</span><br><span class="line"><span class="comment"># 这里 email.to.html 就是要发送的邮件内容，支持 Html 和 Text 格式，这里为了显示好看，采用 Html 格式简单显示信息</span></span><br><span class="line">&#123;&#123;<span class="bullet">-</span> <span class="string">if</span> <span class="string">gt</span> <span class="string">(len</span> <span class="string">.Alerts.Firing)</span> <span class="number">0</span> <span class="string">-</span>&#125;&#125;</span><br><span class="line">&#123;&#123; <span class="string">range</span> <span class="string">.Alerts</span> &#125;&#125;</span><br><span class="line"><span class="string">告警程序:</span> <span class="string">prometheus_alert</span> <span class="string">&lt;br&gt;</span></span><br><span class="line"><span class="string">告警级别:</span> &#123;&#123; <span class="string">.Labels.severity</span> &#125;&#125; <span class="string">&lt;br&gt;</span></span><br><span class="line"><span class="string">告警类型:</span> &#123;&#123; <span class="string">.Labels.alertname</span> &#125;&#125; <span class="string">&lt;br&gt;</span></span><br><span class="line"><span class="string">故障主机:</span> &#123;&#123; <span class="string">.Labels.instance</span> &#125;&#125; <span class="string">&lt;br&gt;</span></span><br><span class="line"><span class="string">告警主题:</span> &#123;&#123; <span class="string">.Annotations.summary</span> &#125;&#125;  <span class="string">&lt;br&gt;</span></span><br><span class="line"><span class="string">触发时间:</span> &#123;&#123; <span class="string">.StartsAt.Format</span> <span class="string">&quot;2006-01-02 15:04:05&quot;</span> &#125;&#125; <span class="string">&lt;br&gt;</span> <span class="comment"># 时间不需要改，改了时间不正常</span></span><br><span class="line">&#123;&#123; <span class="string">end</span> &#125;&#125;&#123;&#123; <span class="string">end</span> <span class="string">-</span>&#125;&#125;</span><br><span class="line"></span><br><span class="line">&#123;&#123;<span class="bullet">-</span> <span class="string">if</span> <span class="string">gt</span> <span class="string">(len</span> <span class="string">.Alerts.Resolved)</span> <span class="number">0</span> <span class="string">-</span>&#125;&#125;</span><br><span class="line">&#123;&#123; <span class="string">range</span> <span class="string">.Alerts</span> &#125;&#125;</span><br><span class="line"><span class="string">告警程序:</span> <span class="string">prometheus_alert</span> <span class="string">&lt;br&gt;</span></span><br><span class="line"><span class="string">告警级别:</span> &#123;&#123; <span class="string">.Labels.severity</span> &#125;&#125; <span class="string">&lt;br&gt;</span></span><br><span class="line"><span class="string">告警类型:</span> &#123;&#123; <span class="string">.Labels.alertname</span> &#125;&#125; <span class="string">&lt;br&gt;</span></span><br><span class="line"><span class="string">故障主机:</span> &#123;&#123; <span class="string">.Labels.instance</span> &#125;&#125; <span class="string">&lt;br&gt;</span></span><br><span class="line"><span class="string">告警主题:</span> &#123;&#123; <span class="string">.Annotations.summary</span> &#125;&#125; <span class="string">&lt;br&gt;</span></span><br><span class="line"><span class="string">触发时间:</span> &#123;&#123; <span class="string">.StartsAt.Format</span> <span class="string">&quot;2006-01-02 15:04:05&quot;</span> &#125;&#125; <span class="string">&lt;br&gt;</span></span><br><span class="line"><span class="string">恢复时间:</span> &#123;&#123; <span class="string">.EndsAt.Format</span> <span class="string">&quot;2006-01-02 15:04:05&quot;</span> &#125;&#125; <span class="string">&lt;br&gt;</span></span><br><span class="line">&#123;&#123; <span class="string">end</span> &#125;&#125;&#123;&#123; <span class="string">end</span> <span class="string">-</span>&#125;&#125;</span><br><span class="line"></span><br><span class="line">&#123;&#123;<span class="bullet">-</span> <span class="string">end</span> &#125;&#125;</span><br></pre></td></tr></table></figure>

<h3 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker run -d --name alertmanager --net=host -v /opt/alertmanager:/etc/alertmanager -v /etc/localtime:/etc/localtime:ro docker.io/prom/alertmanager:v0.14.0</span></span><br></pre></td></tr></table></figure>

<h3 id="配置告警规则"><a href="#配置告警规则" class="headerlink" title="配置告警规则"></a>配置告警规则</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim rules.yml</span></span><br><span class="line"><span class="attr">groups:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">rabbitmq-up</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">alert:</span> <span class="string">rabbitmq-up</span></span><br><span class="line">    <span class="attr">expr:</span> <span class="string">rabbitmq_node_up&#123;job=&quot;rabbitmq&quot;&#125;</span> <span class="string">==</span> <span class="number">0</span> </span><br><span class="line">    <span class="attr">for:</span> <span class="string">15s</span></span><br><span class="line">    <span class="attr">annotations:</span></span><br><span class="line">      <span class="attr">summary:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; $labels.name &#125;&#125;</span> 已停止运行超过 15s！&quot;</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;$labels.name&#125;&#125;</span> has been down&quot;</span></span><br></pre></td></tr></table></figure>

<p>该 rules 目的是监测 rabbitmq 是否存活，</p>
<p>expr 为 PromQL 表达式验证特定节点 job&#x3D;”rabbitmq” 是否活着，</p>
<p>for 表示报警状态为 Pending 后等待 15s 变成 Firing 状态，一旦变成 Firing 状态则将报警发送到 AlertManager</p>
<h3 id="prometheus配置"><a href="#prometheus配置" class="headerlink" title="prometheus配置"></a>prometheus配置</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">alerting:</span></span><br><span class="line">  <span class="attr">alertmanagers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">static_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">localhost:9093</span></span><br><span class="line"><span class="attr">rule_files:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;rules.yml&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="测试报警"><a href="#测试报警" class="headerlink" title="测试报警"></a>测试报警</h3><p>关闭rabbitmq测试报警</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl stop rabbitmq-server.service</span></span><br></pre></td></tr></table></figure>

<p><img src="/image/6523453.png" alt="6523453"></p>
<p><img src="/image/7432237.png" alt="7432237"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl start rabbitmq-server.service</span></span><br></pre></td></tr></table></figure>

<p><img src="/image/5625237.png" alt="Image"></p>
]]></content>
      <categories>
        <category>prometheus</category>
      </categories>
      <tags>
        <tag>prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>ansible之playbook使用</title>
    <url>/2019/05/08/ansible%E4%B9%8Bplaybook%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h2 id="playbook简介"><a href="#playbook简介" class="headerlink" title="playbook简介"></a><strong>playbook简介</strong></h2><p>playbook 由一个或多个 ‘play’ 组成.它的内容是一个以 ‘play’ 为元素的列表</p>
<p>在 play 之中,一组机器被映射为定义好的角色.在 ansible 中,play 的内容,被称为 tasks,即任务.在基本层次的应用中,一个任务是一个对 ansible 模块的调用</p>
<p>playbook 的格式是YAML（详见:<a href="http://www.ansible.com.cn/docs/YAMLSyntax.html">YAML 语法</a>）</p>
<p>一个完整的代码块功能需最少元素包括name：task</p>
<p>一个name只能包括一个task</p>
<p>playbook文件扩展名通常为yml或yaml</p>
 <span id="more"></span>

<h2 id="playbook核心组件"><a href="#playbook核心组件" class="headerlink" title="playbook核心组件"></a><strong>playbook核心组件</strong></h2><h3 id="hosts主机列表"><a href="#hosts主机列表" class="headerlink" title="hosts主机列表"></a>hosts主机列表</h3><p>用于指定要执行任务的主机</p>
<p>  可以使如下形式</p>
<p>  192.168.1.11</p>
<p>  192.168.1.*</p>
<p>   <a href="https://www.wqblogs.com:4443/">www.wqblogs.com:4443</a></p>
<p>   Webservice</p>
<h3 id="remote-user用户"><a href="#remote-user用户" class="headerlink" title="remote_user用户"></a>remote_user用户</h3><p>可用于hosts和tasks中。也可以通过制定其通过sudo的方式在远程主机上执行任务，其可用于play全局或其任务，此外，甚至可以在sudo时使用sudo_user指定sudo时切换的用户</p>
<p>例：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.11</span> </span><br><span class="line">  <span class="attr">remote_user:</span> <span class="string">heweiqun</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">install</span> <span class="string">package</span></span><br><span class="line">      <span class="attr">yum:</span> <span class="string">name=httpd</span></span><br><span class="line">      <span class="attr">sudo:</span> <span class="literal">yes</span></span><br></pre></td></tr></table></figure>

<h3 id="tasks任务列表"><a href="#tasks任务列表" class="headerlink" title="tasks任务列表"></a>tasks任务列表</h3><p>paly的主体部分是task list。task list中的各任务按次序逐个在hosts中指定的所有主机上执行。</p>
<p>task的目的是使用指定的参数执行模块。</p>
<p>每个task都应该有其name，用于playbook的执行结果输出，建议其内容尽可能清晰的描述任务执行步骤。</p>
<p>下面是一种基本的 task 的定义,service moudle 使用 key&#x3D;value 格式的参数,这也是大多数 module 使用的参数格式:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">make</span> <span class="string">sure</span> <span class="string">apache</span> <span class="string">is</span> <span class="string">running</span></span><br><span class="line">    <span class="attr">service:</span> <span class="string">name=httpd</span> <span class="string">state=running</span></span><br></pre></td></tr></table></figure>

<p>比较特别的两个 modudle 是 command 和 shell ,它们不使用 key&#x3D;value 格式的参数,而是这样:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">disable</span> <span class="string">selinux</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">/sbin/setenforce</span> <span class="number">0</span></span><br></pre></td></tr></table></figure>

<h3 id="playbook用法"><a href="#playbook用法" class="headerlink" title="playbook用法"></a>playbook用法</h3><p>ansible-playbook filename.yml [options]</p>
<p>  -C,–check                 模拟执行剧本，输出本次执行发生的改变。但是不是真正执行剧本。</p>
<p>  -v, –verbose                输出更详细的执行过程信息，-vvv可得到所有执行过程信息。</p>
<p>-k, –ask-pass              ssh登录认证密码</p>
<p>  -s, –sudo                      sudo 到root用户，相当于Linux系统下的sudo命令</p>
<p>  -K, –ask-sudo-pass   用户的密码（—sudo时使用）</p>
<p>  -t TAGS, –tags&#x3D;TAGS  当 play 和 task 的 tag 为该参数指定的值时才执行，多个 tag 以逗号分隔;<br>–skip-tags&#x3D;TAGS 运行playbook时跳过这个tag</p>
<h2 id="playbook其他用法"><a href="#playbook其他用法" class="headerlink" title="playbook其他用法"></a><strong>playbook其他用法</strong></h2><h3 id="notify与handlers配合触发条件"><a href="#notify与handlers配合触发条件" class="headerlink" title="notify与handlers配合触发条件"></a>notify与handlers配合触发条件</h3><p>handlers</p>
<p>等同于task，本质上没有什么不同。用于当关注的资源发生变化时，才会采取一定的操作</p>
<p>notify</p>
<p>此指令可用于在每个play的最后被触发，这样避免多次有改变发生时每次都执行指定的操作，仅在所有的变化发生完成之后一次性地执行制定操作。</p>
<p>在notify中列出的操作称为handler，也即notify中调用handler中定义的操作</p>
<p>例：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.11</span></span><br><span class="line">  <span class="attr">remote_user:</span> <span class="string">root</span></span><br><span class="line">  </span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">install</span> <span class="string">httpd</span></span><br><span class="line">      <span class="attr">yum:</span> <span class="string">name=httpd</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">copy</span> <span class="string">conf</span> <span class="string">file</span></span><br><span class="line">      <span class="attr">copy:</span> <span class="string">src=conf/httpd.conf</span> <span class="string">dest=/etc/httpd/conf</span> <span class="string">backup=yes</span></span><br><span class="line">      <span class="attr">notify:</span> <span class="string">restart</span> <span class="string">service</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">start</span> <span class="string">service</span></span><br><span class="line">       <span class="attr">service:</span> <span class="string">name=httpd</span> <span class="string">state=started</span> <span class="string">enabled=yes</span></span><br><span class="line">      </span><br><span class="line">  <span class="attr">handlers:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">restart</span> <span class="string">service</span></span><br><span class="line">      <span class="attr">service:</span> <span class="string">name=httpd</span> <span class="string">state=restarted</span></span><br></pre></td></tr></table></figure>

<p>当配置文件发生变化是，触发重启</p>
<h3 id="playbook-tags使用"><a href="#playbook-tags使用" class="headerlink" title="playbook tags使用"></a>playbook tags使用</h3><p>只想run其中的某个task，这个时候tags是你的最佳选择</p>
<p>例：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">copy</span> <span class="string">conf</span> <span class="string">file</span></span><br><span class="line">      <span class="attr">copy:</span> <span class="string">src=conf/httpd.conf</span> <span class="string">dest=/etc/httpd/conf</span> <span class="string">backup=yes</span></span><br><span class="line">      <span class="attr">notify:</span> <span class="string">restart</span> <span class="string">service</span></span><br><span class="line">      <span class="attr">tags:</span> <span class="string">conf</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">start</span> <span class="string">service</span></span><br><span class="line">      <span class="attr">service:</span> <span class="string">name=httpd</span> <span class="string">state=started</span> <span class="string">enabled=yes</span></span><br><span class="line">      <span class="attr">tags:</span> <span class="string">service</span></span><br><span class="line"></span><br><span class="line"><span class="string">选择两个tags，用’,‘隔开</span></span><br><span class="line"><span class="comment"># ansible-playbook --tags conf,service hwq.yml</span></span><br><span class="line"><span class="string">跳过conf标签</span></span><br><span class="line"><span class="comment"># ansible-playbook --skip-tags=‘conf’ hwq.yml</span></span><br><span class="line"><span class="string">查询playbook有多少标签</span></span><br><span class="line"><span class="comment"># ansible-playbook --list-tags hwq.yml</span></span><br></pre></td></tr></table></figure>

<h3 id="playbook变量使用"><a href="#playbook变量使用" class="headerlink" title="playbook变量使用"></a>playbook变量使用</h3><ol>
<li>在剧本里编写变量，ansible命令赋值</li>
</ol>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim hwq.yml</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">host:</span> <span class="string">all</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">install</span> <span class="string">package</span></span><br><span class="line">      <span class="attr">yum:</span> <span class="string">name=&#123;&#123;package1&#125;&#125;</span></span><br><span class="line">      <span class="attr">yum:</span> <span class="string">name=&#123;&#123;package2&#125;&#125;</span></span><br><span class="line"><span class="comment"># ansible-playbook -e &#x27;package1=httpd package2=nginx&#x27; hwq.yml      </span></span><br></pre></td></tr></table></figure>
<ul>
<li>host: all<br>tasks:<ul>
<li>name: install package<br>yum: name&#x3D;{ {package1}}<br>yum: name&#x3D;{ {package2}}</li>
</ul>
</li>
</ul>
<ol start="2">
<li>直接在palybook里赋值</li>
</ol>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim hwq.yml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.11</span></span><br><span class="line">  <span class="attr">vars:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">package1:</span> <span class="string">httpd</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">package2:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">install</span> <span class="string">package</span></span><br><span class="line">      <span class="attr">yum:</span> <span class="string">name=&#123;&#123;package1&#125;&#125;</span></span><br><span class="line">      <span class="attr">yum:</span> <span class="string">name=&#123;&#123;package2&#125;&#125;</span></span><br><span class="line"><span class="comment"># ansible-playbook hwq.yml      </span></span><br></pre></td></tr></table></figure>
<ol start="3">
<li>在独立变量yml文件中定义（使用变量文件）</li>
</ol>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim vars.yml</span></span><br><span class="line"><span class="attr">var1:</span> <span class="string">httpd</span></span><br><span class="line"><span class="attr">var2:</span> <span class="string">vsftpd</span></span><br><span class="line"><span class="comment"># vim hwq.yml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.11</span></span><br><span class="line">  <span class="attr">remote_user:</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">vars_files:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">vars.yml</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">installed</span> <span class="string">package</span></span><br><span class="line">      <span class="attr">yum:</span> <span class="string">name=&#123;&#123;var1&#125;&#125;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">create</span> <span class="string">file</span></span><br><span class="line">      <span class="attr">file:</span> <span class="string">name=/data/&#123;&#123;var2&#125;&#125;.log</span> <span class="string">state=touch</span></span><br><span class="line"><span class="comment"># ansiable-palybook hwq.yml      </span></span><br></pre></td></tr></table></figure>
<ol start="4">
<li>在主机列表里设置变量</li>
</ol>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim /etc/ansible/hosts</span></span><br><span class="line">[<span class="string">webservice</span>] <span class="comment">#主机私有变量</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.1</span><span class="number">.11</span>   <span class="string">http_port=8080</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.1</span><span class="number">.12</span> <span class="string">http_port=9090</span></span><br><span class="line">[<span class="string">webservice:vars</span>] <span class="comment">#webservice公用变量</span></span><br><span class="line"><span class="string">http_port=80</span></span><br><span class="line"><span class="comment"># vim hwq.yml</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">create</span> <span class="string">port</span> <span class="string">txt</span></span><br><span class="line">  <span class="attr">file:</span> <span class="string">name=/data/&#123;&#123;http_port&#125;&#125;.txt</span> <span class="string">state=touch</span></span><br><span class="line"><span class="comment"># ansiable-palybook hwq.yml  </span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>ansible</category>
      </categories>
      <tags>
        <tag>ansible</tag>
      </tags>
  </entry>
  <entry>
    <title>ansible之role</title>
    <url>/2019/06/22/ansible%E4%B9%8Brole/</url>
    <content><![CDATA[<h2 id="roles与include"><a href="#roles与include" class="headerlink" title="roles与include"></a>roles与include</h2><p>如果将所有的play都写在一个playbook中，很容易导致这个playbook文件变得臃肿庞大，且不易读。因此，可以将多个不同任务分别写在不同的playbook中，然后使用include将其包含进去即可。而role则是整合playbook的方式。无论是include还是role，其目的都是分割大playbook以及复用某些细化的play甚至是task。</p>
<p>使用场景：</p>
<p>  *** 剧本变更主机或主机组</p>
<p>  *** 命名不规范维护和交接</p>
<p>  *** 某些功能需多个playbook</p>
 <span id="more"></span>

<h3 id="include"><a href="#include" class="headerlink" title="include"></a>include</h3><p>可以将task列表和handlers独立写在其他的文件中，然后在某个playbook文件中使用include来包含它们。除此之外，还可以写独立的playbook文件，使用include来包含这个文件。</p>
<p>也即是说，include可以导入两种文件：导入task、导入playbook。</p>
<p>例：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim yum.yml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line">  <span class="string">-name:installed</span> <span class="string">package</span></span><br><span class="line">   <span class="string">yum:name=htop</span></span><br><span class="line"><span class="comment"># vim hwq.yml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="string">-hosts:192.168.1.11</span></span><br><span class="line"> <span class="attr">tasks:</span></span><br><span class="line">   <span class="string">-include:yum.yml</span></span><br><span class="line"><span class="comment"># tree roles/</span></span><br><span class="line"><span class="string">roles/</span></span><br><span class="line"><span class="string">├──</span> <span class="string">hwq.yml</span></span><br><span class="line"><span class="string">└──</span> <span class="string">yum.yml</span></span><br></pre></td></tr></table></figure>

<p>在include的时候传递变量给对应的文件，这样在被包含的文件中就可以引用该变量的值</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="string">-hosts:192.168.1.11</span></span><br><span class="line"> <span class="attr">tasks:</span></span><br><span class="line">   <span class="string">-include:yum.yml</span></span><br><span class="line">     <span class="attr">vars:</span></span><br><span class="line">        <span class="string">hwq:&quot;Hello</span> <span class="string">World!&quot;</span></span><br></pre></td></tr></table></figure>

<p>在yun.yml使用该变量</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line">  <span class="string">-name:installed</span> <span class="string">package</span></span><br><span class="line">   <span class="string">yum:name=htop</span></span><br><span class="line">  <span class="string">-name:print</span></span><br><span class="line">   <span class="string">shell:echo</span> <span class="string">&quot;&#123; &#123;hwq&#125;&#125;” &gt;&gt; /opt/hwq.txt</span></span><br></pre></td></tr></table></figure>

<p> </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ansible 192.168.1.11 -m shell -a <span class="string">&#x27;cat /opt/hwq.txt&#x27;</span> -k</span></span><br><span class="line">SSH password:</span><br><span class="line">192.168.1.11 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">Hello World!</span><br></pre></td></tr></table></figure>

<h3 id="roles"><a href="#roles" class="headerlink" title="roles"></a>roles</h3><p>roles意为角色，主要用于封装playbook实现复用性。在ansible中，roles通过文件的组织结构来展现。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">├── nginx.yml</span><br><span class="line"></span><br><span class="line">└── roles</span><br><span class="line"></span><br><span class="line">    └── nginx</span><br><span class="line"></span><br><span class="line">        ├── defaults</span><br><span class="line"></span><br><span class="line">        ├── files</span><br><span class="line"></span><br><span class="line">        ├── handlers</span><br><span class="line"></span><br><span class="line">        │   └── main.yml</span><br><span class="line"></span><br><span class="line">        ├── meta</span><br><span class="line"></span><br><span class="line">        │   └── main.yml</span><br><span class="line"></span><br><span class="line">        ├── tasks</span><br><span class="line"></span><br><span class="line">        │   └── main.yml</span><br><span class="line"></span><br><span class="line">        ├── templates</span><br><span class="line"></span><br><span class="line">        └── vars</span><br><span class="line"></span><br><span class="line">            └── main.yml</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>各个目录的含义</p>
<p>nginx.yml：nginx.yml文件是ansible-playbook需要执行的文件，在此文件中定义了角色，当执行到角色时，将会到roles中对应的角色目录中寻找相关文件。</p>
<p>nginx目录：定义role的目录。</p>
<p>tasks目录：存放task列表。若role要生效，此目录必须要有一个主task文件main.yml，在main.yml中可以使用include包含同目录(即tasks)中的其他文件。</p>
<p>handlers目录：存放handlers的目录，若要生效，则文件必须名为main.yml文件。</p>
<p>files目录：在task中执行copy或script模块时，如果使用的是相对路径，则会到此目录中寻找对应的文件。</p>
<p>templates目录：在task中执行template模块时，如果使用的是相对路径，则会到此目录中寻找对应的模块文件。</p>
<p>vars目录：定义专属于该role的变量，如果要有var文件，则必须为main.yml文件。</p>
<p>defaults目录：定义角色默认变量，角色默认变量的优先级最低，会被任意其他层次的同名变量覆盖。如果要有var文件，则必须为main.yml文件。</p>
<p>meta目录：用于定义角色依赖，如果要有角色依赖关系，则文件必须为main.yml。</p>
<h4 id="role使用tag"><a href="#role使用tag" class="headerlink" title="role使用tag"></a>role使用tag</h4><p>例：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">node01</span></span><br><span class="line">  <span class="attr">remote_user:</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">roles:</span></span><br><span class="line">    <span class="bullet">-</span> &#123; <span class="attr">role:</span> <span class="string">mysql</span>, <span class="attr">tags:</span> [<span class="string">&#x27;wordpress&#x27;</span>,<span class="string">&#x27;mysql&#x27;</span>] &#125;</span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">node02</span></span><br><span class="line">  <span class="attr">remote_user:</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">roles:</span></span><br><span class="line">    <span class="bullet">-</span> &#123; <span class="attr">role:</span> <span class="string">php</span>, <span class="attr">tags:</span> [<span class="string">&#x27;wordpress&#x27;</span>,<span class="string">&#x27;php&#x27;</span>] &#125;</span><br><span class="line">    <span class="bullet">-</span> &#123; <span class="attr">role:</span> <span class="string">nginx</span>, <span class="attr">tags:</span> [<span class="string">&#x27;wordpress&#x27;</span>,<span class="string">&#x27;nginx&#x27;</span>] &#125;</span><br></pre></td></tr></table></figure>

<h4 id="roles使用"><a href="#roles使用" class="headerlink" title="roles使用"></a>roles使用</h4><p>例：</p>
<p>wordpress剧本</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── roles</span><br><span class="line">│   ├── mysql</span><br><span class="line">│   │   └── tasks</span><br><span class="line">│   │       ├── db.yml</span><br><span class="line">│   │       ├── main.yml</span><br><span class="line">│   │       ├── start.yml</span><br><span class="line">│   │       ├── user.yml</span><br><span class="line">│   │       └── yum.yml</span><br><span class="line">│   ├── nginx</span><br><span class="line">│   │   ├── files</span><br><span class="line">│   │   │   ├── latest.tar.gz</span><br><span class="line">│   │   │   └── wp-config.php</span><br><span class="line">│   │   ├── handlers</span><br><span class="line">│   │   │   └── main.yml</span><br><span class="line">│   │   ├── tasks</span><br><span class="line">│   │   │   ├── copy.yml</span><br><span class="line">│   │   │   ├── main.yml</span><br><span class="line">│   │   │   ├── start.yml</span><br><span class="line">│   │   │   ├── templates.yml</span><br><span class="line">│   │   │   ├── unpack.yml</span><br><span class="line">│   │   │   └── yum.yml</span><br><span class="line">│   │   └── templates</span><br><span class="line">│   │       └── nginx.conf.j2</span><br><span class="line">│   └── php</span><br><span class="line">│       └── tasks</span><br><span class="line">│           ├── conf.yml</span><br><span class="line">│           ├── main.yml</span><br><span class="line">│           ├── start.yml</span><br><span class="line">│           ├── user.yml</span><br><span class="line">│           └── yum.yml</span><br><span class="line">└── wordpress_rele.yml</span><br></pre></td></tr></table></figure>

<p>剧本压缩包 <a href="https://pan.wqblogs.com:4443/sharing/V9jxCJMcX">wordpress.tar</a></p>
<p>说明：</p>
<p>  主机为3台，一台为ansible管理机，一台为mysql主机，一台为web主机。IP为192.168.9.11,192.168.9.12,192.168.9.13</p>
<p>  如需学习实验，需要修改主机名，网段与IP（保持环境一致）</p>
<p>  如不修改，需要修改下面三个文件</p>
<p>  wordpress_rele.yml                             &#x3D;&gt;      - hosts: node01  - hosts: node02</p>
<p>  roles&#x2F;nginx&#x2F;files&#x2F;wp-config.php      &#x3D;&gt;      define( ‘DB_HOST’, ‘192.168.9.12’ );</p>
<p>  roles&#x2F;mysql&#x2F;tasks&#x2F;user.yml              &#x3D;&gt;      host:”192.168.9.%” </p>
]]></content>
      <categories>
        <category>ansible</category>
      </categories>
      <tags>
        <tag>ansible</tag>
      </tags>
  </entry>
  <entry>
    <title>ansible之setup模块</title>
    <url>/2019/05/27/ansible%E4%B9%8Bsetup%E6%A8%A1%E5%9D%97/</url>
    <content><![CDATA[<h3 id="setup模块"><a href="#setup模块" class="headerlink" title="setup模块"></a>setup模块</h3><p>用于收集远程主机的一些基本信息</p>
<h4 id="常用参数"><a href="#常用参数" class="headerlink" title="常用参数"></a>常用参数</h4><p>filter 用于进行条件过滤</p>
<p>例：</p>
<p>获取192.168.1.1基本信息</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ansible 192.168.1.11 -m setup</span></span><br></pre></td></tr></table></figure>

<p>筛选查询cpu信息</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ansible 192.168.1.11 -m setup -a “filter=\*cpu\*<span class="string">&quot;</span></span></span><br></pre></td></tr></table></figure>

 <span id="more"></span>

<h4 id="常用信息"><a href="#常用信息" class="headerlink" title="常用信息"></a>常用信息</h4><p>ansible_all_ipv4_addresses：仅显示ipv4的信息。</p>
<p>ansible_devices： 仅显示磁盘设备信息。</p>
<p>ansible_distribution：显示是什么系统，例：centos,suse等。</p>
<p>ansible_distribution_major_version：显示是系统主版本。</p>
<p>ansible_distribution_version：仅显示系统版本。</p>
<p>ansible_machine：显示系统类型，例：32位，还是64位。</p>
<p>ansible_eth0：仅显示eth0的信息。</p>
<p>ansible_hostname：仅显示主机名。</p>
<p>ansible_kernel：仅显示内核版本。</p>
<p>ansible_lvm：显示lvm相关信息。</p>
<p>ansible_memtotal_mb：显示系统总内存。</p>
<p>ansible_memfree_mb：显示可用系统内存。</p>
<p>ansible_memory_mb：详细显示内存情况。</p>
<p>ansible_swaptotal_mb：显示总的swap内存。</p>
<p>ansible_swapfree_mb：显示swap内存的可用内存。</p>
<p>ansible_mounts：显示系统磁盘挂载情况。</p>
<p>ansible_processor：显示cpu个数(具体显示每个cpu的型号)。</p>
<p>ansible_processor_vcpus：显示cpu个数(只显示总的个数)。 </p>
]]></content>
      <categories>
        <category>ansible</category>
      </categories>
      <tags>
        <tag>ansible</tag>
      </tags>
  </entry>
  <entry>
    <title>ansible之判断与循环</title>
    <url>/2019/05/27/ansible%E4%B9%8B%E5%88%A4%E6%96%AD%E4%B8%8E%E5%BE%AA%E7%8E%AF/</url>
    <content><![CDATA[<h2 id="when用法"><a href="#when用法" class="headerlink" title="when用法"></a>when用法</h2><p>条件判断，等同于if。在task中使用，jinja2的语法格式</p>
<p>例：</p>
<p>当主机系统为ubuntu时关闭系统</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">tasks:</span></span><br><span class="line">   <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">shutdown</span> <span class="string">systems</span></span><br><span class="line">     <span class="attr">command:</span> <span class="string">/sbin/shutdown</span> <span class="string">-h</span> <span class="string">now</span></span><br><span class="line">     <span class="attr">when:</span> <span class="string">ansible_os_family</span> <span class="string">==</span> <span class="string">&quot;ubuntu&quot;</span></span><br></pre></td></tr></table></figure>

 <span id="more"></span>

<h2 id="with-items用法"><a href="#with-items用法" class="headerlink" title="with_items用法"></a>with_items用法</h2><p>当有需要重复性执行的任务时，可以使用迭代机制。固定变量名为”item”</p>
<h3 id="普通循环"><a href="#普通循环" class="headerlink" title="普通循环"></a>普通循环</h3><p>复制多个文件到远程主机</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---  </span></span><br><span class="line"><span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">copy</span> <span class="string">files</span></span><br><span class="line">      <span class="attr">copy:</span> <span class="string">src=/data/&#123;</span> &#123;<span class="string">item</span>&#125;<span class="string">&#125;</span> <span class="string">dest=/data</span></span><br><span class="line">      <span class="attr">with_items:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">file1</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">file2</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">file3</span></span><br></pre></td></tr></table></figure>


<p>安装多个服务</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---  </span></span><br><span class="line"><span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">installed</span> <span class="string">packages</span></span><br><span class="line">      <span class="attr">yum:</span> <span class="string">name=&#123;</span> &#123;<span class="string">item</span>&#125;<span class="string">&#125;</span> </span><br><span class="line">      <span class="attr">with_items:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">nginx</span> </span><br><span class="line">        <span class="bullet">-</span> <span class="string">httpd</span></span><br></pre></td></tr></table></figure>

<h3 id="字典嵌套循环"><a href="#字典嵌套循环" class="headerlink" title="字典嵌套循环"></a>字典嵌套循环</h3><p>创建三个目录之后把三个文件复制对应的目录下</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">--</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="number">39.105</span><span class="number">.89</span><span class="number">.65</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">create</span> <span class="string">dir</span></span><br><span class="line">      <span class="attr">file:</span> <span class="string">name=/data/hwq/&#123;</span> &#123;<span class="string">item</span>&#125;<span class="string">&#125;</span> <span class="string">state=directory</span></span><br><span class="line">      <span class="attr">with_items:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">file1</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">file2</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">file3</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">copy</span> <span class="string">file</span></span><br><span class="line">      <span class="attr">copy:</span> <span class="string">src=/data/&#123;</span> &#123;<span class="string">item.file</span>&#125;<span class="string">&#125;</span> <span class="string">dest=/data/hwq/&#123;</span> &#123;<span class="string">item.dir</span>&#125;<span class="string">&#125;</span></span><br><span class="line">      <span class="attr">with_items:</span></span><br><span class="line">        <span class="bullet">-</span> &#123; <span class="attr">file:</span> <span class="string">&#x27;file1&#x27;</span>,<span class="attr">dir:</span> <span class="string">&#x27;file1&#x27;</span>&#125;</span><br><span class="line">        <span class="bullet">-</span> &#123; <span class="attr">file:</span> <span class="string">&#x27;file2&#x27;</span>,<span class="attr">dir:</span> <span class="string">&#x27;file2&#x27;</span>&#125;</span><br><span class="line">        <span class="bullet">-</span> &#123; <span class="attr">file:</span> <span class="string">&#x27;file3&#x27;</span>,<span class="attr">dir:</span> <span class="string">&#x27;file3&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># ansible-playbook hwq.yml  </span></span><br><span class="line"><span class="comment"># tree hwq</span></span><br><span class="line"><span class="string">hwq</span></span><br><span class="line"><span class="string">├──</span> <span class="string">file1</span></span><br><span class="line"><span class="string">│</span>   <span class="string">└──</span> <span class="string">file1</span></span><br><span class="line"><span class="string">├──</span> <span class="string">file2</span></span><br><span class="line"><span class="string">│</span>   <span class="string">└──</span> <span class="string">file2</span></span><br><span class="line"><span class="string">└──</span> <span class="string">file3</span></span><br><span class="line">    <span class="string">└──</span> <span class="string">file3</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>ansible</category>
      </categories>
      <tags>
        <tag>ansible</tag>
      </tags>
  </entry>
  <entry>
    <title>ansible之template模块</title>
    <url>/2019/05/27/ansible%E4%B9%8Btemplate%E6%A8%A1%E5%9D%97/</url>
    <content><![CDATA[<h2 id="templates模块简介"><a href="#templates模块简介" class="headerlink" title="templates模块简介"></a>templates模块简介</h2><p>文本文件，嵌套有脚本（使用模板编程语言编写）</p>
<p>Jinja2语言，使用字面量，有下面形式</p>
<p>字符串：使用单引号或双引号</p>
<p>数字：整数，浮点数</p>
<p>列表： [item1, item2, …]</p>
<p>元组： (item1, item2, …)</p>
<p>字典： {key1:value1, key2:value2, …}</p>
<p>布尔型： true&#x2F;false</p>
<span id="more"></span> 

<p>算术运算： +, -, *, &#x2F;, &#x2F;&#x2F;, %, **</p>
<p>比较操作： &#x3D;&#x3D;, !&#x3D;, &gt;, &gt;&#x3D;, &lt;, &lt;&#x3D;</p>
<p>逻辑运算： and, or, not</p>
<p>流表达式： For If When</p>
<h3 id="template功能"><a href="#template功能" class="headerlink" title="template功能"></a>template功能</h3><p>根据模块文件动态生成对应的配置文件。template使用了Jinjia2格式作为文件模版，进行文档内变量的替换的模块。</p>
<p>templates文件必须存放于playbook剧本同级templates目录下，且命名为 .j2 结尾</p>
<h3 id="template用法"><a href="#template用法" class="headerlink" title="template用法"></a>template用法</h3><h4 id="利用template模板运行nginx"><a href="#利用template模板运行nginx" class="headerlink" title="利用template模板运行nginx"></a>利用template模板运行nginx</h4><p>根据hosts文件里的port变量运行不同端口</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim nginx.conf.j2</span></span><br><span class="line"><span class="string">server</span> &#123;</span><br><span class="line">    <span class="string">listen</span>      &#123; &#123;<span class="string">http_port</span>&#125;&#125;<span class="string">;</span></span><br><span class="line">    <span class="string">server_name</span>  <span class="string">localhost;</span></span><br><span class="line"><span class="comment"># vim hwq.yml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">host:</span> <span class="string">all</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">installed</span> <span class="string">package</span></span><br><span class="line">      <span class="attr">yum:</span> <span class="string">name=nginx</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">copy</span> <span class="string">nginx</span> <span class="string">conf</span></span><br><span class="line">      <span class="attr">template:</span> <span class="string">src=nginx.conf.j2</span> <span class="string">dest=/etc/nginx/nginx.conf</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">start</span> <span class="string">nginx</span> <span class="string">service</span></span><br><span class="line">      <span class="attr">service:</span> <span class="string">name=nginx</span> <span class="string">state=started</span></span><br><span class="line"><span class="comment"># ansible-playbook hwq.yml</span></span><br></pre></td></tr></table></figure>

<h4 id="template中for循环"><a href="#template中for循环" class="headerlink" title="template中for循环"></a>template中for循环</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim for1.j2</span></span><br><span class="line">&#123;<span class="string">%</span> <span class="string">for</span> <span class="string">i</span> <span class="string">in</span> <span class="string">list</span> <span class="string">%</span>&#125;</span><br><span class="line"><span class="string">hello</span> &#123; &#123;<span class="string">i</span>&#125;&#125;</span><br><span class="line">&#123;<span class="string">%</span> <span class="string">endfor</span> <span class="string">%</span>&#125;</span><br><span class="line"><span class="comment"># vim for1.yml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="number">39.105</span><span class="number">.89</span><span class="number">.65</span></span><br><span class="line">  <span class="attr">vars:</span></span><br><span class="line">    <span class="attr">list:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">wl</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">hwq</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">copy</span> <span class="string">file</span></span><br><span class="line">      <span class="attr">template:</span> <span class="string">src=for1.j2</span> <span class="string">dest=/data/hwq/for1.txt</span></span><br><span class="line"><span class="comment"># ansible-playbook for1.yml  </span></span><br><span class="line"><span class="comment"># cat for1.txt </span></span><br><span class="line"><span class="string">hello</span> <span class="string">wl</span></span><br><span class="line"><span class="string">hello</span> <span class="string">hwq</span></span><br></pre></td></tr></table></figure>

<h4 id="嵌套子变量"><a href="#嵌套子变量" class="headerlink" title="嵌套子变量"></a>嵌套子变量</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim for2.yml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="number">39.105</span><span class="number">.89</span><span class="number">.65</span></span><br><span class="line">  <span class="attr">vars:</span></span><br><span class="line">    <span class="attr">list:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">people1:</span>   <span class="comment">#空变量，作为区别  </span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">wl</span></span><br><span class="line">        <span class="attr">age:</span> <span class="number">31</span></span><br><span class="line">        <span class="attr">deposit:</span> <span class="number">200</span><span class="string">,000</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">people2:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">hwq</span></span><br><span class="line">        <span class="attr">age:</span> <span class="number">23</span></span><br><span class="line">        <span class="attr">deposit:</span> <span class="number">20</span><span class="string">,000</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">copy</span> <span class="string">file</span></span><br><span class="line">      <span class="attr">template:</span> <span class="string">src=for2.j2</span> <span class="string">dest=/data/hwq/for2.txt</span></span><br><span class="line"><span class="comment"># vim for2.j2</span></span><br><span class="line">&#123;<span class="string">%</span> <span class="string">for</span> <span class="string">i</span> <span class="string">in</span> <span class="string">list</span> <span class="string">%</span>&#125;</span><br><span class="line"><span class="string">Hello</span> &#123; &#123;<span class="string">i.name</span>&#125;&#125;<span class="string">,</span> <span class="string">you</span> <span class="string">are</span> &#123; &#123;<span class="string">i.age</span>&#125;&#125; <span class="string">years</span> <span class="string">old,</span> <span class="string">and</span> <span class="string">now</span> <span class="string">you</span> <span class="string">have</span> &#123; &#123;<span class="string">i.deposit</span>&#125;&#125; <span class="string">yuan</span> <span class="string">in</span> <span class="string">deposit</span></span><br><span class="line">&#123;<span class="string">%</span> <span class="string">endfor</span> <span class="string">%</span>&#125;</span><br><span class="line"><span class="comment"># ansible-playbook for2.yml</span></span><br><span class="line"><span class="comment"># cat for2.txt </span></span><br><span class="line"><span class="string">Hello</span> <span class="string">wl,</span> <span class="string">you</span> <span class="string">are</span> <span class="number">31</span> <span class="string">years</span> <span class="string">old,</span> <span class="string">and</span> <span class="string">now</span> <span class="string">you</span> <span class="string">have</span> <span class="number">200</span><span class="string">,000</span> <span class="string">yuan</span> <span class="string">in</span> <span class="string">deposit</span></span><br><span class="line"><span class="string">Hello</span> <span class="string">hwq,</span> <span class="string">you</span> <span class="string">are</span> <span class="number">23</span> <span class="string">years</span> <span class="string">old,</span> <span class="string">and</span> <span class="string">now</span> <span class="string">you</span> <span class="string">have</span> <span class="number">20</span><span class="string">,000</span> <span class="string">yuan</span> <span class="string">in</span> <span class="string">deposit</span></span><br></pre></td></tr></table></figure>

<h4 id="template中if判断"><a href="#template中if判断" class="headerlink" title="template中if判断"></a>template中if判断</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim for3.yml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="number">39.105</span><span class="number">.89</span><span class="number">.65</span></span><br><span class="line">  <span class="attr">vars:</span></span><br><span class="line">    <span class="attr">list:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">people1:</span></span><br><span class="line">        <span class="comment">#name: word   #注释</span></span><br><span class="line">        <span class="attr">age:</span> <span class="number">31</span></span><br><span class="line">        <span class="attr">deposit:</span> <span class="number">200</span><span class="string">,000</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">people2:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">hwq</span></span><br><span class="line">        <span class="attr">age:</span> <span class="number">23</span></span><br><span class="line">        <span class="attr">deposit:</span> <span class="number">20</span><span class="string">,000</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">copy</span> <span class="string">file</span></span><br><span class="line">      <span class="attr">template:</span> <span class="string">src=for3.j2</span> <span class="string">dest=/data/hwq/for3.txt</span></span><br><span class="line"><span class="comment"># vim for3.j2</span></span><br><span class="line">&#123;<span class="string">%</span> <span class="string">for</span> <span class="string">i</span> <span class="string">in</span> <span class="string">list</span> <span class="string">%</span>&#125;</span><br><span class="line">&#123;<span class="string">%</span> <span class="string">if</span> <span class="string">i.name</span> <span class="string">is</span> <span class="string">defined</span> <span class="string">%</span>&#125;   <span class="comment">#如果name值被定义了，才执行</span></span><br><span class="line"><span class="string">Hello</span> &#123; &#123;<span class="string">i.name</span>&#125;&#125;<span class="string">,</span> <span class="string">you</span> <span class="string">are</span> &#123; &#123;<span class="string">i.age</span>&#125;&#125; <span class="string">years</span> <span class="string">old,</span> <span class="string">and</span> <span class="string">now</span> <span class="string">you</span> <span class="string">have</span> &#123; &#123;<span class="string">i.deposit</span>&#125;&#125; <span class="string">yuan</span> <span class="string">in</span> <span class="string">deposit</span></span><br><span class="line">&#123;<span class="string">%</span> <span class="string">endif</span> <span class="string">%</span>&#125;</span><br><span class="line">&#123;<span class="string">%</span> <span class="string">endfor</span> <span class="string">%</span>&#125;</span><br><span class="line"><span class="comment"># ansible-playbook for3.yml</span></span><br><span class="line"><span class="comment"># cat for3.txt </span></span><br><span class="line"><span class="string">Hello</span> <span class="string">hwq,</span> <span class="string">you</span> <span class="string">are</span> <span class="number">23</span> <span class="string">years</span> <span class="string">old,</span> <span class="string">and</span> <span class="string">now</span> <span class="string">you</span> <span class="string">have</span> <span class="number">20</span><span class="string">,000</span> <span class="string">yuan</span> <span class="string">in</span> <span class="string">deposit</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>ansible</category>
      </categories>
      <tags>
        <tag>ansible</tag>
      </tags>
  </entry>
  <entry>
    <title>ansible批量管理工具</title>
    <url>/2018/12/23/ansible%E6%89%B9%E9%87%8F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[<h2 id="Ansible服务简介"><a href="#Ansible服务简介" class="headerlink" title="Ansible服务简介"></a><strong>Ansible服务简介</strong></h2><p>软件由python语言开发，其功能实现基于SSH远程连接服务，可以实现批量系统配置、批量软件部署、批量文件拷贝、批量运行命令等功能</p>
<p>ansible软件参考资料</p>
<p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p>
<p>说明信息：</p>
<p>ansible软件相关参考链接信息</p>
<p><a href="http://docs.ansible.com/ansible/intro_installation.html">http://docs.ansible.com/ansible/intro_installation.html</a></p>
<p><a href="http://www.ansible.com.cn/">http://www.ansible.com.cn/</a></p>
<p><a href="http://docs.ansible.com/modules/_by/_category.html">http://docs.ansible.com/modules\_by\_category.html</a></p>
<p><a href="http://www.ansible.cn/docs/">http://www.ansible.cn/docs/</a></p>
<p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p>
 <span id="more"></span>

<p>ansible软件特点</p>
<p>   a 不需要单独安装客户端（no agents），基于系统自带的sshd服务，sshd就相当于ansible的客户端</p>
<p>   b 不需要服务端(no servers)</p>
<p>   c 需要依靠大量的模块实现批量管理。</p>
<p>   d 配置文件&#x2F;etc&#x2F;ansible&#x2F;ansible.cfg,不用配置</p>
<h2 id="免秘钥配置"><a href="#免秘钥配置" class="headerlink" title="免秘钥配置"></a><strong>免秘钥配置</strong></h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /server/scripts/key.sh</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">Pwd=Password</span><br><span class="line">Port=22</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建密钥对</span></span><br><span class="line">rm -rf /root/.ssh/id_dsa*</span><br><span class="line">ssh-keygen -t dsa -f &quot;/root/.ssh/id_dsa&quot; -N &quot;&quot; -q</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">分发客户端</span></span><br><span class="line">for ip in 102 103 104 105</span><br><span class="line">do</span><br><span class="line">echo &quot;========== host 172.17.252.$ip info==========&quot;</span><br><span class="line">sshpass -p $Pwd ssh-copy-id -i /root/.ssh/id_dsa.pub -p$Port -o StrictHostKeyChecking=no 172.17.252.$ip</span><br><span class="line">echo &quot;&quot;</span><br><span class="line">done</span><br><span class="line">Com=uptime</span><br><span class="line">for ip in 102 103 104 105</span><br><span class="line">do</span><br><span class="line">echo &quot;================= host 172.17.252.$ip check_info =================&quot;</span><br><span class="line">ssh -p$Port root@172.17.252.$ip $Com</span><br><span class="line">echo &quot;&quot;</span><br><span class="line">done</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"> yum install -y sshpass</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">sh /server/scripts/key.sh</span></span><br><span class="line">================= host 172.17.252.102 check_info =================</span><br><span class="line">17:53:33 up 11 days,  7:54,  1 user,  load average: 0.50, 0.60, 0.60</span><br><span class="line"> </span><br><span class="line">================= host 172.17.252.103 check_info =================</span><br><span class="line">17:53:33 up 257 days,  1:17,  1 user,  load average: 0.63, 0.79, 0.74</span><br><span class="line"> </span><br><span class="line">================= host 172.17.252.104 check_info =================</span><br><span class="line">17:53:33 up 212 days, 21:20,  1 user,  load average: 0.47, 0.36, 0.29</span><br><span class="line"> </span><br><span class="line">================= host 172.17.252.105 check_info =================</span><br><span class="line">17:53:33 up 11 days, 22:59,  1 user,  load average: 0.09, 0.09, 0.06</span><br></pre></td></tr></table></figure>

<h2 id="安装ansible"><a href="#安装ansible" class="headerlink" title="安装ansible"></a><strong>安装ansible</strong></h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum install -y ansible</span></span><br><span class="line">修改配置文件</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /etc/ansible/hosts</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">在文件最后一行创建组信息（模块）</span></span><br><span class="line">[kyd]</span><br><span class="line">172.17.252.102</span><br><span class="line">172.17.252.103</span><br><span class="line">172.17.252.104</span><br></pre></td></tr></table></figure>

<p><strong>测试管理端与被管理端连通性</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ansible kyd -m ping</span></span><br><span class="line">172.17.252.104 | SUCCESS =&gt; &#123;</span><br><span class="line">    &quot;changed&quot;: false,</span><br><span class="line">    &quot;ping&quot;: &quot;pong&quot;</span><br><span class="line">&#125;</span><br><span class="line">172.17.252.102 | SUCCESS =&gt; &#123;</span><br><span class="line">    &quot;changed&quot;: false,</span><br><span class="line">    &quot;ping&quot;: &quot;pong&quot;</span><br><span class="line">&#125;</span><br><span class="line">172.17.252.103 | SUCCESS =&gt; &#123;</span><br><span class="line">    &quot;changed&quot;: false,</span><br><span class="line">    &quot;ping&quot;: &quot;pong&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>语法格式</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@location ~]# ansible   kyd     -m    command   -a      &quot;hostname&quot;</span><br><span class="line">                  命令     主机组 参数   模块名称    执行参数    执行命令</span><br><span class="line">172.17.252.102 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">web</span><br><span class="line">172.17.252.104 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">test</span><br><span class="line">172.17.252.103 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">db</span><br></pre></td></tr></table></figure>

<h2 id="ansible颜色区别"><a href="#ansible颜色区别" class="headerlink" title="ansible颜色区别"></a><strong>ansible颜色区别</strong></h2><p>ansible颜色信息显示说明：</p>
<p>翔黄色：对远程节点进行相应修改</p>
<p>帽子绿：对远程节点不进行相应修改，或者只是对远程节点信息进行查看</p>
<p>深红色：操作执行命令有异常</p>
<p>浅紫色：表示对命令执行发出警告信息（可能存在的问题，给你一下建议）</p>
<h2 id="ansible命令执行过程"><a href="#ansible命令执行过程" class="headerlink" title="ansible命令执行过程"></a><strong>ansible命令执行过程</strong></h2><ol>
<li>加载自己的配置文件 默认&#x2F;etc&#x2F;ansible&#x2F;ansible.cfg</li>
<li>加载自己对应的模块文件，如：command</li>
<li>通过ansible将模块或命令生成对应的临时py文件，并将对应文件传输到远程服务器的对应执行用户$HOME&#x2F;.ansible&#x2F;tmp&#x2F;absible-tmp-数字&#x2F;*.py文件</li>
<li>给文件+x执行权限</li>
<li>执行并返回结果</li>
<li>删除临时py文件，sleep 0退出</li>
</ol>
]]></content>
      <categories>
        <category>ansible</category>
      </categories>
      <tags>
        <tag>ansible</tag>
      </tags>
  </entry>
  <entry>
    <title>apollo初探</title>
    <url>/2019/03/13/apollo%E5%88%9D%E6%8E%A2/</url>
    <content><![CDATA[<h2 id="apollo简介"><a href="#apollo简介" class="headerlink" title="apollo简介"></a><strong>apollo简介</strong></h2><p>Apollo（阿波罗）是携程框架部门研发的开源配置管理中心，能够集中化管理应用不同环境、不同集群的配置，配置修改后能够实时推送到应用端，并且具备规范的权限、流程治理等特性。</p>
<h3 id="配置基本概念"><a href="#配置基本概念" class="headerlink" title="配置基本概念"></a>配置基本概念</h3> <span id="more"></span>
<ul>
<li><p> 配置是独立于程序的只读变量</p>
<pre><code>* 配置首先是独立于程序的，同一份程序在不同的配置下会有不同的行为。

* 其次，配置对于程序是只读的，程序通过读取配置来改变自己的行为，但是程序不应该去改变配置。

* 常见的配置有：DB Connection Str、Thread Pool Size、Buffer Size、Request Timeout、Feature Switch、Server Urls等。
</code></pre>
</li>
<li><p>配置伴随应用的整个生命周期</p>
<ul>
<li>配置贯穿于应用的整个生命周期，应用在启动时通过读取配置来初始化，在运行时根据配置调整行为。</li>
</ul>
</li>
<li><p>配置可以有多种加载方式</p>
<ul>
<li>配置也有很多种加载方式，常见的有程序内部hard code，配置文件，环境变量，启动参数，基于数据库等</li>
</ul>
</li>
<li><p>配置需要治理</p>
<p>   权限控制</p>
</li>
</ul>
<p>       * 由于配置能改变程序的行为，不正确的配置甚至能引起灾难，所以对配置的修改必须有比较完善的权限控制</p>
<p>       不同环境、集群配置管理</p>
<p>       * 同一份程序在不同的环境（开发，测试，生产）、不同的集群（如不同的数据中心）经常需要有不同的配置，所以需要有完善的环境、集群配置管理</p>
<p>       框架类组件配置管理</p>
<p>       * 还有一类比较特殊的配置 - 框架类组件配置，比如CAT客户端的配置。</p>
<p>       * 虽然这类框架类组件是由其他团队开发、维护，但是运行时是在业务实际应用内的，所以本质上可以认为框架类组件也是应用的一部分。</p>
<p>       * 这类组件对应的配置也需要有比较完善的管理方式。</p>
<h3 id="apollo特性"><a href="#apollo特性" class="headerlink" title="apollo特性"></a><strong>apollo特性</strong></h3><ul>
<li><p>统一管理不同环境、不同集群的配置</p>
<ul>
<li>Apollo提供了一个统一界面集中式管理不同环境（environment）、不同集群（cluster）、不同命名空间（namespace）的配置。</li>
</ul>
</li>
</ul>
<p>       * 同一份代码部署在不同的集群，可以有不同的配置，比如zookeeper的地址等</p>
<p>       * 通过命名空间（namespace）可以很方便地支持多个不同应用共享同一份配置，同时还允许应用对共享的配置进行覆盖</p>
<ul>
<li><p>配置修改实时生效（热发布）</p>
<ul>
<li>用户在Apollo修改完配置并发布后，客户端能实时（1秒）接收到最新的配置，并通知到应用程序</li>
</ul>
</li>
<li><p>版本发布管理</p>
<ul>
<li>所有的配置发布都有版本概念，从而可以方便地支持配置的回滚</li>
</ul>
</li>
<li><p>灰度发布</p>
<ul>
<li>支持配置的灰度发布，比如点了发布后，只对部分应用实例生效，等观察一段时间没问题后再推给所有应用实例</li>
</ul>
</li>
<li><p>权限管理、发布审核、操作审计</p>
<ul>
<li>应用和配置的管理都有完善的权限管理机制，对配置的管理还分为了编辑和发布两个环节，从而减少人为的错误。</li>
</ul>
</li>
</ul>
<p>       * 所有的操作都有审计日志，可以方便地追踪问题</p>
<ul>
<li><p>客户端配置信息监控</p>
<ul>
<li>可以在界面上方便地看到配置在被哪些实例使用</li>
</ul>
</li>
<li><p>提供Java和.Net原生客户端</p>
<ul>
<li>提供了Java和.Net的原生客户端，方便应用集成</li>
</ul>
</li>
</ul>
<p>       * 支持Spring Placeholder, Annotation和Spring Boot的ConfigurationProperties，方便应用使用（需要Spring 3.1.1+）</p>
<p>       * 同时提供了Http接口，非Java和.Net应用也可以方便地使用</p>
<ul>
<li><p>提供开放平台API</p>
<ul>
<li>Apollo自身提供了比较完善的统一配置管理界面，支持多环境、多数据中心配置管理、权限、流程治理等特性。不过Apollo出于通用性考虑，不会对配置的修改做过多限制，只要符合基本的格式就能保存，不会针对不同的配置值进行针对性的校验，如数据库用户名、密码，Redis服务地址等</li>
</ul>
</li>
</ul>
<p>       * 对于这类应用配置，Apollo支持应用方通过开放平台API在Apollo进行配置的修改和发布，并且具备完善的授权和权限控制</p>
<ul>
<li><p>部署简单</p>
<ul>
<li>配置中心作为基础服务，可用性要求非常高，这就要求Apollo对外部依赖尽可能地少</li>
</ul>
</li>
</ul>
<p>       * 目前唯一的外部依赖是MySQL，所以部署非常简单，只要安装好Java和MySQL就可以让Apollo跑起来</p>
<p>       * Apollo还提供了打包脚本，一键就可以生成所有需要的安装包，并且支持自定义运行时参数</p>
<h3 id="Apollo中的几个核心概念"><a href="#Apollo中的几个核心概念" class="headerlink" title="Apollo中的几个核心概念"></a>Apollo中的几个核心概念</h3><p>application (应用)</p>
<p>这个很好理解，就是实际使用配置的应用，Apollo客户端在运行时需要知道当前应用是谁，从而可以去获取对应的配置</p>
<p>每个应用都需要有唯一的身份标识 - appId，我们认为应用身份是跟着代码走的，所以需要在代码中配置，具体信息请参见<a href="https://github.com/ctripcorp/apollo/wiki/Java%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97">Java客户端使用指南</a>。</p>
<p>environment (环境)</p>
<p>配置对应的环境，Apollo客户端在运行时需要知道当前应用处于哪个环境，从而可以去获取应用的配置</p>
<p>我们认为环境和代码无关，同一份代码部署在不同的环境就应该能够获取到不同环境的配置</p>
<p>所以环境默认是通过读取机器上的配置（server.properties中的env属性）指定的，不过为了开发方便，我们也支持运行时通过System Property等指定，具体信息请参见<a href="https://github.com/ctripcorp/apollo/wiki/Java%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97">Java客户端使用指南</a>。</p>
<p>cluster (集群)</p>
<p>一个应用下不同实例的分组，比如典型的可以按照数据中心分，把上海机房的应用实例分为一个集群，把北京机房的应用实例分为另一个集群。</p>
<p>对不同的cluster，同一个配置可以有不一样的值，如zookeeper地址。</p>
<p>集群默认是通过读取机器上的配置（server.properties中的idc属性）指定的，不过也支持运行时通过System Property指定，具体信息请参见<a href="https://github.com/ctripcorp/apollo/wiki/Java%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97">Java客户端使用指南</a>。</p>
<p>namespace (命名空间)</p>
<p>一个应用下不同配置的分组，可以简单地把namespace类比为文件，不同类型的配置存放在不同的文件中，如数据库配置文件，rpc配置文件，应用自身的配置文件等</p>
<p>应用可以直接读取到公共组件的配置namespace，如DAL，RPC等</p>
<p>应用也可以通过继承公共组件的配置namespace来对公共组件的配置做调整，如DAL的初始数据库连接数</p>
<h3 id="apollo总体设计"><a href="#apollo总体设计" class="headerlink" title="apollo总体设计"></a><strong>apollo总体设计</strong></h3><p><img src="/image/15524692151.png"></p>
<p>上图简要描述了Apollo的总体设计，我们可以从下往上看</p>
<p>  Config Service提供配置的读取、推送等功能，服务对象是Apollo客户端</p>
<p>  Admin Service提供配置的修改、发布等功能，服务对象是Apollo Portal（管理界面）</p>
<p>  Config Service和Admin Service都是多实例、无状态部署，所以需要将自己注册到Eureka中并保持心跳</p>
<p>  在Eureka之上我们架了一层Meta Server用于封装Eureka的服务发现接口</p>
<p>  Client通过域名访问Meta Server获取Config Service服务列表（IP+Port），而后直接通过IP+Port访问服务，同时在Client侧会做load balance、错误重试</p>
<p>  Portal通过域名访问Meta Server获取Admin Service服务列表（IP+Port），而后直接通过IP+Port访问服务，同时在Portal侧会做load balance、错误重试</p>
<p>  为了简化部署，我们实际上会把Config Service、Eureka和Meta Server三个逻辑角色部署在同一个JVM进程中</p>
<h3 id="客户端设计"><a href="#客户端设计" class="headerlink" title="客户端设计"></a><strong>客户端设计</strong></h3><p><img src="/image/1552469391-Image.png"></p>
<p>上图简要描述了Apollo客户端的实现原理：</p>
<ol>
<li><p>客户端和服务端保持了一个长连接，从而能第一时间获得配置更新的推送。</p>
</li>
<li><p>客户端还会定时从Apollo配置中心服务端拉取应用的最新配置。</p>
<ul>
<li><p>这是一个fallback机制，为了防止推送机制失效导致配置不更新</p>
</li>
<li><p>客户端定时拉取会上报本地版本，所以一般情况下，对于定时拉取的操作，服务端都会返回304 - Not Modified</p>
</li>
<li><p>定时频率默认为每5分钟拉取一次，客户端也可以通过在运行时指定System Property: apollo.refreshInterval来覆盖，单位为分钟。</p>
</li>
</ul>
</li>
<li><p>客户端从Apollo配置中心服务端获取到应用的最新配置后，会保存在内存中</p>
</li>
<li><p>客户端会把从服务端获取到的配置在本地文件系统缓存一份</p>
<ul>
<li>在遇到服务不可用，或网络不通的时候，依然能从本地恢复配置</li>
</ul>
</li>
<li><p>应用程序从Apollo客户端获取最新的配置、订阅配置更新通知</p>
</li>
</ol>
<p><a href="https://github.com/ctripcorp/apollo/wiki/Apollo%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83%E4%BB%8B%E7%BB%8D">官方文档</a> </p>
]]></content>
      <categories>
        <category>apollo</category>
      </categories>
      <tags>
        <tag>apollo</tag>
        <tag>配置中心</tag>
      </tags>
  </entry>
  <entry>
    <title>apollo部署安装</title>
    <url>/2019/03/15/apollo%E9%83%A8%E7%BD%B2%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h3 id="运行环镜"><a href="#运行环镜" class="headerlink" title="运行环镜"></a>运行环镜</h3><p>  os</p>
<p>  建议centos7</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cat</span> /etc/redhat-release</span></span><br><span class="line">CentOS Linux release 7.4.1708 (Core)</span><br></pre></td></tr></table></figure>
<p>  java<br>  <span id="more"></span><br> apollo服务端 1.8+   apollo客户端 1.7+<br> 建议安装Java 1.8+</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"> # </span><span class="language-bash">java -version</span></span><br><span class="line">java version &quot;1.8.0_201&quot;</span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_201-b09)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.201-b09, mixed mode)</span><br></pre></td></tr></table></figure>

<p>mysql</p>
<p>  Apollo的表结构对timestamp使用了多个default声明，所以需要5.6.5以上版本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; SHOW VARIABLES WHERE Variable_name = &#x27;version&#x27;;      </span><br><span class="line">+---------------+------------+       </span><br><span class="line">| Variable_name | Value      |      </span><br><span class="line">+---------------+------------+       </span><br><span class="line">| version       | 5.6.16-log |      </span><br><span class="line">+---------------+------------+</span><br></pre></td></tr></table></figure>

<h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><p>分布式部署需要事先确定部署的环境以及部署方式</p>
<ul>
<li><p>DEV</p>
<ul>
<li>开发环境</li>
</ul>
</li>
<li><p>UAT</p>
<ul>
<li>集成环境，相当于beta环境（回归测试）</li>
</ul>
</li>
<li><p>PRO</p>
<ul>
<li>生产环境</li>
</ul>
</li>
<li><p>Portal部署在生产环境的机房，通过它来直接管理UAT、PRO等环境的配置</p>
</li>
<li><p>Meta Server、Config Service和Admin Service在每个环境都单独部署，使用独立的数据库</p>
</li>
<li><p>Meta Server、Config Service和Admin Service在生产环境部署在两个机房，实现双活</p>
</li>
<li><p>Meta Server和Config Service部署在同一个JVM进程内，Admin Service部署在同一台服务器的另一个JVM进程内</p>
</li>
</ul>
<p>注：</p>
<p>如果Apollo部署在公有云上，本地开发环境无法连接，但又需要做开发测试的话</p>
<p>   * 客户端可以升级到0.11.0版本及以上，然后通Dapollo.configService&#x3D;<a href="http://config-service/">http://config-service</a> 的公网IP:端口来跳过meta service的服务发现</p>
<p>   * 可以在公有云上配置mysql，configservice与adminservice，dev环境会去数据库拉取配置</p>
<p><img src="/image/1552642193-15526421821-1024x808.png"></p>
<h3 id="网络策略"><a href="#网络策略" class="headerlink" title="网络策略"></a>网络策略</h3><p>分布式部署的时候，apollo-configservice和apollo-adminservice需要把自己的IP和端口注册到Meta Server（apollo-configservice本身）</p>
<p>Apollo客户端和Portal会从Meta Server获取服务的地址（IP+端口），然后通过服务地址直接访问</p>
<p>如果实际部署的机器有多块网卡（如docker），或者存在某些网卡的IP是Apollo客户端和Portal无法访问的（如网络安全限制），记得加上”–net&#x3D;host”参数（docker跳过配置容器的独立网络栈）</p>
<h2 id="安装部署"><a href="#安装部署" class="headerlink" title="安装部署"></a>安装部署</h2><h3 id="导库"><a href="#导库" class="headerlink" title="导库"></a>导库</h3><p>需要注意的是ApolloPortalDB只需要在生产环境部署一个即可，而ApolloConfigDB需要在每个环境部署一套，如fat、uat和pro分别部署3套ApolloConfigDB</p>
<p><a href="https://github.com/ctripcorp/apollo/blob/master/scripts/db/migration/portaldb/V1.0.0__initialization.sql">apolloportaldb.sql</a>  <a href="https://github.com/ctripcorp/apollo/blob/master/scripts/db/migration/configdb/V1.0.0__initialization.sql">apolloconfigdb.sql</a></p>
<h3 id="下载安装包"><a href="#下载安装包" class="headerlink" title="下载安装包"></a>下载安装包</h3><p>从<a href="https://github.com/ctripcorp/apollo/releases">GitHub Release</a>页面下载最新版本的apollo-configservice-x.x.x-github.zip、apollo-adminservice-x.x.x-github.zip和apollo-portal-x.x.x-github.zip即可</p>
<h3 id="数据库连接配置"><a href="#数据库连接配置" class="headerlink" title="数据库连接配置"></a>数据库连接配置</h3><p>配置portal数据库连接</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">DataSourcespring.datasource.url =jdbc:mysql://localhost:3306/ApolloPortalDB?</span><br><span class="line">useSSL=false&amp;characterEncoding=utf8</span><br><span class="line">spring.datasource.username = someuser</span><br><span class="line">spring.datasource.password = somepwd</span><br></pre></td></tr></table></figure>

<p>配置config数据库连接</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">DataSourcespring.datasource.url = jdbc:mysql://localhost:3306/ApolloConfigDB?</span><br><span class="line">useSSL=false&amp;characterEncoding=utf8</span><br><span class="line">spring.datasource.username = someuser</span><br><span class="line">spring.datasource.password = somepwd</span><br></pre></td></tr></table></figure>

<p>配置apollo-portal的meta service信息</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">dev.meta=http://apollo.dev.xxx.com</span><br><span class="line">uat.meta=http://apollo.uat.xxx.com</span><br><span class="line">pro.meta=http://apollo.xxx.com</span><br></pre></td></tr></table></figure>

<h3 id="docker部署"><a href="#docker部署" class="headerlink" title="docker部署"></a>docker部署</h3><ol>
<li><p><a href="https://github.com/ctripcorp/apollo/blob/master/apollo-configservice/src/main/docker/Dockerfile">apollo-configservice</a></p>
</li>
<li><p><a href="https://github.com/ctripcorp/apollo/blob/master/apollo-adminservice/src/main/docker/Dockerfile">apollo-adminservice</a></p>
</li>
<li><p><a href="https://github.com/ctripcorp/apollo/blob/master/apollo-portal/src/main/docker/Dockerfile">apollo-portal</a></p>
</li>
</ol>
<p>注：dockerfile里的端口需和start.sh的端口一致</p>
<h3 id="eureka连接配置"><a href="#eureka连接配置" class="headerlink" title="eureka连接配置"></a>eureka连接配置</h3><p>需要注意的是每个环境只填入自己环境的eureka服务地址，比如UAT的apollo-configservice是3.3.3.3:8080和4.4.4.4:8080，PRO的apollo-configservice是5.5.5.5:8080和6.6.6.6:8080，那么：</p>
<p>1. 在UAT环境的ApolloConfigDB.ServerConfig表中设置eureka.service.url为：</p>
<p><a href="http://3.3.3.3:8080/eureka/,http://4.4.4.4:8080/eureka/">http://3.3.3.3:8080/eureka/,http://4.4.4.4:8080/eureka/</a></p>
<p>2. 在PRO环境的ApolloConfigDB.ServerConfig表中设置eureka.service.url为：</p>
<p><a href="http://5.5.5.5:8080/eureka/,http://6.6.6.6:8080/eureka/">http://5.5.5.5:8080/eureka/,http://6.6.6.6:8080/eureka/</a></p>
<p> </p>
<p><img src="/image/1552642680-Image-1024x507.png"> </p>
<p><a href="https://github.com/ctripcorp/apollo/wiki/%E5%88%86%E5%B8%83%E5%BC%8F%E9%83%A8%E7%BD%B2%E6%8C%87%E5%8D%97">官方文档</a> </p>
]]></content>
      <categories>
        <category>apollo</category>
      </categories>
      <tags>
        <tag>apollo</tag>
        <tag>配置中心</tag>
      </tags>
  </entry>
  <entry>
    <title>calico网络</title>
    <url>/2020/12/14/calico%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<h2 id="calico网络模式"><a href="#calico网络模式" class="headerlink" title="calico网络模式"></a>calico网络模式</h2><ul>
<li>BGP</li>
</ul>
<p>Calico项目提供的网络解决方案，与Flannel的host-gw模式几乎一样。也就是说，Calico也是基于路由表实现容器数据包转发，但不同于Flannel使用flanneld进程来维护路由信息的做法，而Calico项目使用BGP协议与fannel的host-gw模式的不同之处就是，它不会在宿主机上创建类似docker0、cni0这样的网桥设备，Veth Pair在宿主机的一端的接口直接暴露在宿主机上，并通过设置路由规则，将容器IP暴露到宿主机的通信路由上。</p>
<ul>
<li>IPIP</li>
</ul>
<p>ipip模式与flannel的vxlan模式类似，这个也是对数据包的一个封装</p>
<p>从字面来理解，就是把一个IP数据包又套在一个IP包里，即把 IP 层封装到 IP 层的一个 tunnel。它的作用其实基本上就相当于一个基于IP层的网桥！一般来说，普通的网桥是基于mac层的，根本不需 IP，而这个 ipip 则是通过两端的路由做一个 tunnel，把两个本来不通的网络通过点对点连接起来。</p>
<h2 id="安装calico"><a href="#安装calico" class="headerlink" title="安装calico"></a>安装calico</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@master ~]#  kubectl create -f https://docs.projectcalico.org/manifests/tigera-operator.yaml</span><br><span class="line">[root@master ~]#  curl -O https://docs.projectcalico.org/manifests/custom-resources.yaml  custom-resources.yaml</span><br><span class="line">[root@master ~]#  vim custom-resources.yaml </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">This section includes base Calico installation configuration.</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">For more information, see: https://docs.projectcalico.org/v3.17/reference/installation/api<span class="comment">#operator.tigera.io/v1.Installation</span></span></span><br><span class="line">apiVersion: operator.tigera.io/v1</span><br><span class="line">kind: Installation</span><br><span class="line">metadata:</span><br><span class="line">  name: default</span><br><span class="line">spec:</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">Configures Calico networking.</span></span><br><span class="line">  calicoNetwork:</span><br><span class="line">    # Note: The ipPools section cannot be modified post-install.</span><br><span class="line">    ipPools:</span><br><span class="line">    - blockSize: 26</span><br><span class="line">      cidr: 10.244.0.0/16              # 修改cidr</span><br><span class="line">      encapsulation: VXLANCrossSubnet =&gt; IPIP   # 修改xvlan为ipip(默认为ipip可以删除这条)</span><br><span class="line">      natOutgoing: Enabled</span><br><span class="line">      nodeSelector: all()</span><br><span class="line">[root@master ~]# kubectl apply -f custom-resources.yaml</span><br><span class="line">[root@master ~]# kubectl get pods -n calico-system</span><br><span class="line">NAME                                       READY   STATUS    RESTARTS   AGE</span><br><span class="line">calico-kube-controllers-546d44f5b7-6x746   1/1     Running   0          4m2s</span><br><span class="line">calico-node-kh6cg                          1/1     Running   0          4m2s</span><br><span class="line">calico-node-wl2hg                          1/1     Running   0          4m2s</span><br><span class="line">calico-typha-6848b8fd67-7bpkm              1/1     Running   0          2m29s</span><br></pre></td></tr></table></figure>

<h2 id="安装calicoctl"><a href="#安装calicoctl" class="headerlink" title="安装calicoctl"></a>安装calicoctl</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@master ~]# wget -O /usr/sbin/calicoctl https://github.com/projectcalico/calicoctl/releases/download/v3.17.1/calicoctl</span><br><span class="line">[root@master ~]# chmod +x /usr/sbin/calicoctl</span><br></pre></td></tr></table></figure>

<h2 id="更改网络模式"><a href="#更改网络模式" class="headerlink" title="更改网络模式"></a>更改网络模式</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@master ~]# calicoctl get ippool -o yaml &gt;net</span><br><span class="line">[root@master ~]# vim net</span><br><span class="line">apiVersion: projectcalico.org/v3</span><br><span class="line">items:</span><br><span class="line">- apiVersion: projectcalico.org/v3</span><br><span class="line">  kind: IPPool</span><br><span class="line">  metadata:</span><br><span class="line">    creationTimestamp: &quot;2020-12-14T07:14:00Z&quot;</span><br><span class="line">    name: default-ipv4-ippool</span><br><span class="line">    resourceVersion: &quot;9479&quot;</span><br><span class="line">    uid: 93977cbe-a722-4197-9fb9-4ce808aceb94</span><br><span class="line">  spec:</span><br><span class="line">    # 此池使用的分配块的CIDR大小。块按需分配给主机，并用于汇总路由。该值只能在创建池时设置，IPv4为20至32（含），IPv6为116至128（含）</span><br><span class="line">    blockSize: 26</span><br><span class="line">    # 该池使用的IP范围</span><br><span class="line">    cidr: 10.244.0.0/16</span><br><span class="line">    # 定义何时使用网路模式，Never为BGP模式；Always为ipip模式，如果主机跨网段，设置为CrossSubnet</span><br><span class="line">    ipipMode: Never</span><br><span class="line">    # 默认为false，设置为true，允许容器nat出host</span><br><span class="line">    natOutgoing: true</span><br><span class="line">    nodeSelector: all()</span><br><span class="line">    # vxlan隧道模式，不能与ipipMode同时使用。有三个值，跟ipipMode的一样</span><br><span class="line">    vxlanMode: Never</span><br><span class="line">kind: IPPoolList</span><br><span class="line">metadata:</span><br><span class="line">  resourceVersion: &quot;13426&quot;</span><br><span class="line">[root@master ~]# calicoctl apply -f net</span><br><span class="line">Successfully applied 1 &#x27;IPPool&#x27; resource(s)</span><br><span class="line">[root@master ~]# calicoctl get ippool -o wide</span><br><span class="line">NAME                  CIDR            NAT    IPIPMODE   VXLANMODE   DISABLED   SELECTOR   </span><br><span class="line">default-ipv4-ippool   10.244.0.0/16   true   Never      Never       false      all()    </span><br><span class="line">[root@master ~]# kubectl delete po -lk8s-app=calico-node -ncalico-system</span><br><span class="line">pod &quot;calico-node-b28vj&quot; deleted</span><br><span class="line">pod &quot;calico-node-nlts5&quot; deleted</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>cephfs与nfs-ganesha</title>
    <url>/2020/08/31/cephfs%E4%B8%8Enfs-ganesha/</url>
    <content><![CDATA[<p>通过nfs-ganesha方式共享cephfs存储，nfs-ganesha使用方式与nfs一致</p>
<p><a href="ttps://github.com/nfs-ganesha/nfs-ganesha/wiki">nfs-ganesha_wiki</a></p>
<h3 id="创建pool"><a href="#创建pool" class="headerlink" title="创建pool"></a>创建pool</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ceph01 ceph-cluster]# ceph osd pool create cephfs_data 128</span><br><span class="line">pool &#x27;cephfs_data&#x27; created</span><br><span class="line">[root@ceph01 ceph-cluster]# ceph osd pool create cephfs_metadata 128</span><br><span class="line">pool &#x27;cephfs_metadata&#x27; created</span><br></pre></td></tr></table></figure>

<h3 id="创建fs"><a href="#创建fs" class="headerlink" title="创建fs"></a>创建fs</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ceph01 ceph-cluster]# ceph fs new k8s-cephfs cephfs_metadata cephfs_data</span><br><span class="line">new fs with metadata pool 10 and data pool 8</span><br><span class="line">[root@ceph01 ceph-cluster]# ceph fs ls</span><br><span class="line">name: k8s-cephfs, metadata pool: cephfs_metadata, data pools: [cephfs_data ]</span><br><span class="line">[root@ceph01 ceph-cluster]# ceph mds stat</span><br><span class="line">k8s-cephfs:1 &#123;0=ceph02=up:active&#125; 2 up:standby</span><br></pre></td></tr></table></figure>

<h3 id="测试挂载cephfs"><a href="#测试挂载cephfs" class="headerlink" title="测试挂载cephfs"></a>测试挂载cephfs</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ceph01 ceph-cluster]# cat ceph.client.admin.keyring</span><br><span class="line">[client.admin]</span><br><span class="line">    key = AQC4ovheG6t4AhAAPQiE19+kG7hSlraPAjhWRg==</span><br><span class="line">    caps mds = &quot;allow *&quot;</span><br><span class="line">    caps mgr = &quot;allow *&quot;</span><br><span class="line">    caps mon = &quot;allow *&quot;</span><br><span class="line">    caps osd = &quot;allow *&quot;</span><br><span class="line">[root@ceph01 ceph-cluster]# echo &#x27;AQC4ovheG6t4AhAAPQiE19+kG7hSlraPAjhWRg==&#x27; &gt;admin.secret</span><br><span class="line">[root@ceph01 ceph-cluster]# mount -t ceph ceph01:6789,ceph02:6789,ceph03:6789:/ /opt/ceph -o name=admin,secretfile=admin.secret</span><br><span class="line">mount error 110 = Connection timed out</span><br></pre></td></tr></table></figure>

<p>问题解决：</p>
<p>挂载超时，messages日志：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Jun 24 18:50:07 ceph01 kernel: libceph: mon1 192.168.1.32:6789 feature set mismatch, my 107b84a842aca &lt; server&#x27;s 40107b84a842aca, missing 400000000000000</span><br><span class="line">Jun 24 18:50:07 ceph01 kernel: libceph: mon1 192.168.1.32:6789 missing required protocol featur</span><br></pre></td></tr></table></figure>

<p>​     1. 解决一：升级kernel</p>
<p><a href="https://tracker.ceph.com/issues/21220?journal_id=98261%E7%BC%BA%E5%A4%B1%E7%9A%84400000000000000">https://tracker.ceph.com/issues/21220?journal_id=98261缺失的400000000000000</a> (CEPH_FEATURE_NEW_OSDOPREPLY_ENCODING)，无法通过设置集群来解决，也就是说必须升级kernel（到4.5以上）</p>
<p>​     2. 解决二：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ceph osd crush tunables legacy</span></span><br><span class="line">使用这种方式ceph会出现报错crush map has straw_calc_version=0</span><br><span class="line">[root@ceph01 ~]# ceph -s</span><br><span class="line">  cluster:</span><br><span class="line">    id:     a9f8cf77-cd0c-439e-990c-0a417166cd6a</span><br><span class="line">    health: HEALTH_WARN</span><br><span class="line">            crush map has straw_calc_version=0</span><br><span class="line">  services:</span><br><span class="line">    mon: 3 daemons, quorum ceph01,ceph02,ceph03 (age 2h)</span><br><span class="line">    mgr: ceph01(active, since 10h), standbys: ceph02, ceph03</span><br><span class="line">    mds: k8s-cephfs:1 &#123;0=ceph02=up:active&#125; 2 up:standby</span><br><span class="line">    osd: 4 osds: 4 up (since 10h), 4 in (since 10h)</span><br><span class="line">  task status:</span><br><span class="line">    scrub status:</span><br><span class="line">        mds.ceph02: idle</span><br><span class="line">  data:</span><br><span class="line">    pools:   2 pools, 256 pgs</span><br><span class="line">    objects: 22 objects, 16 KiB</span><br><span class="line">    usage:   84 GiB used, 76 GiB / 160 GiB avail</span><br><span class="line">    pgs:     256 active+clean</span><br><span class="line">[root@ceph01 ~]# ceph osd crush tunables optimal</span><br><span class="line">adjusted tunables profile to optimal</span><br><span class="line">[root@ceph01 ~]# ceph -s</span><br><span class="line">  cluster:</span><br><span class="line">    id:     a9f8cf77-cd0c-439e-990c-0a417166cd6a</span><br><span class="line">    health: HEALTH_OK</span><br><span class="line">  services:</span><br><span class="line">    mon: 3 daemons, quorum ceph01,ceph02,ceph03 (age 2h)</span><br><span class="line">    mgr: ceph01(active, since 10h), standbys: ceph02, ceph03</span><br><span class="line">    mds: k8s-cephfs:1 &#123;0=ceph02=up:active&#125; 2 up:standby</span><br><span class="line">    osd: 4 osds: 4 up (since 10h), 4 in (since 10h)</span><br><span class="line">  task status:</span><br><span class="line">    scrub status:</span><br><span class="line">        mds.ceph02: idle</span><br><span class="line">  data:</span><br><span class="line">    pools:   2 pools, 256 pgs</span><br><span class="line">    objects: 22 objects, 16 KiB</span><br><span class="line">    usage:   84 GiB used, 76 GiB / 160 GiB avail</span><br><span class="line">    pgs:     256 active+clean</span><br></pre></td></tr></table></figure>

<p>再次测试挂载</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ceph01 ceph-cluster]# mount -t ceph ceph01:6789,ceph02:6789,ceph03:6789:/ /opt/ceph -o name=admin,secretfile=admin.secret</span><br><span class="line">[root@ceph01 ceph-cluster]# df -h|grep /opt/ceph</span><br><span class="line">192.168.1.30:6789,192.168.1.32:6789,192.168.1.34:6789:/  160G   85G   76G  53% /opt/ceph</span><br></pre></td></tr></table></figure>

<h3 id="配置ganesha"><a href="#配置ganesha" class="headerlink" title="配置ganesha"></a>配置ganesha</h3><p>安装ganesha</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ceph01 ~]# vim /etc/yum.repos.d/nfs-ganesha.repo</span><br><span class="line">[nfs-ganesha]</span><br><span class="line">name=nfs-ganesha</span><br><span class="line">baseurl=https://mirrors.aliyun.com/ceph/nfs-ganesha/rpm-V3.3-stable/octopus/el7/x86_64/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">[root@ceph01 ~]# yum install nfs-ganesha nfs-ganesha-ceph -y</span><br></pre></td></tr></table></figure>

<p>配置文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@ceph01 ~]# vim /etc/ganesha/ganesha.conf</span><br><span class="line">EXPORT</span><br><span class="line">&#123;</span><br><span class="line">    Export_ID=1;              # 导出ID</span><br><span class="line">    Path = &quot;/&quot;;               # cephfs的/目录</span><br><span class="line">    Pseudo = /cephfs;         # ganesha共享出去的目录，虚假的（不真实存在）</span><br><span class="line">    Access_Type = RW;         # 权限</span><br><span class="line">    Protocols = 4;            # nfs协议</span><br><span class="line">    Transports_Protocols = TCP;</span><br><span class="line">    Squash = no_root_squash;  # 是否压缩用户</span><br><span class="line">    FSAL &#123;                    # 导出ceph</span><br><span class="line">        Name = CEPH;          </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">LOG &#123;                         # 日志模块</span><br><span class="line">        Facility &#123;</span><br><span class="line">                name = FILE;</span><br><span class="line">                destination = &quot;/var/log/ganesha/ganesha.log&quot;;</span><br><span class="line">                enable = active;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>启动服务</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ceph01 ~]# systemctl start nfs-ganesha</span><br><span class="line">[root@ceph01 ~]# systemctl enable nfs-ganesha</span><br></pre></td></tr></table></figure>

<p>测试挂载</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ceph01 ~]# yum install -y nfs-utils</span><br><span class="line">[root@ceph01 ~]# systemctl start rpcbind</span><br><span class="line">[root@ceph01 ~]# mount -t nfs ceph01:/cephfs /opt/ganesha/</span><br><span class="line">[root@ceph01 ~]# df -h|grep opt</span><br><span class="line">192.168.1.30:6789,192.168.1.32:6789,192.168.1.34:6789:/  160G   85G   76G  53% /opt/ceph</span><br><span class="line">ceph01:/cephfs                                            23G     0   23G   0% /opt/ganesha</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>ceph</category>
      </categories>
      <tags>
        <tag>ceph</tag>
      </tags>
  </entry>
  <entry>
    <title>ceph集群部署</title>
    <url>/2020/08/31/ceph%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><table>
<thead>
<tr>
<th>主机名</th>
<th>IP</th>
<th>安装组件</th>
<th>磁盘</th>
</tr>
</thead>
<tbody><tr>
<td>ceph01</td>
<td>192.168.1.30</td>
<td>ceph-deploy &amp; mon &amp; mgr &amp; osd &amp; ntp</td>
<td>3*20g</td>
</tr>
<tr>
<td>ceph02</td>
<td>192.168.1.32</td>
<td>mon &amp; mgr &amp; osd &amp; ntp</td>
<td>3*20g</td>
</tr>
<tr>
<td>ceph03</td>
<td>192.168.1.34</td>
<td>mon &amp; mgr &amp; osd &amp; ntp</td>
<td>3*20g</td>
</tr>
</tbody></table>
<h3 id="免秘钥"><a href="#免秘钥" class="headerlink" title="免秘钥"></a>免秘钥</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ceph01 ~]# vim /etc/hosts</span><br><span class="line">127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4</span><br><span class="line">::1         localhost localhost.localdomain localhost6 localhost6.localdomain6</span><br><span class="line">192.168.1.30 ceph01</span><br><span class="line">192.168.1.32 ceph02</span><br><span class="line">192.168.1.34 ceph03</span><br><span class="line">[root@ceph01 ~]# ssh-keygen -t rsa</span><br><span class="line">[root@ceph01 ~]# ssh-copy-id root@ceph02</span><br><span class="line">[root@ceph01 ~]# ssh-copy-id root@ceph03</span><br></pre></td></tr></table></figure>

<h3 id="配置时间同步"><a href="#配置时间同步" class="headerlink" title="配置时间同步"></a>配置时间同步</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ceph01 ~]# yum install -y ntp</span><br><span class="line">[root@ceph01 ~]# vim /etc/ntp.conf</span><br><span class="line">driftfile /var/lib/ntp/drift</span><br><span class="line">restrict default nomodify</span><br><span class="line">restrict 127.0.0.1</span><br><span class="line">restrict ::1</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Enable public key cryptography.</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="comment">#crypto</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash">includefile /etc/ntp/crypto/pw</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># # Key file containing the keys and key identifiers used when operating</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="comment"># with symmetric key cryptography.</span></span></span><br><span class="line">keys /etc/ntp/keys</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash">server 127.127.1.0</span></span><br><span class="line">fudge 127.127.1.0 stratum 10</span><br></pre></td></tr></table></figure>

<p>其他节点</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum install -y ntp</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /etc/ntp.conf</span></span><br><span class="line">driftfile /var/lib/ntp/drift</span><br><span class="line">restrict default nomodify</span><br><span class="line">restrict 127.0.0.1</span><br><span class="line">restrict ::1</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Enable public key cryptography.</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">crypto</span></span><br><span class="line">includefile /etc/ntp/crypto/pw</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Key file containing the keys and key identifiers used when operating</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">with symmetric key cryptography.</span></span><br><span class="line">keys /etc/ntp/keys</span><br><span class="line">server 192.168.1.30 #主节点ip</span><br></pre></td></tr></table></figure>

<p>启动服务 （所有节点）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl <span class="built_in">enable</span> ntpd</span></span><br><span class="line">Created symlink from /etc/systemd/system/multi-user.target.wants/ntpd.service to /usr/lib/systemd/system/ntpd.service.</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl start ntpd</span></span><br></pre></td></tr></table></figure>

<h2 id="ceph安装"><a href="#ceph安装" class="headerlink" title="ceph安装"></a>ceph安装</h2><h3 id="配置ceph源-（所有节点）"><a href="#配置ceph源-（所有节点）" class="headerlink" title="配置ceph源 （所有节点）"></a>配置ceph源 （所有节点）</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ceph01 ~]# vim /etc/yum.repos.d/ceph.repo</span><br><span class="line">[Ceph]</span><br><span class="line">name=Ceph packages for $basearch</span><br><span class="line">baseurl=https://mirrors.aliyun.com/ceph/rpm-nautilus/el7/$basearch</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">type=rpm-md</span><br><span class="line">gpgkey=https://mirrors.aliyun.com/ceph/keys/release.asc</span><br><span class="line">priority=1</span><br><span class="line">[Ceph-noarch]</span><br><span class="line">name=Ceph noarch packages</span><br><span class="line">baseurl=https://mirrors.aliyun.com/ceph/rpm-nautilus/el7/noarch</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">type=rpm-md</span><br><span class="line">gpgkey=https://mirrors.aliyun.com/ceph/keys/release.asc</span><br><span class="line">priority=1</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum makecache</span></span><br></pre></td></tr></table></figure>

<h3 id="安装ceph-（所有节点）"><a href="#安装ceph-（所有节点）" class="headerlink" title="安装ceph （所有节点）"></a>安装ceph （所有节点）</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ceph01 ~]# yum install ceph -y</span><br><span class="line">[root@ceph01 ~]# ceph -v</span><br><span class="line">ceph version 14.2.10 (b340acf629a010a74d90da5782a2c5fe0b54ac20) nautilus (stable)</span><br></pre></td></tr></table></figure>

<h3 id="主节点安装ceph-deploy"><a href="#主节点安装ceph-deploy" class="headerlink" title="主节点安装ceph-deploy"></a>主节点安装ceph-deploy</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ceph01 ~]# yum install ceph-deploy -y</span><br><span class="line">[root@ceph01 ~]# ceph-deploy --version</span><br><span class="line">2.0.1</span><br></pre></td></tr></table></figure>

<h3 id="部署ceph集群"><a href="#部署ceph集群" class="headerlink" title="部署ceph集群"></a>部署ceph集群</h3><p>创建集群</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ceph01 ~]# mkdir ceph-cluster</span><br><span class="line">[root@ceph01 ~]# cd ceph-cluster</span><br><span class="line">[root@ceph01 ceph-cluster]# ceph-deploy new ceph01 ceph02 ceph03</span><br></pre></td></tr></table></figure>

<p>部署mon</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ceph01 ceph-cluster]# vim ceph.conf </span><br><span class="line">+ public_network=192.168.1.0/24</span><br><span class="line">[root@ceph01 ceph-cluster]# ceph-deploy mon create-initial</span><br></pre></td></tr></table></figure>

<p>查看集群状态</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">将keyring文件分发到各个节点</span><br><span class="line">[root@ceph01 ceph-cluster]# ceph-deploy admin ceph01 ceph02 ceph03</span><br><span class="line">[root@ceph01 ceph-cluster]# ceph -s</span><br><span class="line">  cluster:</span><br><span class="line">    id:     ffdf23eb-6b2a-4596-baa5-c9441e5ba07c</span><br><span class="line">    health: HEALTH_OK</span><br><span class="line">  services:</span><br><span class="line">    mon: 3 daemons, quorum ceph01,ceph02,ceph03</span><br><span class="line">    mgr: no daemons active</span><br><span class="line">    osd: 0 osds: 0 up, 0 in</span><br><span class="line">  data:</span><br><span class="line">    pools:   0 pools, 0 pgs</span><br><span class="line">    objects: 0 objects, 0B</span><br><span class="line">    usage:   0B used, 0B / 0B avail</span><br><span class="line">    pgs:     </span><br></pre></td></tr></table></figure>

<p>创建osd</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">查看设备信息</span><br><span class="line">[root@ceph01 ceph-cluster]# lsblk</span><br><span class="line">NAME                    MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class="line">sda                       8:0    0   20G  0 disk</span><br><span class="line">├─sda1                    8:1    0  200M  0 part /boot</span><br><span class="line">└─sda2                    8:2    0 19.8G  0 part</span><br><span class="line">  └─centos_centos7-root 253:0    0 19.8G  0 lvm  /</span><br><span class="line">sdb                       8:16   0   20G  0 disk</span><br><span class="line">sdc                       8:32   0   20G  0 disk</span><br><span class="line">sdd                       8:48   0   20G  0 disk</span><br><span class="line">sr0                      11:0    1  4.4G  0 rom</span><br><span class="line">[root@ceph01 ceph-cluster]# ceph-deploy osd create ceph01 --bluestore --data /dev/sdb --block-db /dev/sdc --block-wal /dev/sdd</span><br><span class="line">[root@ceph01 ceph-cluster]# ceph-deploy osd create ceph02 --bluestore --data /dev/sdb --block-db /dev/sdc --block-wal /dev/sdd</span><br><span class="line">[root@ceph01 ceph-cluster]# ceph-deploy osd create ceph03 --bluestore --data /dev/sdb --block-db /dev/sdc --block-wal /dev/sdd</span><br><span class="line">查看osd信息</span><br><span class="line">[root@ceph01 ceph-cluster]# ceph osd tree</span><br><span class="line">ID CLASS WEIGHT  TYPE NAME       STATUS REWEIGHT PRI-AFF</span><br><span class="line">-1       0.11728 root default                            </span><br><span class="line">-3       0.03909     host ceph01                         </span><br><span class="line">0   hdd 0.03909         osd.0       up  1.00000 1.00000</span><br><span class="line">-5       0.03909     host ceph02                         </span><br><span class="line">1   hdd 0.03909         osd.1       up  1.00000 1.00000</span><br><span class="line">-7       0.03909     host ceph03                         </span><br><span class="line">2   hdd 0.03909         osd.2       up  1.00000 1.00000</span><br><span class="line"></span><br><span class="line">[root@ceph01 ceph-cluster]# ceph -s</span><br><span class="line">  cluster:</span><br><span class="line">    id:     a9f8cf77-cd0c-439e-990c-0a417166cd6a</span><br><span class="line">    health: HEALTH_WARN</span><br><span class="line">            no active mgr</span><br><span class="line">  services:</span><br><span class="line">    mon: 3 daemons, quorum ceph01,ceph02,ceph03 (age 4m)</span><br><span class="line">    mgr: no daemons active</span><br><span class="line">    osd: 3 osds: 3 up (since 21s), 3 in (since 21s)</span><br><span class="line">  data:</span><br><span class="line">    pools:   0 pools, 0 pgs</span><br><span class="line">    objects: 0 objects, 0 B</span><br><span class="line">    usage:   0 B used, 0 B / 0 B avail</span><br><span class="line">    pgs:  </span><br></pre></td></tr></table></figure>

<p>部署mgr</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ceph01 ceph-cluster]# ceph-deploy mgr create ceph01 ceph02 ceph03</span><br></pre></td></tr></table></figure>

<p>启用dashboard</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ceph01 ceph-cluster]# ceph mgr module enable dashboard</span><br><span class="line">Error ENOENT: all mgr daemons do not support module &#x27;dashboard&#x27;, pass --force to force enablement</span><br><span class="line">[root@ceph01 ceph-cluster]# yum install ceph-mgr-dashboard （所有节点）</span><br><span class="line">默认情况下，仪表板的所有HTTP连接均使用SSL/TLS进行保护。</span><br><span class="line">内置命令生成并安装自签名证书</span><br><span class="line">[root@ceph01 ceph-cluster]# ceph dashboard create-self-signed-cert</span><br><span class="line">Self-signed certificate created</span><br><span class="line">创建具有管理员角色的用户</span><br><span class="line">[root@ceph01 ceph-cluster]# ceph dashboard set-login-credentials admin admin</span><br><span class="line">******************************************************************</span><br><span class="line">***          WARNING: this command is deprecated.              ***</span><br><span class="line">*** Please use the ac-user-* related commands to manage users. ***</span><br><span class="line">******************************************************************</span><br><span class="line">Username and password updated</span><br><span class="line">查看ceph-mgr服务</span><br><span class="line">[root@ceph01 ceph-cluster]# ceph mgr services</span><br><span class="line">&#123;</span><br><span class="line">    &quot;dashboard&quot;: &quot;https://ceph02:8443/&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>浏览器访问：<a href="https://ip:8443/%E5%8D%B3%E5%8F%AF%E7%9C%8B%E5%88%B0dashboard">https://ip:8443/即可看到dashboard</a>      注：ip为主mgr所在主机的ip</p>
<p>部署mds</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@ceph01 ceph-cluster]# ceph-deploy mds create ceph01 ceph02 ceph03</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>ceph</category>
      </categories>
      <tags>
        <tag>ceph</tag>
      </tags>
  </entry>
  <entry>
    <title>Kubernetes CKA 真题解析</title>
    <url>/2020/08/13/cka/</url>
    <content><![CDATA[<h2 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h2><p>Set configuration context $ kubectl config use-context k8s </p>
<p>Monitor the logs of Pod foobar and</p>
<ol>
<li>Extract log lines corresponding to error file-not-found</li>
<li>Write them to &#x2F;opt&#x2F;KULM00201&#x2F;foobar</li>
</ol>
<p>Question weight 5%</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl logs  foobar |grep file-not-found &gt;&gt; /opt/KULM00201/foobar</span></span><br></pre></td></tr></table></figure>

<h2 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h2><p>Set configuration context $ kubectl config use-context k8s</p>
<p>List all PVs sorted by name saving the full kubectl output to &#x2F;opt&#x2F;KUCC0010&#x2F;my_volumes . Use kubectl’s own functionally for sorting the output, and do not manipulate it any further.</p>
<p>Question weight 3%</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get pv -A --sort-by=.metadata.name &gt;/opt/KUCC0010/my_volumes</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cat</span> /opt/KUCC0010/my_volumes</span></span><br><span class="line">NAME       CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS      CLAIM   STORAGECLASS   REASON   AGE</span><br><span class="line">nginx-1    5Gi        RWX            Recycle          Available                                   5m1s</span><br><span class="line">nginx-2    1Gi        RWX            Recycle          Available                                   4m44s</span><br><span class="line">nginx-3    10Gi       RWX            Recycle          Available                                   4m44s</span><br><span class="line">tomcat-1   5Gi        RWX            Recycle          Available                                   3m42s</span><br><span class="line">tomcat-2   1Gi        RWX            Recycle          Available                                   3m42s</span><br><span class="line">tomcat-3   10Gi       RWX            Recycle          Available                                   3m42s</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>pv按容量去排序</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get pv -A --sort-by=.spec.capacity.storage</span></span><br><span class="line">NAME       CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS      CLAIM   STORAGECLASS   REASON   AGE</span><br><span class="line">nginx-2    1Gi        RWX            Recycle          Available                                   3m55s</span><br><span class="line">tomcat-2   1Gi        RWX            Recycle          Available                                   2m53s</span><br><span class="line">nginx-1    5Gi        RWX            Recycle          Available                                   4m12s</span><br><span class="line">tomcat-1   5Gi        RWX            Recycle          Available                                   2m53s</span><br><span class="line">nginx-3    10Gi       RWX            Recycle          Available                                   3m55s</span><br><span class="line">tomcat-3   10Gi       RWX            Recycle          Available                                   2m53s</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h2><p>Set configuration context $ kubectl config use-context k8s</p>
<p>Ensure a single instance of Pod nginx is running on each node of the kubernetes cluster where nginx also represents the image name which has to be used. Do no override any taints currently in place.</p>
<p>Use Daemonsets to complete this task and use ds.kusc00201 as Daemonset name. Question weight 3%</p>
<p><a href="https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/">https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/</a></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># kubectl create deployment ds.kusc00201 --image=nginx -oyaml &gt;ds.kusc00201.yaml</span></span><br><span class="line"><span class="comment"># vim ds.kusc00201.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">DaemonSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">ds.kusc00201</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ds.kusc00201</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">ds.kusc00201</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">creationTimestamp:</span> <span class="literal">null</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">ds.kusc00201</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">Always</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line"><span class="comment"># kubectl apply -f ds.kusc00201.yaml</span></span><br><span class="line"><span class="string">daemonset.apps/ds.kusc00201</span> <span class="string">created</span></span><br><span class="line"><span class="comment"># kubectl get ds</span></span><br><span class="line"><span class="string">NAME</span>           <span class="string">DESIRED</span>   <span class="string">CURRENT</span>   <span class="string">READY</span>   <span class="string">UP-TO-DATE</span>   <span class="string">AVAILABLE</span>   <span class="string">NODE</span> <span class="string">SELECTOR</span>   <span class="string">AGE</span></span><br><span class="line"><span class="string">ds.kusc00201</span>   <span class="number">2</span>         <span class="number">2</span>         <span class="number">2</span>       <span class="number">2</span>            <span class="number">2</span>           <span class="string">&lt;none&gt;</span>          <span class="string">2m33s</span></span><br></pre></td></tr></table></figure>

<h2 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h2><p>Set configuration context $ kubectl config use-context k8s </p>
<p>Perform the following tasks</p>
<ol>
<li>Add an init container to </li>
<li>The init container should create an empty file named </li>
<li>If &#x2F;workdir&#x2F;calm.txt is not detected, the Pod should exit</li>
<li>Once the spec file has been updated with the init container definition, the Pod should be created.</li>
</ol>
<p>Question weight 7%</p>
<p><a href="https://kubernetes.io/docs/concepts/workloads/pods/init-containers/">https://kubernetes.io/docs/concepts/workloads/pods/init-containers/</a></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># kubectl run  lumpy--koala --image=nginx  -oyaml --dry-run &gt;/opt/kucc00100/pod-spec-KUCC00100.yaml</span></span><br><span class="line"><span class="comment"># vim /opt/kucc00100/pod-spec-KUCC00100.yaml </span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">run:</span> <span class="string">lumpy--koala</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">lumpy--koala</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">busybox:1.28</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">lumpy--koala</span></span><br><span class="line">    <span class="attr">command:</span> [<span class="string">&#x27;sh&#x27;</span>,<span class="string">&#x27;-c&#x27;</span>,<span class="string">&#x27;if [ !-f /workdir/calm.txt ];then exit 1;else sleep 300;fi&#x27;</span>]</span><br><span class="line">    <span class="attr">volumeMounts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">workdir</span></span><br><span class="line">      <span class="attr">mountPath:</span> <span class="string">&quot;/workdir&quot;</span></span><br><span class="line">  <span class="attr">initContainers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">init-myservice</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">busybox:1.28</span></span><br><span class="line">    <span class="attr">command:</span> [<span class="string">&#x27;sh&#x27;</span>,<span class="string">&#x27;-c&#x27;</span>,<span class="string">&#x27;touch /workdir/calm.txt&#x27;</span>]</span><br><span class="line">    <span class="attr">volumeMounts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">workdir</span></span><br><span class="line">      <span class="attr">mountPath:</span> <span class="string">&quot;/workdir&quot;</span></span><br><span class="line">  <span class="attr">volumes:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">workdir</span></span><br><span class="line">    <span class="attr">emptyDir:</span> &#123;&#125;</span><br><span class="line"><span class="comment"># kubectl apply -f /opt/kucc00100/pod-spec-KUCC00100.yaml</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h2><p>Set configuration context $ kubectl config use-context k8s</p>
<p>Create a pod named kucc4 with a single container for each of the following images running inside (there may be between 1 and 4 images specified): nginx + redis + memcached + consul</p>
<p>Question weight: 4%</p>
<p><a href="https://kubernetes.io/docs/concepts/workloads/controllers/deployment/">https://kubernetes.io/docs/concepts/workloads/controllers/deployment/</a></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># kubectl run kucc4 --image=nginx  -oyaml --dry-run &gt; kucc4.yaml</span></span><br><span class="line"><span class="comment"># vim kucc4.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">creationTimestamp:</span> <span class="literal">null</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">run:</span> <span class="string">kucc4</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kucc4</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">redis</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">redis</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">memcached</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">memcached</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">consul</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">consul</span> </span><br><span class="line"><span class="comment"># kubectl apply -f kucc4.yaml</span></span><br><span class="line"><span class="string">pod/kucc4</span> <span class="string">created</span></span><br></pre></td></tr></table></figure>

<h2 id="第六题"><a href="#第六题" class="headerlink" title="第六题"></a>第六题</h2><p>Set configuration context $ kubectl config use-context k8s </p>
<p>Schedule a Pod as follows:<br>Name: nginx-kusc00101<br>Image: nginx<br>Node selector: disk&#x3D;ssd<br>Question weight: 2%</p>
<p><a href="https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/">https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/</a></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># kubectl run nginx-kusc00101 --image=nginx -oyaml --dry-run &gt;nginx-kusc00101.yaml</span></span><br><span class="line"><span class="comment"># vim nginx-kusc00101.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">creationTimestamp:</span> <span class="literal">null</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">run:</span> <span class="string">nginx-kusc00101</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-kusc00101</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">nginx-kusc00101</span></span><br><span class="line">  <span class="attr">nodeSelector:</span></span><br><span class="line">    <span class="attr">disk:</span> <span class="string">ssd</span></span><br><span class="line"><span class="comment"># kubectl apply -f nginx-kusc00101.yaml</span></span><br><span class="line"><span class="string">pod/nginx-kusc00101</span> <span class="string">created</span></span><br></pre></td></tr></table></figure>

<h2 id="第七题"><a href="#第七题" class="headerlink" title="第七题"></a>第七题</h2><p>Set configuration context $ kubectl config use-context k8s </p>
<p>Create a deployment as follows<br>Name: nginx-app<br>Using container nginx with version 1.10.2-alpine<br>The deployment should contain 3 replicas<br>Next, deploy the app with new version 1.13.0-alpine by performing a rolling update and record that update.</p>
<p>Finally, rollback that update to the previous version 1.10.2-alpine </p>
<p>Question weight: 4%</p>
<p><a href="https://kubernetes.io/docs/reference/kubectl/cheatsheet/#updating-resources">https://kubernetes.io/docs/reference/kubectl/cheatsheet/#updating-resources</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">创建1.10.2版本</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl create deploy  nginx-app --image=nginx:1.10.2-alpine -oyaml --dry-run &gt;nginx-app.yaml</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl apply -f nginx-app.yaml</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl scale deploy nginx-app --replicas=3</span></span><br><span class="line">deployment.apps/nginx-app scaled</span><br><span class="line"></span><br><span class="line">更换成1.13.0</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl <span class="built_in">set</span> image deployment nginx-app nginx=nginx:1.13.0-alpine --record</span></span><br><span class="line">deployment.apps/nginx-app image updated</span><br><span class="line"></span><br><span class="line">查看历史版本</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl rollout <span class="built_in">history</span> deploy nginx-app</span></span><br><span class="line">deployment.apps/nginx-app </span><br><span class="line">REVISION  CHANGE-CAUSE</span><br><span class="line">1         &lt;none&gt;</span><br><span class="line">2         kubectl set image deploy nginx-app nginx=nginx:1.13.0-alpine --record=true</span><br><span class="line"></span><br><span class="line">回滚上一版本</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl rollout undo deploy nginx-app</span></span><br><span class="line">deployment.apps/nginx-app rolled back</span><br></pre></td></tr></table></figure>

<h2 id="第八题"><a href="#第八题" class="headerlink" title="第八题"></a>第八题</h2><p>Set configuration context $ kubectl config use-context k8s</p>
<p>Create and configure the service front-end-service so it’s accessible through NodePort and routes to the existing pod named front-end</p>
<p>Question weight: 4%</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl expose pod front-end-service  --<span class="built_in">type</span>=NodePort --name=front-end --port=80</span></span><br></pre></td></tr></table></figure>

<h2 id="第九题"><a href="#第九题" class="headerlink" title="第九题"></a>第九题</h2><p>Set configuration context $ kubectl config use-context k8s </p>
<p>Create a Pod as follows:<br>Name: jenkins<br>Using image: jenkins<br>In a new Kubenetes namespace named website-frontend<br>Question weight 3%</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl create ns website-frontend</span></span><br><span class="line">namespace/website-frontend created</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl run jenkins --image=jenkins -nwebsite-frontend</span></span><br><span class="line">pod/jenkins created</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get po -nwebsite-frontend</span></span><br><span class="line">NAME      READY   STATUS              RESTARTS   AGE</span><br><span class="line">jenkins   0/1     ContainerCreating   0          9s</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="第十题"><a href="#第十题" class="headerlink" title="第十题"></a>第十题</h2><p>Set configuration context $ kubectl config use-context k8s </p>
<p>Create a deployment spec file that will:<br>Launch 7 replicas of the redis image with the label: app_env_stage&#x3D;dev<br>Deployment name: kual00201<br>Save a copy of this spec file to &#x2F;opt&#x2F;KUAL00201&#x2F;deploy_spec.yaml (or .json)</p>
<p>When you are done, clean up (delete) any new k8s API objects that you produced during this task</p>
<p>Question weight: 3%</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># mkdir /opt/KUAL00201</span></span><br><span class="line"><span class="comment"># kubectl run kual00201  --image=redis --labels=&#x27;app_env_stage=dev&#x27; -o yaml &gt;/opt/KUAL00201/deploy_spec.yaml</span></span><br><span class="line"><span class="comment"># vim /opt/KUAL00201/deploy_spec.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">creationTimestamp:</span> <span class="literal">null</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app_env_stage:</span> <span class="string">dev</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kual00201</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">7</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app_env_stage:</span> <span class="string">dev</span></span><br><span class="line">  <span class="attr">strategy:</span> &#123;&#125;</span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">creationTimestamp:</span> <span class="literal">null</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app_env_stage:</span> <span class="string">dev</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">redis</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">kual00201</span></span><br><span class="line">        <span class="attr">resources:</span> &#123;&#125;</span><br><span class="line"><span class="attr">status:</span> &#123;&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="第十一题"><a href="#第十一题" class="headerlink" title="第十一题"></a>第十一题</h2><p>Set configuration context $ kubectl config use-context k8s</p>
<p>Create a file &#x2F;opt&#x2F;KUCC00302&#x2F;kucc00302.txt that lists all pods that implement Service foo in Namespace production.</p>
<p>The format of the file should be one pod name per line.</p>
<p>Question weight: 3%</p>
<p>因为本地没有这个服务，用kube-dns代替</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get svc -n kube-system</span></span><br><span class="line">NAME       TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)                  AGE</span><br><span class="line">kube-dns   ClusterIP   10.96.0.10   &lt;none&gt;        53/UDP,53/TCP,9153/TCP   9d</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl describe svc kube-dns -nkube-system</span></span><br><span class="line">Name:              kube-dns</span><br><span class="line">Namespace:         kube-system</span><br><span class="line">Labels:            k8s-app=kube-dns</span><br><span class="line">                   kubernetes.io/cluster-service=true</span><br><span class="line">                   kubernetes.io/name=KubeDNS</span><br><span class="line">Annotations:       prometheus.io/port: 9153</span><br><span class="line">                   prometheus.io/scrape: true</span><br><span class="line">Selector:          k8s-app=kube-dns</span><br><span class="line">Type:              ClusterIP</span><br><span class="line">IP:                10.96.0.10</span><br><span class="line">Port:              dns  53/UDP</span><br><span class="line">TargetPort:        53/UDP</span><br><span class="line">Endpoints:         10.244.0.5:53,10.244.2.30:53</span><br><span class="line">Port:              dns-tcp  53/TCP</span><br><span class="line">TargetPort:        53/TCP</span><br><span class="line">Endpoints:         10.244.0.5:53,10.244.2.30:53</span><br><span class="line">Port:              metrics  9153/TCP</span><br><span class="line">TargetPort:        9153/TCP</span><br><span class="line">Endpoints:         10.244.0.5:9153,10.244.2.30:9153</span><br><span class="line">Session Affinity:  None</span><br><span class="line">Events:            &lt;none&gt;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get po -nkube-system -l k8s-app=kube-dns</span></span><br><span class="line">NAME                       READY   STATUS    RESTARTS   AGE</span><br><span class="line">coredns-7ff77c879f-pwpgq   1/1     Running   2          9d</span><br><span class="line">coredns-7ff77c879f-sbg6j   1/1     Running   3          9d</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mkdir</span> /opt/KUCC00302/ -p</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get po -nkube-system -l k8s-app=kube-dns|grep -v <span class="string">&#x27;NAME&#x27;</span>|awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> &gt;/opt/KUCC00302/kucc00302.txt</span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cat</span> /opt/KUCC00302/kucc00302.txt</span></span><br><span class="line">coredns-7ff77c879f-pwpgq</span><br><span class="line">coredns-7ff77c879f-sbg6j</span><br></pre></td></tr></table></figure>

<h2 id="第十二题"><a href="#第十二题" class="headerlink" title="第十二题"></a>第十二题</h2><p>Set configuration context $ kubectl config use-context k8s </p>
<p>Create a Kubernetes Secret as follows:<br>Name: super-secret<br>Credential: alice  or username:bob<br>Create a Pod named pod-secrets-via-file using the redis image which mounts a secret named super-secret at &#x2F;secrets</p>
<p>Create a second Pod named pod-secrets-via-env using the redis image, which exports credential as TOPSECRET</p>
<p>Question weight: 9%</p>
<p><a href="https://kubernetes.io/docs/concepts/configuration/secret/">https://kubernetes.io/docs/concepts/configuration/secret/</a></p>
<p>文件挂载</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># kubectl create secret generic super-secret --from-literal=Credential=alice --from-literal=username=bob</span></span><br><span class="line"><span class="string">secret/super-secret</span> <span class="string">created</span></span><br><span class="line"><span class="comment"># kubectl run pod-secrets-via-file --image=redis -oyaml --dry-run &gt;pod-secrets-via-file.yaml</span></span><br><span class="line"><span class="comment"># vim pod-secrets-via-file.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">creationTimestamp:</span> <span class="literal">null</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">run:</span> <span class="string">pod-secrets-via-file</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">pod-secrets-via-file</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">redis</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">pod-secrets-via-file</span></span><br><span class="line">    <span class="attr">volumeMounts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">super-secret</span></span><br><span class="line">      <span class="attr">mountPath:</span> <span class="string">&quot;/secrets&quot;</span></span><br><span class="line">  <span class="attr">volumes:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">super-secret</span></span><br><span class="line">    <span class="attr">secret:</span></span><br><span class="line">      <span class="attr">secretName:</span> <span class="string">super-secret</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># kubectl apply -f pod-secrets-via-file.yaml</span></span><br><span class="line"><span class="string">pod/pod-secrets-via-file</span> <span class="string">created</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl exec -it pod-secrets-via-file bash</span></span><br><span class="line"><span class="string">root@pod-secrets-via-file:/data#</span> <span class="string">cd</span> <span class="string">/secrets/</span></span><br><span class="line"><span class="string">root@pod-secrets-via-file:/secrets#</span> <span class="string">ls</span></span><br><span class="line"><span class="string">Credential</span>  <span class="string">username</span></span><br><span class="line"><span class="string">root@pod-secrets-via-file:/secrets#</span> <span class="string">cat</span> <span class="string">Credential</span> </span><br><span class="line"><span class="string">alice</span></span><br><span class="line"><span class="string">root@pod-secrets-via-file:/secrets#</span> <span class="string">cat</span> <span class="string">username</span> </span><br><span class="line"><span class="string">bobroot</span></span><br></pre></td></tr></table></figure>

<p>环境变量挂载</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># kubectl run pod-secrets-via-env --image=redis -oyaml --dry-run &gt;pod-secrets-via-env.yaml</span></span><br><span class="line"><span class="string">W0807</span> <span class="number">17</span><span class="string">:52:23.764346</span>  <span class="number">104935</span> <span class="string">helpers.go:535]</span> <span class="string">--dry-run</span> <span class="string">is</span> <span class="string">deprecated</span> <span class="string">and</span> <span class="string">can</span> <span class="string">be</span> <span class="string">replaced</span> <span class="string">with</span> <span class="string">--dry-run=client.</span></span><br><span class="line"><span class="comment"># vim pod-secrets-via-env.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">run:</span> <span class="string">pod-secrets-via-env</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">pod-secrets-via-env</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">redis</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">pod-secrets-via-env</span></span><br><span class="line">    <span class="attr">env:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">TOPSECRET</span></span><br><span class="line">        <span class="attr">valueFrom:</span></span><br><span class="line">          <span class="attr">secretKeyRef:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">super-secret</span></span><br><span class="line">            <span class="attr">key:</span> <span class="string">Credential</span></span><br><span class="line"><span class="comment"># kubectl apply -f pod-secrets-via-env.yaml</span></span><br><span class="line"><span class="string">pod/pod-secrets-via-env</span> <span class="string">created</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl exec -it pod-secrets-via-env bash</span></span><br><span class="line"><span class="string">root@pod-secrets-via-env:/data#</span> <span class="string">echo</span> <span class="string">$TOPSECRET</span></span><br><span class="line"><span class="string">alice</span></span><br></pre></td></tr></table></figure>

<h2 id="第十三题"><a href="#第十三题" class="headerlink" title="第十三题"></a>第十三题</h2><p>Set configuration context $ kubectl config use-context k8s </p>
<p>Create a pad as follows:<br>Name: non-persistent-redis<br>Container image: redis<br>Named-volume with name: cache-control<br>Mount path: &#x2F;data&#x2F;redis<br>It should launch in the pre-prod namespace and the volume MUST NOT be persistent.</p>
<p>Question weight: 4%</p>
<p><a href="https://kubernetes.io/docs/concepts/storage/volumes/#emptydir">https://kubernetes.io/docs/concepts/storage/volumes/#emptydir</a></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># kubectl create ns pre-prod</span></span><br><span class="line"><span class="string">namespace/pre-prod</span> <span class="string">created</span></span><br><span class="line"><span class="comment"># kubectl run non-persistent-redis --image=redis -oyaml --dry-run &gt; redis.yaml</span></span><br><span class="line"><span class="comment"># vim redis.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">creationTimestamp:</span> <span class="literal">null</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">run:</span> <span class="string">non-persistent-redis</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">non-persistent-redis</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">redis</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">non-persistent-redis</span></span><br><span class="line">    <span class="attr">volumeMounts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/data/redis</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">cache-control</span></span><br><span class="line">  <span class="attr">volumes:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">cache-control</span></span><br><span class="line">    <span class="attr">emptyDir:</span> &#123;&#125;</span><br><span class="line"><span class="comment"># kubectl apply -f redis.yaml -n pre-prod</span></span><br><span class="line"><span class="string">pod/non-persistent-redis</span> <span class="string">created</span></span><br><span class="line"><span class="comment"># kubectl get po -npre-prod</span></span><br><span class="line"><span class="string">NAME</span>                   <span class="string">READY</span>   <span class="string">STATUS</span>    <span class="string">RESTARTS</span>   <span class="string">AGE</span></span><br><span class="line"><span class="string">non-persistent-redis</span>   <span class="number">1</span><span class="string">/1</span>     <span class="string">Running</span>   <span class="number">0</span>          <span class="string">40s</span></span><br></pre></td></tr></table></figure>

<h2 id="第十四题"><a href="#第十四题" class="headerlink" title="第十四题"></a>第十四题</h2><p>Set configuration context $ kubectl config use-context k8s </p>
<p>Scale the deployment webserver to 6 pods</p>
<p>Question weight: 1%</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl scale deploy/webserver --replicas=6</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="第十五题"><a href="#第十五题" class="headerlink" title="第十五题"></a>第十五题</h2><p>Set configuration context $ kubectl config use-context k8s</p>
<p>Check to see how many nodes are ready (not including nodes tainted NoSchedule) and write the number to &#x2F;opt&#x2F;nodenum</p>
<p>Question weight: 2%</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="keyword">for</span> i <span class="keyword">in</span> `kubectl get nodes|grep Ready|grep -v <span class="string">&#x27;NAME&#x27;</span>|awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>`</span> </span><br><span class="line">do  </span><br><span class="line">  kubectl describe node $i |grep Taints|grep -v &#x27;NoSchedule&#x27;</span><br><span class="line">done</span><br><span class="line">Taints:             &lt;none&gt;</span><br><span class="line">Taints:             &lt;none&gt;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="keyword">for</span> i <span class="keyword">in</span> `kubectl get nodes|grep Ready|grep -v <span class="string">&#x27;NAME&#x27;</span>|awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>` ;<span class="keyword">do</span> kubectl describe node <span class="variable">$i</span> |grep Taints|grep -v <span class="string">&#x27;NoSchedule&#x27;</span>;<span class="keyword">done</span>|<span class="built_in">wc</span> -l &gt;/opt/nodenum</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cat</span> /opt/nodenum</span></span><br><span class="line">2</span><br></pre></td></tr></table></figure>

<h2 id="第十六题"><a href="#第十六题" class="headerlink" title="第十六题"></a>第十六题</h2><p>Set configuration context $ kubectl config use-context k8s</p>
<p>From the Pod label name&#x3D;cpu-utilizer, find pods running high CPU workloads and write the name of the Pod consuming most CPU to the file &#x2F;opt&#x2F;cpu.txt (which already exists)</p>
<p>Question weight: 2%</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="keyword">for</span> i <span class="keyword">in</span> `kubectl get po -l k8s-app=kube-dns -nkube-system|grep -v <span class="string">&#x27;NAME&#x27;</span>|awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>` ;<span class="keyword">do</span> kubectl top po <span class="variable">$i</span> -nkube-system ;<span class="keyword">done</span> |<span class="built_in">sort</span> -k 2r</span></span><br><span class="line">NAME                       CPU(cores)   MEMORY(bytes)   </span><br><span class="line">NAME                       CPU(cores)   MEMORY(bytes)   </span><br><span class="line">coredns-7ff77c879f-sbg6j   3m           16Mi            </span><br><span class="line">coredns-7ff77c879f-pwpgq   3m           12Mi </span><br><span class="line">      </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">echo</span> <span class="string">&#x27;coredns-7ff77c879f-sbg6j&#x27;</span> &gt;/opt/cpu.txt</span></span><br></pre></td></tr></table></figure>

<h2 id="第十七题"><a href="#第十七题" class="headerlink" title="第十七题"></a>第十七题</h2><p>Set configuration context $ kubectl config use-context k8s </p>
<p>Create a deployment as follows</p>
<p>Name: nginx-dns<br>Exposed via a service: nginx-dns<br>Ensure that the service &amp; pod are accessible via their respective DNS records<br>The container(s) within any Pod(s) running as a part of this deployment should use the nginx image<br>Next, use the utility nslookup to look up the DNS records of the service &amp; pod and write the output to &#x2F;opt&#x2F;service.dns and &#x2F;opt&#x2F;pod.dns respectively.</p>
<p>Ensure you use the busybox:1.28 image(or earlier) for any testing, an the latest release has an unpstream bug which impacts thd use of nslookup.</p>
<p>Question weight: 7%</p>
<p>注：考试中nslookup已提供</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl create deploy nginx-ds --image=nginx --image=busybox:1.28 --dry-run -oyaml &gt; nginx-ds.yaml</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim nginx-ds.yaml</span></span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  creationTimestamp: null</span><br><span class="line">  labels:</span><br><span class="line">    app: nginx-ds</span><br><span class="line">  name: nginx-ds</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: nginx-ds</span><br><span class="line">  strategy: &#123;&#125;</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: nginx-ds</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - image: nginx</span><br><span class="line">        name: nginx</span><br><span class="line">      - image: busybox:1.28</span><br><span class="line">        name: busybox</span><br><span class="line">        command: [&#x27;sh&#x27;,&#x27;-c&#x27;,&#x27;sleep 3600&#x27;]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl apply -f nginx-ds.yaml</span></span><br><span class="line">deployment.apps/nginx-ds created</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl expose deploy/nginx-ds --port=80</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl <span class="built_in">exec</span> -it deploy/nginx-ds -c busybox  nslookup nginx-ds&gt;/opt/service.dns</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl <span class="built_in">exec</span> -it deploy/nginx-ds -c busybox  nslookup nginx-ds &gt;/opt/service.dns</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cat</span> /opt/service.dns</span></span><br><span class="line">Server:    10.96.0.10</span><br><span class="line">Address 1: 10.96.0.10 kube-dns.kube-system.svc.cluster.local</span><br><span class="line"></span><br><span class="line">Name:      nginx-ds</span><br><span class="line">Address 1: 10.98.149.137 nginx-ds.default.svc.cluster.local</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl <span class="built_in">exec</span> -it deploy/nginx-ds -c busybox  nslookup 10.244.1.101 &gt;/opt/pod.dns</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cat</span> /opt/pod.dns</span></span><br><span class="line">Server:    10.96.0.10</span><br><span class="line">Address 1: 10.96.0.10 kube-dns.kube-system.svc.cluster.local</span><br><span class="line"></span><br><span class="line">Name:      10.244.1.101</span><br><span class="line">Address 1: 10.244.1.101 nginx-ds-576c7d4d77-m47rt</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="第十八题"><a href="#第十八题" class="headerlink" title="第十八题"></a>第十八题</h2><p>No configuration context change required for this item</p>
<p>Create a snapshot of the etcd instance running at <a href="https://127.0.0.1:2379/">https://127.0.0.1:2379</a> saving the snapshot to the file path &#x2F;data&#x2F;backup&#x2F;etcd-snapshot.db</p>
<p>The etcd instance is running etcd version 3.1.10</p>
<p>The following TLS certificates&#x2F;key are supplied for connecting to the server with etcdctl</p>
<p>CA certificate: &#x2F;opt&#x2F;KUCM00302&#x2F;ca.crt<br>Client certificate: &#x2F;opt&#x2F;KUCM00302&#x2F;etcd-client.crt<br>Clientkey:&#x2F;opt&#x2F;KUCM00302&#x2F;etcd-client.key </p>
<p>Question weight: 7%</p>
<p><a href="https://kubernetes.io/zh/docs/tasks/administer-cluster/configure-upgrade-etcd/#%E5%A4%87%E4%BB%BD-etcd-%E9%9B%86%E7%BE%A4">https://kubernetes.io/zh/docs/tasks/administer-cluster/configure-upgrade-etcd/#%E5%A4%87%E4%BB%BD-etcd-%E9%9B%86%E7%BE%A4</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export ETCDCTL_API=3</span><br><span class="line">etcdctl \</span><br><span class="line">--endpoints=https://127.0.0.1:2379 \</span><br><span class="line">--cert /etc/kubernetes/pki/ca.crt \</span><br><span class="line">--key /etc/kubernetes/pki/etcd/ca.key \</span><br><span class="line">--cacert /etc/kubernetes/pki/ca.crt \</span><br><span class="line">snapshot save /data/backup/etcd-snapshot.db</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="第十九题"><a href="#第十九题" class="headerlink" title="第十九题"></a>第十九题</h2><p>Set configuration context $ kubectl config use-context ek8s</p>
<p>Set the node labelled with name&#x3D;ek8s-node-1 as unavailable and reschedule all the pods running on it.</p>
<p>Question weight: 4%</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl label node node02 name=ek8s-node-1</span></span><br><span class="line">node/node02 labeled</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get nodes -l name=ek8s-node-1</span></span><br><span class="line">NAME     STATUS   ROLES   AGE   VERSION</span><br><span class="line">node02   Ready    node    14d   v1.18.3</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl drain node02 --delete-local-data --force --ignore-daemonsets</span> </span><br></pre></td></tr></table></figure>

<h2 id="第二十题"><a href="#第二十题" class="headerlink" title="第二十题"></a>第二十题</h2><p>Set configuration context $ kubectl config use-context wk8s</p>
<p>A Kubernetes worker node, labelled with name&#x3D;wk8s-node-0 is in state NotReady . Investigate why this is the case, and perform any appropriate steps to bring the node to a Ready state, ensuring that any changes are made permanent.</p>
<p>Hints:</p>
<p>You can ssh to the failed node using $ ssh wk8s-node-0<br>You can assume elevated privileges on the node with the following command $ sudo -i </p>
<p>Question weight: 4%</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ssh wk8s-node-0</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo -i</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl start kubelet ;systemctl <span class="built_in">enable</span> kubelet</span></span><br></pre></td></tr></table></figure>

<h2 id="第二十一题"><a href="#第二十一题" class="headerlink" title="第二十一题"></a>第二十一题</h2><p>Set configuration context $ kubectl config use-context wk8s</p>
<p>Configure the kubelet systemd managed service, on the node labelled with <strong>name&#x3D;wk8s-node-1</strong>, to launch a Pod containing a single container of image nginx named myservice automatically. Any spec files required should be placed in the &#x2F;etc&#x2F;kubernetes&#x2F;manifests directory on the node.</p>
<p>Hints:</p>
<ol>
<li>You can ssh to the failed node using $ ssh wk8s-node-1</li>
<li>You can assume elevated privileges on the node with the following command $ sudo -i</li>
</ol>
<p> </p>
<p>Question weight: 4%</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ ssh wk8s-node-1</span><br><span class="line">$ sudo -i</span><br><span class="line"># vim /etc/kubernetes/manifests/myservice.yaml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  creationTimestamp: null</span><br><span class="line">  labels:</span><br><span class="line">    run: myservice</span><br><span class="line">  name: myservice</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - image: nginx</span><br><span class="line">    name: myservice</span><br><span class="line">    resources: &#123;&#125;</span><br><span class="line">  dnsPolicy: ClusterFirst</span><br><span class="line">  restartPolicy: Always</span><br><span class="line">status: &#123;&#125;</span><br><span class="line"># systemctl status kubelet</span><br><span class="line">● kubelet.service - kubelet: The Kubernetes Node Agent</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/kubelet.service; enabled; vendor preset: disabled)</span><br><span class="line">  Drop-In: /usr/lib/systemd/system/kubelet.service.d</span><br><span class="line">           └─10-kubeadm.conf</span><br><span class="line"># vim /usr/lib/systemd/system/kubelet.service.d/10-kubeadm.conf</span><br><span class="line"># Note: This dropin only works with kubeadm and kubelet v1.11+</span><br><span class="line">[Service]</span><br><span class="line">  vironment=&quot;KUBELET_KUBECONFIG_ARGS=--bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --kubeconfig</span><br><span class="line">=/etc/kubernetes/kubelet.conf&quot;</span><br><span class="line">Environment=&quot;KUBELET_CONFIG_ARGS=--config=/var/lib/kubelet/config.yaml&quot;</span><br><span class="line"># vim /var/lib/kubelet/config.yaml</span><br><span class="line">staticPodPath: /etc/kubernetes/manifests</span><br><span class="line"># systemctl restart kubelet</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="第二十二题-没遇见"><a href="#第二十二题-没遇见" class="headerlink" title="第二十二题 (没遇见)"></a>第二十二题 (没遇见)</h2><p>Set configuration context $ kubectl config use-context ik8s</p>
<p>In this task, you will configure a new Node, ik8s-node-0, to join a Kubernetes cluster as follows:</p>
<p>Configure kubelet for automatic certificate rotation and ensure that both server and client CSRs are automatically approved and signed as appropnate via the use of RBAC.<br>Ensure that the appropriate cluster-info ConfigMap is created and configured appropriately in the correct namespace so that future Nodes can easily join the cluster<br>Your bootstrap kubeconfig should be created on the new Node at &#x2F;etc&#x2F;kubernetes&#x2F;bootstrap-kubelet.conf (do not remove this file once your Node has successfully joined the cluster)<br>The appropriate cluster-wide CA certificate is located on the Node at &#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;ca.crt . You should ensure that any automatically issued certificates are installed to the node at &#x2F;var&#x2F;lib&#x2F;kubelet&#x2F;pki and that the kubeconfig file for kubelet will be rendered at &#x2F;etc&#x2F;kubernetes&#x2F;kubelet.conf upon successful bootstrapping<br>Use an additional group for bootstrapping Nodes attempting to join the cluster which should be called system:bootstrappers:cka:default-node-token<br>Solution should start automatically on boot, with the systemd service unit file for kubelet available at &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;kubelet.service<br>To test your solution, create the appropriate resources from the spec file located at &#x2F;opt&#x2F;….&#x2F;kube-flannel.yaml This will create the necessary supporting resources as well as the kube-flannel -ds DaemonSet . You should ensure that this DaemonSet is correctly deployed to the single node in the cluster.</p>
<p>Hints:</p>
<p>kubelet is not configured or running on ik8s-master-0 for this task, and you should not attempt to configure it.<br>You will make use of TLS bootstrapping to complete this task.<br>You can obtain the IP address of the Kubernetes API server via the following command $ ssh ik8s-node-0 getent hosts ik8s-master-0<br>The API server is listening on the usual port, 6443&#x2F;tcp, and will only server TLS requests<br>The kubelet binary is already installed on ik8s-node-0 at &#x2F;usr&#x2F;bin&#x2F;kubelet . You will not need to deploy kube-proxy to the cluster during this task.<br>You can ssh to the new worker node using $ ssh ik8s-node-0<br>You can ssh to the master node with the following command $ ssh ik8s-master-0<br>No further configuration of control plane services running on ik8s-master-0 is required<br>You can assume elevated privileges on both nodes with the following command $ sudo -i<br>Docker is already installed and running on ik8s-node-0</p>
<p>Question weight: 8%</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="第二十三题"><a href="#第二十三题" class="headerlink" title="第二十三题"></a>第二十三题</h2><p>Set configuration context $ kubectl config use-context bk8s</p>
<p>Given a partially-functioning Kubenetes cluster, identify symptoms of failure on the cluster. Determine the node, the failing service and take actions to bring up the failed service and restore the health of the cluster. Ensure that any changes are made permanently.</p>
<p>The worker node in this cluster is labelled with name&#x3D;bk8s-node-0 Hints:</p>
<p>You can ssh to the relevant nodes using $ ssh $(NODE) where $(NODE) is one of bk8s-master-0 or bk8s-node-0<br>You can assume elevated privileges on any node in the cluster with the following command$ sudo -i</p>
<p>Question weight: 4%</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">这个是静态yaml目录</span><br><span class="line"># cd /etc/kubernetes/manifests/</span><br><span class="line"># ls</span><br><span class="line">etcd.yaml  kube-apiserver.yaml  kube-controller-manager.yaml  kube-scheduler.yaml</span><br><span class="line">静态文件还存在，这就需要查看静态文件路径是否正常</span><br><span class="line"># vim /var/lib/kubelet/config.yaml</span><br><span class="line">staticPodPath: /etc/kubernetes/DODKSIYF =&gt; /etc/kubernetes/manifests</span><br><span class="line"># systemctl restart kubelet</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="第二十四题"><a href="#第二十四题" class="headerlink" title="第二十四题"></a>第二十四题</h2><p>Set configuration context $ kubectl config use-context hk8s</p>
<p>Creae a persistent volume with name app-config of capacity 1Gi and access mode ReadWriteOnce. The type of volume is hostPath and its location is &#x2F;srv&#x2F;app-config</p>
<p>Question weight: 3%</p>
<p><a href="https://kubernetes.io/docs/tasks/configure-pod-container/configure-persistent-volume-storage/#create-a-persistentvolume">https://kubernetes.io/docs/tasks/configure-pod-container/configure-persistent-volume-storage/#create-a-persistentvolume</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim app-config.yaml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolume</span><br><span class="line">metadata:</span><br><span class="line">  name: app-config</span><br><span class="line">  labels:</span><br><span class="line">    type: local</span><br><span class="line">spec:</span><br><span class="line">  storageClassName: app-config</span><br><span class="line">  capacity:</span><br><span class="line">    storage: 1Gi</span><br><span class="line">  accessModes:</span><br><span class="line">    - ReadWriteOnce</span><br><span class="line">  hostPath:</span><br><span class="line">    path: &quot;/srv/app-config&quot;</span><br><span class="line">                                                   </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl apply -f app-config.yaml</span></span><br><span class="line">persistentvolume/app-config created</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get pv</span></span><br><span class="line">NAME         CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS      CLAIM   STORAGECLASS   REASON   AGE</span><br><span class="line">app-config   1Gi        RWO            Retain           Available           app-config              4s</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="第二十五题"><a href="#第二十五题" class="headerlink" title="第二十五题"></a>第二十五题</h2><p>ssh mster node主机创建一个集群</p>
<p>集群Ready即可  初始化指定 –ignore-preflight-errors&#x3D;xxx<br><a href="https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/">https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/</a><br><a href="https://v1-17.docs.kubernetes.io/zh/docs/reference/setup-tools/kubeadm/kubeadm-init/">https://v1-17.docs.kubernetes.io/zh/docs/reference/setup-tools/kubeadm/kubeadm-init/</a><br><a href="https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml">https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ sudo apt-get install -y kubelet kubeadm kubectl</span><br><span class="line"># kubectl init  --ignore-preflight-errors=xxx</span><br><span class="line"># kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml</span><br></pre></td></tr></table></figure>




]]></content>
      <categories>
        <category>cka</category>
      </categories>
      <tags>
        <tag>cka</tag>
      </tags>
  </entry>
  <entry>
    <title>WIKI confluence安装部署</title>
    <url>/2019/01/06/confluence%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<h2 id="需要的环境"><a href="#需要的环境" class="headerlink" title="需要的环境"></a>需要的环境</h2><p>jdk1.8环境</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">java -version</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">java version <span class="string">&quot;1.8.0_60&quot;</span></span></span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_60-b27)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.60-b23, mixed mode)</span><br></pre></td></tr></table></figure>
<p>mysql5.6环境</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">mysql -V</span></span><br><span class="line">mysql  Ver 14.14 Distrib 5.6.36, for Linux (x86_64) using  EditLine wrapper</span><br></pre></td></tr></table></figure>
 <span id="more"></span>

<h2 id="mysql创建用户与数据库"><a href="#mysql创建用户与数据库" class="headerlink" title="mysql创建用户与数据库"></a>mysql创建用户与数据库</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; create database confluence character set UTF8;</span><br><span class="line">mysql&gt; grant all on confluence.* to confluence@&quot;%&quot; identified by &quot;confluence&quot;;</span><br><span class="line">mysql&gt; grant all on confluence.* to confluence@&quot;localhost&quot; identified by &quot;confluence&quot;;</span><br><span class="line">mysql&gt; FLUSH PRIVILEGES;    </span><br></pre></td></tr></table></figure>
<h2 id="下载安装confluence"><a href="#下载安装confluence" class="headerlink" title="下载安装confluence"></a>下载安装confluence</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">curl -o atlassian-confluence-5.6.6-x64.bin https://downloads.atlassian.com/software/confluence/downloads/atlassian-confluence-5.6.6-x64.bin</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">chmod</span> +x atlassian-confluence-5.6.6-x64.bin</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">./atlassian-confluence-5.6.6-x64.bin</span></span><br><span class="line"></span><br><span class="line">This will install Confluence 5.6.6 on your computer.</span><br><span class="line">OK [o, Enter], Cancel [c]</span><br><span class="line">o</span><br><span class="line">Choose the appropriate installation or upgrade option.</span><br><span class="line">Please choose one of the following:</span><br><span class="line">Express Install (uses default settings) [1], Custom Install (recommended for advanced users) [2, Enter], Upgrade an existing Confluence installation [3]</span><br><span class="line">1</span><br><span class="line">See where Confluence will be installed and the settings that will be used.</span><br><span class="line">Installation Directory: /opt/atlassian/confluence</span><br><span class="line">Home Directory: /var/atlassian/application-data/confluence</span><br><span class="line">HTTP Port: 8090</span><br><span class="line">RMI Port: 8000</span><br><span class="line">Install as service: Yes</span><br><span class="line">Install [i, Enter], Exit [e]</span><br><span class="line">i</span><br><span class="line">Extracting files ...</span><br><span class="line">Please wait a few moments while Confluence starts up.</span><br><span class="line">Launching Confluence ...</span><br><span class="line">Installation of Confluence 5.6.6 is complete</span><br><span class="line">Your installation of Confluence 5.6.6 is now ready and can be accessed via</span><br><span class="line">your browser.</span><br><span class="line">Confluence 5.6.6 can be accessed at http://localhost:8090</span><br><span class="line">Finishing installation ...    </span><br></pre></td></tr></table></figure>
<h3 id="访问web"><a href="#访问web" class="headerlink" title="访问web"></a>访问web</h3><p>访问<a href="http://localhost:8090/">http://localhost:8090</a></p>
<p><img src="/image/15468322121.png"></p>
<h3 id="confluence中文与mysql驱动"><a href="#confluence中文与mysql驱动" class="headerlink" title="confluence中文与mysql驱动"></a>confluence中文与mysql驱动</h3><p><a href="https://pan.baidu.com/s/1iMR8xJsKuXPKzkY5ZfxjMA">https://pan.baidu.com/s/1iMR8xJsKuXPKzkY5ZfxjMA</a></p>
<p>Confluence-5.6.6-language-pack-zh_CN.jar    中文语言包</p>
<p>mysql-connector-java-5.1.42-bin.jar                  mysql驱动包</p>
<p>FTP 放入&#x2F;opt&#x2F;atlassian&#x2F;confluence&#x2F;confluence&#x2F;WEB-INF&#x2F;lib</p>
<h2 id="破解工具"><a href="#破解工具" class="headerlink" title="破解工具"></a>破解工具</h2><p><a href="https://files.cnblogs.com/files/Javame/confluence%E7%A0%B4%E8%A7%A3%E5%B7%A5%E5%85%B7.rar">https://files.cnblogs.com/files/Javame/confluence%E7%A0%B4%E8%A7%A3%E5%B7%A5%E5%85%B7.rar</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mv</span> /opt/atlassian/confluence/confluence/WEB-INF/lib/atlassian-extras-decoder-v2-3.3.0.jar /opt/atlassian-extras-2.4.jar</span>    </span><br></pre></td></tr></table></figure>
<p>通过FTP将atlassian-extras-2.4.jar传到本地</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">sz atlassian-extras-2.4.jar</span>    </span><br></pre></td></tr></table></figure>
<p>cmd命令行里运行破解器confluence_keygen.jar</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">java -jar confluence_keygen.jar</span>       </span><br></pre></td></tr></table></figure>
<p>弹出窗口，输入name,Server ID,点击.patch!</p>
<p><img src="/image/1546832357-Image.png"></p>
<p>选中破解包中的atlassian-extras-2.4.jar文件，打开</p>
<p><img src="/image/1546832386-Image.png"></p>
<p>点击.gen!，这时先前访问页面中的License Key就出来了，复制Key关闭窗口</p>
<p><img src="/image/1546832409-Image.png"></p>
<p>破解之后的atlassian-extras-2.4jar文件会出现一个atlassian-extras-2.4.bak文件</p>
<p>将破解后的atlassian-extras-2.4jar上传到&#x2F;opt&#x2F;atlassian&#x2F;confluence&#x2F;confluence&#x2F;WEB-INF&#x2F;lib目录下</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">/etc/init.d/confluence restart   <span class="comment">#重启confluence</span></span>    </span><br></pre></td></tr></table></figure>

<h2 id="web界面配置"><a href="#web界面配置" class="headerlink" title="web界面配置"></a>web界面配置</h2><p>web界面License Key输入key密钥，选择数据库进行连接</p>
<p><img src="/image/15468324401-1.png"></p>
<p><img src="/image/15468324931.png"></p>
<p><img src="/image/15468325181.png"></p>
<p>创建管理用户</p>
<p><img src="/image/15468333421.png"></p>
<p><img src="/image/15468333641.png"></p>
<p><img src="/image/15468333861.png"></p>
<h3 id="配置邮箱"><a href="#配置邮箱" class="headerlink" title="配置邮箱"></a>配置邮箱</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /opt/atlassian/confluence/conf/server.xml</span></span><br><span class="line">&lt;Manager pathname=&quot;&quot;/&gt;</span><br><span class="line">&lt;Valve className=&quot;org.apache.catalina.valves.StuckThreadDetectionValve&quot; threshold=&quot;60&quot;/&gt;</span><br><span class="line">&lt;!--QQ企业邮箱配置--&gt;</span><br><span class="line">&lt;Resource name=&quot;mail/QqSMTPServer&quot;</span><br><span class="line">auth=&quot;Container&quot;</span><br><span class="line">type=&quot;javax.mail.Session&quot;</span><br><span class="line">mail.smtp.host=&quot;smtp.exmail.qq.com&quot;</span><br><span class="line">mail.smtp.port=&quot;465&quot;</span><br><span class="line">mail.smtp.auth=&quot;true&quot;</span><br><span class="line">mail.smtp.user=&quot;邮箱&quot;</span><br><span class="line">password=&quot;授权码&quot;</span><br><span class="line">mail.smtp.starttls.enable=&quot;true&quot;</span><br><span class="line">mail.smtp.socketFactory.class=&quot;javax.net.ssl.SSLSocketFactory&quot;</span><br><span class="line"><span class="meta prompt_">/&gt;</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash">&lt;!--QQ企业邮箱配置--&gt;</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mkdir</span> -p /opt/upload/mail-jar/ &amp;&amp; <span class="built_in">cd</span> /opt/upload/mail-jar</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget <span class="string">&#x27;https://maven.java.net/content/repositories/releases/com/sun/mail/javax.mail/1.6.1/javax.mail-1.6.1.jar&#x27;</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget <span class="string">&#x27;https://maven.java.net/content/repositories/releases/javax/mail/javax.mail-api/1.6.1/javax.mail-api-1.6.1.jar&#x27;</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget <span class="string">&#x27;https://maven.java.net/content/repositories/releases/com/sun/mail/mailapi/1.6.1/mailapi-1.6.1.jar&#x27;</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget <span class="string">&#x27;https://maven.java.net/content/repositories/releases/com/sun/mail/smtp/1.6.1/smtp-1.6.1.jar&#x27;</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mv</span> * /opt/atlassian/confluence/lib</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cd</span> /opt/atlassian/confluence/lib &amp;&amp;  <span class="built_in">rm</span> -rf mail-1.4.5.jar</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">/etc/init.d/confluence restart</span>    </span><br></pre></td></tr></table></figure>
<p><img src="/image/15468334471.png"></p>
<p><img src="/image/15468335161.png"></p>
<p>java:comp&#x2F;env&#x2F;mail&#x2F;QqSMTPServer</p>
<p>[<img src="/image/15468335681.png"></p>
<p><img src="/image/15468335851.png"></p>
<p>邮件发送成功</p>
<h3 id="用户注册"><a href="#用户注册" class="headerlink" title="用户注册"></a>用户注册</h3><p>设置&#x3D;&gt;用户管理&#x3D;&gt;用户注册选项</p>
<p><img src="/image/15468337501.png"></p>
<p><img src="/image/15468337831.png"> </p>
]]></content>
      <categories>
        <category>无聊操作</category>
      </categories>
  </entry>
  <entry>
    <title>consul简单命令</title>
    <url>/2019/01/06/consul%E7%AE%80%E5%8D%95%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<p><strong>consul catalog</strong></p>
<p>catalog命令用于通过命令行与Consul的目录进行交互。它暴露顶级命令来读取和过滤来自注册表的数据</p>
<p>用法： consul catalog <subcommand></p>
<p>列出所有数据中心</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">consul catalog datacenters</span></span><br><span class="line">testkydhuabei2</span><br></pre></td></tr></table></figure>
 <span id="more"></span>

<p>列出所有节点</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">consul catalog nodes</span></span><br><span class="line">Node      ID        Address         DC</span><br><span class="line">location  2ebf41aa  172.17.252.105  testkydhuabei2</span><br><span class="line">test         316bec16  172.17.252.104  testkydhuabei2    </span><br></pre></td></tr></table></figure>
<p>列出所有服务</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">consul catalog services</span></span><br><span class="line">consul</span><br><span class="line">kyd-auth</span><br><span class="line">kyd-backend</span><br><span class="line">kyd-gate</span><br><span class="line">kyd-monitor</span><br><span class="line">kyd-user</span><br><span class="line">nomad</span><br><span class="line">nomad-client    </span><br></pre></td></tr></table></figure>
<p>列出特定服务的所有节点</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">consul catalog nodes -service=kyd-gate</span></span><br><span class="line">Node      ID        Address         DC</span><br><span class="line">location  2ebf41aa  172.17.252.105  testkydhuabei2</span><br><span class="line">location  2ebf41aa  172.17.252.105  testkydhuabei2</span><br><span class="line">location  2ebf41aa  172.17.252.105  testkydhuabei2</span><br><span class="line">location  2ebf41aa  172.17.252.105  testkydhuabei2</span><br><span class="line">location  2ebf41aa  172.17.252.105  testkydhuabei2</span><br><span class="line">location  2ebf41aa  172.17.252.105  testkydhuabei2</span><br></pre></td></tr></table></figure>
<p>列出节点的所有服务</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">consul catalog services -node=location</span></span><br><span class="line">consul</span><br><span class="line">kyd-auth</span><br><span class="line">kyd-backend</span><br><span class="line">kyd-gate</span><br><span class="line">nomad</span><br><span class="line">nomad-client</span><br></pre></td></tr></table></figure>
<p><strong>consul services</strong></p>
<p>services用于与向本地代理注册的Consul服务进行交互。它们提供了有用的命令，例如register，deregister用于在脚本，开发模式等中轻松注册服务。要查看目录中的所有服务</p>
<p>用法： consul services deregister [options] [FILE…]</p>
<p>此命令可以使用-id下面记录的标志取消注册单个服务，也可以使用HCL或JSON格式的服务定义文件取消注册一个或多个服务</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">consul services deregister -<span class="built_in">id</span> kyd-user-88bf0b417b4164bcc640cf8a6553f066</span></span><br></pre></td></tr></table></figure>
<p><strong>查看版本</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">consul version</span></span><br><span class="line">Consul v1.4.0</span><br></pre></td></tr></table></figure>
<p><strong>consul reload</strong></p>
<p>reload命令会触发代理程序的重新加载配置文件</p>
<p><strong>快照</strong></p>
<p>consul snapshot</p>
<p>snapshot命令用于保存，恢复和检查Consul服务器的状态以进行灾难恢复</p>
<p>用法： consul snapshot <subcommand></p>
<p>创建快照并将其另存为名为“backup.snap”的文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">consul snapshot save backup.snap</span></span><br><span class="line">Saved and verified snapshot to index 53956    </span><br></pre></td></tr></table></figure>
<p>从名为“backup.snap”的文件还原快照</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">consul snapshot restore backup.snap</span></span><br><span class="line">Restored snapshot</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>consul</category>
      </categories>
      <tags>
        <tag>consul</tag>
        <tag>注册中心</tag>
      </tags>
  </entry>
  <entry>
    <title>consul集群部署（脚本）</title>
    <url>/2018/12/27/consul%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2%EF%BC%88%E8%84%9A%E6%9C%AC%EF%BC%89/</url>
    <content><![CDATA[<h2 id="consul-server-sh"><a href="#consul-server-sh" class="headerlink" title="consul_server.sh"></a><strong>consul_server.sh</strong></h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">conf_dir=/opt/consul/conf</span><br><span class="line">mkdir -p $&#123;conf_dir&#125;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">集群节点</span></span><br><span class="line">nodes=(</span><br><span class="line">172.17.252.103</span><br><span class="line">172.17.252.104</span><br><span class="line">172.17.252.105</span><br><span class="line">)</span><br><span class="line">consul_ver=1.4.2</span><br><span class="line">retry_interval=15s</span><br><span class="line">contain_svr_name=consul_server</span><br><span class="line">privIP=$(/sbin/ifconfig eth0 | sed -n &#x27;s/.*inet \(addr:\)\?\([0-9.]\&#123;7,15\&#125;\) .*/\2/p&#x27;)</span><br><span class="line">if [[ !(&quot;$&#123;nodes[@]&#125;&quot; =~ $privIP) ]];</span><br><span class="line">then</span><br><span class="line">    echo -e &quot;Current node:$&#123;privIP&#125; not in configured server nodes.\n&quot;</span><br><span class="line">    exit</span><br><span class="line">fi</span><br><span class="line">svr_runing=$(docker ps -a | grep &quot;$&#123;contain_svr_name&#125;&quot; | egrep &quot;Up [About]|[0-9]&#123;1,&#125;&quot;)</span><br><span class="line">if [[ $&#123;svr_runing&#125; != &quot;&quot; ]];</span><br><span class="line">then</span><br><span class="line">    echo -e &quot;Current container of consul server has been running.\n&quot;</span><br><span class="line">    exit</span><br><span class="line">else</span><br><span class="line">    svr_exists=$(docker ps -a | grep &quot;$&#123;contain_svr_name&#125;&quot;)</span><br><span class="line">    if [[ $&#123;svr_exists&#125; != &quot;&quot; ]];</span><br><span class="line">    then</span><br><span class="line">        echo -e &quot;Now try to start the container as it stopped...\n&quot;</span><br><span class="line">        docker start $&#123;svr_exists&#125;</span><br><span class="line">        sleep 2</span><br><span class="line">        docker ps -a grep &quot;$&#123;contain_svr_name&#125;&quot;</span><br><span class="line">        exit</span><br><span class="line">    fi</span><br><span class="line">fi</span><br><span class="line">echo -e &quot;To start a new container for consul...\n&quot;</span><br><span class="line">echo -e &quot;To initialize configuration...\n&quot;</span><br><span class="line">nodels=&quot;&quot;</span><br><span class="line">for host in $&#123;nodes[*]&#125;</span><br><span class="line">do</span><br><span class="line">    if [[ $nodels != &quot;&quot; ]];</span><br><span class="line">    then</span><br><span class="line">        nodels=$nodels,</span><br><span class="line">    fi</span><br><span class="line">    nodels=$nodels&quot;\&quot;$host\&quot;&quot;</span><br><span class="line">done</span><br><span class="line">config=&quot;&#123;\n</span><br><span class="line">\&quot;datacenter\&quot;: \&quot;testkydhuabei2\&quot;,\n     #数据中心</span><br><span class="line">\&quot;retry_join\&quot;: [$&#123;nodels&#125;],\n</span><br><span class="line">\&quot;retry_interval\&quot;: \&quot;$&#123;retry_interval&#125;\&quot;,\n</span><br><span class="line">\&quot;rejoin_after_leave\&quot;: true,\n</span><br><span class="line">\&quot;start_join\&quot;: [$&#123;nodels&#125;],\n</span><br><span class="line">\&quot;bootstrap_expect\&quot;: 3,\n</span><br><span class="line">\&quot;server\&quot;: true,\n</span><br><span class="line">\&quot;ui\&quot;: true,\n</span><br><span class="line">\&quot;dns_config\&quot;: &#123;\&quot;allow_stale\&quot;: true, \&quot;max_stale\&quot;: \&quot;5s\&quot;&#125;,\n</span><br><span class="line">\&quot;node_name\&quot;: \&quot;$HOSTNAME\&quot;\n</span><br><span class="line">&#125;\n&quot;</span><br><span class="line">echo $config</span><br><span class="line">echo -e $&#123;config&#125; &gt; $&#123;conf_dir&#125;/server.json</span><br><span class="line">echo -e $&#123;config&#125;</span><br><span class="line">docker run -d -v $&#123;conf_dir&#125;:$&#123;conf_dir&#125; \</span><br><span class="line">    -v /etc/localtime:/etc/localtime \</span><br><span class="line">    -v /consul/data:/consul/data \</span><br><span class="line">    --name $&#123;contain_svr_name&#125; \</span><br><span class="line">    --net=host consul:$&#123;consul_ver&#125; agent \</span><br><span class="line">    -config-dir=$&#123;conf_dir&#125; \</span><br><span class="line">    -client=0.0.0.0 \</span><br><span class="line">    -bind=0.0.0.0 \</span><br><span class="line">    -advertise=$&#123;privIP&#125;</span><br><span class="line">sleep 2</span><br><span class="line">svr_runing=$(docker ps -a | grep &quot;$&#123;contain_svr_name&#125;&quot; | egrep &quot;Up [About]|[0-9]&#123;1,&#125;&quot;)</span><br><span class="line">if [[ $&#123;svr_runing&#125; == &quot;&quot; ]];</span><br><span class="line">then</span><br><span class="line">    echo -e &quot;\nError: docker-consul failed to start...\n&quot;</span><br><span class="line">    exit</span><br><span class="line">fi</span><br><span class="line">echo -e &quot;\nOK: docker-consul has started as background server.\n&quot;</span><br></pre></td></tr></table></figure>
 <span id="more"></span>
<h2 id="consul-client-sh"><a href="#consul-client-sh" class="headerlink" title="consul_client.sh"></a><strong>consul_client.sh</strong></h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">conf_dir=/opt/consul/conf</span><br><span class="line">mkdir -p $&#123;conf_dir&#125;</span><br><span class="line">svrnodes=(</span><br><span class="line">172.17.252.102</span><br><span class="line">172.17.252.103</span><br><span class="line">172.17.252.105</span><br><span class="line">)</span><br><span class="line">privIP=$(/sbin/ifconfig eth0 | sed -n &#x27;s/.*inet \(addr:\)\?\([0-9.]\&#123;7,15\&#125;\) .*/\2/p&#x27;)</span><br><span class="line">consul_ver=1.4.2</span><br><span class="line">retry_interval=15s</span><br><span class="line">contain_cli_name=consul_client</span><br><span class="line">if [[ &quot;$&#123;svrnodes[@]&#125;&quot; =~ $privIP ]];</span><br><span class="line">then</span><br><span class="line">    echo -e &quot;Current node:$&#123;privIP&#125; is configured for server consul, not to run client mode.\n&quot;</span><br><span class="line">    exit</span><br><span class="line">fi</span><br><span class="line">svr_runing=$(docker ps -a | grep &quot;$&#123;contain_cli_name&#125;&quot; | egrep &quot;Up [About]|[0-9]&#123;1,&#125;&quot;)</span><br><span class="line">if [[ $&#123;svr_runing&#125; != &quot;&quot; ]];</span><br><span class="line">then</span><br><span class="line">    echo -e &quot;Current container of consul client has been running.\n&quot;</span><br><span class="line">    exit</span><br><span class="line">else</span><br><span class="line">    svr_exists=$(docker ps -a | grep &quot;$&#123;contain_cli_name&#125;&quot;)</span><br><span class="line">    if [[ $&#123;svr_exists&#125; != &quot;&quot; ]];</span><br><span class="line">    then</span><br><span class="line">        echo -e &quot;Now try to start the container as it stopped...\n&quot;</span><br><span class="line">        docker start $&#123;svr_exists&#125;</span><br><span class="line">        sleep 2</span><br><span class="line">        docker ps -a grep &quot;$&#123;contain_cli_name&#125;&quot;</span><br><span class="line">        exit</span><br><span class="line">    fi</span><br><span class="line">fi</span><br><span class="line">echo -e &quot;To start a new container for consul...\n&quot;</span><br><span class="line">echo -e &quot;To initialize configuration...\n&quot;</span><br><span class="line">nodels=&quot;&quot;</span><br><span class="line">for host in $&#123;svrnodes[*]&#125;</span><br><span class="line">do</span><br><span class="line">    if [[ $nodels != &quot;&quot; ]];</span><br><span class="line">    then</span><br><span class="line">        nodels=$nodels,</span><br><span class="line">    fi</span><br><span class="line">    nodels=$nodels&quot;\&quot;$host\&quot;&quot;</span><br><span class="line">done</span><br><span class="line">config=&quot;&#123;\n</span><br><span class="line">\&quot;retry_join\&quot;: [$&#123;nodels&#125;],\n</span><br><span class="line">\&quot;retry_interval\&quot;: \&quot;$&#123;retry_interval&#125;\&quot;,\n</span><br><span class="line">\&quot;rejoin_after_leave\&quot;: true,\n</span><br><span class="line">\&quot;start_join\&quot;: [$&#123;nodels&#125;],\n</span><br><span class="line">\&quot;server\&quot;: false,\n</span><br><span class="line">\&quot;ui\&quot;: true,\n</span><br><span class="line">\&quot;node_name\&quot;: \&quot;$HOSTNAME\&quot;\n</span><br><span class="line">&#125;\n&quot;</span><br><span class="line">echo $config</span><br><span class="line">echo -e $&#123;config&#125; &gt; $&#123;conf_dir&#125;/client.json</span><br><span class="line">echo -e $&#123;config&#125;</span><br><span class="line">docker run -d -v $&#123;conf_dir&#125;:$&#123;conf_dir&#125; \</span><br><span class="line">    -v /etc/localtime:/etc/localtime \</span><br><span class="line">    --name $&#123;contain_cli_name&#125; \</span><br><span class="line">    --net=host consul:$&#123;consul_ver&#125; agent \</span><br><span class="line">    -datacenter=kydhuabei2 \</span><br><span class="line">    -config-dir=$&#123;conf_dir&#125; \</span><br><span class="line">    -client=0.0.0.0 \</span><br><span class="line">    -advertise=$&#123;privIP&#125;</span><br><span class="line">sleep 2</span><br><span class="line">svr_runing=$(docker ps -a | grep &quot;$&#123;contain_cli_name&#125;&quot; | grep &quot;Up&quot;)</span><br><span class="line">if [[ $&#123;svr_runing&#125; == &quot;&quot; ]];</span><br><span class="line">then</span><br><span class="line">    echo -e &quot;\nError: docker-consul client node failed to start...\n&quot;</span><br><span class="line">    exit</span><br><span class="line">fi</span><br><span class="line">echo -e &quot;\nOK: docker-consul has started as a client node.\n&quot;</span><br></pre></td></tr></table></figure>
<p>注：此脚本与网络找寻到的，consul最好3台server组成集群 </p>
]]></content>
      <categories>
        <category>consul</category>
      </categories>
      <tags>
        <tag>consul</tag>
        <tag>注册中心</tag>
      </tags>
  </entry>
  <entry>
    <title>consul配置acl</title>
    <url>/2019/01/22/consul%E9%85%8D%E7%BD%AEacl/</url>
    <content><![CDATA[<h3 id="添加acl配置文件"><a href="#添加acl配置文件" class="headerlink" title="添加acl配置文件"></a>添加acl配置文件</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim acl.json</span></span><br><span class="line">&#123;</span><br><span class="line">  &quot;acl&quot;: &#123;</span><br><span class="line">    &quot;enabled&quot;: true,</span><br><span class="line">    &quot;default_policy&quot;: &quot;deny&quot;,</span><br><span class="line">    &quot;down_policy&quot;: &quot;extend-cache&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;    </span><br></pre></td></tr></table></figure>

 <span id="more"></span>

<p>重启consul</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker restart consul_server</span> </span><br></pre></td></tr></table></figure>
<h3 id="生成初始token"><a href="#生成初始token" class="headerlink" title="生成初始token"></a>生成初始token</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">consul acl bootstrap</span></span><br><span class="line">AccessorID: edcaacda-b6d0-1954-5939-b5aceaca7c9a</span><br><span class="line">SecretID: 4411f091-a4c9-48e6-0884-1fcb092da1c8</span><br><span class="line">Description: Bootstrap Token (Global Management)</span><br><span class="line">Local: false</span><br><span class="line">Create Time: 2018-12-06 18:03:23.742699239 +0000 UTC</span><br><span class="line">Policies:</span><br><span class="line">00000000-0000-0000-0000-000000000001 - global-management</span><br></pre></td></tr></table></figure>
<h3 id="创建变量环境"><a href="#创建变量环境" class="headerlink" title="创建变量环境"></a>创建变量环境</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">echo</span> <span class="string">&#x27;export CONSUL_HTTP_TOKEN=4411f091-a4c9-48e6-0884-1fcb092da1c8&#x27;</span> &gt;&gt;/etc/profile</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">source</span> /etc/profile</span></span><br></pre></td></tr></table></figure>
<h3 id="创建agent-token"><a href="#创建agent-token" class="headerlink" title="创建agent token"></a>创建agent token</h3><p><strong>创建agent策略</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim agent-policy.hcl</span></span><br><span class="line">node_prefix &quot;&quot; &#123;</span><br><span class="line">   policy = &quot;write&quot;</span><br><span class="line">&#125;</span><br><span class="line">service_prefix &quot;&quot; &#123;</span><br><span class="line">   policy = &quot;read&quot;</span><br><span class="line">&#125;    </span><br></pre></td></tr></table></figure>
<p>此策略将允许注册和访问所有节点，并读取任何服务</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">consul acl policy create  -name <span class="string">&quot;agent-token&quot;</span> -description <span class="string">&quot;Agent Token Policy&quot;</span> -rules @agent-policy.hcl</span></span><br><span class="line">ID:           5102b76c-6058-9fe7-82a4-315c353eb7f7</span><br><span class="line">Name:         agent-policy</span><br><span class="line">Description:  Agent Token Policy</span><br><span class="line">Datacenters:</span><br><span class="line">Rules:</span><br><span class="line">node_prefix &quot;&quot; &#123;</span><br><span class="line">   policy = &quot;write&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">service_prefix &quot;&quot; &#123;</span><br><span class="line">   policy = &quot;read&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>创建agent令牌</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">consul acl token create -description <span class="string">&quot;Agent Token&quot;</span> -policy-name <span class="string">&quot;agent-token&quot;</span></span></span><br><span class="line">AccessorID:   499ab022-27f2-acb8-4e05-5a01fff3b1d1</span><br><span class="line">SecretID:     da666809-98ca-0e94-a99c-893c4bf5f9eb</span><br><span class="line">Description:  Agent Token</span><br><span class="line">Local:        false</span><br><span class="line">Create Time:  2018-10-19 14:23:40.816899 -0400 EDT</span><br><span class="line">Policies:</span><br><span class="line">   fcd68580-c566-2bd2-891f-336eadc02357 - agent-token</span><br></pre></td></tr></table></figure>
<p><strong>服务端配置acl</strong></p>
<p>把令牌添加到所有server.hcl</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;primary_datacenter&quot;: &quot;testkydhuabei2&quot;,</span><br><span class="line">&quot;acl&quot;: &#123;</span><br><span class="line">  &quot;enabled&quot;: true,</span><br><span class="line">  &quot;default_policy&quot;: &quot;deny&quot;,</span><br><span class="line">  &quot;down_policy&quot;: &quot;extend-cache&quot;,</span><br><span class="line">  &quot;tokens&quot;: &#123;</span><br><span class="line">    &quot;agent&quot;: &quot;da666809-98ca-0e94-a99c-893c4bf5f9eb&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>重启consul</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker restart consul_server</span>        </span><br></pre></td></tr></table></figure>
<p><strong>检测是否成功</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># curl http://127.0.0.1:8500/v1/catalog/nodes -H &#x27;x-consul-token: 4411f091-a4c9-48e6-0884-1fcb092da1c8&#x27;</span><br><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;Address&quot;: &quot;172.20.20.10&quot;,</span><br><span class="line">        &quot;CreateIndex&quot;: 7,</span><br><span class="line">        &quot;Datacenter&quot;: &quot;kc&quot;,</span><br><span class="line">        &quot;ID&quot;: &quot;881cfb69-2bcd-c2a9-d87c-cb79fc454df9&quot;,</span><br><span class="line">        &quot;Meta&quot;: &#123;</span><br><span class="line">            &quot;consul-network-segment&quot;: &quot;&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;ModifyIndex&quot;: 10,</span><br><span class="line">        &quot;Node&quot;: &quot;fox&quot;,</span><br><span class="line">        &quot;TaggedAddresses&quot;: &#123;</span><br><span class="line">            &quot;lan&quot;: &quot;172.20.20.10&quot;,</span><br><span class="line">            &quot;wan&quot;: &quot;172.20.20.10&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;]    </span><br></pre></td></tr></table></figure>
<p><strong>客户端配置acl</strong></p>
<p>把令牌添加到所有client.hcl</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;acl&quot;: &#123;</span><br><span class="line">  &quot;enabled&quot;: true,</span><br><span class="line">  &quot;default_policy&quot;: &quot;deny&quot;,</span><br><span class="line">  &quot;down_policy&quot;: &quot;extend-cache&quot;,</span><br><span class="line">  &quot;tokens&quot;: &#123;</span><br><span class="line">    &quot;agent&quot;: &quot;da666809-98ca-0e94-a99c-893c4bf5f9eb&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>重启consul</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker restart consul_client</span></span><br></pre></td></tr></table></figure>

<h3 id="service-token"><a href="#service-token" class="headerlink" title="service token"></a><strong>service</strong> token</h3><p>服务注册需要配置service token</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim service.hcl</span></span><br><span class="line">key_prefix &quot;&quot; &#123;</span><br><span class="line">  policy = &quot;write&quot;</span><br><span class="line">  &#125;</span><br><span class="line">node_prefix &quot;&quot; &#123;</span><br><span class="line">   policy = &quot;write&quot;</span><br><span class="line">   &#125;</span><br><span class="line">service_prefix &quot;&quot; &#123;</span><br><span class="line">   policy = &quot;read&quot;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">consul acl policy create  -name <span class="string">&quot;service-token&quot;</span> -description <span class="string">&quot;Service Token Policy&quot;</span> -rules @service.hcl</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">consul acl token create -description <span class="string">&quot;Service Token&quot;</span> -policy-name <span class="string">&quot;service-token&quot;</span></span></span><br></pre></td></tr></table></figure>
<p><a href="https://learn.hashicorp.com/consul/advanced/day-1-operations/acl-guide">官方文档</a> </p>
]]></content>
      <categories>
        <category>consul</category>
      </categories>
      <tags>
        <tag>consul</tag>
        <tag>注册中心</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker buildx构建多架构镜像</title>
    <url>/2022/05/12/docker_buildx_install/</url>
    <content><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>Docker Buildx 是一个 CLI 插件，它扩展了 docker 命令，完全支持<a href="https://github.com/moby/buildkit">Moby BuildKit</a> 构建器工具包提供的功能。Docker 19.03版本以上都支持buildx。</p>
<h3 id="启动Buildx"><a href="#启动Buildx" class="headerlink" title="启动Buildx"></a>启动Buildx</h3><h4 id="设置buildx为默认构建器"><a href="#设置buildx为默认构建器" class="headerlink" title="设置buildx为默认构建器"></a>设置buildx为默认构建器</h4><p>可以使用 docker buildx build 命令使用 BuildKit 构建镜像</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker buildx install</span></span><br></pre></td></tr></table></figure>

<h4 id="创建builder实例"><a href="#创建builder实例" class="headerlink" title="创建builder实例"></a>创建builder实例</h4><p>由于Docker默认的builder实例不支持同时指定多个–platform，所以必须先创建一个新的builder实例</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">适用于国内环境</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker buildx create --use --name=builder-cn --driver docker-container --driver-opt image=dockerpracticesig/buildkit:master</span></span><br><span class="line">builder-cn      </span><br><span class="line">使用新创建的builder实例</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker buildx use builder-cn</span>    </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker buildx <span class="built_in">ls</span></span></span><br><span class="line">NAME/NODE     DRIVER/ENDPOINT             STATUS   PLATFORMS</span><br><span class="line">builder-cn *  docker-container                     </span><br><span class="line">  builder-cn0 unix:///var/run/docker.sock inactive </span><br><span class="line">default       docker                               </span><br><span class="line">  default     default                     running  linux/amd64, linux/arm64, linux/riscv64, linux/ppc64le, linux/s390x, linux/386, linux/arm/v7, linux/arm/v6</span><br></pre></td></tr></table></figure>

<p>Docker 在 Linux 系统架构下是不支持 arm 架构镜像，因此我们可以运行模拟器让其支持该特性。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker run --<span class="built_in">rm</span> --privileged tonistiigi/binfmt:latest --install all</span></span><br><span class="line">&#123;</span><br><span class="line">  &quot;supported&quot;: [</span><br><span class="line">    &quot;linux/amd64&quot;,</span><br><span class="line">    &quot;linux/arm64&quot;,</span><br><span class="line">    &quot;linux/riscv64&quot;,</span><br><span class="line">    &quot;linux/ppc64le&quot;,</span><br><span class="line">    &quot;linux/s390x&quot;,</span><br><span class="line">    &quot;linux/386&quot;,</span><br><span class="line">    &quot;linux/mips64le&quot;,</span><br><span class="line">    &quot;linux/mips64&quot;,</span><br><span class="line">    &quot;linux/arm/v7&quot;,</span><br><span class="line">    &quot;linux/arm/v6&quot;</span><br><span class="line">  ],</span><br><span class="line">  &quot;emulators&quot;: [</span><br><span class="line">    &quot;qemu-aarch64&quot;,</span><br><span class="line">    &quot;qemu-arm&quot;,</span><br><span class="line">    &quot;qemu-mips64&quot;,</span><br><span class="line">    &quot;qemu-mips64el&quot;,</span><br><span class="line">    &quot;qemu-ppc64le&quot;,</span><br><span class="line">    &quot;qemu-riscv64&quot;,</span><br><span class="line">    &quot;qemu-s390x&quot;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="启动构建器"><a href="#启动构建器" class="headerlink" title="启动构建器"></a>启动构建器</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker buildx inspect builder-cn --bootstrap</span></span><br><span class="line">[+] Building 27.6s (1/1) FINISHED                                                                                     </span><br><span class="line"> =&gt; [internal] booting buildkit                                                                                 27.6s</span><br><span class="line"> =&gt; =&gt; pulling image dockerpracticesig/buildkit:master                                                          25.5s</span><br><span class="line"> =&gt; =&gt; creating container buildx_buildkit_builder-cn0                                                            2.1s</span><br><span class="line">Name:   builder-cn</span><br><span class="line">Driver: docker-container</span><br><span class="line"></span><br><span class="line">Nodes:</span><br><span class="line">Name:      builder-cn0</span><br><span class="line">Endpoint:  unix:///var/run/docker.sock</span><br><span class="line">Status:    running</span><br><span class="line">Platforms: linux/amd64, linux/arm64, linux/riscv64, linux/ppc64le, linux/s390x, linux/386, linux/mips64le, linux/mips64, linux/arm/v7, linux/arm/v6</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker buildx <span class="built_in">ls</span></span></span><br><span class="line">NAME/NODE     DRIVER/ENDPOINT             STATUS  PLATFORMS</span><br><span class="line">builder-cn *  docker-container                    </span><br><span class="line">  builder-cn0 unix:///var/run/docker.sock running linux/amd64, linux/arm64, linux/riscv64, linux/ppc64le, linux/s390x, linux/386, linux/mips64le, linux/mips64, linux/arm/v7, linux/arm/v6</span><br><span class="line">default       docker                              </span><br><span class="line">  default     default                     running linux/amd64, linux/arm64, linux/riscv64, linux/ppc64le, linux/s390x, linux/386, linux/arm/v7, linux/arm/v6</span><br><span class="line">nux/arm/v6</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="构建镜像"><a href="#构建镜像" class="headerlink" title="构建镜像"></a>构建镜像</h3><h4 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h4><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FROM</span> node:<span class="number">12.22</span>.<span class="number">7</span>-alpine</span><br><span class="line"><span class="keyword">USER</span> root</span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /opt/blog</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> sed -i <span class="string">&#x27;s/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g&#x27;</span> /etc/apk/repositories</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apk --no-cache add git openssh</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> npm install hexo-cli -g &amp;&amp; hexo init . \</span></span><br><span class="line"><span class="language-bash">  &amp;&amp; npm install hexo-renderer-pug hexo-renderer-stylus --save \</span></span><br><span class="line"><span class="language-bash">  &amp;&amp; npm install hexo-generator-searchdb --save \</span></span><br><span class="line"><span class="language-bash">  &amp;&amp; npm install hexo-wordcount --save \</span></span><br><span class="line"><span class="language-bash">  &amp;&amp; npm install hexo-generator-feed --save \</span></span><br><span class="line"><span class="language-bash">  &amp;&amp; npm install hexo-deployer-git --save </span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> git config --global user.email <span class="string">&quot;weiqun_h@163.com&quot;</span></span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> git config --global user.name <span class="string">&quot;weiqun_h@163.com&quot;</span></span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> git <span class="built_in">clone</span> -b master https://gitee.com/immyw/hexo-theme-butterfly.git themes/butterfly</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> sed -i <span class="string">&#x27;s#^theme\:.*#theme:\ butterfly#g&#x27;</span> _config.yml</span></span><br><span class="line"><span class="keyword">VOLUME</span><span class="language-bash"> [<span class="string">&quot;/opt/blog/source&quot;</span>]</span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">4000</span></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> [<span class="string">&quot;hexo&quot;</span>, <span class="string">&quot;server&quot;</span>]</span></span><br></pre></td></tr></table></figure>

<p>这是一个多阶段构建 Dockerfile，使用node-alpine镜像来构建应用，再node镜像中安装hexo应用及插件。现在就可以使用 buildx 构建一个支持 arm、arm64 和 amd64 多架构的 Docker 镜像了，同时将其推送到 Docker Hub。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker buildx build --platform linux/arm64,linux/amd64 -t heweiqun/hexo:202205121314-node-12.22.7 . --push</span> </span><br><span class="line">[+] Building 12.4s (30/30) FINISHED                                                                                                                                                                                                                                                                 </span><br><span class="line"> =&gt; [internal] load build definition from Dockerfile                                                                                                                                                                                                                                           0.0s</span><br><span class="line"> =&gt; =&gt; transferring dockerfile: 931B                                                                                                                                                                                                                                                           0.0s</span><br><span class="line"> =&gt; [internal] load .dockerignore                                                                                                                                                                                                                                                              0.0s</span><br><span class="line"> =&gt; =&gt; transferring context: 2B                                                                                                                                                                                                                                                                0.0s</span><br><span class="line"> =&gt; [linux/arm64 internal] load metadata for docker.io/library/node:12.22.7-alpine                                                                                                                                                                                                             5.0s</span><br><span class="line"> =&gt; [linux/amd64 internal] load metadata for docker.io/library/node:12.22.7-alpine                                                                                                                                                                                                             3.3s</span><br><span class="line"> =&gt; [auth] library/node:pull token for registry-1.docker.io                                                                                                                                                                                                                                    0.0s</span><br><span class="line"> =&gt; [auth] library/node:pull token for registry-1.docker.io                                                                                                                                                                                                                                    0.0s</span><br><span class="line"> =&gt; [linux/arm64  1/10] FROM docker.io/library/node:12.22.7-alpine@sha256:0eca266c5fe38ba93aebac00e45c9ac1bb7328b0702a6dc10e1a6ea543d49301                                                                                                                                                     0.0s</span><br><span class="line"> =&gt; =&gt; resolve docker.io/library/node:12.22.7-alpine@sha256:0eca266c5fe38ba93aebac00e45c9ac1bb7328b0702a6dc10e1a6ea543d49301                                                                                                                                                                   0.0s</span><br><span class="line"> =&gt; [linux/amd64  1/10] FROM docker.io/library/node:12.22.7-alpine@sha256:0eca266c5fe38ba93aebac00e45c9ac1bb7328b0702a6dc10e1a6ea543d49301                                                                                                                                                     0.0s</span><br><span class="line"> =&gt; =&gt; resolve docker.io/library/node:12.22.7-alpine@sha256:0eca266c5fe38ba93aebac00e45c9ac1bb7328b0702a6dc10e1a6ea543d49301                                                                                                                                                                   0.0s</span><br><span class="line"> =&gt; CACHED [linux/arm64  2/10] WORKDIR /opt/blog                                                                                                                                                                                                                                               0.0s</span><br><span class="line"> =&gt; CACHED [linux/arm64  3/10] RUN sed -i &#x27;s/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g&#x27; /etc/apk/repositories                                                                                                                                                                                0.0s</span><br><span class="line"> =&gt; CACHED [linux/arm64  4/10] RUN npm config set registry https://registry.npm.taobao.org                                                                                                                                                                                                     0.0s</span><br><span class="line"> =&gt; CACHED [linux/arm64  5/10] RUN apk --no-cache add git openssh                                                                                                                                                                                                                              0.0s</span><br><span class="line"> =&gt; CACHED [linux/arm64  6/10] RUN npm install hexo-cli -g &amp;&amp; hexo init .   &amp;&amp; npm install hexo-renderer-pug hexo-renderer-stylus --save   &amp;&amp; npm install hexo-generator-searchdb --save   &amp;&amp; npm install hexo-wordcount --save   &amp;&amp; npm install hexo-generator-feed --save   &amp;&amp; npm install   0.0s</span><br><span class="line"> =&gt; CACHED [linux/arm64  7/10] RUN git config --global user.email &quot;weiqun_h@163.com&quot;                                                                                                                                                                                                           0.0s</span><br><span class="line"> =&gt; CACHED [linux/arm64  8/10] RUN git config --global user.name &quot;weiqun_h@163.com&quot;                                                                                                                                                                                                            0.0s</span><br><span class="line"> =&gt; CACHED [linux/arm64  9/10] RUN git clone -b master https://gitee.com/immyw/hexo-theme-butterfly.git themes/butterfly                                                                                                                                                                       0.0s</span><br><span class="line"> =&gt; CACHED [linux/arm64 10/10] RUN sed -i &#x27;s#^theme\:.*#theme:\ butterfly#g&#x27; _config.yml                                                                                                                                                                                                       0.0s</span><br><span class="line"> =&gt; CACHED [linux/amd64  2/10] WORKDIR /opt/blog                                                                                                                                                                                                                                               0.0s</span><br><span class="line"> =&gt; CACHED [linux/amd64  3/10] RUN sed -i &#x27;s/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g&#x27; /etc/apk/repositories                                                                                                                                                                                0.0s</span><br><span class="line"> =&gt; CACHED [linux/amd64  4/10] RUN npm config set registry https://registry.npm.taobao.org                                                                                                                                                                                                     0.0s</span><br><span class="line"> =&gt; CACHED [linux/amd64  5/10] RUN apk --no-cache add git openssh                                                                                                                                                                                                                              0.0s</span><br><span class="line"> =&gt; CACHED [linux/amd64  6/10] RUN npm install hexo-cli -g &amp;&amp; hexo init .   &amp;&amp; npm install hexo-renderer-pug hexo-renderer-stylus --save   &amp;&amp; npm install hexo-generator-searchdb --save   &amp;&amp; npm install hexo-wordcount --save   &amp;&amp; npm install hexo-generator-feed --save   &amp;&amp; npm install   0.0s</span><br><span class="line"> =&gt; CACHED [linux/amd64  7/10] RUN git config --global user.email &quot;weiqun_h@163.com&quot;                                                                                                                                                                                                           0.0s</span><br><span class="line"> =&gt; CACHED [linux/amd64  8/10] RUN git config --global user.name &quot;weiqun_h@163.com&quot;                                                                                                                                                                                                            0.0s</span><br><span class="line"> =&gt; CACHED [linux/amd64  9/10] RUN git clone -b master https://gitee.com/immyw/hexo-theme-butterfly.git themes/butterfly                                                                                                                                                                       0.0s</span><br><span class="line"> =&gt; CACHED [linux/amd64 10/10] RUN sed -i &#x27;s#^theme\:.*#theme:\ butterfly#g&#x27; _config.yml                                                                                                                                                                                                       0.0s</span><br><span class="line"> =&gt; exporting to image                                                                                                                                                                                                                                                                         7.3s</span><br><span class="line"> =&gt; =&gt; exporting layers                                                                                                                                                                                                                                                                        0.0s</span><br><span class="line"> =&gt; =&gt; exporting manifest sha256:7b76ebe12ed29c8a2de58074ef521498d12a8fc3da015e35cf6428584eddc3cb                                                                                                                                                                                              0.0s</span><br><span class="line"> =&gt; =&gt; exporting config sha256:5894ca12ba0310fddace94f35746c55705d8e7399f65f68028cfd327765aafb4                                                                                                                                                                                                0.0s</span><br><span class="line"> =&gt; =&gt; exporting manifest sha256:974f7ea6dfd51efe20d10c37468cbf3654b6f38859f9b0c0318a732e11c8ef50                                                                                                                                                                                              0.0s</span><br><span class="line"> =&gt; =&gt; exporting config sha256:ecfb0d9a8a68f196fbb306aefd8b7d82dc4c19d329c9366307d23f83b27da2ad                                                                                                                                                                                                0.0s</span><br><span class="line"> =&gt; =&gt; exporting manifest list sha256:748356e1191dd4eb9e6aa9cc76646902eceb1c107ba83bb5a019c0a5182f2089                                                                                                                                                                                         0.0s</span><br><span class="line"> =&gt; =&gt; pushing layers                                                                                                                                                                                                                                                                          6.1s</span><br><span class="line"> =&gt; =&gt; pushing manifest for docker.io/heweiqun/hexo:202205121314-node-12.22.7@sha256:748356e1191dd4eb9e6aa9cc76646902eceb1c107ba83bb5a019c0a5182f2089                                                                                                                                          1.1s</span><br><span class="line"> =&gt; [auth] heweiqun/hexo:pull,push token for registry-1.docker.io                                                                                                                                                                                                                              0.0s</span><br><span class="line"> =&gt; [auth] heweiqun/hexo:pull,push token for registry-1.docker.io                                                                                                                                                                                                                              0.0s</span><br><span class="line"> =&gt; [auth] heweiqun/hexo:pull,push token for registry-1.docker.io                                                                                                                                                                                                                              0.0s</span><br></pre></td></tr></table></figure>

<p>–platform   选择构建的平台</p>
<p>–push          会将构建好的镜像推送至仓库</p>
<p>– load          会将构建好的镜像存放至本地</p>
<p>现在就可以通过 docker pull  heweiqun&#x2F;hexo:202205121314-node-12.22.7拉取刚刚创建的镜像了，Docker 将会根据你的 CPU 架构拉取匹配的镜像。</p>
]]></content>
      <categories>
        <category>docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>docker之overlay网络</title>
    <url>/2019/09/09/docker%E4%B9%8Boverlay%E7%BD%91%E7%BB%9C/</url>
    <content><![CDATA[<p>Docker Overlay网络需要一个Key-value数据库存储网络状态的信息，如节点发现、网络、endpoints、IP地址等信息。consul、Etcd、ZooKeeper都是docker支持的key-vlaue</p>
<h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><p>10.0.0.11 docker01</p>
<p>10.0.0.12 docker02</p>
<p>10.0.0.13 docker03<br> <span id="more"></span></p>
<h3 id="docker03安装consul"><a href="#docker03安装consul" class="headerlink" title="docker03安装consul"></a>docker03安装consul</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker run -d -p 8500:8500 -h consul --name consul progrium/consul -server -bootstrap</span></span><br></pre></td></tr></table></figure>
<p>consul 10.0.0.13:8500</p>
<p><img src="/image/1569494476-15694944711.png"></p>
<h3 id="docker01，docker02配置cosnul连接地址"><a href="#docker01，docker02配置cosnul连接地址" class="headerlink" title="docker01，docker02配置cosnul连接地址"></a>docker01，docker02配置cosnul连接地址</h3><p>cluster-store          指定 consul 的地址。</p>
<p>cluster-advertise   告知 consul 自己的连接地址</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /etc/docker/daemon.json</span></span><br><span class="line">&#123;</span><br><span class="line">  &quot;hosts&quot;:[&quot;tcp://0.0.0.0:2376&quot;,&quot;unix:///var/run/docker.sock&quot;],</span><br><span class="line">  &quot;cluster-store&quot;: &quot;consul://10.0.0.13:8500&quot;,</span><br><span class="line">  &quot;cluster-advertise&quot;: &quot;10.0.0.11:2376&quot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl daemon-reload</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl restart docker</span></span><br><span class="line">```    </span><br><span class="line">![](/image/1568026352-15680263381.png)</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">## 创建overlay网络</span></span></span><br><span class="line"></span><br><span class="line">参数：</span><br><span class="line"></span><br><span class="line">-d              指定overlay驱动</span><br><span class="line"></span><br><span class="line">--subnet    指定子网段</span><br><span class="line"></span><br><span class="line">--gateway  指定网关</span><br><span class="line">```shell</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker network create -d overlay --subnet 172.16.2.0/24 --gateway 172.16.2.254 hwq</span></span><br><span class="line">d142419b896152f03d76d80044224d87de2c4ae7d13adaf2547dcaccc004ee00</span><br><span class="line">```    </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">## 启动容器测试</span></span></span><br><span class="line"></span><br><span class="line">busybox拥有ping命令的mini镜像，可以测试ping容器的eth0网卡</span><br><span class="line">```shell</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker run -it --network hwq  busybox</span></span><br><span class="line">```    </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">## zabbix练习</span></span></span><br><span class="line"></span><br><span class="line">docker01执行</span><br><span class="line">```shell</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker run --name mysql-server -t --network hwq \</span></span><br><span class="line"><span class="language-bash">      -e MYSQL_DATABASE=<span class="string">&quot;zabbix&quot;</span> \</span></span><br><span class="line"><span class="language-bash">      -e MYSQL_USER=<span class="string">&quot;zabbix&quot;</span> \</span></span><br><span class="line"><span class="language-bash">      -e MYSQL_PASSWORD=<span class="string">&quot;zabbix_pwd&quot;</span> \</span></span><br><span class="line"><span class="language-bash">      -e MYSQL_ROOT_PASSWORD=<span class="string">&quot;root_pwd&quot;</span> \</span></span><br><span class="line"><span class="language-bash">      -d mysql:5.7 \</span></span><br><span class="line"><span class="language-bash">      --character-set-server=utf8 --collation-server=utf8_bin</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker run --name zabbix-java-gateway -t --network hwq \</span></span><br><span class="line"><span class="language-bash">      -d zabbix/zabbix-java-gateway:latest</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker run --name zabbix-server-mysql -t --network hwq \</span></span><br><span class="line"><span class="language-bash">      -e DB_SERVER_HOST=<span class="string">&quot;mysql-server&quot;</span> \</span></span><br><span class="line"><span class="language-bash">      -e MYSQL_DATABASE=<span class="string">&quot;zabbix&quot;</span> \</span></span><br><span class="line"><span class="language-bash">      -e MYSQL_USER=<span class="string">&quot;zabbix&quot;</span> \</span></span><br><span class="line"><span class="language-bash">      -e MYSQL_PASSWORD=<span class="string">&quot;zabbix_pwd&quot;</span> \</span></span><br><span class="line"><span class="language-bash">      -e MYSQL_ROOT_PASSWORD=<span class="string">&quot;root_pwd&quot;</span> \</span></span><br><span class="line"><span class="language-bash">      -e ZBX_JAVAGATEWAY=<span class="string">&quot;zabbix-java-gateway&quot;</span> \</span></span><br><span class="line"><span class="language-bash">      --<span class="built_in">link</span> mysql-server:mysql \</span></span><br><span class="line"><span class="language-bash">      --<span class="built_in">link</span> zabbix-java-gateway:zabbix-java-gateway \</span></span><br><span class="line"><span class="language-bash">      -p 10051:10051 \</span></span><br><span class="line"><span class="language-bash">      -d zabbix/zabbix-server-mysql:latest</span></span><br><span class="line">```    </span><br><span class="line">docker02执行</span><br><span class="line">```shell</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker run --name zabbix-web-nginx-mysql -t --network hwq  \</span></span><br><span class="line"><span class="language-bash">      -e DB_SERVER_HOST=<span class="string">&quot;mysql-server&quot;</span> \</span></span><br><span class="line"><span class="language-bash">      -e MYSQL_DATABASE=<span class="string">&quot;zabbix&quot;</span> \</span></span><br><span class="line"><span class="language-bash">      -e MYSQL_USER=<span class="string">&quot;zabbix&quot;</span> \</span></span><br><span class="line"><span class="language-bash">      -e MYSQL_PASSWORD=<span class="string">&quot;zabbix_pwd&quot;</span> \</span></span><br><span class="line"><span class="language-bash">      -e MYSQL_ROOT_PASSWORD=<span class="string">&quot;root_pwd&quot;</span> \</span></span><br><span class="line"><span class="language-bash">      --<span class="built_in">link</span> mysql-server:mysql \</span></span><br><span class="line"><span class="language-bash">      --<span class="built_in">link</span> zabbix-server-mysql:zabbix-server \</span></span><br><span class="line"><span class="language-bash">      -p 80:80 \</span></span><br><span class="line"><span class="language-bash">      -d zabbix/zabbix-web-nginx-mysql:latest</span></span><br></pre></td></tr></table></figure>
<p>访问10.0.0.12 默认密码Admin zabbix</p>
<p><img src="/image/1568026380-15680263721.png"> </p>
]]></content>
      <categories>
        <category>docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>docker基础命令</title>
    <url>/2018/11/23/docker%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h2 id="容器生命周期管理"><a href="#容器生命周期管理" class="headerlink" title="容器生命周期管理"></a><strong>容器生命周期管理</strong></h2><ul>
<li>docker run命令</li>
</ul>
<p>用于基于特定的镜像创建一个容器，并启动它</p>
<p>  docker run [OPTIONS] IMAGE [COMMAND] [ARG…]</p>
<p>  -i           表示使用交互模式，始终保持输入流开放；</p>
<p>  -t           表示分配一个伪终端，一般两个参数结合是使用，即可在容器中利用打开的伪终端进行交互操作</p>
<p>  –name  表示可以指定docker run命令启动的容器的名字，若无配置，docker会随机分配一个名字</p>
<p>  -p          表示用于将容器的端口暴露给宿主机的端口，通过暴露端口可以实现外部机器的访问。格式：-p hostport:container-port</p>
<span id="more"></span>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -p 3080:8080</span><br></pre></td></tr></table></figure>
<p>  -v          表示用于挂载一个volume，可以用多个-v参数同时挂载多个volume。格式：[host:dir]:[container:dir]:[rw|ro]</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -v /data:/data:rw</span><br></pre></td></tr></table></figure>
<p>  –link     添加链接到另一个容器</p>
<p>例：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker run centos <span class="built_in">echo</span> <span class="string">&quot;Hello World&quot;</span></span></span><br><span class="line">Hello World</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker run -i -t --name <span class="built_in">test</span> centos:latest /bin/bash</span>    </span><br></pre></td></tr></table></figure>
<ul>
<li>docker start&#x2F;stop&#x2F;restart命令</li>
</ul>
<p>启动、停止、重启一个或多个指定容器</p>
<p>  -i 开启交互模式，始终保持输入流开放</p>
<p>  -a 附加标准输出，输出或错误输出</p>
<h2 id="docker镜像仓库"><a href="#docker镜像仓库" class="headerlink" title="docker镜像仓库"></a><strong>docker镜像仓库</strong></h2><ul>
<li>docker pull命令</li>
</ul>
<p>从仓库里拉取镜像</p>
<p>  docker pull [OPTIONS] NAME[:TAG @DIGEST]</p>
<p>例：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">从官方Hub拉取centos:latest镜像</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker pull centos</span></span><br><span class="line">从官方Hub拉取指明“centos6”tag镜像</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker pull centos:centos6</span></span><br><span class="line">从特定仓库拉取镜像</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker pull IP:8088/centos</span></span><br></pre></td></tr></table></figure>
<ul>
<li>docker push命令</li>
</ul>
<p>上传镜像到仓库</p>
<p>  docker push [OPTIONS] NAME[:TAG]</p>
<h2 id="例：镜像管理"><a href="#例：镜像管理" class="headerlink" title="例：镜像管理"></a>例：<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">把本地tag镜像上传到仓库</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker push IP:8088/centos</span>  </span><br></pre></td></tr></table></figure><br><strong>镜像管理</strong></h2><ul>
<li>docker images</li>
</ul>
<p>用于列出主机的上的镜像，使用-a 参数显示所有镜像</p>
<p>  docker images [OPTIONS] [REPOSITORY[:TAG]]</p>
<p>例：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker images</span></span><br><span class="line">REPOSITORY                     TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">registry                       v1                  bdbceb1cbb71        24 hours ago        726 MB</span><br><span class="line">docker.io/mysql                latest              2dd01afbe8df        6 weeks ago         485 MB</span><br><span class="line">docker.io/centos               centos6             0cbf37812bff        8 weeks ago         194 MB    </span><br></pre></td></tr></table></figure>
<ul>
<li>docker rmi和docker rm命令</li>
</ul>
<p>docker rmi用于删除镜像，docker rm用于删除容器。它们可同时删除多个镜像或容器</p>
<p>  docker rmi [OPTIONS] IMAGE [IMAGE…]</p>
<p>  docker rm [OPTIONS] CONTAINER [COMTAINER…]</p>
<p>  注意：</p>
<p>  使用rmi命令删除镜像时，如果有基于该镜像启动的容器存在，则无法直接删除，需要首先删除容器。当然加-f可以强制删除</p>
<h2 id="容器运维操作"><a href="#容器运维操作" class="headerlink" title="容器运维操作"></a><strong>容器运维操作</strong></h2><ul>
<li>docker inspect命令</li>
</ul>
<p>可以查看镜像和容器的详细信息，默认会列出全部信息。</p>
<p>  docker inspect [OPTIONS] CONTAINER|IMAGE [CONTAINER|IMAGE…]</p>
<p>  –format参数来指定输出的模板格式，以便输出特定信息</p>
<p>例：</p>
<p>查看ip</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker inspect --format=<span class="string">&#x27;&#123; &#123;range .NetworkSettings.Networks&#125;&#125;&#123; &#123;.IPAddress&#125;&#125;&#123; &#123;end&#125;&#125;&#x27;</span> docker_web</span></span><br><span class="line">172.17.0.2    </span><br></pre></td></tr></table></figure>
<p>查看pid</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker inspect --format <span class="string">&quot;&#123; &#123;.State.Pid&#125;&#125;&quot;</span> docker_web</span></span><br><span class="line">20116</span><br></pre></td></tr></table></figure>
<ul>
<li>docker ps命令</li>
</ul>
<p>用于查看容器的相关信息</p>
<p>  docker ps [OPTIONS]</p>
<p>  -a 显示所有容器，包括未运行的</p>
<p>  -n 列出最近创建的n个容器</p>
<p>  -l 列出最新创建的容器，包括不在运行的</p>
<ul>
<li>docker commit命令</li>
</ul>
<p>用于容器创建新的镜像</p>
<p>  docker commit [OPTIONS] CONTAINER [REPOSITORY[:TAG]]</p>
<p>  -a 提交的镜像作者</p>
<p>  -c 使用Dockerfile指令来创建镜像</p>
<p>  -m 提交时的说明文字</p>
<p>  -p 在commit时，将容器暂停</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker commit -a heweiqun -m <span class="string">&#x27;container management&#x27;</span> docker_web docker_web:v1</span></span><br><span class="line">sha256:b9f1169c6ed8fdb3cb4069be10b37b3728207c9b9e67b95edcfdb91864bdae11</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker images</span></span><br><span class="line">REPOSITORY                     TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">docker_web                     v1                  b9f1169c6ed8        1 second ago        8.1 MB</span><br><span class="line">docker.io/uifd/ui-for-docker   latest              965940f98fa5        2 years ago         8.1 MB    </span><br></pre></td></tr></table></figure>
<ul>
<li>docker tag命令</li>
</ul>
<p>标记本地镜像，将其归入某一仓库</p>
<p>  docker tag [OPTIONS] IMAGE[:TAG] [REGISTRYHOST&#x2F;][USERNAME&#x2F;]NAME[:TAG]</p>
<p>例：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker tag docker_web:v1 IP:8088/docker_web:v1</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker images</span></span><br><span class="line">REPOSITORY                       TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">IP:8088/docker_web   v1                  b9f1169c6ed8        13 minutes ago      8.1 MB</span><br><span class="line">docker_web                       v1                  b9f1169c6ed8        13 minutes ago</span><br></pre></td></tr></table></figure>
<ul>
<li>docker save命令</li>
</ul>
<p>将指定镜像保存成tar存档文件（导出）</p>
<p>  docker save [OPTIONS] IMAGE [IMAGE…]</p>
<p>  -o 归档的文件输出到目录</p>
<p>例：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker save docker_web:v1 -o /tmp/docker_web.tar</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ll /tmp/docker_web.tar</span></span><br><span class="line">-rw------- 1 root root 8135680 Dec  6 14:37 /tmp/docker_web.tar</span><br></pre></td></tr></table></figure>
<ul>
<li>docker load命令</li>
</ul>
<p>加载tar镜像包（导入）</p>
<p>  docker load [OPTIONS]</p>
<p>  -i 从tar归档文件读取镜像，而不是标准输入流</p>
<p>例：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker load -i /tmp/docker_web.tar</span> </span><br><span class="line">Loaded image: docker_web:v1</span><br></pre></td></tr></table></figure>
<ul>
<li>docker cp命令</li>
</ul>
<p>在容器与宿主机之间的数据拷贝</p>
<p>docker cp  CONTAINER:SRC_PATH DEST_PATH</p>
<p>例：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker <span class="built_in">cp</span> docker_web:/etc/hosts ./</span>    </span><br></pre></td></tr></table></figure>
<ul>
<li>推荐: 进入容器</li>
</ul>
<p>docker exec -it 容器名称&#x2F;id</p>
<p>例：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker <span class="built_in">exec</span> -it docker_web /bin/bash</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>docker环境部署</title>
    <url>/2019/11/17/docker%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<p>HDSS7-200.host.com,HDSS7-21.host.com,HDSS7-22.host.com上安装：</p>
<h2 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 ~]# curl -fsSL https://get.docker.com|bash -s docker --mirror Aliyun</span><br><span class="line">[root@hdss7-21 ~]# mkdir /etc/docker /data/docker -p</span><br><span class="line">[root@hdss7-21 ~]# vim /etc/docker/daemon.json</span><br><span class="line">&#123;</span><br><span class="line">  &quot;graph&quot;: &quot;/data/docker&quot;,</span><br><span class="line">  &quot;storage-driver&quot;: &quot;overlay&quot;,</span><br><span class="line">  &quot;insecure-registries&quot;: [&quot;registry.access.redhat.com&quot;,&quot;quay.io&quot;,&quot;harbor.od.com&quot;],</span><br><span class="line">  &quot;bip&quot;: &quot;172.7.21.1/24&quot;,     # 根据ip去改变，172.7.21.1，172.7.22.1，172.7.200.1</span><br><span class="line">  &quot;exec-opts&quot;: [&quot;native.cgroupdriver=systemd&quot;],</span><br><span class="line">  &quot;live-restore&quot;: true</span><br><span class="line">&#125;</span><br><span class="line">[root@hdss7-21 ~]# systemctl start docker</span><br><span class="line">[root@hdss7-21 ~]# systemctl enable docker</span><br><span class="line">[root@hdss7-21 ~]# docker version</span><br><span class="line">Client: Docker Engine - Community</span><br><span class="line">Version:           19.03.4</span><br><span class="line">API version:       1.40</span><br><span class="line">Go version:        go1.12.10</span><br><span class="line">Git commit:        9013bf583a</span><br><span class="line">Built:             Fri Oct 18 15:52:22 2019</span><br><span class="line">OS/Arch:           linux/amd64</span><br><span class="line">Experimental:      false</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Server: Docker Engine - Community</span><br><span class="line">Engine:</span><br><span class="line">  Version:          19.03.4</span><br><span class="line">  API version:      1.40 (minimum version 1.12)</span><br><span class="line">  Go version:       go1.12.10</span><br><span class="line">  Git commit:       9013bf583a</span><br><span class="line">  Built:            Fri Oct 18 15:50:54 2019</span><br><span class="line">  OS/Arch:          linux/amd64</span><br><span class="line">  Experimental:     false</span><br><span class="line">containerd:</span><br><span class="line">  Version:          1.2.10</span><br><span class="line">  GitCommit:        b34a5c8af56e510852c35414db4c1f4fa6172339</span><br><span class="line">runc:</span><br><span class="line">  Version:          1.0.0-rc8+dev</span><br><span class="line">  GitCommit:        3e425f80a8c931f88e6d94a8c831b9d5aa481657</span><br><span class="line">docker-init:</span><br><span class="line">  Version:          0.18.0</span><br><span class="line">  GitCommit:        fec3683</span><br></pre></td></tr></table></figure>
 <span id="more"></span>
<h2 id="docker私有仓库"><a href="#docker私有仓库" class="headerlink" title="docker私有仓库"></a>docker私有仓库</h2><p>HDSS7-200.host.com上部署</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-200 certs]# mkdir -p /opt/src/harbor</span><br><span class="line">[root@hdss7-200 certs]# cd /opt/src/</span><br><span class="line">[root@hdss7-200 src]# wget https://github.com/goharbor/harbor/releases/download/v1.8.5/harbor-offline-installer-v1.8.5.tgz</span><br><span class="line">[root@hdss7-200 src]# tar xf harbor-offline-installer-v1.8.5.tgz -C /opt/</span><br><span class="line">[root@hdss7-200 src]# cd /opt/</span><br><span class="line">[root@hdss7-200 opt]# mv harbor/ harbor-v1.8.5</span><br><span class="line">[root@hdss7-200 opt]# ln -s /opt/harbor-v1.8.5/ /opt/harbor</span><br></pre></td></tr></table></figure>
<h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-200 opt]# cd harbor</span><br><span class="line">[root@hdss7-200 harbor]# vim harbor.yml</span><br><span class="line">  5 hostname: harbor.od.com     # 修改主机名，为业务域的域名</span><br><span class="line">  8 http:</span><br><span class="line">10   port: 180                              # 修改端口，避免冲突</span><br><span class="line">35 data_volume: /data/harbor    # 修改data目录</span><br><span class="line">82   location: /data/harbor/logs  # 修改日志目录</span><br><span class="line">[root@hdss7-200 harbor]# mkdir /data/harbor/logs -p</span><br><span class="line">[root@hdss7-200 harbor]# yum install -y docker-compose</span><br><span class="line">[root@hdss7-200 harbor]# ./install.sh   # 安装部署</span><br><span class="line">[root@hdss7-200 harbor]# docker-compose ps  # 查看是否正常</span><br><span class="line">      Name                     Command               State             Ports          </span><br><span class="line">--------------------------------------------------------------------------------------</span><br><span class="line">harbor-core         /harbor/start.sh                 Up                               </span><br><span class="line">harbor-db           /entrypoint.sh postgres          Up      5432/tcp                 </span><br><span class="line">harbor-jobservice   /harbor/start.sh                 Up                               </span><br><span class="line">harbor-log          /bin/sh -c /usr/local/bin/ ...   Up      127.0.0.1:1514-&gt;10514/tcp</span><br><span class="line">harbor-portal       nginx -g daemon off;             Up      80/tcp                   </span><br><span class="line">nginx               nginx -g daemon off;             Up      0.0.0.0:180-&gt;80/tcp      </span><br><span class="line">redis               docker-entrypoint.sh redis ...   Up      6379/tcp                 </span><br><span class="line">registry            /entrypoint.sh /etc/regist ...   Up      5000/tcp                 </span><br><span class="line">registryctl         /harbor/start.sh                 Up   </span><br></pre></td></tr></table></figure>
<h3 id="nginx代理harbor"><a href="#nginx代理harbor" class="headerlink" title="nginx代理harbor"></a>nginx代理harbor</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-200 harbor]# yum install -y nginx</span><br><span class="line">[root@hdss7-200 harbor]# systemctl enable nginx</span><br><span class="line">[root@hdss7-200 harbor]# vim /etc/nginx/conf.d/harbor.od.com.conf</span><br><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  harbor.od.com;</span><br><span class="line">    client_max_body_size 1000m;</span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://127.0.0.1:180;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@hdss7-200 harbor]# systemctl start nginx</span><br></pre></td></tr></table></figure>
<h3 id="HDSS7-11-host-com上添加A记录"><a href="#HDSS7-11-host-com上添加A记录" class="headerlink" title="HDSS7-11.host.com上添加A记录"></a>HDSS7-11.host.com上添加A记录</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@hdss7-11 ~]# vim /var/named/od.com.zone</span><br><span class="line">$ORIGIN od.com.</span><br><span class="line">$TTL 600  ; 10 minutes</span><br><span class="line">@ IN SOA dns.od.com. dnsadmin.od.com. (</span><br><span class="line">       2019111402  ; serial     ; 修改一次serial加1</span><br><span class="line">       10800     ; refresh (3 hours)</span><br><span class="line">       900       ; retry (15 minutes)</span><br><span class="line">       604800    ; expire (1 week)</span><br><span class="line">       86400     ; minimum (1 day)</span><br><span class="line">)</span><br><span class="line">       NS dns.od.com.</span><br><span class="line">$TTL 60  ; 1 minutes</span><br><span class="line">dns       A  10.4.7.11</span><br><span class="line">harbor    A  10.4.7.200   ; 新添加的A记录</span><br><span class="line">[root@hdss7-11 ~]# systemctl restart named</span><br><span class="line">[root@hdss7-11 ~]# dig -t A harbor.od.com +short</span><br><span class="line">10.4.7.200</span><br></pre></td></tr></table></figure>
<h3 id="web操作"><a href="#web操作" class="headerlink" title="web操作"></a>web操作</h3><p><img src="/image/1573978430-Image.png"></p>
<p>创建一个新仓库</p>
<p><img src="/image/1573978505-Image.png"></p>
<h3 id="测试上传镜像"><a href="#测试上传镜像" class="headerlink" title="测试上传镜像"></a>测试上传镜像</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-200 harbor]# docker pull nginx:1.7.9</span><br><span class="line">[root@hdss7-200 harbor]# docker tag nginx:1.7.9 harbor.od.com/public/nginx:v1.7.9</span><br><span class="line">[root@hdss7-200 harbor]# docker login harbor.od.com</span><br><span class="line">Username: admin</span><br><span class="line">Password:</span><br><span class="line">WARNING! Your password will be stored unencrypted in /root/.docker/config.json.</span><br><span class="line">Configure a credential helper to remove this warning. See</span><br><span class="line">https://docs.docker.com/engine/reference/commandline/login/#credentials-store</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Login Succeeded</span><br><span class="line">[root@hdss7-200 harbor]# docker push harbor.od.com/public/nginx:v1.7.9</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
  </entry>
  <entry>
    <title>docker网络类型</title>
    <url>/2019/09/09/docker%E7%BD%91%E7%BB%9C%E7%B1%BB%E5%9E%8B/</url>
    <content><![CDATA[<p>默认容器网络的4中类型</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker network <span class="built_in">ls</span></span></span><br><span class="line">NETWORK ID          NAME                DRIVER              SCOPE</span><br><span class="line">3a869e10a5cc        bridge              bridge              local</span><br><span class="line">4493139d791d        host                host                local</span><br><span class="line">b4f8de1f8bbb        none                null                local</span><br></pre></td></tr></table></figure>
 <span id="more"></span>
<ul>
<li>bridge 桥接式网络（默认）</li>
</ul>
<p>启动容器时，首先会在主机上创建一个docker0的虚拟网桥</p>
<ul>
<li>host（宿主机网络）</li>
</ul>
<p>与宿主机共用一个网络</p>
<p>–network&#x3D;host</p>
<ul>
<li>none（空）</li>
</ul>
<p>不为容器配置任何网络功能</p>
<p>–network&#x3D;none</p>
<ul>
<li>container（k8s中使用）</li>
</ul>
<p>与另一个容器共用一个网络</p>
<p>–network&#x3D;container:容器ID </p>
]]></content>
      <categories>
        <category>docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Gitlab+Drone对接Kubernetes实现自动化</title>
    <url>/2021/02/08/drone%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E5%8C%96/</url>
    <content><![CDATA[<h2 id="gitlab创建OAuth应用"><a href="#gitlab创建OAuth应用" class="headerlink" title="gitlab创建OAuth应用"></a>gitlab创建OAuth应用</h2><p>创建一个GitLab OAuth应用程序。使用者密钥和使用者密钥用于授权访问GitLab资源</p>
<ul>
<li>授权回调URL必须与以下格式和路径匹配，并且必须使用确切的服务器方案和主机</li>
</ul>
<p>填写名称(name),回调地址(Redirect URI),勾选api与read_user权限</p>
<p><img src="/image/drone/gitlab_token_create.png"></p>
<p><img src="/image/drone/gitlab_token_created.png"></p>
<ul>
<li>配置gitlab出站请求</li>
</ul>
<p>gitlab 10.6 版本以后为了安全，不允许向本地网络发送webhook请求，如果想向本地网络发送webhook请求，则需要使用管理员帐号登录配置OutBound Request</p>
<p>使用管理员账号登录 setting &#x3D;&gt; network &#x3D;&gt; Outbound requests<br><img src="/image/drone/gitlab_settings.png"></p>
<p>Expand-勾选Allow requests to the local network from web hooks and services<br><img src="/image/drone/gitlab_network.png"></p>
<ul>
<li>创建共享秘密</li>
</ul>
<p>创建一个共享密钥，以验证runner与drone服务器之间的通信</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">openssl rand -hex 16</span></span><br><span class="line">d065db69f7dcc35bd6a0658a9e8b4201</span><br></pre></td></tr></table></figure>

<h2 id="安装drone-server"><a href="#安装drone-server" class="headerlink" title="安装drone-server"></a>安装drone-server</h2><ul>
<li>pvc.yaml</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolumeClaim</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">drone-data</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">demo</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">accessModes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ReadWriteOnce</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">    <span class="attr">requests:</span></span><br><span class="line">      <span class="attr">storage:</span> <span class="string">5Gi</span></span><br><span class="line">  <span class="attr">storageClassName:</span> <span class="string">nfs</span></span><br></pre></td></tr></table></figure>
<ul>
<li>deploy.yaml</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">drone-server</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">demo</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">drone</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">server</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">drone</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">server</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">namespace:</span> <span class="string">drones</span></span><br><span class="line">      <span class="attr">creationTimestamp:</span> <span class="literal">null</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">drone</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">server</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">drone-data</span></span><br><span class="line">          <span class="attr">persistentVolumeClaim:</span></span><br><span class="line">            <span class="attr">claimName:</span> <span class="string">drone-data</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">drone-server</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">&#x27;drone/drone:1.10.1&#x27;</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">              <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">DRONE_GITLAB_CLIENT_ID</span>       <span class="comment"># Gitlab Application ID</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">e4ea12c994c9084290a2237f8076db98bc5476058d70a699d01057c391e6e2f7</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">DRONE_GITLAB_CLIENT_SECRET</span>   <span class="comment"># Gitlab Secret</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">575dabd93c02c09b95625fc4d11ae28d5e7f63d461c7b457a84d3a939c82339c</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">DRONE_RPC_SECRET</span>             <span class="comment"># 使用openssl rand -hex 16 创建的一个共享密钥，以验证runner与drone-server之间的通信</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">d065db69f7dcc35bd6a0658a9e8b4201</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">DRONE_GITLAB_SERVER</span>          <span class="comment"># Gitlab服务器地址</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">&#x27;http://10.166.33.116:19980&#x27;</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">DRONE_SERVER_HOST</span>            <span class="comment"># drone-server 服务地址</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">&#x27;10.166.33.107:54839&#x27;</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">DRONE_SERVER_PROTO</span>           <span class="comment"># drone-server 协议，设置http或https</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">http</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">DRONE_GITLAB</span>                 <span class="comment"># 使用gitlab</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">&#x27;true&#x27;</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">DRONE_USER_CREATE</span>            <span class="comment"># 给gitlab用户授权为管理员</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">&#x27;username:root,admin:true&#x27;</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">DRONE_AGENTS_ENABLED</span>         <span class="comment"># 是否开启身份验证</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">&#x27;true&#x27;</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">DRONE_LOGS_TRACE</span>             <span class="comment"># 打开日志</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">&#x27;true&#x27;</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">drone-data</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/data</span></span><br><span class="line">          <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">      <span class="attr">restartPolicy:</span> <span class="string">Always</span></span><br><span class="line">      <span class="attr">imagePullSecrets:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">harbor</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># The service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">drone-server-service</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">demo</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">drone</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">server</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">nodePort:</span> <span class="number">54839</span></span><br></pre></td></tr></table></figure>

<h2 id="安装drone-runner"><a href="#安装drone-runner" class="headerlink" title="安装drone-runner"></a>安装drone-runner</h2><p>drone启动并运行后，您将需要安装runner程序以执行构建管道</p>
<ul>
<li>rabc.yaml</li>
</ul>
<p>Kubernetes runner程序使用集群内ServiceAccount与Kubernetes API进行通信。在部署到集群时，请确保Kubernetes runner程序与ServiceAccount关联</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">drone</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">demo</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">demo</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">drone</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">secrets</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">create</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">delete</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">pods</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">pods/log</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">create</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">delete</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">list</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">watch</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">update</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">RoleBinding</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">drone</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">demo</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">drone</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">demo</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">drone</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br></pre></td></tr></table></figure>

<ul>
<li>deploy.yaml</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">drone-runner</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">demo</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">drone</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app.kubernetes.io/name:</span> <span class="string">drone</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app.kubernetes.io/name:</span> <span class="string">drone</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">imagePullSecrets:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">harbor</span></span><br><span class="line">      <span class="attr">serviceAccountName:</span> <span class="string">drone</span></span><br><span class="line">      <span class="attr">serviceAccount:</span> <span class="string">drone</span>               </span><br><span class="line">      <span class="attr">containers:</span>      </span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">runner</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">drone/drone-runner-kube:latest</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">3000</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">DRONE_RPC_HOST</span>               <span class="comment"># drone-server 服务地址</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">&#x27;10.166.33.107:54839&#x27;</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">DRONE_RPC_PROTO</span>              <span class="comment"># drone-server 服务协议</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">http</span>           </span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">DRONE_RPC_SECRET</span>             <span class="comment"># 使用openssl rand -hex 16 创建的一个共享密钥，以验证runner与drone-server之间的通信</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">d065db69f7dcc35bd6a0658a9e8b4201</span></span><br></pre></td></tr></table></figure>

<h2 id="Drone使用"><a href="#Drone使用" class="headerlink" title="Drone使用"></a>Drone使用</h2><ul>
<li>认证</li>
</ul>
<p>首先，在浏览器中导航到您的Drone服务器URL。如果您尚未通过身份验证，Drone会将您重定向到GitHub进行登录。<br>登录后，您将被重定向回您的Drone仪表板。如果这是您第一次使用Drone，则在Drone将您的存储库列表与GitHub同步时，您的仪表板将空几秒钟<br><img src="/image/drone/gitlab_auth.png"></p>
<ul>
<li>启用存储库</li>
</ul>
<p>搜索您的存储库，然后单击“启用”按钮。单击启用按钮，将向您的存储库添加一个Webhook，以便在每次推送代码时通知Drone。请注意，您必须对存储库具有管理员权限才能启用</p>
<p>代码仓库：<a href="https://github.com/wq-h/demo-2048.git">https://github.com/wq-h/demo-2048.git</a></p>
<p><img src="/image/drone/drone_enable.png"></p>
<p><img src="/image/drone/drone_settings.png"></p>
<ul>
<li>配置pipeline</li>
</ul>
<p>您需要通过.drone.yml在git存储库的根目录中创建一个文件来配置管道。在此文件中，我们定义了每次收到Webhook时都要执行的一系列步骤</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">pipeline</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">kubernetes</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">demo-2048</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 跳过验证证书，根据实际情况要或不要，github不需要</span></span><br><span class="line"><span class="attr">clone:</span></span><br><span class="line">  <span class="attr">skip_verify:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 选择pipeline跑在demo命名空间里</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">demo</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># node选择</span></span><br><span class="line"><span class="attr">node_selector:</span></span><br><span class="line">  <span class="attr">kubernetes.io/hostname:</span> <span class="string">slave-14</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 挂载本地目录</span></span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">cache</span></span><br><span class="line">  <span class="attr">host:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/data/cache</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 第一阶段：构建代码</span></span><br><span class="line"><span class="attr">steps:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">build</span> <span class="string">code</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">maven:3.6-jdk-8</span></span><br><span class="line">    <span class="comment"># 在容器里执行的shell命令列表  </span></span><br><span class="line">    <span class="attr">commands:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">mvn</span> <span class="string">clean</span> <span class="string">install</span> <span class="string">-DskipTests=true</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">cd</span> <span class="string">target</span> <span class="string">&amp;&amp;</span> <span class="string">jar</span> <span class="string">-xf</span> <span class="number">2048.</span><span class="string">war</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ls</span> <span class="string">-l</span></span><br><span class="line">    <span class="comment"># 在容器里挂载目录</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">cache</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/root/.m2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 第二阶段: 构建镜像&amp;推送镜像</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">build</span> <span class="string">image</span> <span class="string">&amp;</span> <span class="string">push</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">plugins/docker</span>     <span class="comment"># docker插件</span></span><br><span class="line">    <span class="attr">settings:</span></span><br><span class="line">      <span class="comment"># 镜像仓库组名称</span></span><br><span class="line">      <span class="attr">repo:</span> <span class="number">10.166</span><span class="number">.33</span><span class="number">.110</span><span class="string">/demo/demo-2048</span></span><br><span class="line">      <span class="comment"># 镜像仓库名称</span></span><br><span class="line">      <span class="attr">registry:</span> <span class="number">10.166</span><span class="number">.33</span><span class="number">.110</span></span><br><span class="line">      <span class="comment"># 在web界面中设置的密钥        </span></span><br><span class="line">      <span class="attr">username:</span></span><br><span class="line">        <span class="attr">from_secret:</span> <span class="string">harbor_username</span>    </span><br><span class="line">      <span class="attr">password:</span></span><br><span class="line">        <span class="attr">from_secret:</span> <span class="string">harbor_password</span></span><br><span class="line">      <span class="comment"># 镜像tag定义</span></span><br><span class="line">      <span class="attr">tags:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">$&#123;DRONE_BRANCH&#125;-$&#123;DRONE_COMMIT&#125;-$&#123;DRONE_BUILD_NUMBER&#125;</span></span><br><span class="line">      <span class="comment"># 启用非ssl加密</span></span><br><span class="line">      <span class="attr">insecure:</span> <span class="literal">true</span></span><br><span class="line">      <span class="comment"># 构建镜像的dockerfile文件</span></span><br><span class="line">      <span class="attr">dockerfile:</span> <span class="string">./Dockerfiles/Dockerfile</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 第三阶段: 服务滚动更新</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">k8s-deploy</span></span><br><span class="line">    <span class="comment"># Kubernetes插件</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">danielgormly/drone-plugin-kube:0.2.0</span></span><br><span class="line">    <span class="attr">settings:</span></span><br><span class="line">      <span class="attr">build_tag:</span> <span class="string">$&#123;DRONE_BRANCH&#125;-$&#123;DRONE_COMMIT&#125;-$&#123;DRONE_BUILD_NUMBER&#125;</span></span><br><span class="line">      <span class="comment"># yaml模板</span></span><br><span class="line">      <span class="attr">template:</span> <span class="string">template/demo-2048.yaml</span></span><br><span class="line">      <span class="comment"># apiserver地址    </span></span><br><span class="line">      <span class="attr">server:</span> <span class="string">https://10.166.33.111:6443</span></span><br><span class="line">      <span class="comment"># Kubernetes服务帐户令牌 &#x27;kubectl get secret -nkube-system|grep token&#x27;</span></span><br><span class="line">      <span class="attr">token:</span></span><br><span class="line">        <span class="attr">from_secret:</span> <span class="string">k8s_token</span></span><br><span class="line">      <span class="comment"># K8s CA证书的Base-64编码的字符串</span></span><br><span class="line">      <span class="attr">ca:</span></span><br><span class="line">        <span class="attr">from_secret:</span> <span class="string">k8s_ca</span>    </span><br><span class="line"></span><br><span class="line"><span class="comment"># 第四阶段: 邮件通知</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">email</span></span><br><span class="line">    <span class="comment"># 邮件插件</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">drillster/drone-email:latest</span></span><br><span class="line">    <span class="attr">settings:</span></span><br><span class="line">      <span class="comment"># 只发送给邮件收件人</span></span><br><span class="line">      <span class="attr">recipients_only:</span> <span class="literal">true</span></span><br><span class="line">      <span class="comment"># 邮件收件列表</span></span><br><span class="line">      <span class="attr">recipients:</span> [<span class="string">weiqun_h@163.com</span>]</span><br><span class="line">      <span class="comment"># 设置主题</span></span><br><span class="line">      <span class="attr">subject:</span> <span class="string">&quot;Drone build: [<span class="template-variable">&#123;&#123; build.status &#125;&#125;</span>] <span class="template-variable">&#123;&#123; repo.name &#125;&#125;</span> (<span class="template-variable">&#123;&#123; repo.branch &#125;&#125;</span>) #<span class="template-variable">&#123;&#123; build.number &#125;&#125;</span>&quot;</span></span><br><span class="line">      <span class="comment"># 邮件服务器主机</span></span><br><span class="line">      <span class="attr">host:</span> <span class="string">smtp.exmail.qq.com</span></span><br><span class="line">      <span class="comment"># 邮件服务器端口</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">465</span></span><br><span class="line">      <span class="comment"># 从该地址发送通知</span></span><br><span class="line">      <span class="attr">from:</span> <span class="string">weiqun.he@tenxcloud.com</span></span><br><span class="line">      <span class="comment"># 用户名</span></span><br><span class="line">      <span class="attr">username:</span></span><br><span class="line">        <span class="attr">from_secret:</span> <span class="string">email_user</span></span><br><span class="line">      <span class="comment"># 密码</span></span><br><span class="line">      <span class="attr">password:</span></span><br><span class="line">        <span class="attr">from_secret:</span> <span class="string">email_password</span></span><br><span class="line">    <span class="comment"># 当流水线执行成功时失败是发送    </span></span><br><span class="line">    <span class="attr">when:</span></span><br><span class="line">      <span class="attr">status:</span> [ <span class="string">success</span>, <span class="string">failure</span> ]</span><br><span class="line">      </span><br><span class="line"><span class="comment"># 通过分支限制pipeline执行</span></span><br><span class="line"><span class="attr">trigger:</span></span><br><span class="line">  <span class="attr">branch:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">drone</span></span><br></pre></td></tr></table></figure>

<ul>
<li>根据应用类型创建资源模板</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">demo-2048</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">demo</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">demo-2048</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">demo-2048</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">demo-2048</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">demo-2048</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">demo-2048</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">demo-2048</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">demo-2048</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">&gt;-</span></span><br><span class="line"><span class="string">            10.166.33.110/demo/demo-2048:&#123;&#123;build_tag&#125;&#125;</span></span><br><span class="line"><span class="string"></span>          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8080</span></span><br><span class="line">              <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">          <span class="attr">resources:</span></span><br><span class="line">            <span class="attr">limits:</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="string">128m</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">256Mi</span></span><br><span class="line">            <span class="attr">requests:</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="string">128m</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">128Mi</span></span><br><span class="line">          <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">      <span class="attr">restartPolicy:</span> <span class="string">Always</span></span><br><span class="line">      <span class="attr">imagePullSecrets:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">harbor</span></span><br></pre></td></tr></table></figure>

<p>secret 配置</p>
<p><img src="/image/drone/drone_secret.png"></p>
<p>pipeline执行结果</p>
<p><img src="/image/drone/drone_success.png"></p>
<p>邮件通知<br><img src="/image/drone/drone_email.png"></p>
]]></content>
      <categories>
        <category>Kubernetes</category>
        <category>drone</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
        <tag>drone</tag>
      </tags>
  </entry>
  <entry>
    <title>flannel工作原理</title>
    <url>/2019/11/29/flannel%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/</url>
    <content><![CDATA[<h2 id="flannel模型"><a href="#flannel模型" class="headerlink" title="flannel模型"></a>flannel模型</h2><ul>
<li><p>udp：使用用户态udp封装，默认使用8285端口。由于是在用户态封装和解包，性能上有较大的损失</p>
</li>
<li><p>vxlan：vxlan封装，需要配置VNI，Port（默认8472）和<a href="https://links.jianshu.com/go?to=https://github.com/torvalds/linux/commit/3511494ce2f3d3b77544c79b87511a4ddb61dc89">GBP</a></p>
</li>
<li><p>host-gw：直接路由的方式，将容器网络的路由信息直接更新到主机的路由表中，仅适用于二层直接可达的网络     推荐使用，效率极高</p>
</li>
<li><p>aws-vpc：使用 Amazon VPC route table 创建路由，适用于AWS上运行的容器</p>
</li>
<li><p>gce：使用Google Compute Engine Network创建路由，所有instance需要开启IP forwarding，适用于GCE上运行的容器</p>
</li>
<li><p>ali-vpc：使用阿里云VPC route table 创建路由，适用于阿里云上运行的容器</p>
</li>
</ul>
 <span id="more"></span>

<h3 id="host-gw模型"><a href="#host-gw模型" class="headerlink" title="host-gw模型"></a>host-gw模型</h3><p><img src="/image/1575015353.png"></p>
<p>在主机的路由表中创建到其他主机 subnet 的路由条目，从而实现容器跨主机通信</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 flannel]# route -n</span><br><span class="line">Kernel IP routing table</span><br><span class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</span><br><span class="line">0.0.0.0         10.4.7.1        0.0.0.0         UG    100    0        0 eth0</span><br><span class="line">10.4.7.0        0.0.0.0         255.255.255.0   U     100    0        0 eth0</span><br><span class="line">172.7.21.0      0.0.0.0         255.255.255.0   U     0      0        0 docker0</span><br><span class="line">172.7.22.0      10.4.7.22       255.255.255.0   UG    0      0        0 eth0</span><br></pre></td></tr></table></figure>
<h3 id="Vxlan模型"><a href="#Vxlan模型" class="headerlink" title="Vxlan模型"></a>Vxlan模型</h3><p><img src="/image/1575015376.png"></p>
<p>VXLAN是Linux内核本身支持的一种网络虚拟化技术，是内核的一个模块，在内核态实现封装解封装，构建出覆盖网络，其实就是一个由各宿主机上的Flannel.1设备组成的虚拟二层网络，由于VXLAN由于额外的封包解包，导致其性能较差。</p>
<h4 id="使用Vxlan模型"><a href="#使用Vxlan模型" class="headerlink" title="使用Vxlan模型"></a>使用Vxlan模型</h4><p>关闭flanne</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 flannel]# supervisorctl stop flanneld-7-21</span><br><span class="line">flanneld-7-21: stopped</span><br><span class="line">[root@hdss7-21 flannel]# ps -ef|grep flannel</span><br><span class="line">root      93584      1  0 11:04 ?        00:00:34 ./flanneld --public-ip=10.4.7.21 --etcd-endpoints=https://10.4.7.12:2379,https://10.4.7.21:2379,https://10.4.7.22:2379 --etcd-keyfile=./cert/client-key.pem --etcd-certfile=./cert/client.pem --etcd-cafile=./cert/ca.pem --iface=eth0 --subnet-file=./subnet.env --healthz-port=2401</span><br><span class="line">root     159370 117643  0 14:14 pts/1    00:00:00 grep --color=auto flannel</span><br><span class="line">[root@hdss7-21 flannel]# kill -9 93584</span><br></pre></td></tr></table></figure>


<p>删除路由</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 flannel]# route -n</span><br><span class="line">Kernel IP routing table</span><br><span class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</span><br><span class="line">0.0.0.0         10.4.7.1        0.0.0.0         UG    100    0        0 eth0</span><br><span class="line">10.4.7.0        0.0.0.0         255.255.255.0   U     100    0        0 eth0</span><br><span class="line">172.7.21.0      0.0.0.0         255.255.255.0   U     0      0        0 docker0</span><br><span class="line">172.7.22.0      10.4.7.22       255.255.255.0   UG    0      0        0 eth0</span><br><span class="line">[root@hdss7-22 flannel]# route del -net 172.7.22.0/24 gw 10.4.7.22</span><br></pre></td></tr></table></figure>


<p>删除etcd的网络配置</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 etcd]# ./etcdctl rm /coreos.com/network/config</span><br><span class="line">PrevNode.Value: &#123;&quot;Network&quot;: &quot;172.7.0.0/16&quot;, &quot;Backend&quot;: &#123;&quot;Type&quot;: &quot;host-gw&quot;&#125;&#125;</span><br><span class="line">[root@hdss7-21 etcd]# ./etcdctl get /coreos.com/network/config</span><br><span class="line">Error:  100: Key not found (/coreos.com/network/config) [15]</span><br></pre></td></tr></table></figure>


<p>重新添加网络配置</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 etcd]# ./etcdctl set /coreos.com/network/config &#x27;&#123;&quot;Network&quot;: &quot;172.7.0.0/16&quot;, &quot;Backend&quot;: &#123;&quot;Type&quot;: &quot;VxLAN&quot;&#125;&#125;&#x27;</span><br><span class="line">&#123;&quot;Network&quot;: &quot;172.7.0.0/16&quot;, &quot;Backend&quot;: &#123;&quot;Type&quot;: &quot;VxLAN&quot;&#125;&#125;</span><br><span class="line">[root@hdss7-21 etcd]# ./etcdctl get /coreos.com/network/config</span><br><span class="line">&#123;&quot;Network&quot;: &quot;172.7.0.0/16&quot;, &quot;Backend&quot;: &#123;&quot;Type&quot;: &quot;VxLAN&quot;&#125;&#125;</span><br></pre></td></tr></table></figure>


<p>启动flannel</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 etcd]# supervisorctl start flanneld-7-21</span><br></pre></td></tr></table></figure>


<p>测试</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 etcd]# ping 172.7.22.2</span><br><span class="line">PING 172.7.22.2 (172.7.22.2) 56(84) bytes of data.</span><br><span class="line">64 bytes from 172.7.22.2: icmp_seq=1 ttl=63 time=16.6 ms</span><br><span class="line">64 bytes from 172.7.22.2: icmp_seq=2 ttl=63 time=1.06 ms</span><br><span class="line"></span><br><span class="line">[root@hdss7-21 etcd]# ifconfig</span><br><span class="line">flannel.1: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1450</span><br><span class="line">        inet 172.7.21.0  netmask 255.255.255.255  broadcast 0.0.0.0</span><br><span class="line">        inet6 fe80::a0ce:40ff:fedd:e054  prefixlen 64  scopeid 0x20&lt;link&gt;</span><br><span class="line">        ether a2:ce:40:dd:e0:54  txqueuelen 0  (Ethernet)</span><br><span class="line">        RX packets 4  bytes 336 (336.0 B)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 4  bytes 336 (336.0 B)</span><br><span class="line">        TX errors 0  dropped 8 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">[root@hdss7-22 flannel]# route -n</span><br><span class="line">Kernel IP routing table</span><br><span class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</span><br><span class="line">0.0.0.0         10.4.7.1        0.0.0.0         UG    100    0        0 eth0</span><br><span class="line">10.4.7.0        0.0.0.0         255.255.255.0   U     100    0        0 eth0</span><br><span class="line">172.7.21.0      172.7.21.0      255.255.255.0   UG    0      0        0 flannel.1</span><br><span class="line">172.7.22.0      0.0.0.0         255.255.255.0   U     0      0        0 docker0</span><br></pre></td></tr></table></figure>


<h4 id="VXLAN的Directrouting模式"><a href="#VXLAN的Directrouting模式" class="headerlink" title="VXLAN的Directrouting模式"></a>VXLAN的Directrouting模式</h4><p>VXLAN还有另外一种功能，VXLAN也支持类似host-gw的玩法，如果两个节点在同一网段时使用host-gw通信，如果不在同一网段中，即 当前pod所在节点与目标pod所在节点中间有路由器，就使用VXLAN这种方式，使用叠加网络。</p>
<p>结合了Host-gw和VXLAN，这就是VXLAN的Directrouting模式</p>
<p>‘{“Network”: “172.7.0.0&#x2F;16”, “Backend”: {“Type”: “VxLAN”,”Directrouting”: true}}’</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 etcd]# supervisorctl stop flanneld-7-21</span><br><span class="line">[root@hdss7-21 etcd]# ps -ef|grep flannel</span><br><span class="line">[root@hdss7-21 etcd]# kill -9 162693</span><br><span class="line">[root@hdss7-21 etcd]# ./etcdctl rm /coreos.com/network/config</span><br><span class="line">[root@hdss7-21 etcd]# ./etcdctl get /coreos.com/network/config</span><br><span class="line">[root@hdss7-21 etcd]# ./etcdctl set /coreos.com/network/config &#x27;&#123;&quot;Network&quot;: &quot;172.7.0.0/16&quot;, &quot;Backend&quot;: &#123;&quot;Type&quot;: &quot;VxLAN&quot;,&quot;Directrouting&quot;: true&#125;&#125;&#x27;</span><br><span class="line">[root@hdss7-21 etcd]# ./etcdctl get /coreos.com/network/config</span><br><span class="line">[root@hdss7-21 etcd]# ./etcdctl ls /coreos.com/network/subnets</span><br><span class="line">/coreos.com/network/subnets/172.7.21.0-24</span><br><span class="line">/coreos.com/network/subnets/172.7.22.0-24</span><br><span class="line">[root@hdss7-21 etcd]# ./etcdctl ls /coreos.com/network/subnets/172.7.22.0-24</span><br><span class="line">/coreos.com/network/subnets/172.7.22.0-24</span><br><span class="line">[root@hdss7-21 etcd]# ./etcdctl get  /coreos.com/network/subnets/172.7.22.0-24</span><br><span class="line">&#123;&quot;PublicIP&quot;:&quot;10.4.7.22&quot;,&quot;BackendType&quot;:&quot;vxlan&quot;,&quot;BackendData&quot;:&#123;&quot;VtepMAC&quot;:&quot;26:75:ab:9b:d4:f5&quot;&#125;&#125;</span><br><span class="line">[root@hdss7-21 etcd]# ./etcdctl get  /coreos.com/network/subnets/172.7.21.0-24</span><br><span class="line">&#123;&quot;PublicIP&quot;:&quot;10.4.7.21&quot;,&quot;BackendType&quot;:&quot;vxlan&quot;,&quot;BackendData&quot;:&#123;&quot;VtepMAC&quot;:&quot;a2:ce:40:dd:e0:54&quot;&#125;&#125;</span><br><span class="line">[root@hdss7-21 etcd]# supervisorctl start flanneld-7-21</span><br><span class="line">[root@hdss7-21 etcd]# route -n</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
  </entry>
  <entry>
    <title>frp内网穿透</title>
    <url>/2018/11/29/frp%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/</url>
    <content><![CDATA[<h2 id="frp-简介"><a href="#frp-简介" class="headerlink" title="frp 简介"></a>frp 简介</h2><p>frp 是一个高性能的反向代理应用，可以帮助您轻松地进行内网穿透，对外网提供服务，支持 tcp, http, https 等协议类型，并且 web 服务支持根据域名进行路由转发。 frp 的作用 利用处于内网或防火墙后的机器，对外网环境提供 http 或 https 服务。 对于 http 服务支持基于域名的虚拟主机，支持自定义域名绑定，使多个域名可以共用一个80端口。 利用处于内网或防火墙后的机器，对外网环境提供 tcp 服务，例如在家里通过 ssh 访问处于公司内网环境内的主机。 可查看通过代理的所有 http 请求和响应的详细信息。（待开发） frp 的部署 根据对应的操作系统及架构，从 Release 页面下载最新版本的程序。 将 frps 及 frps.ini 放到有公网 IP 的机器上。 将 frpc 及 frpc.ini 放到处于内网环境的机器上。</p>
 <span id="more"></span>

<h2 id="安装frp"><a href="#安装frp" class="headerlink" title="安装frp"></a>安装frp</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget https://github.com/fatedier/frp/releases/download/v0.21.0/frp_0.21.0_linux_amd64.tar.gz    <span class="comment">#服务端客户端都安装</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"> tar xf frp_0.21.0_linux_amd64.tar.gz</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim frps.ini</span></span><br><span class="line">[common]</span><br><span class="line">bind_port = 7000</span><br><span class="line">vhost_http_port  = 80</span><br><span class="line">[common]         #必须设置</span><br><span class="line">bind_port        #这是两端通信端口</span><br><span class="line">vhost_http_port  #虚拟主机穿透监听端口(指http访问的端口）</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim frpc.ini</span></span><br><span class="line">[common]</span><br><span class="line">server_addr = IP</span><br><span class="line">server_port = 7000</span><br><span class="line">[ssh]</span><br><span class="line">type = tcp</span><br><span class="line">local_ip = 127.0.0.1</span><br><span class="line">local_port = 22</span><br><span class="line">remote_port = 5022</span><br><span class="line">[web1]</span><br><span class="line">type = tcp</span><br><span class="line">local_ip = 127.0.0.1</span><br><span class="line">local_port = 8080</span><br><span class="line">remote_port = 80</span><br><span class="line">[web2]</span><br><span class="line">type = http</span><br><span class="line">local_port = 9090</span><br><span class="line">custom_domains = www.wqblogs.com:4443</span><br></pre></td></tr></table></figure>

<p>server_addr           服务端IP<br>server_port           通信端口<br>type &#x3D; tcp            把tcp类型的服务穿透出去<br>local_ip              本地的IP<br>local_port            本地端口号<br>remote_port           在外网服务器上开通80端口，代理本地的8080端口<br>type &#x3D; http           代理本地的http服务<br>custom_domains        为该端口启用 <a href="http://www.wqblogs.com:4443/">www.wqblogs.com:4443</a> 的域名。前提是该域名必须指向上面的frp服务端 配合vhost_http_port使用</p>
<h2 id="服务端客户端启动服务"><a href="#服务端客户端启动服务" class="headerlink" title="服务端客户端启动服务"></a>服务端客户端启动服务</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">nohup</span> /application/frp/frps -c /application/frp/frps.ini &amp;</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">nohup</span> /application/frp/frpc -c /application/frp/frpc.ini &amp;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>ecs</category>
      </categories>
      <tags>
        <tag>frp</tag>
      </tags>
  </entry>
  <entry>
    <title>gitlab备份与恢复</title>
    <url>/2019/01/06/gitlab%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D/</url>
    <content><![CDATA[<p><strong>配置gitlab的备份目录路径设置</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /etc/gitlab/gitlab.rb</span></span><br><span class="line">gitlab_rails[&#x27;manage_backup_path&#x27;] = true</span><br><span class="line">gitlab_rails[&#x27;backup_path&#x27;] = &quot;/var/opt/gitlab/backups&quot;        #gitlab备份目录</span><br><span class="line">gitlab_rails[&#x27;backup_archive_permissions&#x27;] = 0644            #生成的备份文件权限</span><br><span class="line">gitlab_rails[&#x27;backup_keep_time&#x27;] = 604800                        #备份保留天数为7天</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<p>配置生效</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">gitlab-ctl reconfigure</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">gitlab-ctl restart</span></span><br></pre></td></tr></table></figure>

<p><strong>手动备份gitlab</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">gitlab-rake gitlab:backup:create</span></span><br><span class="line">定时备份</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">crontab -e</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">每周日零点备份gitlab</span></span><br><span class="line">00 00 * * 7 /usr/bin/gitlab-rake gitlab:backup:create &gt;/dev/null 2&gt;&amp;1</span><br></pre></td></tr></table></figure>

<p><strong>gitlab恢复操作</strong></p>
<p>gitlab只能还原与备份文件相同的gitlab版本</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum install -y gitlab-ce</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">gitlab-rake gitlab:backup:restore BACKUP=1546407036_2019_01_02_11.2.1</span></span><br><span class="line">Unpacking backup ... done</span><br><span class="line">GitLab version mismatch:</span><br><span class="line">  Your current GitLab version (11.5.0) differs from the GitLab version in the backup!</span><br><span class="line">  Please switch to the following version and try again:</span><br><span class="line">  version: 11.2.1</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum remove gitlab-ce</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum install -y gitlab-ce-11.2.1</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">gitlab-ctl reconfigure</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">gitlab-ctl start</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">gitlab-rake gitlab:backup:restore BACKUP=1546407036_2019_01_02_11.2.1</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>gitlab</category>
      </categories>
      <tags>
        <tag>gitalb</tag>
        <tag>gitlab</tag>
      </tags>
  </entry>
  <entry>
    <title>gitlab触发构建jenkins</title>
    <url>/2019/01/18/gitlab%E8%A7%A6%E5%8F%91%E6%9E%84%E5%BB%BAjenkins/</url>
    <content><![CDATA[<h2 id="jenkins配置"><a href="#jenkins配置" class="headerlink" title="jenkins配置"></a><strong>jenkins配置</strong></h2><h3 id="安装gitlab-hook插件"><a href="#安装gitlab-hook插件" class="headerlink" title="安装gitlab hook插件"></a><strong>安装gitlab hook插件</strong></h3><p>系统管理-&gt;管理插件-&gt;可选插件-&gt;选择安装 Gitlab Hook Plugin和Build Authorization Token Root Plugin插件</p>
<p><img src="/image/15478027801.png"></p>
<span id="more"></span>

<h3 id="配置job"><a href="#配置job" class="headerlink" title="配置job"></a><strong>配置job</strong></h3><p>源码管理</p>
<p><img src="/image/15478028251.png"></p>
<p>构建触发器-根据branch分支触发打包条件</p>
<p><img src="/image/15478028491.png"></p>
<p><img src="/image/15478028741.png"></p>
<h2 id="gitlb配置"><a href="#gitlb配置" class="headerlink" title="gitlb配置"></a>gitlb配置</h2><p>在git项目配置界面设置链接和token</p>
<p><img src="/image/15478029031.png"></p>
<p><img src="/image/15478029301.png"></p>
<p>测试是否正确，返回200的话就表示成功</p>
<p><img src="/image/15478029551.png"></p>
<p><img src="/image/15478029831.png"></p>
]]></content>
      <categories>
        <category>gitlab</category>
      </categories>
      <tags>
        <tag>jenkins</tag>
        <tag>gitlab</tag>
      </tags>
  </entry>
  <entry>
    <title>gitlab部署与邮件配置</title>
    <url>/2018/11/22/gitlab%E9%83%A8%E7%BD%B2%E4%B8%8E%E9%82%AE%E4%BB%B6%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="安装gitlab"><a href="#安装gitlab" class="headerlink" title="安装gitlab"></a>安装gitlab</h2><h3 id="编写gitlab镜像源"><a href="#编写gitlab镜像源" class="headerlink" title="编写gitlab镜像源"></a>编写gitlab镜像源</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /etc/yum.repos.d/gitlab-ce.repo    <span class="comment"># centos7环境</span></span></span><br><span class="line">[gitlab-ce]</span><br><span class="line">name=Gitlab CE Repository</span><br><span class="line">baseurl=https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el$releasever/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum install –y makecache</span></span><br></pre></td></tr></table></figure>

<span id="more"></span>
<h3 id="安装gitlab社区版"><a href="#安装gitlab社区版" class="headerlink" title="安装gitlab社区版"></a>安装gitlab社区版</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum intall gitlab-ce        <span class="comment">#自动安装最新版</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum install gitlab-ce-x.x.x    <span class="comment">#安装指定版本</span></span></span><br></pre></td></tr></table></figure>


<h3 id="GitLab常用命令"><a href="#GitLab常用命令" class="headerlink" title="GitLab常用命令"></a>GitLab常用命令</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">gitlab-ctl start             # 启动所有 gitlab 组件；</span><br><span class="line">gitlab-ctl stop              # 停止所有 gitlab 组件；</span><br><span class="line">gitlab-ctl restart           # 重启所有 gitlab 组件；</span><br><span class="line">gitlab-ctl status            # 查看服务状态；</span><br><span class="line">gitlab-ctl reconfigure       # 启动服务；</span><br><span class="line">vim /etc/gitlab/gitlab.rb    # 修改默认的配置文件；</span><br><span class="line">gitlab-rake gitlab:check SANITIZE=true --trace    # 检查gitlab；</span><br><span class="line">gitlab-ctl tail                      # 查看日志；</span><br><span class="line">gitlab-psql gitlabhq_production      #gitlab登录数据库</span><br><span class="line">gitlab-rails console                 #控制台</span><br></pre></td></tr></table></figure>


<h3 id="编辑配置文件"><a href="#编辑配置文件" class="headerlink" title="编辑配置文件"></a>编辑配置文件</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">useradd -s /sbin/nologin -M gitlab</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /etc/gitlab/gitlab.rb</span></span><br><span class="line">external_url &#x27;http://IP:81&#x27;</span><br><span class="line">解决端口冲突</span><br><span class="line">unicorn[&#x27;port&#x27;] = 8080 =&gt; 8081             # 后端</span><br><span class="line">nginx[&#x27;listen_port&#x27;] = 80 =&gt; 81            # nginx</span><br><span class="line">gitlab_rails[&#x27;redis_port&#x27;] = 6379 =&gt; 6380  # redis</span><br><span class="line">普通用户运行</span><br><span class="line">user[&#x27;username&#x27;] = &quot;gitlab&quot;</span><br><span class="line">user[&#x27;group&#x27;] = &quot;gitlab&quot;</span><br><span class="line">编辑邮箱（腾讯企业邮箱）</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">## Email Settings</span></span></span><br><span class="line">gitlab_rails[&#x27;gitlab_email_from&#x27;] = &#x27;邮箱&#x27;</span><br><span class="line">gitlab_rails[&#x27;smtp_enable&#x27;] = true</span><br><span class="line">gitlab_rails[&#x27;smtp_address&#x27;] = &quot;smtp.exmail.qq.com&quot;</span><br><span class="line">gitlab_rails[&#x27;smtp_port&#x27;] = 465</span><br><span class="line">gitlab_rails[&#x27;smtp_user_name&#x27;] = &quot;邮箱&quot;</span><br><span class="line">gitlab_rails[&#x27;smtp_password&#x27;] = &quot;密码或授权码&quot;</span><br><span class="line">gitlab_rails[&#x27;smtp_domain&#x27;] = &quot;后缀&quot;</span><br><span class="line">gitlab_rails[&#x27;smtp_authentication&#x27;] = &quot;login&quot;</span><br><span class="line">gitlab_rails[&#x27;smtp_enable_starttls_auto&#x27;] = true</span><br><span class="line">gitlab_rails[&#x27;smtp_tls&#x27;] = true</span><br><span class="line">user[&#x27;git_user_email&#x27;] = &quot;邮箱&quot;</span><br></pre></td></tr></table></figure>


<h3 id="启动gitlab"><a href="#启动gitlab" class="headerlink" title="启动gitlab"></a>启动gitlab</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">gitlab-ctl reconfigure</span></span><br></pre></td></tr></table></figure>


<h3 id="错误"><a href="#错误" class="headerlink" title="错误"></a>错误</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Error executing action `run` on resource &#x27;execute[load sysctl conf net.core.somaxconn]&#x27;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">chown</span> -R gitlab.gitlab -R /opt/gitlab</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">chmod</span> -R gitlab.gitlab -R /var/log/gitlab</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">gitlab-ctl reconfigure</span></span><br><span class="line">一般gitlab问题：端口冲突与权限问题</span><br></pre></td></tr></table></figure>


<p>测试邮件是否正常</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">gitlab-rails consol</span></span><br><span class="line">irb(main):001:0&gt; Notify.test_email(‘XXXX@XXX&#x27;,&#x27;Message Subject&#x27;,&#x27;message Body&#x27;).deliver_now</span><br></pre></td></tr></table></figure>


<h3 id="gitlab界面配置"><a href="#gitlab界面配置" class="headerlink" title="gitlab界面配置"></a>gitlab界面配置</h3><p>配置中文</p>
<p><img src="/image/15429535451.png"></p>
<p>Setting &#x3D;&gt; Preferred language 选择简体中文 &#x3D;&gt;Update profile sttings</p>
<p>创建用户发送邮件</p>
<p><img src="/image/15429535611.png"></p>
<p>设置 &#x3D;&gt; 注册限制</p>
<p><img src="/image/1569496416-15694964071.png"></p>
<h3 id="后期修改域名访问"><a href="#后期修改域名访问" class="headerlink" title="后期修改域名访问"></a>后期修改域名访问</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /opt/gitlab/embedded/service/gitlab-rails/config/gitlab.yml</span></span><br><span class="line">     10   ## GitLab settings</span><br><span class="line">     11   gitlab:</span><br><span class="line">     12     ## Web server settings (note: host is the FQDN, do not include http://)</span><br><span class="line">     13     host: 112.123.124.125 =&gt; wqblogs.com:4443</span><br><span class="line">     14     port: 81  =&gt; 80</span><br><span class="line">     15     https: false</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">gitlab-ctl restart</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>gitlab</category>
      </categories>
      <tags>
        <tag>gitalb</tag>
        <tag>gitlab</tag>
      </tags>
  </entry>
  <entry>
    <title>go环境配置</title>
    <url>/2022/11/22/go%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>golang官网地址：<a href="https://golang.google.cn/">https://golang.google.cn</a></p>
<p>golang中文文档：<a href="https://studygolang.com/pkgdoc">https://studygolang.com/pkgdoc</a></p>
<p>golang学习教程：<a href="https://golang-tech-stack.com/tutorial">https://golang-tech-stack.com/tutorial</a></p>
<h2 id="go-环境配置"><a href="#go-环境配置" class="headerlink" title="go 环境配置"></a>go 环境配置</h2><h3 id="Windows-配置"><a href="#Windows-配置" class="headerlink" title="Windows 配置"></a>Windows 配置</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">go env</span><br></pre></td></tr></table></figure>

<p>goroot为go安装的根目录，gopath就是go项目所在的路径，高版本go项目已经不在依赖gopath来管理项目，使用go mod来管理项目。</p>
<p>配置GO111MODULE环境变量</p>
<p>GO111MODULE 是 Go 1.11 引入的新版模块管理方式。之前的版本中，安装的三方库比如 go-cmp ，要求模块存在于 GOPATH 下，否则编译时会找不到。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">开启GO111MODULE</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash"><span class="built_in">env</span>:GO111MODULE = <span class="string">&quot;on&quot;</span></span></span><br></pre></td></tr></table></figure>



<p>配置 <a href="https://goproxy.io/zh/">proxy</a> 环境变量 PowerShell (Windows)</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">配置 GOPROXY 环境变量</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash"><span class="built_in">env</span>:GOPROXY = <span class="string">&quot;https://proxy.golang.com.cn,direct&quot;</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">还可以设置不走 proxy 的私有仓库或组，多个用逗号相隔（可选）</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash"><span class="built_in">env</span>:GOPRIVATE = <span class="string">&quot;git.mycompany.com,github.com/my/private&quot;</span></span></span><br></pre></td></tr></table></figure>

<h3 id="Vscode-配置"><a href="#Vscode-配置" class="headerlink" title="Vscode 配置"></a>Vscode 配置</h3><p>安装插件</p>
<p>go                         go环境插件</p>
<p>code runner       程序运行插件</p>
<p>常用快捷键</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">ctrl + /         行注释 </span><br><span class="line">shift + alt + a  （可以修改为ctrl + shift + /） 块注释 </span><br><span class="line">ctrl + shift + k 删除行</span><br><span class="line">ctrl + e         查找文件 </span><br><span class="line">ctrl + shift + p 打开设置命令行 </span><br></pre></td></tr></table></figure>

<p>快速生成代码片段</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">pkgm  main包 + main主函数</span><br><span class="line">ff    fmt.Printf(<span class="string">&quot;&quot;</span>, <span class="keyword">var</span>)</span><br><span class="line"><span class="keyword">for</span>   <span class="keyword">for</span> i := <span class="number">0</span>; i &lt; count; i++ &#123;&#125;</span><br><span class="line">forr <span class="keyword">for</span> _, V := <span class="keyword">range</span> v &#123;&#125;</span><br><span class="line">fmain <span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;&#125;</span><br><span class="line">a.<span class="built_in">print</span>! fmt.Printf(<span class="string">&quot;a: %v\n&quot;</span>, a)</span><br></pre></td></tr></table></figure>

<h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><p>直接在终端中输入<code>go help</code>即可显示所有的go命令以及相应命令功能简介，主要有下面这些：</p>
<ul>
<li><p>build: 编译包和依赖</p>
</li>
<li><p>clean: 清理已编译的包及对象</p>
</li>
<li><p>doc: 显示包或者符号的文档</p>
</li>
<li><p>env: 打印go的环境信息</p>
</li>
<li><p>bug: 启动错误报告</p>
</li>
<li><p>fix: 运行 go tool fix</p>
</li>
<li><p>fmt: 运行gofmt进行格式化</p>
</li>
<li><p>generate: 从processing source生成go文件</p>
</li>
<li><p>get: 下载并安装包和依赖</p>
</li>
<li><p>install: 编译并安装包和依赖</p>
</li>
<li><p>list: 列出包</p>
</li>
<li><p>run: 编译并运行go程序</p>
</li>
<li><p>test: 运行测试</p>
</li>
<li><p>tool: 运行go提供的工具</p>
</li>
<li><p>version: 显示go的版本</p>
</li>
</ul>
]]></content>
      <categories>
        <category>Go语言</category>
      </categories>
      <tags>
        <tag>Go语言</tag>
      </tags>
  </entry>
  <entry>
    <title>GO语言变量及常量</title>
    <url>/2022/11/24/go%E8%AF%AD%E8%A8%80%E5%8F%98%E9%87%8F%E5%8F%8A%E5%B8%B8%E9%87%8F/</url>
    <content><![CDATA[<h2 id="GO语言变量及常量"><a href="#GO语言变量及常量" class="headerlink" title="GO语言变量及常量"></a>GO语言变量及常量</h2><h3 id="golang变量"><a href="#golang变量" class="headerlink" title="golang变量"></a>golang变量</h3><p> 变量是计算机语言中能<strong>储存</strong>计算结果或能表示值的抽象概念。不同的变量保存的<strong>数据类型</strong>可能会不一样。</p>
<h4 id="声明变量"><a href="#声明变量" class="headerlink" title="声明变量"></a>声明变量</h4><p>Go语言中的变量需要声明后才能使用，同一作用域内不支持重复声明。 并且Go语言的变量声明后必须使用。</p>
<p><strong>声明变量的语法</strong></p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> identifier <span class="keyword">type</span></span><br></pre></td></tr></table></figure>

<p><code>var</code>：声明变量关键字  </p>
<p><code>identifier</code>：变量名称 </p>
<p><code>type</code>：变量类型</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> name <span class="type">string</span></span><br><span class="line">    <span class="keyword">var</span> age <span class="type">int</span></span><br><span class="line">    <span class="keyword">var</span> ok <span class="type">bool</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>批量声明</strong></p>
<p>使用一个<code>var</code>关键字，把一些变量写在一个括号<code>()</code>里</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> (</span><br><span class="line">        name <span class="type">string</span></span><br><span class="line">        age <span class="type">int</span></span><br><span class="line">        ok <span class="type">bool</span></span><br><span class="line">    )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="变量的初始化"><a href="#变量的初始化" class="headerlink" title="变量的初始化"></a>变量的初始化</h4><p>Go语言在声明变量的时候，会自动对变量对应的内存区域进行初始化操作。每个变量会被初始化成其类型的默认值，例如： 整型和浮点型变量的默认值为<code>0</code>。 字符串变量的默认值为空字符串“”。 布尔型变量默认为<code>false</code>。 切片、函数、指针变量的默认为<code>nil</code>。</p>
<p>变量初始化语法  </p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> 变量名 类型 =</span><br></pre></td></tr></table></figure>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> (</span><br><span class="line">        name    <span class="type">string</span> = <span class="string">&quot;虫子&quot;</span></span><br><span class="line">        address <span class="type">string</span> = <span class="string">&quot;wqblogs.com:4443&quot;</span></span><br><span class="line">    )</span><br><span class="line">    fmt.Printf(<span class="string">&quot;name: %v\n&quot;</span>, name)</span><br><span class="line">    fmt.Printf(<span class="string">&quot;address: %v\n&quot;</span>, address)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>类型推导</strong></p>
<p>我们在声明变量时，可以根据初始化值进行类型推导，从而省略类型。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> name = <span class="string">&quot;虫子&quot;</span></span><br><span class="line">    <span class="keyword">var</span> age = <span class="number">27</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>初始化多个变量</strong></p>
<p>可以一次初始化多个变量，中间用逗号分隔。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> name,age,b =<span class="string">&quot;虫子&quot;</span>,<span class="number">27</span>,<span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="短变量声明"><a href="#短变量声明" class="headerlink" title="短变量声明"></a>短变量声明</h4><p>只能在函数内部使用，可以使用<code>:=</code>运算符对变量进行声明和初始化。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    name := <span class="string">&quot;虫子&quot;</span></span><br><span class="line">    age := <span class="number">27</span></span><br><span class="line">    a := <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="匿名变量"><a href="#匿名变量" class="headerlink" title="匿名变量"></a>匿名变量</h4><p>如果我们接收到多个变量，有一些变量使用不到，可以使用下划线_表示变量名称，这种变量叫做匿名变量。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">getNameAndAge</span><span class="params">()</span></span> (<span class="type">string</span>, <span class="type">int</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;虫子&quot;</span>, <span class="number">27</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    _, age := getNameAndAge()</span><br><span class="line">    <span class="comment">// fmt.Printf(&quot;name: %v\n&quot;, name)</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;age: %v\n&quot;</span>, age)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="golang常量"><a href="#golang常量" class="headerlink" title="golang常量"></a>golang常量</h3><p>常量，就是在程序<strong>编译阶段</strong>就确定下来的值，而程序在<strong>运行时</strong>则无法改变该值。在Go程序中，常量可以是数值类型（包括整型、浮点型和复数类型）、布尔类型、字符串类型等。</p>
<h4 id="定义常量的语法"><a href="#定义常量的语法" class="headerlink" title="定义常量的语法"></a>定义常量的语法</h4><p>定义一个常量使用const关键字，语法格式如下</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> constantName [<span class="keyword">type</span>]= value</span><br></pre></td></tr></table></figure>

<p><code>const</code>  ：定义常量关键字</p>
<p><code>constantName</code>  ：常量名称</p>
<p><code>type</code>  ：常量类型</p>
<p><code>value</code>  ：常量的值</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">const</span> PI <span class="type">float64</span> = <span class="number">3.14</span></span><br><span class="line"><span class="keyword">const</span> PI2 = <span class="number">3.1415</span> <span class="comment">// 可以省略类型</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">width  = <span class="number">100</span></span><br><span class="line">height = <span class="number">200</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> i, j = <span class="number">1</span>, <span class="number">2</span> <span class="comment">// 多重赋值</span></span><br><span class="line"><span class="keyword">const</span> a, b, c = <span class="number">1</span>, <span class="number">2</span>, <span class="string">&quot;foo&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>iota</strong></p>
<p>iota 比较特殊，可以被认为是一个可被编译器修改的常量，它默认开始值是<code>0</code>  ，每调用一次加<code>1</code>  。遇到 <code>const</code>  关键字时被重置为 <code>0</code>。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="keyword">const</span> (</span><br><span class="line">		a1 = <span class="literal">iota</span></span><br><span class="line">		a2 = <span class="literal">iota</span></span><br><span class="line">		a3 = <span class="literal">iota</span></span><br><span class="line">	)</span><br><span class="line">	fmt.Printf(<span class="string">&quot;a1: %v\n&quot;</span>, a1)</span><br><span class="line">	fmt.Printf(<span class="string">&quot;a2: %v\n&quot;</span>, a2)</span><br><span class="line">	fmt.Printf(<span class="string">&quot;a3: %v\n&quot;</span>, a3)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>返回值</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">a1: <span class="number">0</span></span><br><span class="line">a2: <span class="number">1</span></span><br><span class="line">a3: <span class="number">2</span></span><br></pre></td></tr></table></figure>

<p><strong>使用<code>_</code> 跳过某些值</strong></p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="keyword">const</span> (</span><br><span class="line">		a1 = <span class="literal">iota</span></span><br><span class="line">		_</span><br><span class="line">		a3 = <span class="literal">iota</span></span><br><span class="line">	)</span><br><span class="line">	fmt.Printf(<span class="string">&quot;a1: %v\n&quot;</span>, a1)</span><br><span class="line">	fmt.Printf(<span class="string">&quot;a3: %v\n&quot;</span>, a3)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>返回值</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">a1: <span class="number">0</span></span><br><span class="line">a3: <span class="number">2</span></span><br></pre></td></tr></table></figure>

<p><strong><code>iota</code>  声明中间插队</strong></p>
<p>效果与 <code>_</code>类似</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="keyword">const</span> (</span><br><span class="line">		a1 = <span class="literal">iota</span></span><br><span class="line">		a2 = <span class="number">100</span></span><br><span class="line">		a3 = <span class="literal">iota</span></span><br><span class="line">	)</span><br><span class="line">	fmt.Printf(<span class="string">&quot;a1: %v\n&quot;</span>, a1)</span><br><span class="line">	fmt.Printf(<span class="string">&quot;a3: %v\n&quot;</span>, a3)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>返回值</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">a1: <span class="number">0</span></span><br><span class="line">a2: <span class="number">100</span></span><br><span class="line">a3: <span class="number">2</span></span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>Go语言</category>
      </categories>
      <tags>
        <tag>Go语言</tag>
      </tags>
  </entry>
  <entry>
    <title>jenkins一键打tag构建项目</title>
    <url>/2018/11/29/jenkins%E4%B8%80%E9%94%AE%E6%89%93tag%E6%9E%84%E5%BB%BA%E9%A1%B9%E7%9B%AE/</url>
    <content><![CDATA[<p><strong>打tag</strong>就是对发布的版本标注一个版本号，发布的软件出现问题的时候，会知道是哪一个版本出现问题，然后就可以把这个版本拉出来，修复bug然后再合并回去。有利于定位bug</p>
<p>交付测试人员的代码，必须要打tag，那么基于jenkins实现，轻松打tag，并基于tag发版</p>
 <span id="more"></span>

<h2 id="创建打tag项目"><a href="#创建打tag项目" class="headerlink" title="创建打tag项目"></a>创建打tag项目</h2><p>步骤一：选择自由项目</p>
<p>创建项目名</p>
<p>步骤二：参数化构建</p>
<p>创建版本</p>
<p><img src="/image/15435576441.png"></p>
<p>创建svn tags列表</p>
<p><img src="/image/15435576661.png"></p>
<p>创建tag说明</p>
<p><img src="/image/15435576871.png"></p>
<p>创建svn账号</p>
<p><img src="/image/15435577161.png"></p>
<p>创建svn密码</p>
<p><img src="/image/15435577321.png"></p>
<p>创建trunk的url路径</p>
<p><img src="/image/15435577511.png"></p>
<p>创建存放tag路径的url</p>
<p><img src="/image/15435577671.png"></p>
<p>创建模块（需要打tag的目录）</p>
<p><img src="/image/15435577961.png"></p>
<p>步骤三：打tag脚本</p>
<p><img src="/image/15435578141.png"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">获取当前时间</span></span><br><span class="line">currentdatetime=$(date +%Y%m%d-%H)</span><br><span class="line">for M in $Tag_module</span><br><span class="line">do</span><br><span class="line">  svn cp $trunk_path/$M $tag_path/$&#123;Tag_VersionNumber&#125; -m &quot;$&#123;tagLable&#125;-$&#123;Tag_VersionNumber&#125;-$&#123;currentdatetime&#125;&quot;  --username &quot;$SVN_USER&quot; --password &quot;$SVN_PWD&quot;</span><br><span class="line">done</span><br></pre></td></tr></table></figure>

<p>构建效果</p>
<p><img src="/image/15435578361.png"></p>
<h2 id="创建构建项目"><a href="#创建构建项目" class="headerlink" title="创建构建项目"></a>创建构建项目</h2><p>步骤一：选择maven项目</p>
<p>创建项目名</p>
<p>步骤二：参数化构建</p>
<p><img src="/image/15435578611.png"></p>
<p>步骤二：源码管理</p>
<p><img src="/image/15435578951.png"></p>
<p>步骤三：build</p>
<p><img src="/image/15435579251.png"></p>
<p>步骤四：构建后操作</p>
<p>归档成品</p>
<p><img src="/image/15435579791.png"></p>
<p>ssh服务器运行脚本（备份，覆盖，重启）</p>
<p><img src="/image/15435580031.png"></p>
<h2 id="配置tag一键构建"><a href="#配置tag一键构建" class="headerlink" title="配置tag一键构建"></a>配置tag一键构建</h2><p>tag项目添加构建后操作，关联构建项目</p>
<p><img src="/image/15435580341.png"></p>
]]></content>
      <categories>
        <category>jenkins</category>
      </categories>
      <tags>
        <tag>jenkins</tag>
      </tags>
  </entry>
  <entry>
    <title>jenkins之代码检查平台</title>
    <url>/2019/04/28/jenkins%E4%B9%8B%E4%BB%A3%E7%A0%81%E6%A3%80%E6%9F%A5%E5%B9%B3%E5%8F%B0/</url>
    <content><![CDATA[<h2 id="安装sonarqube"><a href="#安装sonarqube" class="headerlink" title="安装sonarqube"></a>安装sonarqube</h2><p><a href="https://www.sonarqube.org/downloads/">下载地址</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-7.7.zip</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">unzip sonarqube-7.7.zip -d /opt/</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mv</span> sonarqube-7.7/ sonarqube</span></span><br></pre></td></tr></table></figure>

 <span id="more"></span>

<h3 id="创建数据库-mysql5-6"><a href="#创建数据库-mysql5-6" class="headerlink" title="创建数据库(mysql5.6)"></a>创建数据库(mysql5.6)</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; CREATE DATABASE sonar CHARACTER SET utf8 COLLATE utf8_general_ci;</span><br><span class="line">mysql&gt; CREATE USER &#x27;sonar&#x27; IDENTIFIED BY &#x27;sonar&#x27;;</span><br><span class="line">mysql&gt; GRANT ALL ON sonar.* TO &#x27;sonar&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;sonar&#x27;;</span><br><span class="line">mysql&gt; GRANT ALL ON sonar.* TO &#x27;sonar&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;sonar&#x27;;</span><br><span class="line">mysql&gt; FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>


<h3 id="配置配置文件"><a href="#配置配置文件" class="headerlink" title="配置配置文件"></a>配置配置文件</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim conf/sonar.properties</span> </span><br><span class="line">sonar.jdbc.url=jdbc:mysql://192.168.1.200:3306/sonar?useUnicode=true&amp;characterEncoding=utf8&amp;rewriteBatchedStatements=true&amp;useConfigs=maxPerformance</span><br><span class="line">sonar.jdbc.username=sonar</span><br><span class="line">sonar.jdbc.password=sonar</span><br><span class="line">sonar.web.host=0.0.0.0</span><br><span class="line">sonar.web.port=9000</span><br></pre></td></tr></table></figure>


<p>启动</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"> ./bin/linux-x86-64/sonar.sh start/stop/restart</span></span><br></pre></td></tr></table></figure>


<p>默认用户 admin admin</p>
<h3 id="报错："><a href="#报错：" class="headerlink" title="报错："></a>报错：</h3><ul>
<li>Caused by: java.lang.RuntimeException: can not run elasticsearch as root</li>
</ul>
<p>        解决：创建一个普通用户去运行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">chown</span> -R ops.ops sonarqube</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">su ops</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash"> ./bin/linux-x86-64/sonar.sh start</span></span><br></pre></td></tr></table></figure>
<ul>
<li>Caused by: java.sql.SQLException: Cannot execute statement: impossible to write to binary log since BINLOG_FORMAT &#x3D; STATEMENT and at least one table uses a storage engine limited to row-based logging. InnoDB is limited to row-logging when transaction isolation level is READ COMMITTED or READ UNCOMMITTED.</li>
</ul>
<p>        解决：mysql&gt;  SET GLOBAL binlog_format&#x3D;MIXED<br>        永久:binlog_format&#x3D;mixed放入&#x2F;etc&#x2F;my.conf里，重启数据库</p>
<ul>
<li>2019.04.26 17:40:16 ERROR web[][o.s.s.p.Platform] Web server startup failed: Current version is too old. Please upgrade to Long Term Support version firstly.</li>
</ul>
<p>        解决：清空数据库</p>
<h3 id="中文问题"><a href="#中文问题" class="headerlink" title="中文问题"></a>中文问题</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> /opt/sonarqube/extensions/plugins</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo wget https://github.com/SonarQubeCommunity/sonar-l10n-zh/releases/download/sonar-l10n-zh-plugin-1.27/sonar-l10n-zh-plugin-1.27.jar</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">../../bin/linux-x86-64/sonar.sh restart</span></span><br></pre></td></tr></table></figure>


<h2 id="安装sonar-scanner代码扫描器"><a href="#安装sonar-scanner代码扫描器" class="headerlink" title="安装sonar-scanner代码扫描器"></a>安装sonar-scanner代码扫描器</h2><p><a href="https://docs.sonarqube.org/display/SCAN/Analyzing+with+SonarQube+Scanner#AnalyzingwithSonarQubeScanner-Installation">下载地址</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-3.3.0.1492-linux.zip</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">unzip sonar-scanner-cli-3.3.0.1492-linux.zip -d /opt/;<span class="built_in">cd</span> /opt</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mv</span> sonar-scanner-3.3.0.1492-linux/ sonar-scanner</span></span><br></pre></td></tr></table></figure>


<h3 id="配置配置文件-1"><a href="#配置配置文件-1" class="headerlink" title="配置配置文件"></a>配置配置文件</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cd</span> sonar-scanner</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim conf/sonar-scanner.properties</span> </span><br><span class="line">sonar.host.url=http://localhost:9000</span><br><span class="line">sonar.jdbc.url=jdbc:mysql://192.168.1.200:3306/sonar?useUnicode=true&amp;characterEncoding=utf8&amp;rewriteBatchedStatements=true&amp;useConfigs=maxPerformance</span><br><span class="line">sonar.jdbc.username=sonar</span><br><span class="line">sonar.jdbc.password=sonar</span><br><span class="line">sonar.sourceEncoding=UTF-8</span><br></pre></td></tr></table></figure>


<h2 id="jenkins配置环境变量"><a href="#jenkins配置环境变量" class="headerlink" title="jenkins配置环境变量"></a>jenkins配置环境变量</h2><p>jenkins安装<a href="https://plugins.jenkins.io/sonar">SonarQube Scanner</a>插件</p>
<p>sonarqube创建用户token并复制</p>
<p>配置 &#x3D;&gt; 权限 &#x3D;&gt; 用户 &#x3D;&gt; 令牌 &#x3D;&gt; 输入名称生成token</p>
<p>jenkins配置环境变量</p>
<p>系统管理 &#x3D;&gt; 系统设置 &#x3D;&gt; SonarQube servers &#x3D;&gt; Add SonarQube</p>
<p><img src="/image/1556435407.png"></p>
<p>系统管理 &#x3D;&gt; 全局工具配置 &#x3D;&gt; SonarQube Scanner</p>
<p><img src="/image/1556435450.png"></p>
<h2 id="jenkins打包项目"><a href="#jenkins打包项目" class="headerlink" title="jenkins打包项目"></a>jenkins打包项目</h2><p>你的项目 → 构建环境 , 勾选 Prepare SonarQube Scanner environment</p>
<p><img src="/image/1556435488.png"></p>
<p>在 Build → Goals and options 中添加</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$</span><span class="language-bash">SONAR_MAVEN_GOAL -Dsonar.host.url=<span class="variable">$SONAR_HOST_URL</span> -Dsonar.login=<span class="variable">$SONAR_AUTH_TOKEN</span>  -Dsonar.java.binaries=target/sonar</span></span><br></pre></td></tr></table></figure>


<p><img src="/image/1556435535.png"></p>
<p>最后执行 立即构建 , 就可以在 SonarQube 管理页面中看到对应项目自动生成</p>
<p><img src="/image/1556435568.png"> </p>
]]></content>
      <categories>
        <category>jenkins</category>
      </categories>
      <tags>
        <tag>jenkins</tag>
      </tags>
  </entry>
  <entry>
    <title>jenkins安装部署</title>
    <url>/2018/11/28/jenkins%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<h2 id="jdk-安装"><a href="#jdk-安装" class="headerlink" title="jdk 安装"></a>jdk 安装</h2><p><a href="https://pan.baidu.com/s/1wxwDLjsRpT0G793cHBkkuA">https://pan.baidu.com/s/1wxwDLjsRpT0G793cHBkkuA</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">tar xf jdk-8u60-linux-x64.tar.gz -C /application</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">ln</span> -s /application/jdk1.8.0_60 /application/jdk</span></span><br><span class="line">配置环境变量</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /etc/profile</span></span><br><span class="line">export JAVA_HOME=/application/jdkexport JRE_HOME=/application/jdk/jre</span><br><span class="line">export PATH=$JAVA_HOME/bin:$JAVA_HOME/jre/bin:$PATH</span><br><span class="line">export CLASSPATH=.$CLASSPATH:$JAVA_HOME/lib:$JAVA_HOME/jre/lib:$JAVA_HOME/lib/tools.jar</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">java -version</span></span><br><span class="line">java version “1.8.0_60”</span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_60-b27)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.60-b23, mixed mode)</span><br></pre></td></tr></table></figure>

 <span id="more"></span>

<h2 id="安装jenkins"><a href="#安装jenkins" class="headerlink" title="安装jenkins"></a>安装jenkins</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rpm –import https://pkg.jenkins.io/redhat-stable/jenkins.io.key</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum install jenkins -y</span></span><br><span class="line">文件目录</span><br><span class="line">/usr/lib/jenkins/jenkins.war           #WAR包</span><br><span class="line">/etc/sysconfig/jenkins                 #配置文件</span><br><span class="line">/var/lib/jenkins/                      #默认的JENKINS_HOME目录</span><br><span class="line">/var/log/jenkins/jenkins.log           #Jenkins日志文件</span><br></pre></td></tr></table></figure>

<p>遇见端口占用修改</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /etc/sysconfig/jenkins</span></span><br><span class="line">JENKINS_PORT=”8080″</span><br></pre></td></tr></table></figure>

<p>以root用户启动</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /etc/sysconfig/jenkins</span></span><br><span class="line">JENKINS_USER=”root”</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">chown</span> -R root.root /var/lib/jenkins/ /var/cache/jenkins  /var/log/jenkins</span></span><br></pre></td></tr></table></figure>

<p>启动服务</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl start jenkins</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl <span class="built_in">enable</span> jenkins</span></span><br></pre></td></tr></table></figure>

<p>启动报错：</p>
<ul>
<li>-bash: &#x2F;usr&#x2F;local&#x2F;java&#x2F;bin&#x2F;java: No such file or directory</li>
</ul>
<p>   解决:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">which</span> java</span></span><br><span class="line"> /application/jdk/bin/java</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">ln</span> -s /application/jdk/bin/java /usr/bin/java</span></span><br></pre></td></tr></table></figure>

<ul>
<li>离线插件安装：（不能上网）</li>
</ul>
<p>  解决:<br>        <a href="http://IP:Port/pluginManager/advanced">http://IP:Port/pluginManager/advanced</a></p>
<p>系统管理 &#x3D;》管理插件 &#x3D;》高级 &#x3D;》升级站点</p>
<p>https改为http</p>
<h3 id="安装插件（默认就好）"><a href="#安装插件（默认就好）" class="headerlink" title="安装插件（默认就好）"></a><strong>安装插件（默认就好）</strong></h3><p><a href="https://wiki.jenkins.io/display/JENKINS/Maven+Project+Plugin">Maven Integration plugin</a></p>
<p><a href="http://wiki.jenkins-ci.org/display/JENKINS/Deploy+Plugin">Deploy to container Plugin</a></p>
<p><a href="https://pan.baidu.com/s/1GTcWgMnvfWqdoDbJ_55AKg">https://pan.baidu.com/s/1GTcWgMnvfWqdoDbJ_55AKg</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">tar xf apache-maven-3.5.4-bin.tar.gz</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mv</span> apache-maven-3.5.4 /opt/maven-3.54</span></span><br></pre></td></tr></table></figure>

<p><a href="https://pan.baidu.com/s/1p6cj9FiLBBPrsmxQvbflMQ">https://pan.baidu.com/s/1p6cj9FiLBBPrsmxQvbflMQ</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">tar xf gradle-4.6.tar.gz</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mv</span> gradle-4.6 /opt/gradle-4.6</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">chmod</span> 777 -R /opt/gradle-4.6</span></span><br></pre></td></tr></table></figure>

<p>配置环境变量</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /etc/profile</span></span><br><span class="line">export M2_HOME=/opt/maven-3.5.4</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin:$M2_HOME/bin</span><br><span class="line">export GRADLE_HOME=/opt/gradle-4.6</span><br><span class="line">export PATH=$PATH:$GRADLE_HOME/bin</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">source</span> /etc/profile</span></span><br></pre></td></tr></table></figure>

<p>web界面配置</p>
<p>系统管理 &#x3D;》 全局工具配置</p>
<p><img src="/image/15434588441.png"></p>
<p><img src="/image/15434588661.png"></p>
<h2 id="创建ssh客户端"><a href="#创建ssh客户端" class="headerlink" title="创建ssh客户端"></a>创建ssh客户端</h2><p>root免秘钥登录</p>
<pre><code># ssh-keygen
# ssh-copy-id -i ./id_rsa.pub 172.17.252.103
# ssh-copy-id -i ./id_rsa.pub 172.17.252.104
</code></pre>
<p><img src="/image/15434588981.png"></p>
<p>配置远程服务器</p>
<p><img src="/image/15434589211.png"> </p>
]]></content>
      <categories>
        <category>jenkins</category>
      </categories>
      <tags>
        <tag>jenkins</tag>
      </tags>
  </entry>
  <entry>
    <title>jenkins流水线pipeline使用</title>
    <url>/2021/01/23/jenkins%E6%B5%81%E6%B0%B4%E7%BA%BFpipeline/</url>
    <content><![CDATA[<h2 id="gitlab配置公钥"><a href="#gitlab配置公钥" class="headerlink" title="gitlab配置公钥"></a>gitlab配置公钥</h2><p>代码仓库：代码仓库：<a href="https://github.com/wq-h/demo-2048.git">https://github.com/wq-h/demo-2048.git</a></p>
<p>创建密钥</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ssh-keygen -t rsa -b 2048 -C <span class="string">&quot;weiqun_h@163.com&quot;</span> -N <span class="string">&quot;&quot;</span> -f /root/.ssh/id_rsa</span></span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Your identification has been saved in /root/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved in /root/.ssh/id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:lo1dX2Kj+5Z8n7LiICLc9yYJdkhlY9W2YpNsTn/pmrI weiqun_h@163.com</span><br><span class="line">The key&#x27;s randomart image is:</span><br><span class="line">+---[RSA 2048]----+</span><br><span class="line">|        ...      |</span><br><span class="line">|       =   o     |</span><br><span class="line">|      + o o o + .|</span><br><span class="line">|     .   &amp; o + + |</span><br><span class="line">|    . . S * . o  |</span><br><span class="line">|  . .+ o . . +   |</span><br><span class="line">|   o.ooo..  +. . |</span><br><span class="line">|    . oooo...++ o|</span><br><span class="line">|        oE++oo+oo|</span><br><span class="line">+----[SHA256]-----+</span><br></pre></td></tr></table></figure>
<p>gitlab配置公钥<br><img src="/image/gitlab_key.png"></p>
<h2 id="jenkins-创建凭据"><a href="#jenkins-创建凭据" class="headerlink" title="jenkins 创建凭据"></a>jenkins 创建凭据</h2><p>选择ssh username with private key类型  添加私钥<br><img src="/image/jenkins_key.png"></p>
<h2 id="jenkins配置流水线"><a href="#jenkins配置流水线" class="headerlink" title="jenkins配置流水线"></a>jenkins配置流水线</h2><ul>
<li>创建项目</li>
</ul>
<p><img src="/image/jenkins_pipeline.png"></p>
<ul>
<li>配置流水线</li>
</ul>
<p><img src="/image/jenkins_scripts.png"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pipeline &#123;</span><br><span class="line">    agent any                                         // 可以在任何可用的代理上执行pipeline或stage</span><br><span class="line">    environment &#123;                                     // 指令指定一系列键值对，这些键值对将被定义为所有step或特定stage的step的环境变量</span><br><span class="line">      GIT_REPO=&quot;https://gitlub.com/wq-h/demo-2048.git&quot; // 构建项目的git仓库地址</span><br><span class="line">      GIT_BRANCH=&quot;master&quot;                             // 构建项目的git分支</span><br><span class="line">      SSH_ID=&quot;51561e93-8c3c-4904-8fce-2c0014c5dc9f&quot;   // Jenkins里配置ssh key的唯一标识</span><br><span class="line">      MVN_CMD=&quot;mvn clean package &amp;&amp; cd target &amp;&amp; jar -xf 2048.war&quot;                     // maven编译命令</span><br><span class="line">      TARGET_DIR=&quot;target&quot;                             // 编译项目输出jar或war包的路径</span><br><span class="line">      BASE_IMAGE=&quot;harbor.od.com/system_containers/tomcat:v8.0&quot;  // Dockerfile底层镜像</span><br><span class="line">      Repository=&quot;harbor.od.com/infra&quot;                           // docker仓库组</span><br><span class="line">      IMAGE_NAME=&quot;demo-2048&quot;                                    // 构建镜像的镜像名称</span><br><span class="line">      IMAGE_TAG=&quot;$&#123;BUILD_TIMESTAMP&#125;&quot;                            // 构建时的时间，为构建镜像的tag</span><br><span class="line">      NAMESPACE=&quot;demo&quot;                                     // 更新服务时的namespace</span><br><span class="line">      DEPLOY=&quot;demo-2048&quot;                                  // 更新服务时deploy的名称</span><br><span class="line">    &#125;</span><br><span class="line">    stages &#123;                   // 在pipeline内只容许出现只有一次</span><br><span class="line">        stage(&#x27;检出代码&#x27;) &#123;    // 阶段，pipeline 工作所在的位置</span><br><span class="line">            steps &#123;            // 步骤，在stage指令中执行的一个或多个步骤</span><br><span class="line">                deleteDir()    // 递归删除WORKSPACE下的文件和文件夹</span><br><span class="line">                checkout([$class: &#x27;GitSCM&#x27;, branches: [[name: &quot;*/$&#123;GIT_BRANCH&#125;&quot;]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: &quot;$&#123;SSH_ID&#125;&quot;, url: &quot;$&#123;GIT_REPO&#125;&quot;]]])</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        stage(&#x27;构建代码&#x27;) &#123;</span><br><span class="line">            tools &#123;                                    // 定义自动安装和放置工具的部分PATH</span><br><span class="line">                maven &quot;apache-maven-3.6.3&quot;             // 工具名称必须在Jenkins 管理Jenkins → 全局工具配置中预置</span><br><span class="line">            &#125;</span><br><span class="line">            steps &#123;</span><br><span class="line">                sh &quot;$&#123;MVN_CMD&#125;&quot;</span><br><span class="line">            &#125;</span><br><span class="line">            post &#123;             // post定义将在pipeline运行或stage结束时运行的操作</span><br><span class="line">                success &#123;      // 成功之后提取制品</span><br><span class="line">                     archiveArtifacts &quot;$&#123;TARGET_DIR&#125;/*.war&quot;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        stage(&#x27;构建镜像&#x27;) &#123;</span><br><span class="line">             steps &#123;          // 创建Dockerfile并构建</span><br><span class="line">                 writeFile file: &quot;$&#123;TARGET_DIR&#125;/Dockerfile&quot;, text: &quot;&quot;&quot;FROM $&#123;BASE_IMAGE&#125;</span><br><span class="line">                                                              COPY ./*.war /usr/local/tomcat/webapps&quot;&quot;&quot;</span><br><span class="line">                 sh &quot;cd ./target &amp;&amp; docker build -t $&#123;Repository&#125;/$&#123;IMAGE_NAME&#125;:$&#123;IMAGE_TAG&#125; .&quot;</span><br><span class="line">              &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        stage(&#x27;推送镜像&#x27;) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                 sh &quot;docker push $&#123;Repository&#125;/$&#123;IMAGE_NAME&#125;:$&#123;IMAGE_TAG&#125;&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        stage(&#x27;更新服务&#x27;) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                //sh &quot;kubectl get po -A&quot;</span><br><span class="line">                sh &quot;kubectl set image deploy/$&#123;DEPLOY&#125; $&#123;DEPLOY&#125;=$&#123;Repository&#125;/$&#123;IMAGE_NAME&#125;:$&#123;IMAGE_TAG&#125; -n$&#123;NAMESPACE&#125; &quot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><img src="/image/jenkins_work.png"></p>
]]></content>
      <categories>
        <category>Kubernetes</category>
        <category>jenkins</category>
      </categories>
      <tags>
        <tag>jenkins</tag>
        <tag>kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>jenkins配置用户权限</title>
    <url>/2019/04/18/jenkins%E9%85%8D%E7%BD%AE%E7%94%A8%E6%88%B7%E6%9D%83%E9%99%90/</url>
    <content><![CDATA[<h3 id="添加管理员"><a href="#添加管理员" class="headerlink" title="添加管理员"></a><strong>添加管理员</strong></h3><h4 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a><strong>创建用户</strong></h4><p>jenkins初次登录后，需要先注册一个用户为管理员</p>
<p><img src="/image/1555568954.png"></p>
 <span id="more"></span>

<p>系统管理 &#x3D;&gt; 全局安全配置</p>
<p><img src="/image/1555569000.png"></p>
<h4 id="选择”启用安全“模式"><a href="#选择”启用安全“模式" class="headerlink" title="选择”启用安全“模式"></a>选择”启用安全“模式</h4><p>安全域 &#x3D;&gt; Jenkins专用用户数据库 &#x3D;&gt; 不选择允许用户注册</p>
<p><img src="/image/1555569216.png"></p>
<h4 id="授权策略"><a href="#授权策略" class="headerlink" title="授权策略"></a>授权策略</h4><p>选择项目矩阵授权策略，添加账号，选项全选择上</p>
<p><img src="/image/1555569327.png"></p>
<h3 id="添加普通用户"><a href="#添加普通用户" class="headerlink" title="添加普通用户"></a><strong>添加普通用户</strong></h3><h4 id="创建用户-1"><a href="#创建用户-1" class="headerlink" title="创建用户"></a>创建用户</h4><p>系统管理 &#x3D;&gt; 管理用户 &#x3D;&gt; 新建用户</p>
<p><img src="/image/1555569374.png"></p>
<p><img src="/image/1555569419.png"></p>
<h4 id="授权策略-1"><a href="#授权策略-1" class="headerlink" title="授权策略"></a>授权策略</h4><p>read：可以查看jenkins界面</p>
<p>view：可以查看凭据</p>
<p>build：可以构建项目</p>
<p><img src="/image/1555569492.png"></p>
<h3 id="项目目录管理"><a href="#项目目录管理" class="headerlink" title="项目目录管理"></a>项目目录管理</h3><p>build：可以构建目录里的所有项目</p>
<p>cancel：可以取消或终止目录的所有项目</p>
<p>read：可以看见目录里所有项目</p>
<h4 id="后端项目"><a href="#后端项目" class="headerlink" title="后端项目"></a>后端项目</h4><p><img src="/image/1555569539.png"></p>
<p><img src="/image/1555569599.png"></p>
<h4 id="前端项目"><a href="#前端项目" class="headerlink" title="前端项目"></a>前端项目</h4><p><img src="/image/1555569640.png"></p>
<p><img src="/image/1555569761.png"></p>
<p>登录后端账号只会看见后端项目，登录前端账号只会看见前端项目</p>
<p>可以把dev环境的构建权限给开发，便于工作效率</p>
]]></content>
      <categories>
        <category>jenkins</category>
      </categories>
      <tags>
        <tag>jenkins</tag>
      </tags>
  </entry>
  <entry>
    <title>jenkins集成k8s</title>
    <url>/2021/01/23/jenkins%E9%9B%86%E6%88%90k8s/</url>
    <content><![CDATA[<h2 id="jenkins集成k8s集群"><a href="#jenkins集成k8s集群" class="headerlink" title="jenkins集成k8s集群"></a>jenkins集成k8s集群</h2><ul>
<li>创建证书</li>
</ul>
<p>打开~&#x2F;.kube&#x2F;config文件<br><img src="/image/k8s_config.png"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">复制certificate-authority-data的内容，运行以下命令生成client.crt</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">echo</span> <span class="string">&quot;&lt;certificate-authority-data&gt;&quot;</span> | <span class="built_in">base64</span> -d &gt; ca.crt</span></span><br><span class="line">复制client-certificate-data的内容，运行以下命令生成client.crt</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">echo</span> <span class="string">&quot;&lt;client-certificate-data&gt;&quot;</span> | <span class="built_in">base64</span> -d &gt; client.crt</span></span><br><span class="line">复制client-key-data的内容，运行以下命令生成client.key</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">echo</span> <span class="string">&quot;&lt;client-key-data&gt;&quot;</span> | <span class="built_in">base64</span> -d &gt; client.key</span></span><br><span class="line"></span><br><span class="line">再根据前面步骤生成的ca.crt, client.crt和client.key来生成PKCS12格式的cert.pfx</span><br><span class="line">以下命令运行时，需要输入4位以上的密码</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">openssl pkcs12 -<span class="built_in">export</span> -out cert.pfx -inkey client.key -<span class="keyword">in</span> client.crt -certfile ca.crt</span></span><br><span class="line">Enter Export Password:</span><br><span class="line">Verifying - Enter Export Password:</span><br></pre></td></tr></table></figure>
<ul>
<li>jenkins创建证书凭证</li>
</ul>
<p><img src="/image/jenkins_cert.png"></p>
<ul>
<li>集成k8s</li>
</ul>
<p>选择系统管理 &#x3D;&gt; 系统配置 &#x3D;&gt; Cloud &#x3D;&gt; 点击a separate configuration page.<br>点击连接测试,如出现success(老版本)或者Connected to Kubernetes v1.X.X,表示连接k8s集群成功<br><img src="/image/jenkins_cloud.png"></p>
]]></content>
      <categories>
        <category>Kubernetes</category>
        <category>jenkins</category>
      </categories>
      <tags>
        <tag>jenkins</tag>
        <tag>kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>容器安装破解jira-8.14</title>
    <url>/2021/01/15/jira%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<h2 id="部署jira"><a href="#部署jira" class="headerlink" title="部署jira"></a>部署jira</h2><p>下载jira最新镜像</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker pull atlassian/jira-software:8.14</span><br></pre></td></tr></table></figure>
<p>自定义镜像 添加破解jar包</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FROM</span> atlassian/jira-software:<span class="number">8.14</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> atlassian-agent.jar /opt/atlassian/jira/</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">echo</span> <span class="string">&#x27;export CATALINA_OPTS=&quot;-javaagent:/opt/atlassian/jira/atlassian-agent.jar $&#123;CATALINA_OPTS&#125;&quot;&#x27;</span> &gt;&gt; /opt/atlassian/jira/bin/setenv.sh</span></span><br></pre></td></tr></table></figure>
<p>下载破解包至Dockerfile同一级别目录<br><a href="https://pan.wqblogs.com:4443/d/f/uZB6u0XWoggrj9qmIEzjuLKrawVvaeGg">atlassian-agent.jar</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">-rw-r--r--. 1 root root 818083 Dec 10  2018 atlassian-agent.jar</span><br><span class="line">-rw-r--r--. 1 root root    221 Jan 15 14:22 Dockerfile</span><br></pre></td></tr></table></figure>
<p>构建镜像</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker build -t wqblogs.com:4443/jira-software:8.14 .</span><br></pre></td></tr></table></figure>
<h2 id="配置数据库"><a href="#配置数据库" class="headerlink" title="配置数据库"></a>配置数据库</h2><p>添加mysql配置 my.cnf</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">character_set_server = utf8mb4</span><br><span class="line">innodb_default_row_format = DYNAMIC</span><br><span class="line">innodb_log_file_size = 2G</span><br><span class="line">sql_mode = NO_AUTO_VALUE_ON_ZERO</span><br><span class="line">[mysql]</span><br><span class="line">default-character-set = utf8mb4</span><br><span class="line"></span><br><span class="line">[client]</span><br><span class="line">default-character-set =utf8mb4</span><br></pre></td></tr></table></figure>

<p>重启mysql</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">/etc/init.d/mysql restart</span><br></pre></td></tr></table></figure>

<p>创建用户与数据库</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; CREATE DATABASE jiradb CHARACTER SET utf8mb4 COLLATE utf8mb4_bin;</span><br><span class="line">mysql&gt; CREATE USER &#x27;jira&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;jira&#x27;;</span><br><span class="line">mysql&gt; GRANT SELECT,INSERT,UPDATE,DELETE,CREATE,DROP,REFERENCES,ALTER,INDEX on jiradb.* TO &#x27;jira&#x27;@&#x27;%&#x27;;</span><br><span class="line">mysql&gt; flush privileges;</span><br></pre></td></tr></table></figure>

<p>启动jira容器</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir /data/jira</span><br><span class="line">docker run -v /data/jira:/var/atlassian/application-data/jira -v /etc/localtime:/etc/localtime:ro  --name=&quot;jira&quot; -d -p 8080:8080 wqblogs.com:4443/jira-software:8.14</span><br></pre></td></tr></table></figure>
<h2 id="web访问"><a href="#web访问" class="headerlink" title="web访问"></a>web访问</h2><p><a href="https://downloads.mysql.com/archives/c-j/">配置mysql 驱动</a></p>
<p><img src="/image/jdbc-8.0.png" alt="mysql8.0驱动"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker cp mysql-connector-java-8.0.22.jar jira:/opt/atlassian/jira/lib</span><br><span class="line">docker restart jira</span><br></pre></td></tr></table></figure>
<ul>
<li><p>web配置：选择语言和选择配置数据库<br><img src="/image/jira1.png"></p>
</li>
<li><p>web配置：配置数据库并测试连接<br><img src="/image/jira-mysql.png"></p>
</li>
<li><p>web配置：获取授权<br>此图为网图，我的忘记截图了<br><img src="/image/license.png"></p>
</li>
</ul>
<p>复制服务器ID: BKRG-CCI9-7V19-1M3C<br>在本地存放atlassian-agent.jar的目录下执行命令，生成许可证：<br>需替换邮箱（<a href="mailto:&#x77;&#101;&#x69;&#x71;&#117;&#x6e;&#x2e;&#104;&#101;&#64;&#116;&#101;&#110;&#x78;&#99;&#108;&#x6f;&#117;&#100;&#46;&#x63;&#111;&#x6d;">&#x77;&#101;&#x69;&#x71;&#117;&#x6e;&#x2e;&#104;&#101;&#64;&#116;&#101;&#110;&#x78;&#99;&#108;&#x6f;&#117;&#100;&#46;&#x63;&#111;&#x6d;</a>）、名称（DEV）、访问地址（<a href="http://116.196.65.248:8080/%EF%BC%89%E3%80%81%E6%9C%8D%E5%8A%A1%E5%99%A8ID%EF%BC%88BKRG-CCI9-7V19-1M3C%EF%BC%89%E4%B8%BA%E4%BD%A0%E7%9A%84%E4%BF%A1%E6%81%AF">http://116.196.65.248:8080/）、服务器ID（BKRG-CCI9-7V19-1M3C）为你的信息</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">java -jar atlassian-agent.jar \</span><br><span class="line">    -d -m weiqun.he@tenxcloud.com -n DEV -p jira \</span><br><span class="line">    -o http://116.196.65.248:8080/ -s BKRG-CCI9-7V19-1M3C</span><br><span class="line"></span><br><span class="line">====================================================</span><br><span class="line">=======        Atlassian Crack Agent         =======</span><br><span class="line">=======           https://zhile.io           =======</span><br><span class="line">=======          QQ Group: 30347511          =======</span><br><span class="line">====================================================</span><br><span class="line"></span><br><span class="line">Your license code(Don&#x27;t copy this line!!!):</span><br><span class="line"></span><br><span class="line">AAABrQ0ODAoPeJyNkltvm0AQhd/5FUh93jXrCzGWkJIutKIFuwqO39d4HLbCC51dnDi/voshai6WV</span><br><span class="line">YmXRXPOfHNmvnxD6f4QymUzl/mLibdgU5fna3fsjZnziACqrJsGkKayAKVhfWpgKQ4Q8lWWxfc8u</span><br><span class="line">UsdjiCMrFUkDISdkHiMsJlzRRKBLlA2nSp8UJU8SAM7t+oF7vbklsY0ejEavZSyAiprJxNSGVBCF</span><br><span class="line">RA/NxJPQ7d5QLwb+zm/JYpXyngne+tlmmTJOo6cZXvYAq72DxpQh4S9wl3xarDetYWh3YPoem+eB</span><br><span class="line">AL9ZHSlVhRGHiE02MK7LN/+vyK3VIKDnRr70iGejW3cDTd28nb7L8ZzSXwUVXteRrgXlR7sPxqt8</span><br><span class="line">FEoqfu6LmkbNGM+ZYFP/RkdT+eLuTf3Rg6vlbGwsQ2/Cp9A/mkVLeHW7uG5qOp2R4v60Le4HMt/D</span><br><span class="line">pobgR1cjzxsJonCNInyeElS5jPPD4Ipm3r+5N2iL91WDngEtPKvP++/E86TgNxsWEBYNuGXTvrzs</span><br><span class="line">fxqsSiFho8H/VZ8jrNBqYfxLGh4AXZI8MwYxZu/MDEraDAsAhRSj05h4SNNiYw3KTM1pV2N1P6zo</span><br><span class="line">QIUHlNSQqah665emljexRRdKhfkAj8=X02kk</span><br></pre></td></tr></table></figure>
<p>将生成的许可证复制到页面，完成破解</p>
<p><img src="/image/jira.png"></p>
]]></content>
      <categories>
        <category>无聊操作</category>
      </categories>
      <tags>
        <tag>jira</tag>
      </tags>
  </entry>
  <entry>
    <title>k8s之StatefulSet</title>
    <url>/2019/10/02/k8s%E4%B9%8BStatefulSet/</url>
    <content><![CDATA[<h2 id="StatefulSet简介"><a href="#StatefulSet简介" class="headerlink" title="StatefulSet简介"></a>StatefulSet简介</h2><p>Deployment不足以覆盖所有的应用编排问题,因为在它看来,一个应用的所有Pod,是完全一样的,所以它们之间就没有顺序,也无所谓运行在哪台宿主机上.需要时,Deployment就通过Pod模板创建新的Pod,不需要时,就”杀掉”任意一个Pod.</p>
<p>但是在实际场景中,并不是所有应用都满足这样的要求.比如:主从关系,主备关系,还有就是数据存储类应用,多个实例通常会在本地磁盘上保存一份数据,而这些实例一旦被杀掉,即使重建出来,实例与数据之间的对应关系也已经丢失,从而导致应用失败.</p>
<p>这种实例之间有不对等关系,或者有依赖关系的应用,被称为”有状态应用”(Stateful Application)</p>
<p>为了能对”有状态应用”做出支持,Kubernetes在Deployment基础上,扩展出了:StatefulSet.<br> <span id="more"></span><br>StatefulSet是为了解决有状态服务的问题（对应Deployments和ReplicaSets是为无状态服务而设计），其应用场景包括</p>
<ul>
<li><p> 稳定的持久化存储，即Pod重新调度后还是能访问到相同的持久化数据，基于PVC来实现</p>
</li>
<li><p>稳定的网络标志，即Pod重新调度后其PodName和HostName不变，基于Headless Service（即没有Cluster IP的Service）来实现</p>
</li>
<li><p> 有序部署，有序扩展，即Pod是有顺序的，在部署或者扩展的时候要依据定义的顺序依次依次进行（即从0到N-1，在下一个Pod运行之前所有之前的Pod必须都是Running和Ready状态），基于init containers来实现</p>
</li>
<li><p>有序收缩，有序删除（即从N-1到0）</p>
</li>
</ul>
<p>StatefulSet由以下几个部分组成：</p>
<ul>
<li><p>用于定义网络标志（DNS domain）的Headless Service</p>
</li>
<li><p>用于创建PersistentVolumes的volumeClaimTemplates</p>
</li>
<li><p>定义具体应用的StatefulSet</p>
</li>
</ul>
]]></content>
      <categories>
        <category>Kubernetes</category>
        <category>consul</category>
      </categories>
  </entry>
  <entry>
    <title>k8s对接ceph rbd存储</title>
    <url>/2020/12/15/k8s%E5%AF%B9%E6%8E%A5ceph-rbd%E5%AD%98%E5%82%A8/</url>
    <content><![CDATA[<h2 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h2><p>k8s集群</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@master ceph]# kubectl get nodes</span><br><span class="line">NAME     STATUS   ROLES    AGE   VERSION</span><br><span class="line">master   Ready    master   23h   v1.19.4</span><br><span class="line">work     Ready    node     23h   v1.19.4</span><br></pre></td></tr></table></figure>

<p>ceph集群</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@cephcluster-ceph01 ~]# ceph -s</span><br><span class="line">  cluster:</span><br><span class="line">    id:     2c44c0fd-4969-4f31-8cd8-359e710827e8</span><br><span class="line">    health: HEALTH_OK</span><br><span class="line"> </span><br><span class="line">  services:</span><br><span class="line">    mon: 3 daemons, quorum cephcluster-ceph01,cephcluster-ceph02,cephcluster-ceph03 (age 19h)</span><br><span class="line">    mgr: cephcluster-ceph02(active, since 2w), standbys: cephcluster-ceph03, cephcluster-ceph01</span><br><span class="line">    mds: cephfs:1 &#123;0=cephcluster-ceph01=up:active&#125; 2 up:standby</span><br><span class="line">    osd: 10 osds: 10 up (since 19h), 10 in (since 3d)</span><br><span class="line">    rgw: 3 daemons active (cephcluster-ceph01, cephcluster-ceph02, cephcluster-ceph03)</span><br><span class="line"> </span><br><span class="line">  task status:</span><br><span class="line">    scrub status:</span><br><span class="line">        mds.cephcluster-ceph01: idle</span><br><span class="line"> </span><br><span class="line">  data:</span><br><span class="line">    pools:   13 pools, 1664 pgs</span><br><span class="line">    objects: 47.89k objects, 59 GiB</span><br><span class="line">    usage:   182 GiB used, 318 GiB / 500 GiB avail</span><br><span class="line">    pgs:     1664 active+clean</span><br><span class="line"> </span><br><span class="line">  io:</span><br><span class="line">    client:   2.7 MiB/s wr, 0 op/s rd, 187 op/s wr</span><br><span class="line">[root@cephcluster-ceph01 ~]# ceph --version</span><br><span class="line">ceph version 14.2.10 (b340acf629a010a74d90da5782a2c5fe0b54ac20) nautilus (stable)</span><br></pre></td></tr></table></figure>

<h2 id="work节点安装ceph-common"><a href="#work节点安装ceph-common" class="headerlink" title="work节点安装ceph-common"></a>work节点安装ceph-common</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@work ~]# vim /etc/yum.repos.d/ceph.repo </span><br><span class="line">[Ceph]</span><br><span class="line">name=Ceph packages for $basearch</span><br><span class="line">baseurl=https://mirrors.aliyun.com/ceph/rpm-nautilus/el7/$basearch</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">type=rpm-md</span><br><span class="line">gpgkey=https://mirrors.aliyun.com/ceph/keys/release.asc</span><br><span class="line">priority=1</span><br><span class="line">[Ceph-noarch]</span><br><span class="line">name=Ceph noarch packages</span><br><span class="line">baseurl=https://mirrors.aliyun.com/ceph/rpm-nautilus/el7/noarch</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">type=rpm-md</span><br><span class="line">gpgkey=https://mirrors.aliyun.com/ceph/keys/release.asc</span><br><span class="line">priority=1</span><br><span class="line">[root@work ~]# yum install -y epel-release </span><br><span class="line">[root@work ~]# yum install -y ceph-common-14.2.10 </span><br></pre></td></tr></table></figure>

<h2 id="创建sc"><a href="#创建sc" class="headerlink" title="创建sc"></a>创建sc</h2><p>sc需要获取ceph的mon地址、pool、密钥等消息</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@cephcluster-ceph01 ~]# ceph auth get-key client.admin</span><br><span class="line">AQAJjmxfz8qQGRAABfjR32C9aUW3Oc/8GKQgfA==</span><br><span class="line">[root@cephcluster-ceph01 ~]# ceph osd pool create tenx-pool 128</span><br></pre></td></tr></table></figure>

<p>配置sc</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@master ceph]# echo -n &quot;AQAJjmxfz8qQGRAABfjR32C9aUW3Oc/8GKQgfA==&quot;|base64</span><br><span class="line">QVFBSmpteGZ6OHFRR1JBQUJmalIzMkM5YVVXM09jLzhHS1FnZkE9PQ==</span><br><span class="line">[root@master ceph]# vim ceph-secret.yaml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Secret</span><br><span class="line">metadata:</span><br><span class="line">  name: ceph-secret</span><br><span class="line">  namespace: kube-system</span><br><span class="line">data:</span><br><span class="line">  key: QVFBSmpteGZ6OHFRR1JBQUJmalIzMkM5YVVXM09jLzhHS1FnZkE9PQ==</span><br><span class="line">type:</span><br><span class="line">  kubernetes.io/rbd</span><br><span class="line">[root@master ceph]# kubectl apply -f ceph-secret.yaml </span><br><span class="line">secret/ceph-secret created</span><br><span class="line">  </span><br><span class="line">[root@master ceph]# vim sc.yaml</span><br><span class="line">apiVersion: storage.k8s.io/v1</span><br><span class="line">kind: StorageClass</span><br><span class="line">metadata:</span><br><span class="line">  name: cephrbd</span><br><span class="line">provisioner: ceph.com/rbd</span><br><span class="line">parameters:</span><br><span class="line">  monitors: 192.168.3.179:6789,192.168.3.180:6789,192.168.3.181:6789</span><br><span class="line">  adminId: admin</span><br><span class="line">  adminSecretName: ceph-secret</span><br><span class="line">  adminSecretNamespace: kube-system</span><br><span class="line">  pool: tenx-pool</span><br><span class="line">  userId: admin</span><br><span class="line">  userSecretName: ceph-secret</span><br><span class="line">  userSecretNamespace: kube-system</span><br><span class="line">  fsType: xfs</span><br><span class="line">  imageFormat: &quot;2&quot;</span><br><span class="line">  imageFeatures: &quot;layering&quot;</span><br><span class="line">[root@master ceph]# kubectl apply -f sc.yaml </span><br><span class="line">storageclass.storage.k8s.io/cephrbd created</span><br><span class="line">[root@master ceph]# kubectl get sc</span><br><span class="line">NAME      PROVISIONER    RECLAIMPOLICY   VOLUMEBINDINGMODE   ALLOWVOLUMEEXPANSION   AGE</span><br><span class="line">cephrbd   ceph.com/rbd   Delete          Immediate           false                  19m</span><br></pre></td></tr></table></figure>

<h2 id="创建pvc测试"><a href="#创建pvc测试" class="headerlink" title="创建pvc测试"></a>创建pvc测试</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@master ceph]# vim ceph-pvc.yaml</span><br><span class="line">kind: PersistentVolumeClaim</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  name: ceph-pvc</span><br><span class="line">spec:</span><br><span class="line">  storageClassName: cephrbd</span><br><span class="line">  accessModes:</span><br><span class="line">  - ReadWriteOnce</span><br><span class="line">  resources:</span><br><span class="line">    requests:</span><br><span class="line">      storage: 1Gi             </span><br><span class="line">[root@master ceph]# kubectl apply -f ceph-pvc.yaml</span><br><span class="line">persistentvolumeclaim/ceph-pvc created</span><br><span class="line"></span><br><span class="line">[root@master ceph]# kubectl describe pvc ceph-pvc </span><br><span class="line">Name:          ceph-pvc</span><br><span class="line">Namespace:     default</span><br><span class="line">StorageClass:  cephrbd</span><br><span class="line">Status:        Pending</span><br><span class="line">Volume:        </span><br><span class="line">Labels:        &lt;none&gt;</span><br><span class="line">Annotations:   volume.beta.kubernetes.io/storage-provisioner: kubernetes.io/rbd</span><br><span class="line">Finalizers:    [kubernetes.io/pvc-protection]</span><br><span class="line">Capacity:      </span><br><span class="line">Access Modes:  </span><br><span class="line">VolumeMode:    Filesystem</span><br><span class="line">Mounted By:    &lt;none&gt;</span><br><span class="line">Events:</span><br><span class="line">  Type     Reason              Age               From                         Message</span><br><span class="line">  ----     ------              ----              ----                         -------</span><br><span class="line">  Warning  ProvisioningFailed  4s (x3 over 32s)  persistentvolume-controller  Failed to provision volume with StorageClass &quot;cephrbd&quot;: failed to create rbd image: executable file not found in $PATH, command output:</span><br></pre></td></tr></table></figure>

<p>创建存储卷报错，因为使用StorageClass动态创建PV时，controller-manager未打包ceph-common组件，缺少了rbd命令,因此无法通过rbd命令为pod创建rbd image.</p>
<p>解决方法：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@master ceph]# git clone https://github.com/kubernetes-incubator/external-storage.git</span><br><span class="line">[root@master ceph]# cd external-storage/ceph/rbd/deploy/rbac</span><br><span class="line">[root@master rbac]# NAMESPACE=kube-system</span><br><span class="line">[root@master rbac]# sed -r -i &quot;s/namespace: [^ ]+/namespace: $NAMESPACE/g&quot; ./clusterrolebinding.yaml ./rolebinding.yaml</span><br><span class="line">[root@master deploy]# kubectl -n $NAMESPACE apply -f ./rbac</span><br><span class="line">clusterrole.rbac.authorization.k8s.io/rbd-provisioner created</span><br><span class="line">clusterrolebinding.rbac.authorization.k8s.io/rbd-provisioner created</span><br><span class="line">deployment.apps/rbd-provisioner created</span><br><span class="line">role.rbac.authorization.k8s.io/rbd-provisioner created</span><br><span class="line">rolebinding.rbac.authorization.k8s.io/rbd-provisioner created</span><br><span class="line">serviceaccount/rbd-provisioner created</span><br><span class="line"></span><br><span class="line">[root@master ceph]# kubectl apply -f ceph-pvc.yaml </span><br><span class="line">persistentvolumeclaim/ceph-pvc created</span><br><span class="line">[root@master ceph]# kubectl get pvc</span><br><span class="line">NAME       STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS   AGE</span><br><span class="line">ceph-pvc   Bound    pvc-0c2e350b-9d56-4d7f-bb2c-91bdc263a09e   1Gi        RWO            cephrbd        6s</span><br></pre></td></tr></table></figure>

<h2 id="测试挂载"><a href="#测试挂载" class="headerlink" title="测试挂载"></a>测试挂载</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@master ceph]# vim ceph-pod.yaml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  creationTimestamp: null</span><br><span class="line">  labels:</span><br><span class="line">    run: nginx</span><br><span class="line">  name: nginx</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - image: nginx</span><br><span class="line">    name: nginx</span><br><span class="line">    volumeMounts:</span><br><span class="line">    - name: ceph-rdb</span><br><span class="line">      mountPath: /usr/share/nginx/html</span><br><span class="line">  volumes:</span><br><span class="line">  - name: ceph-rdb</span><br><span class="line">    persistentVolumeClaim:</span><br><span class="line">      claimName: ceph-pvc</span><br><span class="line">[root@master ceph]# kubectl apply -f ceph-pod.yaml </span><br><span class="line">pod/nginx created</span><br><span class="line">[root@master ceph]# kubectl exec -ti nginx -- /bin/sh -c &#x27;echo this is from Ceph RBD!!! &gt; /usr/share/nginx/html/index.html&#x27;</span><br><span class="line">[root@master ceph]# kubectl get po -owide</span><br><span class="line">NAME    READY   STATUS    RESTARTS   AGE     IP             NODE   NOMINATED NODE   READINESS GATES</span><br><span class="line">nginx   1/1     Running   0          2m10s   10.244.80.13   work   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">[root@master ceph]# curl 10.244.80.13</span><br><span class="line">this is from Ceph RBD!!!</span><br><span class="line">[root@master ceph]# kubectl exec -it nginx sh</span><br><span class="line">/ # df -h|grep nginx</span><br><span class="line">/dev/rbd0              1014.0M     32.4M    981.6M   3% /usr/share/nginx/html</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Kubernetes</category>
        <category>ceph</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
        <tag>ceph</tag>
      </tags>
  </entry>
  <entry>
    <title>k8s对接nfs存储</title>
    <url>/2021/01/27/k8s%E5%AF%B9%E6%8E%A5nfs%E5%AD%98%E5%82%A8/</url>
    <content><![CDATA[<p>nfs-client-provisioner,它可以使用现有的和已配置的NFS服务器来通过持久卷声明来动态供应Kubernetes持久卷<br>使用<a href="https://github.com/kubernetes-sigs/sig-storage-lib-external-provisioner">sig-storage-lib-external-provisioner</a>的开发<a href="https://github.com/kubernetes-sigs/nfs-subdir-external-provisioner">nfs-subdir-external-provisioner</a>进行配置</p>
<h2 id="安装nfs"><a href="#安装nfs" class="headerlink" title="安装nfs"></a>安装nfs</h2><p>每个slave节点安装nfs</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum install -y nfs-utils</span></span><br></pre></td></tr></table></figure>
<h2 id="安装storage-class"><a href="#安装storage-class" class="headerlink" title="安装storage class"></a>安装storage class</h2><h2 id="准备资源清单"><a href="#准备资源清单" class="headerlink" title="准备资源清单"></a>准备资源清单</h2><ul>
<li>rbac</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nfs-client-provisioner</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nfs-client-provisioner-runner</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;persistentvolumes&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>, <span class="string">&quot;create&quot;</span>, <span class="string">&quot;delete&quot;</span>]</span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;persistentvolumeclaims&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>, <span class="string">&quot;update&quot;</span>]</span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;storage.k8s.io&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;storageclasses&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>]</span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;events&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;create&quot;</span>, <span class="string">&quot;update&quot;</span>, <span class="string">&quot;patch&quot;</span>]</span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">run-nfs-client-provisioner</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">nfs-client-provisioner</span></span><br><span class="line">    <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nfs-client-provisioner-runner</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">leader-locking-nfs-client-provisioner</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;endpoints&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>, <span class="string">&quot;create&quot;</span>, <span class="string">&quot;update&quot;</span>, <span class="string">&quot;patch&quot;</span>]</span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">RoleBinding</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">leader-locking-nfs-client-provisioner</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">nfs-client-provisioner</span></span><br><span class="line">    <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">leader-locking-nfs-client-provisioner</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br></pre></td></tr></table></figure>

<ul>
<li>deploy</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nfs-client-provisioner</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nfs-client-provisioner</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">strategy:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">Recreate</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">nfs-client-provisioner</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">nfs-client-provisioner</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">serviceAccountName:</span> <span class="string">nfs-client-provisioner</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nfs-client-provisioner</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">quay.io/external_storage/nfs-client-provisioner:latest</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nfs-client-root</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/persistentvolumes</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">PROVISIONER_NAME</span>  <span class="comment"># provisioner的名字，需要和StorageClass对象中的provisioner字段一致</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">shisuyun/nfs</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">NFS_SERVER</span></span><br><span class="line">              <span class="attr">value:</span> <span class="number">192.168</span><span class="number">.28</span><span class="number">.17</span>  <span class="comment"># NFS服务器地址</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">NFS_PATH</span>       </span><br><span class="line">              <span class="attr">value:</span> <span class="string">/nfs/volume</span>    <span class="comment"># NFS服务器目录</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nfs-client-root</span></span><br><span class="line">          <span class="attr">nfs:</span></span><br><span class="line">            <span class="attr">server:</span> <span class="number">192.168</span><span class="number">.28</span><span class="number">.17</span>   <span class="comment"># NFS服务器地址</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/nfs/volume</span>       <span class="comment"># NFS服务器目录</span></span><br></pre></td></tr></table></figure>

<ul>
<li>class</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">storage.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">StorageClass</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nfs</span></span><br><span class="line"><span class="attr">provisioner:</span> <span class="string">shisuyun/nfs</span></span><br><span class="line"><span class="attr">parameters:</span></span><br><span class="line">  <span class="attr">archiveOnDelete:</span> <span class="string">&quot;false&quot;</span></span><br></pre></td></tr></table></figure>

<h2 id="创建资源清单"><a href="#创建资源清单" class="headerlink" title="创建资源清单"></a>创建资源清单</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl apply -f rbac.yaml</span></span><br><span class="line">serviceaccount/nfs-client-provisioner created</span><br><span class="line">clusterrole.rbac.authorization.k8s.io/nfs-client-provisioner-runner created</span><br><span class="line">clusterrolebinding.rbac.authorization.k8s.io/run-nfs-client-provisioner created</span><br><span class="line">role.rbac.authorization.k8s.io/leader-locking-nfs-client-provisioner created</span><br><span class="line">rolebinding.rbac.authorization.k8s.io/leader-locking-nfs-client-provisioner created</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl apply -f deploy.yaml</span></span><br><span class="line">deployment.apps/nfs-client-provisioner created</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl apply -f class.yaml</span></span><br><span class="line">storageclass.storage.k8s.io/nfs created</span><br></pre></td></tr></table></figure>

<h2 id="测试创建pv"><a href="#测试创建pv" class="headerlink" title="测试创建pv"></a>测试创建pv</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim pvc.yaml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolumeClaim</span><br><span class="line">metadata:</span><br><span class="line">  name: nfs-test</span><br><span class="line">  namespace: demo</span><br><span class="line">spec:</span><br><span class="line">  accessModes:</span><br><span class="line">    - ReadWriteMany</span><br><span class="line">  resources:</span><br><span class="line">    requests:</span><br><span class="line">      storage: 5Gi</span><br><span class="line">  storageClassName: nfs</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl apply -f pvc.yaml</span></span><br><span class="line">persistentvolumeclaim/nfs-test created</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get pv</span></span><br><span class="line">NAME                                       CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS      CLAIM           STORAGECLASS   REASON   AGE</span><br><span class="line">pvc-c702ccbb-eddd-445f-ab86-efb44769c1d4   5Gi        RWX            Delete           Bound       demo/nfs-test   nfs                     7s</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get pvc -ndemo</span></span><br><span class="line">NAME       STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS   AGE</span><br><span class="line">nfs-test   Bound    pvc-c702ccbb-eddd-445f-ab86-efb44769c1d4   5Gi        RWX            nfs            25s</span><br></pre></td></tr></table></figure>

<h2 id="1-20新版本问题"><a href="#1-20新版本问题" class="headerlink" title="1.20新版本问题"></a>1.20新版本问题</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">I0218 10:05:03.223179       1 leaderelection.go:194] successfully acquired lease kube-system/shisuyun-nfs</span><br><span class="line">I0218 10:05:03.223336       1 controller.go:631] Starting provisioner controller shisuyun/nfs_nfs-client-provisioner-6db9db9dcf-c6phr_ba4b22b4-71d0-11eb-82ab-12d5aefc2432!</span><br><span class="line">I0218 10:05:03.324107       1 controller.go:680] Started provisioner controller shisuyun/nfs_nfs-client-provisioner-6db9db9dcf-c6phr_ba4b22b4-71d0-11eb-82ab-12d5aefc2432!</span><br><span class="line">I0218 10:05:03.324440       1 controller.go:987] provision &quot;mysql/nfs-test&quot; class &quot;nfs&quot;: started</span><br><span class="line">E0218 10:05:03.332013       1 controller.go:1004] provision &quot;mysql/nfs-test&quot; class &quot;nfs&quot;: unexpected error getting claim reference: selfLink was empty, can&#x27;t make reference</span><br></pre></td></tr></table></figure>
<p><a href="https://github.com/kubernetes-sigs/nfs-subdir-external-provisioner/issues/25">https://github.com/kubernetes-sigs/nfs-subdir-external-provisioner/issues/25</a></p>
<p>在&#x2F;etc&#x2F;kubernetes&#x2F;manifests&#x2F;kube-apiserver.yaml配置添加参数</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">- --feature-gates=RemoveSelfLink=false</span><br></pre></td></tr></table></figure>
<p>保存之后重新创建pvc</p>
<p>可以直接使用k8s.gcr.io&#x2F;sig-storage&#x2F;nfs-subdir-external-provisioner:v4.0.2 避免修改api-server；<br>国内镜像：registry.cn-hangzhou.aliyuncs.com&#x2F;hwq-infra&#x2F;nfs-client-provisioner:v4.0.2</p>
]]></content>
      <categories>
        <category>Kubernetes</category>
        <category>nfs</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
        <tag>nfs</tag>
      </tags>
  </entry>
  <entry>
    <title>k8s搭建redis集群</title>
    <url>/2019/10/31/k8s%E6%90%AD%E5%BB%BAredis%E9%9B%86%E7%BE%A4/</url>
    <content><![CDATA[<h2 id="创建PV"><a href="#创建PV" class="headerlink" title="创建PV"></a>创建PV</h2> <span id="more"></span>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim pv.yml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolume  </span><br><span class="line">metadata:</span><br><span class="line">  name: nfs01   </span><br><span class="line">  labels:</span><br><span class="line">    type: nfs       </span><br><span class="line">spec:</span><br><span class="line">  capacity: </span><br><span class="line">    storage: 5Gi      </span><br><span class="line">  accessModes:</span><br><span class="line">    - ReadWriteMany    </span><br><span class="line">  persistentVolumeReclaimPolicy: Retain  </span><br><span class="line">  nfs:                 </span><br><span class="line">    path: &quot;/redis01&quot;  </span><br><span class="line">    server: 192.168.9.20     </span><br><span class="line">    readOnly: false       </span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolume  </span><br><span class="line">metadata:</span><br><span class="line">  name: nfs02          </span><br><span class="line">  labels:</span><br><span class="line">    type: nfs        </span><br><span class="line">spec:</span><br><span class="line">  capacity: </span><br><span class="line">    storage: 5Gi      </span><br><span class="line">  accessModes:</span><br><span class="line">    - ReadWriteMany   </span><br><span class="line">  persistentVolumeReclaimPolicy: Retain  </span><br><span class="line">  nfs:                 </span><br><span class="line">    path: &quot;/redis02&quot;  </span><br><span class="line">    server: 192.168.9.20    </span><br><span class="line">    readOnly: false      </span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolume   </span><br><span class="line">metadata:</span><br><span class="line">  name: nfs03          </span><br><span class="line">  labels:</span><br><span class="line">    type: nfs   </span><br><span class="line">spec:</span><br><span class="line">  capacity: </span><br><span class="line">    storage: 5Gi     </span><br><span class="line">  accessModes:</span><br><span class="line">    - ReadWriteMany   </span><br><span class="line">  persistentVolumeReclaimPolicy: Retain </span><br><span class="line">  nfs:                 </span><br><span class="line">    path: &quot;/redis03&quot;  </span><br><span class="line">    server: 192.168.9.20    </span><br><span class="line">    readOnly: false     </span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolume   </span><br><span class="line">metadata:</span><br><span class="line">  name: nfs04</span><br><span class="line">  labels:</span><br><span class="line">    type: nfs</span><br><span class="line">spec:</span><br><span class="line">  capacity:</span><br><span class="line">    storage: 5Gi      </span><br><span class="line">  accessModes:</span><br><span class="line">    - ReadWriteMany    </span><br><span class="line">  persistentVolumeReclaimPolicy: Retain </span><br><span class="line">  nfs:</span><br><span class="line">    path: &quot;/redis04&quot;  </span><br><span class="line">    server: 192.168.9.20     </span><br><span class="line">    readOnly: false      </span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolume   </span><br><span class="line">metadata:</span><br><span class="line">  name: nfs05</span><br><span class="line">  labels:</span><br><span class="line">    type: nfs</span><br><span class="line">spec:</span><br><span class="line">  capacity:</span><br><span class="line">    storage: 5Gi     </span><br><span class="line">  accessModes:</span><br><span class="line">    - ReadWriteMany   </span><br><span class="line">  persistentVolumeReclaimPolicy: Retain  </span><br><span class="line">  nfs:</span><br><span class="line">    path: &quot;/redis05&quot;  </span><br><span class="line">    server: 192.168.9.20    </span><br><span class="line">    readOnly: false      </span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolume   </span><br><span class="line">metadata:</span><br><span class="line">  name: nfs06</span><br><span class="line">  labels:</span><br><span class="line">    type: nfs</span><br><span class="line">spec:</span><br><span class="line">  capacity:</span><br><span class="line">    storage: 5Gi     </span><br><span class="line">  accessModes:</span><br><span class="line">    - ReadWriteMany    </span><br><span class="line">  persistentVolumeReclaimPolicy: Retain  </span><br><span class="line">  nfs:</span><br><span class="line">    path: &quot;/redis06&quot;  </span><br><span class="line">    server: 192.168.9.20     </span><br><span class="line">    readOnly: false      </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl apply pv.yml</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get pv</span></span><br><span class="line">NAME    CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS      CLAIM   STORAGECLASS   REASON   AGE</span><br><span class="line">nfs01   5Gi        RWX            Retain           Available                                   38s</span><br><span class="line">nfs02   5Gi        RWX            Retain           Available                                   38s</span><br><span class="line">nfs03   5Gi        RWX            Retain           Available                                   38s</span><br><span class="line">nfs04   5Gi        RWX            Retain           Available                                   38s</span><br><span class="line">nfs05   5Gi        RWX            Retain           Available                                   38s</span><br><span class="line">nfs06   5Gi        RWX            Retain           Available                                   38s                                                 4h47m</span><br></pre></td></tr></table></figure>

<h2 id="创建Configmap"><a href="#创建Configmap" class="headerlink" title="创建Configmap"></a>创建Configmap</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim redis.conf</span></span><br><span class="line">appendonly yes      </span><br><span class="line">cluster-enabled yes</span><br><span class="line">cluster-config-file /var/lib/redis/nodes.conf</span><br><span class="line">cluster-node-timeout 5000</span><br><span class="line">dir /var/lib/redis</span><br><span class="line">port 6379</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl create configmap redis-conf --from-file=redis.conf</span> </span><br><span class="line">configmap/redis-conf created</span><br></pre></td></tr></table></figure>

<h2 id="创建headless-service"><a href="#创建headless-service" class="headerlink" title="创建headless_service"></a>创建headless_service</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim headless.yml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: redis-service</span><br><span class="line">  labels:</span><br><span class="line">    app: redis</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">  - name: redis-port</span><br><span class="line">    port: 6379</span><br><span class="line">  clusterIP: None</span><br><span class="line">  selector:</span><br><span class="line">    app: redis</span><br><span class="line">    appCluster: redis-cluster</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl create -f headless.yml</span></span><br><span class="line">service/redis-service created</span><br></pre></td></tr></table></figure>

<h2 id="创建statefulset"><a href="#创建statefulset" class="headerlink" title="创建statefulset"></a>创建statefulset</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim redis.yml</span></span><br><span class="line">apiVersion: apps/v1beta1</span><br><span class="line">kind: StatefulSet</span><br><span class="line">metadata:</span><br><span class="line">  name: redis</span><br><span class="line">spec:</span><br><span class="line">  serviceName: redis-service</span><br><span class="line">  replicas: 6</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: redis</span><br><span class="line">        appCluster: redis-cluster</span><br><span class="line">    spec:</span><br><span class="line">      terminationGracePeriodSeconds: 20</span><br><span class="line">      affinity:</span><br><span class="line">        podAntiAffinity:</span><br><span class="line">          preferredDuringSchedulingIgnoredDuringExecution:</span><br><span class="line">          - weight: 100</span><br><span class="line">            podAffinityTerm:</span><br><span class="line">              labelSelector:</span><br><span class="line">                matchExpressions:</span><br><span class="line">                - key: app</span><br><span class="line">                  operator: In</span><br><span class="line">                  values:</span><br><span class="line">                  - redis</span><br><span class="line">              topologyKey: kubernetes.io/hostname</span><br><span class="line">      containers:</span><br><span class="line">      - name: redis</span><br><span class="line">        image: harbor.ui.com/library/redis:latest</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        command:</span><br><span class="line">          - &quot;redis-server&quot;</span><br><span class="line">        args:</span><br><span class="line">          - &quot;/etc/redis/redis.conf&quot;</span><br><span class="line">          - &quot;--protected-mode&quot;</span><br><span class="line">          - &quot;no&quot;</span><br><span class="line">        resources:</span><br><span class="line">          requests:</span><br><span class="line">            cpu: 200m</span><br><span class="line">            memory: 200Mi</span><br><span class="line">        ports:</span><br><span class="line">            - name: redis</span><br><span class="line">              containerPort: 6379</span><br><span class="line">              protocol: TCP</span><br><span class="line">            - name: cluster</span><br><span class="line">              containerPort: 16379</span><br><span class="line">              protocol: TCP</span><br><span class="line">        volumeMounts:</span><br><span class="line">          - name: redis-conf</span><br><span class="line">            mountPath: /etc/redis</span><br><span class="line">          - name: host-time</span><br><span class="line">            mountPath: /etc/localtime                   </span><br><span class="line">          - name: redis-data</span><br><span class="line">            mountPath: /var/lib/redis</span><br><span class="line">      volumes:</span><br><span class="line">      - name: redis-conf</span><br><span class="line">        configMap:</span><br><span class="line">          name: redis-conf</span><br><span class="line">          items:</span><br><span class="line">            - key: redis.conf</span><br><span class="line">              path: redis.conf</span><br><span class="line">      - name: host-time</span><br><span class="line">        hostPath:</span><br><span class="line">          path: /etc/localtime  </span><br><span class="line">  volumeClaimTemplates:</span><br><span class="line">  - metadata:</span><br><span class="line">      name: redis-data</span><br><span class="line">    spec:</span><br><span class="line">      selector:</span><br><span class="line">        matchLabels:</span><br><span class="line">          type: nfs</span><br><span class="line">      accessModes:</span><br><span class="line">        - ReadWriteMany</span><br><span class="line">      resources:</span><br><span class="line">        requests:</span><br><span class="line">          storage: 2Gi</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl apply -f redis.yml</span></span><br></pre></td></tr></table></figure>

<p>查看是否创建相对的pvc</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get pod -o wide</span></span><br><span class="line">NAME      READY   STATUS    RESTARTS   AGE   IP            NODE     NOMINATED NODE   READINESS GATES</span><br><span class="line">redis-0   1/1     Running   0          76s   10.244.2.86   node02   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">redis-1   1/1     Running   0          75s   10.244.1.75   node01   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">redis-2   1/1     Running   0          73s   10.244.1.76   node01   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">redis-3   1/1     Running   0          72s   10.244.2.87   node02   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">redis-4   1/1     Running   0          69s   10.244.1.77   node01   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">redis-5   1/1     Running   0          67s   10.244.2.88   node02   &lt;none&gt;           &lt;none&gt;</span><br></pre></td></tr></table></figure>


<h2 id="创建redis集群"><a href="#创建redis集群" class="headerlink" title="创建redis集群"></a>创建redis集群</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">v=<span class="string">&quot;&quot;</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="keyword">for</span> i <span class="keyword">in</span> `kubectl get pod -o wide|grep redis|awk <span class="string">&#x27;&#123;print $6&#125;&#x27;</span> | grep -v IP`; <span class="keyword">do</span> v=<span class="string">&quot;<span class="variable">$v</span> <span class="variable">$i</span>:6379&quot;</span>;<span class="keyword">done</span></span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">echo</span> <span class="variable">$v</span></span></span><br><span class="line">10.244.2.86:6379 10.244.1.75:6379 10.244.1.76:6379 10.244.2.87:6379 10.244.1.77:6379 10.244.2.88:6379</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl <span class="built_in">exec</span> -ti redis-0 -- redis-cli --cluster create <span class="variable">$v</span> --cluster-replicas 1</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; Performing <span class="built_in">hash</span> slots allocation on 6 nodes...</span></span><br><span class="line">Master[0] -&gt; Slots 0 - 5460</span><br><span class="line">Master[1] -&gt; Slots 5461 - 10922</span><br><span class="line">Master[2] -&gt; Slots 10923 - 16383</span><br><span class="line">Adding replica 10.244.1.77:6379 to 10.244.2.86:6379</span><br><span class="line">Adding replica 10.244.2.88:6379 to 10.244.1.75:6379</span><br><span class="line">Adding replica 10.244.2.87:6379 to 10.244.1.76:6379</span><br><span class="line">M: e839826c6e060df02e1be4e1f9747ad0e8e89727 10.244.2.86:6379</span><br><span class="line">   slots:[0-5460] (5461 slots) master</span><br><span class="line">M: 1412fbde0e086d3e8cd12f132ceba28f0357b33c 10.244.1.75:6379</span><br><span class="line">   slots:[5461-10922] (5462 slots) master</span><br><span class="line">M: 64655b72f6dbff740ba70964c04a0f1d373db875 10.244.1.76:6379</span><br><span class="line">   slots:[10923-16383] (5461 slots) master</span><br><span class="line">S: 0608a32f08fcfb676f44476d26e35d7ae130fd68 10.244.2.87:6379</span><br><span class="line">   replicates 64655b72f6dbff740ba70964c04a0f1d373db875</span><br><span class="line">S: 6be6e1d16da21a28b1778c1f4d644b39a7069151 10.244.1.77:6379</span><br><span class="line">   replicates e839826c6e060df02e1be4e1f9747ad0e8e89727</span><br><span class="line">S: a173f8e5dd682dd75b3f2dd51f6a22867b77af79 10.244.2.88:6379</span><br><span class="line">   replicates 1412fbde0e086d3e8cd12f132ceba28f0357b33c</span><br><span class="line">Can I set the above configuration? (type &#x27;yes&#x27; to accept): yes</span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; Nodes configuration updated</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; Assign a different config epoch to each node</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; Sending CLUSTER MEET messages to <span class="built_in">join</span> the cluster</span></span><br><span class="line">Waiting for the cluster to join</span><br><span class="line">...</span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; Performing Cluster Check (using node 10.244.2.86:6379)</span></span><br><span class="line">M: e839826c6e060df02e1be4e1f9747ad0e8e89727 10.244.2.86:6379</span><br><span class="line">   slots:[0-5460] (5461 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">S: 6be6e1d16da21a28b1778c1f4d644b39a7069151 10.244.1.77:6379</span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates e839826c6e060df02e1be4e1f9747ad0e8e89727</span><br><span class="line">M: 1412fbde0e086d3e8cd12f132ceba28f0357b33c 10.244.1.75:6379</span><br><span class="line">   slots:[5461-10922] (5462 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">M: 64655b72f6dbff740ba70964c04a0f1d373db875 10.244.1.76:6379</span><br><span class="line">   slots:[10923-16383] (5461 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">S: 0608a32f08fcfb676f44476d26e35d7ae130fd68 10.244.2.87:6379</span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates 64655b72f6dbff740ba70964c04a0f1d373db875</span><br><span class="line">S: a173f8e5dd682dd75b3f2dd51f6a22867b77af79 10.244.2.88:6379</span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates 1412fbde0e086d3e8cd12f132ceba28f0357b33c</span><br><span class="line">[OK] All nodes agree about slots configuration.</span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; Check <span class="keyword">for</span> open slots...</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; Check slots coverage...</span></span><br><span class="line">[OK] All 16384 slots covered.</span><br></pre></td></tr></table></figure>

<h2 id="创建redis-svc"><a href="#创建redis-svc" class="headerlink" title="创建redis_svc"></a>创建redis_svc</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim redis_svc.yml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: redis-access-service</span><br><span class="line">  labels:</span><br><span class="line">    app: redis</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">  - name: redis-port</span><br><span class="line">    protocol: &quot;TCP&quot;</span><br><span class="line">    port: 6379</span><br><span class="line">    targetPort: 6379</span><br><span class="line">  selector:</span><br><span class="line">    app: redis</span><br><span class="line">    appCluster: redis-cluster</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl apply -f redis_svc.yml</span></span><br><span class="line">service/redis-access-service created</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get svc redis-access-service -o wide</span></span><br><span class="line">NAME                   TYPE        CLUSTER-IP    EXTERNAL-IP   PORT(S)    AGE   SELECTOR</span><br><span class="line">redis-access-service   ClusterIP   10.101.60.0   &lt;none&gt;        6379/TCP   49s   app=redis,appCluster=redis-cluster</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
  </entry>
  <entry>
    <title>k8s暴露服务traefik</title>
    <url>/2019/12/02/k8s%E6%9A%B4%E9%9C%B2%E6%9C%8D%E5%8A%A1traefik/</url>
    <content><![CDATA[<p>Traefik是一个用Golang开发的轻量级的Http反向代理和负载均衡器。由于可以自动配置和刷新backend节点，目前可以被绝大部分容器平台支持，例如Kubernetes，Swarm，Rancher等。由于traefik会实时与Kubernetes API交互,所以对于Service的节点变化，traefik的反应会更加迅速。总体来说traefik可以在Kubernetes中完美的运行.</p>
<p>ingress没啥神秘的，就是个简化版nginx+一段go脚本而已</p>
 <span id="more"></span>

<p><a href="https://github.com/containous/traefik">traefik</a></p>
<h2 id="准备镜像"><a href="#准备镜像" class="headerlink" title="准备镜像"></a>准备镜像</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-200 k8s-yaml]# mkdir traefik</span><br><span class="line">[root@hdss7-200 k8s-yaml]# cd traefik/</span><br><span class="line">[root@hdss7-200 traefik]# docker pull traefik:v1.7.2</span><br><span class="line">[root@hdss7-200 traefik]# docker tag traefik:v1.7.2 harbor.od.com/public/traefik:v1.7.2</span><br><span class="line">[root@hdss7-200 traefik]# docker push harbor.od.com/public/traefik:v1.7.2</span><br></pre></td></tr></table></figure>

<h2 id="准备资源清单"><a href="#准备资源清单" class="headerlink" title="准备资源清单"></a>准备资源清单</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-200 traefik]# vim rbac.yaml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ServiceAccount</span><br><span class="line">metadata:</span><br><span class="line">  name: traefik-ingress-controller</span><br><span class="line">  namespace: kube-system</span><br><span class="line">---</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1beta1</span><br><span class="line">kind: ClusterRole</span><br><span class="line">metadata:</span><br><span class="line">  name: traefik-ingress-controller</span><br><span class="line">rules:</span><br><span class="line">  - apiGroups:</span><br><span class="line">      - &quot;&quot;</span><br><span class="line">    resources:</span><br><span class="line">      - services</span><br><span class="line">      - endpoints</span><br><span class="line">      - secrets</span><br><span class="line">    verbs:</span><br><span class="line">      - get</span><br><span class="line">      - list</span><br><span class="line">      - watch</span><br><span class="line">  - apiGroups:</span><br><span class="line">      - extensions</span><br><span class="line">    resources:</span><br><span class="line">      - ingresses</span><br><span class="line">    verbs:</span><br><span class="line">      - get</span><br><span class="line">      - list</span><br><span class="line">      - watch</span><br><span class="line">---</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1beta1</span><br><span class="line">metadata:</span><br><span class="line">  name: traefik-ingress-controller</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: traefik-ingress-controller</span><br><span class="line">subjects:</span><br><span class="line">- kind: ServiceAccount</span><br><span class="line">  name: traefik-ingress-controller</span><br><span class="line">  namespace: kube-system</span><br><span class="line"></span><br><span class="line">[root@hdss7-200 traefik]# vim daemonset.yaml</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: DaemonSet</span><br><span class="line">metadata:</span><br><span class="line">  name: traefik-ingress</span><br><span class="line">  namespace: kube-system</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: traefik-ingress</span><br><span class="line">spec:</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        k8s-app: traefik-ingress</span><br><span class="line">        name: traefik-ingress</span><br><span class="line">    spec:</span><br><span class="line">      serviceAccountName: traefik-ingress-controller</span><br><span class="line">      terminationGracePeriodSeconds: 60</span><br><span class="line">      containers:</span><br><span class="line">      - image: harbor.od.com/public/traefik:v1.7.2</span><br><span class="line">        name: traefik-ingress</span><br><span class="line">        ports:</span><br><span class="line">        - name: controller</span><br><span class="line">          containerPort: 80 </span><br><span class="line">          hostPort: 81               # 暴露至宿主机端口</span><br><span class="line">        - name: admin-web      # traefik管理页面</span><br><span class="line">          containerPort: 8080</span><br><span class="line">        securityContext:</span><br><span class="line">          capabilities:</span><br><span class="line">            drop:</span><br><span class="line">            - ALL</span><br><span class="line">            add:</span><br><span class="line">            - NET_BIND_SERVICE</span><br><span class="line">        args:</span><br><span class="line">        - --api</span><br><span class="line">        - --kubernetes</span><br><span class="line">        - --logLevel=INFO</span><br><span class="line">        - --insecureskipverify=true</span><br><span class="line">        - --kubernetes.endpoint=https://10.4.7.10:7443      # api的vip ip</span><br><span class="line">        - --accesslog</span><br><span class="line">        - --accesslog.filepath=/var/log/traefik_access.log</span><br><span class="line">        - --traefiklog</span><br><span class="line">        - --traefiklog.filepath=/var/log/traefik.log</span><br><span class="line">        - --metrics.prometheus</span><br><span class="line"></span><br><span class="line">[root@hdss7-200 traefik]# vim service.yaml</span><br><span class="line">kind: Service</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  name: traefik-ingress-service</span><br><span class="line">  namespace: kube-system</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    k8s-app: traefik-ingress</span><br><span class="line">  ports:</span><br><span class="line">    - protocol: TCP</span><br><span class="line">      port: 80</span><br><span class="line">      name: controller</span><br><span class="line">    - protocol: TCP</span><br><span class="line">      port: 8080</span><br><span class="line">      name: admin-web</span><br><span class="line"></span><br><span class="line">[root@hdss7-200 traefik]# vim ingress.yaml</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: traefik-web-ui</span><br><span class="line">  namespace: kube-system</span><br><span class="line">  annotations:</span><br><span class="line">    kubernetes.io/ingress.class: traefik</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: traefik.od.com</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - path: /</span><br><span class="line">        backend:</span><br><span class="line">          serviceName: traefik-ingress-service</span><br><span class="line">          servicePort: 8080</span><br></pre></td></tr></table></figure>

<h2 id="创建资源清单"><a href="#创建资源清单" class="headerlink" title="创建资源清单"></a>创建资源清单</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 ~]# kubectl apply -f http://k8s-yaml.od.com/traefik/rbac.yaml</span><br><span class="line">serviceaccount/traefik-ingress-controller created</span><br><span class="line">clusterrole.rbac.authorization.k8s.io/traefik-ingress-controller created</span><br><span class="line">clusterrolebinding.rbac.authorization.k8s.io/traefik-ingress-controller created</span><br><span class="line">[root@hdss7-21 ~]# kubectl apply -f http://k8s-yaml.od.com/traefik/daemonset.yaml</span><br><span class="line">daemonset.extensions/traefik-ingress created</span><br><span class="line">[root@hdss7-21 ~]# kubectl apply -f http://k8s-yaml.od.com/traefik/service.yaml</span><br><span class="line">service/traefik-ingress-service created</span><br><span class="line">[root@hdss7-21 ~]# kubectl apply -f http://k8s-yaml.od.com/traefik/ingress.yaml</span><br><span class="line">ingress.extensions/traefik-web-ui created</span><br></pre></td></tr></table></figure>

<h2 id="创建pod时错误"><a href="#创建pod时错误" class="headerlink" title="创建pod时错误"></a>创建pod时错误</h2><ul>
<li>iptables: No chain&#x2F;target&#x2F;match by that name.</li>
</ul>
<p>修改iptables规则后，重启了iptables，但没有重启docker</p>
<h2 id="配置nginx反向代理"><a href="#配置nginx反向代理" class="headerlink" title="配置nginx反向代理"></a>配置nginx反向代理</h2><p><a href="http://hdss7-11.host.com/">HDSS7-11.host.com</a>和<a href="http://hdss7-12.host.com/">HDSS7-12.host.com</a>两台主机上的nginx均需要配置</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-11 conf.d]# vim traefik.conf</span><br><span class="line">upstream default_backend_traefik &#123;</span><br><span class="line">    server 10.4.7.21:81    max_fails=3 fail_timeout=10s;</span><br><span class="line">    server 10.4.7.22:81    max_fails=3 fail_timeout=10s;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">    server_name *.od.com;</span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://default_backend_traefik;</span><br><span class="line">        proxy_set_header Host       $http_host;</span><br><span class="line">        proxy_set_header x-forwarded-for $proxy_add_x_forwarded_for;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@hdss7-11 conf.d]# nginx -t</span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf test is successful</span><br><span class="line">[root@hdss7-11 conf.d]# nginx -s reload</span><br></pre></td></tr></table></figure>

<p>配置A记录</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-11 conf.d]# vim /var/named/od.com.zone</span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">ORIGIN od.com.</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">TTL 600  ; 10 minutes</span></span><br><span class="line">@ IN SOA dns.od.com. dnsadmin.od.com. (</span><br><span class="line">       2019111404  ; serial</span><br><span class="line">       10800     ; refresh (3 hours)</span><br><span class="line">       900       ; retry (15 minutes)</span><br><span class="line">       604800    ; expire (1 week)</span><br><span class="line">       86400     ; minimum (1 day)</span><br><span class="line">)</span><br><span class="line">       NS dns.od.com.</span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">TTL 60  ; 1 minutes</span></span><br><span class="line">dns       A  10.4.7.11</span><br><span class="line">harbor    A  10.4.7.200</span><br><span class="line">k8s-yaml  A  10.4.7.200</span><br><span class="line">traefik   A  10.4.7.10</span><br><span class="line">[root@hdss7-11 conf.d]# systemctl restart named</span><br></pre></td></tr></table></figure>

<p>注：泛域名，访问任何业务域，会调用vip，分发流量至traefik81端口</p>
<p><img src="/image/1575281193.png"></p>
]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
  </entry>
  <entry>
    <title>k8s监控系统</title>
    <url>/2020/04/17/k8s%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>kube-state-metrics  收集k8s集群基本状态信息</p>
<p>node-exporter         收集k8s运算节点基础信息</p>
<p>cadvisor                    收集容器内部使用资源信息</p>
<p>blackbox-exporter   业务容器存活</p>
<ul>
<li><a href="https://www.wqblogs.com:4443/2020/04/17/k8s%E9%83%A8%E7%BD%B2kube-state-metrics/">k8s部署kube-state-metrics</a></li>
<li><a href="https://www.wqblogs.com:4443/2020/04/17/k8s%E9%83%A8%E7%BD%B2node-exporter/">k8s部署node-exporter</a></li>
<li><a href="https://www.wqblogs.com:4443/2020/04/17/k8s%E9%83%A8%E7%BD%B2cadvisor/">k8s部署cadvisor</a></li>
<li><a href="https://www.wqblogs.com:4443/2020/04/17/k8s%E9%83%A8%E7%BD%B2blackbox-exporter/">k8s部署blackbox-exporter</a></li>
<li><a href="https://www.wqblogs.com:4443/2020/04/17/k8s%E9%83%A8%E7%BD%B2prometheus/">k8s部署prometheus</a></li>
<li><a href="https://www.wqblogs.com:4443/2020/04/20/k8s%E9%83%A8%E7%BD%B2grafana/">k8s部署grafana</a></li>
<li><a href="https://www.wqblogs.com:4443/2020/04/20/k8s%E9%83%A8%E7%BD%B2alertmanager/">k8s部署alertmanager</a></li>
</ul>
]]></content>
      <categories>
        <category>prometheus</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
        <tag>prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>k8s部署blackbox-exporter</title>
    <url>/2020/04/17/k8s%E9%83%A8%E7%BD%B2blackbox-exporter/</url>
    <content><![CDATA[<h2 id="交付blackbox-exporter"><a href="#交付blackbox-exporter" class="headerlink" title="交付blackbox-exporter"></a>交付blackbox-exporter</h2><p><a href="https://hub.docker.com/r/prom/blackbox-exporter">blackbox-exporter官方dockerhub地址</a></p>
<p><a href="https://github.com/prometheus/blackbox_exporter">blackbox-exporter官方github地址</a></p>
<h3 id="准备镜像"><a href="#准备镜像" class="headerlink" title="准备镜像"></a>准备镜像</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 ~]# docker pull prom/blackbox-exporter:v0.16.0</span><br><span class="line">[root@ops-200 ~]# docker images|grep blackbox-exporter</span><br><span class="line">prom/blackbox-exporter                                                 v0.16.0                                     5e5949f1bda7        5 months ago        19.7MB</span><br><span class="line">[root@ops-200 ~]# docker tag 5e5949f1bda7 harbor.od.com/public/blackbox-exporter:v0.16.0</span><br><span class="line">[root@ops-200 ~]# docker push harbor.od.com/public/blackbox-exporter:v0.16.0</span><br></pre></td></tr></table></figure>

<h3 id="准备资源配置清单"><a href="#准备资源配置清单" class="headerlink" title="准备资源配置清单"></a>准备资源配置清单</h3><p><strong>创建资源目录</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 ~]# mkdir /data/k8s-yaml/blackbox-exporter</span><br><span class="line">[root@ops-200 ~]# cd /data/k8s-yaml/blackbox-exporter</span><br></pre></td></tr></table></figure>

<p><strong>编写yaml</strong></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line">[<span class="string">root@ops-200</span> <span class="string">blackbox-exporter</span>]<span class="comment"># vim configmap.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">blackbox-exporter</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">blackbox-exporter</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">blackbox.yml:</span> <span class="string">|-</span></span><br><span class="line"><span class="string">    modules:</span></span><br><span class="line"><span class="string">      http_2xx:</span></span><br><span class="line"><span class="string">        prober: http</span></span><br><span class="line"><span class="string">        timeout: 2s</span></span><br><span class="line"><span class="string">        http:</span></span><br><span class="line"><span class="string">          valid_http_versions: [&quot;HTTP/1.1&quot;, &quot;HTTP/2&quot;]</span></span><br><span class="line"><span class="string">          valid_status_codes: [200,301,302]</span></span><br><span class="line"><span class="string">          method: GET</span></span><br><span class="line"><span class="string">          preferred_ip_protocol: &quot;ip4&quot;</span></span><br><span class="line"><span class="string">      tcp_connect:</span></span><br><span class="line"><span class="string">        prober: tcp</span></span><br><span class="line"><span class="string">        timeout: 2s</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">[<span class="string">root@ops-200</span> <span class="string">blackbox-exporter</span>]<span class="comment"># vim deployment.yaml</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">blackbox-exporter</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">blackbox-exporter</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">deployment.kubernetes.io/revision:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">blackbox-exporter</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">blackbox-exporter</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">config</span></span><br><span class="line">        <span class="attr">configMap:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">blackbox-exporter</span></span><br><span class="line">          <span class="attr">defaultMode:</span> <span class="number">420</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">blackbox-exporter</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">harbor.od.com/public/blackbox-exporter:v0.16.0</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">        <span class="attr">args:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--config.file=/etc/blackbox_exporter/blackbox.yml</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--log.level=info</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--web.listen-address=:9115</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">blackbox-port</span></span><br><span class="line">          <span class="attr">containerPort:</span> <span class="number">9115</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">        <span class="attr">resources:</span></span><br><span class="line">          <span class="attr">limits:</span></span><br><span class="line">            <span class="attr">cpu:</span> <span class="string">200m</span></span><br><span class="line">            <span class="attr">memory:</span> <span class="string">256Mi</span></span><br><span class="line">          <span class="attr">requests:</span></span><br><span class="line">            <span class="attr">cpu:</span> <span class="string">100m</span></span><br><span class="line">            <span class="attr">memory:</span> <span class="string">50Mi</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">config</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/etc/blackbox_exporter</span></span><br><span class="line">        <span class="attr">readinessProbe:</span></span><br><span class="line">          <span class="attr">tcpSocket:</span></span><br><span class="line">            <span class="attr">port:</span> <span class="number">9115</span></span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">5</span></span><br><span class="line">          <span class="attr">timeoutSeconds:</span> <span class="number">5</span></span><br><span class="line">          <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">          <span class="attr">successThreshold:</span> <span class="number">1</span></span><br><span class="line">          <span class="attr">failureThreshold:</span> <span class="number">3</span></span><br><span class="line"></span><br><span class="line">[<span class="string">root@ops-200</span> <span class="string">blackbox-exporter</span>]<span class="comment"># vim service.yaml</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">blackbox-exporter</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">blackbox-exporter</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">blackbox-port</span></span><br><span class="line">      <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">9115</span></span><br><span class="line"></span><br><span class="line">[<span class="string">root@ops-200</span> <span class="string">blackbox-exporter</span>]<span class="comment"># vim ingress.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">blackbox-exporter</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">blackbox.od.com</span></span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">        <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">serviceName:</span> <span class="string">blackbox-exporter</span></span><br><span class="line">          <span class="attr">servicePort:</span> <span class="string">blackbox-port</span></span><br></pre></td></tr></table></figure>

<h3 id="应用资源配置清单"><a href="#应用资源配置清单" class="headerlink" title="应用资源配置清单"></a>应用资源配置清单</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 blackbox-exporter]# kubectl apply -f configmap.yaml </span><br><span class="line">configmap/blackbox-exporter created</span><br><span class="line">[root@ops-200 blackbox-exporter]# kubectl apply -f deployment.yaml </span><br><span class="line">deployment.apps/blackbox-exporter created</span><br><span class="line">[root@ops-200 blackbox-exporter]# kubectl apply -f service.yaml </span><br><span class="line">service/blackbox-exporter created</span><br><span class="line">[root@ops-200 blackbox-exporter]# kubectl apply -f ingress.yaml</span><br><span class="line">ingress.extensions/blackbox-exporter created</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="查看数据"><a href="#查看数据" class="headerlink" title="查看数据"></a>查看数据</h3><p><img src="/image/image-20200413113442498.png" alt="image-20200413113442498"></p>
]]></content>
      <categories>
        <category>prometheus</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
        <tag>prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>k8s部署alertmanager</title>
    <url>/2020/04/20/k8s%E9%83%A8%E7%BD%B2alertmanager/</url>
    <content><![CDATA[<p><a href="https://github.com/prometheus/alertmanager">github地址</a></p>
<p><a href="https://quay.io/repository/prometheus/alertmanager">dockerhub地址</a></p>
<h3 id="准备镜像"><a href="#准备镜像" class="headerlink" title="准备镜像"></a>准备镜像</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 ~]# docker pull quay.io/prometheus/alertmanager:v0.14.0</span><br><span class="line">[root@ops-200 ~]# docker images|grep alertmanager</span><br><span class="line">quay.io/prometheus/alertmanager                                        v0.14.0                                     23744b2d645c        2 years ago         31.9MB</span><br><span class="line">[root@ops-200 ~]# docker tag 23744b2d645c harbor.od.com/infra/alertmanager:v0.14.0</span><br><span class="line">[root@ops-200 ~]# docker push harbor.od.com/infra/alertmanager:v0.14.0</span><br></pre></td></tr></table></figure>

<h3 id="准备资源配置清单"><a href="#准备资源配置清单" class="headerlink" title="准备资源配置清单"></a>准备资源配置清单</h3><p><strong>创建资源目录</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 ~]# mkdir /data/k8s-yaml/alertmanager</span><br><span class="line">[root@ops-200 ~]# cd /data/k8s-yaml/alertmanager</span><br></pre></td></tr></table></figure>

<p><strong>编写yaml</strong></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line">[<span class="string">root@ops-200</span> <span class="string">alertmanager</span>]<span class="comment"># vim configmap.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">alertmanager-config</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">infra</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">config.yml:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    global:</span></span><br><span class="line"><span class="string">      resolve_timeout: 5m</span></span><br><span class="line"><span class="string">      smtp_from: &#x27;XXXX@qq.com&#x27;</span></span><br><span class="line"><span class="string">      smtp_smarthost: &#x27;smtp.qq.com:465&#x27;</span></span><br><span class="line"><span class="string">      smtp_auth_username: &#x27;XXXX@qq.com&#x27;</span></span><br><span class="line"><span class="string">      smtp_auth_password: &#x27;passwd&#x27;</span></span><br><span class="line"><span class="string">      smtp_require_tls: false</span></span><br><span class="line"><span class="string">      smtp_hello: &#x27;XXXX@qq.com&#x27;</span></span><br><span class="line"><span class="string">    templates:   </span></span><br><span class="line"><span class="string">      - &#x27;/etc/alertmanager/*.tmpl&#x27;</span></span><br><span class="line"><span class="string">    route:</span></span><br><span class="line"><span class="string">      group_by: [&#x27;alertname&#x27;, &#x27;cluster&#x27;]</span></span><br><span class="line"><span class="string">      group_wait: 20s     </span></span><br><span class="line"><span class="string">      group_interval: 20s </span></span><br><span class="line"><span class="string">      repeat_interval: 12h </span></span><br><span class="line"><span class="string">      receiver: &#x27;email&#x27; </span></span><br><span class="line"><span class="string">    receivers:</span></span><br><span class="line"><span class="string">    - name: &#x27;email&#x27;</span></span><br><span class="line"><span class="string">      email_configs:</span></span><br><span class="line"><span class="string">      - to: &#x27;weiqun_h@163.com&#x27;   </span></span><br><span class="line"><span class="string">        send_resolved: true </span></span><br><span class="line"><span class="string">        html: &#x27;&#123;&#123; template &quot;email.to.html&quot; . &#125;&#125;&#x27; </span></span><br><span class="line"><span class="string">        headers: &#123; Subject: &quot; &#123;&#123; .CommonLabels.instance &#125;&#125; &#123;&#123; .CommonAnnotations.summary &#125;&#125;&quot; &#125;   </span></span><br><span class="line"><span class="string"></span>  <span class="attr">email.tmpl:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    &#123;&#123; define &quot;email.to.html&quot; &#125;&#125;</span></span><br><span class="line"><span class="string">    &#123;&#123;- if gt (len .Alerts.Firing) 0 -&#125;&#125;</span></span><br><span class="line"><span class="string">    &#123;&#123; range .Alerts &#125;&#125;</span></span><br><span class="line"><span class="string">    告警程序: prometheus_alert &lt;br&gt;</span></span><br><span class="line"><span class="string">    告警级别: &#123;&#123; .Labels.severity &#125;&#125; &lt;br&gt;</span></span><br><span class="line"><span class="string">    告警类型: &#123;&#123; .Labels.alertname &#125;&#125; &lt;br&gt;</span></span><br><span class="line"><span class="string">    故障主机: &#123;&#123; .Labels.instance &#125;&#125; &lt;br&gt;</span></span><br><span class="line"><span class="string">    告警主题: &#123;&#123; .Annotations.summary &#125;&#125;  &lt;br&gt;</span></span><br><span class="line"><span class="string">    触发时间: &#123;&#123; .StartsAt.Format &quot;2006-01-02 15:04:05&quot; &#125;&#125; &lt;br&gt;</span></span><br><span class="line"><span class="string">    &#123;&#123; end &#125;&#125;&#123;&#123; end -&#125;&#125;</span></span><br><span class="line"><span class="string"></span>    </span><br><span class="line">    &#123;&#123;<span class="bullet">-</span> <span class="string">if</span> <span class="string">gt</span> <span class="string">(len</span> <span class="string">.Alerts.Resolved)</span> <span class="number">0</span> <span class="string">-</span>&#125;&#125;</span><br><span class="line">    &#123;&#123; <span class="string">range</span> <span class="string">.Alerts</span> &#125;&#125;</span><br><span class="line">    <span class="string">告警程序:</span> <span class="string">prometheus_alert</span> <span class="string">&lt;br&gt;</span></span><br><span class="line">    <span class="string">告警级别:</span> &#123;&#123; <span class="string">.Labels.severity</span> &#125;&#125; <span class="string">&lt;br&gt;</span></span><br><span class="line">    <span class="string">告警类型:</span> &#123;&#123; <span class="string">.Labels.alertname</span> &#125;&#125; <span class="string">&lt;br&gt;</span></span><br><span class="line">    <span class="string">故障主机:</span> &#123;&#123; <span class="string">.Labels.instance</span> &#125;&#125; <span class="string">&lt;br&gt;</span></span><br><span class="line">    <span class="string">告警主题:</span> &#123;&#123; <span class="string">.Annotations.summary</span> &#125;&#125; <span class="string">&lt;br&gt;</span></span><br><span class="line">    <span class="string">触发时间:</span> &#123;&#123; <span class="string">.StartsAt.Format</span> <span class="string">&quot;2006-01-02 15:04:05&quot;</span> &#125;&#125; <span class="string">&lt;br&gt;</span></span><br><span class="line">    <span class="string">恢复时间:</span> &#123;&#123; <span class="string">.EndsAt.Format</span> <span class="string">&quot;2006-01-02 15:04:05&quot;</span> &#125;&#125; <span class="string">&lt;br&gt;</span></span><br><span class="line">    &#123;&#123; <span class="string">end</span> &#125;&#125;&#123;&#123; <span class="string">end</span> <span class="string">-</span>&#125;&#125;</span><br><span class="line">    </span><br><span class="line">    &#123;&#123;<span class="bullet">-</span> <span class="string">end</span> &#125;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[<span class="string">root@ops-200</span> <span class="string">alertmanager</span>]<span class="comment"># cat deployment.yaml </span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">alertmanager</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">infra</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">alertmanager</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">alertmanager</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">alertmanager</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">harbor.od.com/infra/alertmanager:v0.14.0</span></span><br><span class="line">        <span class="attr">args:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">&quot;--config.file=/etc/alertmanager/config.yml&quot;</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">&quot;--storage.path=/alertmanager&quot;</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">alertmanager</span></span><br><span class="line">          <span class="attr">containerPort:</span> <span class="number">9093</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">alertmanager-cm</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/etc/alertmanager</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">alertmanager-cm</span></span><br><span class="line">        <span class="attr">configMap:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">alertmanager-config</span></span><br><span class="line">      <span class="attr">imagePullSecrets:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">harbor</span></span><br><span class="line"></span><br><span class="line">[<span class="string">root@ops-200</span> <span class="string">alertmanager</span>]<span class="comment"># vim service.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">alertmanager</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">infra</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">alertmanager</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">9093</span></span><br></pre></td></tr></table></figure>

<h3 id="应用资源配置清单"><a href="#应用资源配置清单" class="headerlink" title="应用资源配置清单"></a>应用资源配置清单</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 alertmanager]# kubectl apply -f .</span><br><span class="line">configmap/alertmanager-config created</span><br><span class="line">deployment.apps/alertmanager created</span><br><span class="line">service/alertmanager created</span><br></pre></td></tr></table></figure>

<h3 id="报警配置"><a href="#报警配置" class="headerlink" title="报警配置"></a>报警配置</h3><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line">[<span class="string">root@ops-200</span> <span class="string">alertmanager</span>]<span class="comment"># vim /data/nfs-volume/prometheus/etc/rules.yml</span></span><br><span class="line"><span class="attr">groups:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">hostStatsAlert</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">alert:</span> <span class="string">hostCpuUsageAlert</span></span><br><span class="line">    <span class="attr">expr:</span> <span class="string">sum(avg</span> <span class="string">without</span> <span class="string">(cpu)(irate(node_cpu&#123;mode!=&#x27;idle&#x27;&#125;[5m])))</span> <span class="string">by</span> <span class="string">(instance)</span> <span class="string">&gt;</span> <span class="number">0.85</span></span><br><span class="line">    <span class="attr">for:</span> <span class="string">5m</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">severity:</span> <span class="string">warning</span></span><br><span class="line">    <span class="attr">annotations:</span></span><br><span class="line">      <span class="attr">summary:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; $labels.instance &#125;&#125;</span> CPU usage above 85% (current value: <span class="template-variable">&#123;&#123; $value &#125;&#125;</span>%)&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">alert:</span> <span class="string">hostMemUsageAlert</span></span><br><span class="line">    <span class="attr">expr:</span> <span class="string">(node_memory_MemTotal</span> <span class="bullet">-</span> <span class="string">node_memory_MemAvailable)/node_memory_MemTotal</span> <span class="string">&gt;</span> <span class="number">0.85</span></span><br><span class="line">    <span class="attr">for:</span> <span class="string">5m</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">severity:</span> <span class="string">warning</span></span><br><span class="line">    <span class="attr">annotations:</span></span><br><span class="line">      <span class="attr">summary:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; $labels.instance &#125;&#125;</span> MEM usage above 85% (current value: <span class="template-variable">&#123;&#123; $value &#125;&#125;</span>%)&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">alert:</span> <span class="string">OutOfInodes</span></span><br><span class="line">    <span class="attr">expr:</span> <span class="string">node_filesystem_free&#123;fstype=&quot;overlay&quot;,mountpoint</span> <span class="string">=&quot;/&quot;&#125;</span> <span class="string">/</span> <span class="string">node_filesystem_size&#123;fstype=&quot;overlay&quot;,mountpoint</span> <span class="string">=&quot;/&quot;&#125;</span> <span class="string">*</span> <span class="number">100</span> <span class="string">&lt;</span> <span class="number">10</span></span><br><span class="line">    <span class="attr">for:</span> <span class="string">5m</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">severity:</span> <span class="string">warning</span></span><br><span class="line">    <span class="attr">annotations:</span></span><br><span class="line">      <span class="attr">summary:</span> <span class="string">&quot;Out of inodes (instance <span class="template-variable">&#123;&#123; $labels.instance &#125;&#125;</span>)&quot;</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">&quot;Disk is almost running out of available inodes (&lt; 10% left) (current value: <span class="template-variable">&#123;&#123; $value &#125;&#125;</span>)&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">alert:</span> <span class="string">OutOfDiskSpace</span></span><br><span class="line">    <span class="attr">expr:</span> <span class="string">node_filesystem_free&#123;fstype=&quot;overlay&quot;,mountpoint</span> <span class="string">=&quot;/rootfs&quot;&#125;</span> <span class="string">/</span> <span class="string">node_filesystem_size&#123;fstype=&quot;overlay&quot;,mountpoint</span> <span class="string">=&quot;/rootfs&quot;&#125;</span> <span class="string">*</span> <span class="number">100</span> <span class="string">&lt;</span> <span class="number">10</span></span><br><span class="line">    <span class="attr">for:</span> <span class="string">5m</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">severity:</span> <span class="string">warning</span></span><br><span class="line">    <span class="attr">annotations:</span></span><br><span class="line">      <span class="attr">summary:</span> <span class="string">&quot;Out of disk space (instance <span class="template-variable">&#123;&#123; $labels.instance &#125;&#125;</span>)&quot;</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">&quot;Disk is almost full (&lt; 10% left) (current value: <span class="template-variable">&#123;&#123; $value &#125;&#125;</span>)&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">alert:</span> <span class="string">UnusualNetworkThroughputIn</span></span><br><span class="line">    <span class="attr">expr:</span> <span class="string">sum</span> <span class="string">by</span> <span class="string">(instance)</span> <span class="string">(irate(node_network_receive_bytes[2m]))</span> <span class="string">/</span> <span class="number">1024</span> <span class="string">/</span> <span class="number">1024</span> <span class="string">&gt;</span> <span class="number">100</span></span><br><span class="line">    <span class="attr">for:</span> <span class="string">5m</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">severity:</span> <span class="string">warning</span></span><br><span class="line">    <span class="attr">annotations:</span></span><br><span class="line">      <span class="attr">summary:</span> <span class="string">&quot;Unusual network throughput in (instance <span class="template-variable">&#123;&#123; $labels.instance &#125;&#125;</span>)&quot;</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">&quot;Host network interfaces are probably receiving too much data (&gt; 100 MB/s) (current value: <span class="template-variable">&#123;&#123; $value &#125;&#125;</span>)&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">alert:</span> <span class="string">UnusualNetworkThroughputOut</span></span><br><span class="line">    <span class="attr">expr:</span> <span class="string">sum</span> <span class="string">by</span> <span class="string">(instance)</span> <span class="string">(irate(node_network_transmit_bytes[2m]))</span> <span class="string">/</span> <span class="number">1024</span> <span class="string">/</span> <span class="number">1024</span> <span class="string">&gt;</span> <span class="number">100</span></span><br><span class="line">    <span class="attr">for:</span> <span class="string">5m</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">severity:</span> <span class="string">warning</span></span><br><span class="line">    <span class="attr">annotations:</span></span><br><span class="line">      <span class="attr">summary:</span> <span class="string">&quot;Unusual network throughput out (instance <span class="template-variable">&#123;&#123; $labels.instance &#125;&#125;</span>)&quot;</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">&quot;Host network interfaces are probably sending too much data (&gt; 100 MB/s) (current value: <span class="template-variable">&#123;&#123; $value &#125;&#125;</span>)&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">alert:</span> <span class="string">UnusualDiskReadRate</span></span><br><span class="line">    <span class="attr">expr:</span> <span class="string">sum</span> <span class="string">by</span> <span class="string">(instance)</span> <span class="string">(irate(node_disk_bytes_read[2m]))</span> <span class="string">/</span> <span class="number">1024</span> <span class="string">/</span> <span class="number">1024</span> <span class="string">&gt;</span> <span class="number">50</span></span><br><span class="line">    <span class="attr">for:</span> <span class="string">5m</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">severity:</span> <span class="string">warning</span></span><br><span class="line">    <span class="attr">annotations:</span></span><br><span class="line">      <span class="attr">summary:</span> <span class="string">&quot;Unusual disk read rate (instance <span class="template-variable">&#123;&#123; $labels.instance &#125;&#125;</span>)&quot;</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">&quot;Disk is probably reading too much data (&gt; 50 MB/s) (current value: <span class="template-variable">&#123;&#123; $value &#125;&#125;</span>)&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">alert:</span> <span class="string">UnusualDiskWriteRate</span></span><br><span class="line">    <span class="attr">expr:</span> <span class="string">sum</span> <span class="string">by</span> <span class="string">(instance)</span> <span class="string">(irate(node_disk_bytes_written[2m]))</span> <span class="string">/</span> <span class="number">1024</span> <span class="string">/</span> <span class="number">1024</span> <span class="string">&gt;</span> <span class="number">50</span></span><br><span class="line">    <span class="attr">for:</span> <span class="string">5m</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">severity:</span> <span class="string">warning</span></span><br><span class="line">    <span class="attr">annotations:</span></span><br><span class="line">      <span class="attr">summary:</span> <span class="string">&quot;Unusual disk write rate (instance <span class="template-variable">&#123;&#123; $labels.instance &#125;&#125;</span>)&quot;</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">&quot;Disk is probably writing too much data (&gt; 50 MB/s) (current value: <span class="template-variable">&#123;&#123; $value &#125;&#125;</span>)&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">alert:</span> <span class="string">UnusualDiskReadLatency</span></span><br><span class="line">    <span class="attr">expr:</span> <span class="string">rate(node_disk_read_time_ms[1m])</span> <span class="string">/</span> <span class="string">rate(node_disk_reads_completed[1m])</span> <span class="string">&gt;</span> <span class="number">100</span></span><br><span class="line">    <span class="attr">for:</span> <span class="string">5m</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">severity:</span> <span class="string">warning</span></span><br><span class="line">    <span class="attr">annotations:</span></span><br><span class="line">      <span class="attr">summary:</span> <span class="string">&quot;Unusual disk read latency (instance <span class="template-variable">&#123;&#123; $labels.instance &#125;&#125;</span>)&quot;</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">&quot;Disk latency is growing (read operations &gt; 100ms) (current value: <span class="template-variable">&#123;&#123; $value &#125;&#125;</span>)&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">alert:</span> <span class="string">UnusualDiskWriteLatency</span></span><br><span class="line">    <span class="attr">expr:</span> <span class="string">rate(node_disk_write_time_ms[1m])</span> <span class="string">/</span> <span class="string">rate(node_disk_writes_completedl[1m])</span> <span class="string">&gt;</span> <span class="number">100</span></span><br><span class="line">    <span class="attr">for:</span> <span class="string">5m</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">severity:</span> <span class="string">warning</span></span><br><span class="line">    <span class="attr">annotations:</span></span><br><span class="line">      <span class="attr">summary:</span> <span class="string">&quot;Unusual disk write latency (instance <span class="template-variable">&#123;&#123; $labels.instance &#125;&#125;</span>)&quot;</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">&quot;Disk latency is growing (write operations &gt; 100ms) (current value: <span class="template-variable">&#123;&#123; $value &#125;&#125;</span>)&quot;</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http_status</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">alert:</span> <span class="string">ProbeFailed</span></span><br><span class="line">    <span class="attr">expr:</span> <span class="string">probe_success</span> <span class="string">==</span> <span class="number">0</span></span><br><span class="line">    <span class="attr">for:</span> <span class="string">1m</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">severity:</span> <span class="string">error</span></span><br><span class="line">    <span class="attr">annotations:</span></span><br><span class="line">      <span class="attr">summary:</span> <span class="string">&quot;Probe failed (instance <span class="template-variable">&#123;&#123; $labels.instance &#125;&#125;</span>)&quot;</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">&quot;Probe failed (current value: <span class="template-variable">&#123;&#123; $value &#125;&#125;</span>)&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">alert:</span> <span class="string">StatusCode</span></span><br><span class="line">    <span class="attr">expr:</span> <span class="string">probe_http_status_code</span> <span class="string">&lt;=</span> <span class="number">199</span> <span class="string">OR</span> <span class="string">probe_http_status_code</span> <span class="string">&gt;=</span> <span class="number">400</span></span><br><span class="line">    <span class="attr">for:</span> <span class="string">1m</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">severity:</span> <span class="string">error</span></span><br><span class="line">    <span class="attr">annotations:</span></span><br><span class="line">      <span class="attr">summary:</span> <span class="string">&quot;Status Code (instance <span class="template-variable">&#123;&#123; $labels.instance &#125;&#125;</span>)&quot;</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">&quot;HTTP status code is not 200-399 (current value: <span class="template-variable">&#123;&#123; $value &#125;&#125;</span>)&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">alert:</span> <span class="string">SslCertificateWillExpireSoon</span></span><br><span class="line">    <span class="attr">expr:</span> <span class="string">probe_ssl_earliest_cert_expiry</span> <span class="bullet">-</span> <span class="string">time()</span> <span class="string">&lt;</span> <span class="number">86400</span> <span class="string">*</span> <span class="number">30</span></span><br><span class="line">    <span class="attr">for:</span> <span class="string">5m</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">severity:</span> <span class="string">warning</span></span><br><span class="line">    <span class="attr">annotations:</span></span><br><span class="line">      <span class="attr">summary:</span> <span class="string">&quot;SSL certificate will expire soon (instance <span class="template-variable">&#123;&#123; $labels.instance &#125;&#125;</span>)&quot;</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">&quot;SSL certificate expires in 30 days (current value: <span class="template-variable">&#123;&#123; $value &#125;&#125;</span>)&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">alert:</span> <span class="string">SslCertificateHasExpired</span></span><br><span class="line">    <span class="attr">expr:</span> <span class="string">probe_ssl_earliest_cert_expiry</span> <span class="bullet">-</span> <span class="string">time()</span>  <span class="string">&lt;=</span> <span class="number">0</span></span><br><span class="line">    <span class="attr">for:</span> <span class="string">5m</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">severity:</span> <span class="string">error</span></span><br><span class="line">    <span class="attr">annotations:</span></span><br><span class="line">      <span class="attr">summary:</span> <span class="string">&quot;SSL certificate has expired (instance <span class="template-variable">&#123;&#123; $labels.instance &#125;&#125;</span>)&quot;</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">&quot;SSL certificate has expired already (current value: <span class="template-variable">&#123;&#123; $value &#125;&#125;</span>)&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">alert:</span> <span class="string">BlackboxSlowPing</span></span><br><span class="line">    <span class="attr">expr:</span> <span class="string">probe_icmp_duration_seconds</span> <span class="string">&gt;</span> <span class="number">2</span></span><br><span class="line">    <span class="attr">for:</span> <span class="string">5m</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">severity:</span> <span class="string">warning</span></span><br><span class="line">    <span class="attr">annotations:</span></span><br><span class="line">      <span class="attr">summary:</span> <span class="string">&quot;Blackbox slow ping (instance <span class="template-variable">&#123;&#123; $labels.instance &#125;&#125;</span>)&quot;</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">&quot;Blackbox ping took more than 2s (current value: <span class="template-variable">&#123;&#123; $value &#125;&#125;</span>)&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">alert:</span> <span class="string">BlackboxSlowRequests</span></span><br><span class="line">    <span class="attr">expr:</span> <span class="string">probe_http_duration_seconds</span> <span class="string">&gt;</span> <span class="number">2</span></span><br><span class="line">    <span class="attr">for:</span> <span class="string">5m</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">severity:</span> <span class="string">warning</span></span><br><span class="line">    <span class="attr">annotations:</span></span><br><span class="line">      <span class="attr">summary:</span> <span class="string">&quot;Blackbox slow requests (instance <span class="template-variable">&#123;&#123; $labels.instance &#125;&#125;</span>)&quot;</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">&quot;Blackbox request took more than 2s (current value: <span class="template-variable">&#123;&#123; $value &#125;&#125;</span>)&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">alert:</span> <span class="string">PodCpuUsagePercent</span></span><br><span class="line">    <span class="attr">expr:</span> <span class="string">sum(sum(label_replace(irate(container_cpu_usage_seconds_total[1m]),&quot;pod&quot;,&quot;$1&quot;,&quot;container_label_io_kubernetes_pod_name&quot;,</span> <span class="string">&quot;(.*)&quot;</span><span class="string">))by(pod)</span> <span class="string">/</span> <span class="string">on(pod)</span> <span class="string">group_right</span> <span class="string">kube_pod_container_resource_limits_cpu_cores</span> <span class="string">*100</span> <span class="string">)by(container,namespace,node,pod,severity)</span> <span class="string">&gt;</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">for:</span> <span class="string">5m</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">severity:</span> <span class="string">warning</span></span><br><span class="line">    <span class="attr">annotations:</span></span><br><span class="line">      <span class="attr">summary:</span> <span class="string">&quot;Pod cpu usage percent has exceeded 80% (current value: <span class="template-variable">&#123;&#123; $value &#125;&#125;</span>%)&quot;</span></span><br></pre></td></tr></table></figure>

<p><strong>prometheus添加报警</strong></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line">[<span class="string">root@ops-200</span> <span class="string">alertmanager</span>]<span class="comment"># vim /data/nfs-volume/prometheus/etc/prometheus.yml </span></span><br><span class="line"><span class="attr">global:</span></span><br><span class="line">  <span class="attr">scrape_interval:</span>     <span class="string">15s</span></span><br><span class="line">  <span class="attr">evaluation_interval:</span> <span class="string">15s</span></span><br><span class="line"><span class="attr">alerting:</span></span><br><span class="line">  <span class="attr">alertmanagers:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">static_configs:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">targets:</span> [<span class="string">&quot;alertmanager&quot;</span>]</span><br><span class="line"><span class="attr">rule_files:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">&quot;/data/etc/rules.yml&quot;</span></span><br></pre></td></tr></table></figure>

<p><strong>刷新配置</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 alertmanager]# curl -X POST http://prometheus.od.com/-/reload</span><br></pre></td></tr></table></figure>

<p><strong>报警规则页面</strong></p>
<p><img src="/image/image-20200420231546811.png" alt="image-20200420231546811"></p>
<h3 id="测试报警"><a href="#测试报警" class="headerlink" title="测试报警"></a>测试报警</h3><p>把dubbo服务的提供者缩容为0</p>
<p><img src="/image/image-20200420231922349.png" alt="image-20200420231922349"></p>
<p>把dubbo服务的提供者恢复为1</p>
<p><img src="/image/image-20200420232322670.png" alt="image-20200420232322670"></p>
]]></content>
      <categories>
        <category>prometheus</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
        <tag>prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>k8s部署cadvisor</title>
    <url>/2020/04/17/k8s%E9%83%A8%E7%BD%B2cadvisor/</url>
    <content><![CDATA[<h2 id="交付cadviso"><a href="#交付cadviso" class="headerlink" title="交付cadviso"></a>交付cadviso</h2><p><a href="https://hub.docker.com/r/google/cadvisor">cadvisor官方dockerhub地址</a></p>
<p><a href="https://github.com/google/cadvisor">cadvisor官方github地址</a></p>
<h3 id="准备镜像"><a href="#准备镜像" class="headerlink" title="准备镜像"></a>准备镜像</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 ~]# docker pull google/cadvisor:v0.33.0</span><br><span class="line">[root@ops-200 ~]# docker images|grep cadvisor</span><br><span class="line">google/cadvisor                                                        v0.33.0                                     752d61707eac        13 months ago       68.6MB</span><br><span class="line">[root@ops-200 ~]# docker tag 752d61707eac harbor.od.com/public/cadvisor:v0.33.0</span><br><span class="line">[root@ops-200 ~]# docker push harbor.od.com/public/cadvisor:v0.33.0</span><br></pre></td></tr></table></figure>

<h3 id="准备资源配置清单"><a href="#准备资源配置清单" class="headerlink" title="准备资源配置清单"></a>准备资源配置清单</h3><p>创建资源目录</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 ~]# mkdir /data/k8s-yaml/cadvisor</span><br><span class="line">[root@ops-200 ~]# cd /data/k8s-yaml/cadvisor</span><br></pre></td></tr></table></figure>

<p>编写yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line">[<span class="string">root@ops-200</span> <span class="string">cadvisor</span>]<span class="comment"># vim daemonset.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">DaemonSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">cadvisor</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">cadvisor</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">cadvisor</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">cadvisor</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">hostNetwork:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">tolerations:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">node-role.kubernetes.io/master</span></span><br><span class="line">        <span class="attr">effect:</span> <span class="string">NoSchedule</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">cadvisor</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">harbor.od.com/public/cadvisor:v0.33.0</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">rootfs</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/rootfs</span></span><br><span class="line">          <span class="attr">readOnly:</span> <span class="literal">true</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">var-run</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/var/run</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">sys</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/sys</span></span><br><span class="line">          <span class="attr">readOnly:</span> <span class="literal">true</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">docker</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/var/lib/docker</span></span><br><span class="line">          <span class="attr">readOnly:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">            <span class="attr">containerPort:</span> <span class="number">4194</span></span><br><span class="line">            <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">        <span class="attr">readinessProbe:</span></span><br><span class="line">          <span class="attr">tcpSocket:</span></span><br><span class="line">            <span class="attr">port:</span> <span class="number">4194</span></span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">5</span></span><br><span class="line">          <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">        <span class="attr">args:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">--housekeeping_interval=10s</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">--port=4194</span></span><br><span class="line">      <span class="attr">terminationGracePeriodSeconds:</span> <span class="number">30</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">rootfs</span></span><br><span class="line">        <span class="attr">hostPath:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">var-run</span></span><br><span class="line">        <span class="attr">hostPath:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">/var/run</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">sys</span></span><br><span class="line">        <span class="attr">hostPath:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">/sys</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">docker</span></span><br><span class="line">        <span class="attr">hostPath:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">/data/docker</span></span><br></pre></td></tr></table></figure>

<h3 id="修改运算节点软链接"><a href="#修改运算节点软链接" class="headerlink" title="修改运算节点软链接"></a>修改运算节点软链接</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@k8s01-21 ~]# mount -o remount,rw /sys/fs/cgroup/</span><br><span class="line">[root@k8s01-21 ~]# ln -s /sys/fs/cgroup/cpu,cpuacct /sys/fs/cgroup/cpuacct,cpu</span><br></pre></td></tr></table></figure>

<h3 id="应用资源配置清单"><a href="#应用资源配置清单" class="headerlink" title="应用资源配置清单"></a>应用资源配置清单</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 cadvisor]# kubectl apply -f daemonset.yaml</span><br><span class="line">daemonset.apps/cadvisor created</span><br></pre></td></tr></table></figure>

<h3 id="查看数据"><a href="#查看数据" class="headerlink" title="查看数据"></a>查看数据</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@k8s01-21 ~]# kubectl get pod -n kube-system -o wide|grep cadvisor</span><br><span class="line">cadvisor-cxgts                              1/1     Running   0          7m38s   192.168.1.23   k8s03-23.host.com   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">cadvisor-kc8g7                              1/1     Running   0          7m38s   192.168.1.22   k8s02-22.host.com   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">cadvisor-klm7j                              1/1     Running   0          7m38s   192.168.1.21   k8s01-21.host.com   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">[root@k8s01-21 ~]# curl 192.168.1.21:4194/metrics</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>prometheus</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
        <tag>prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>k8s部署consul集群</title>
    <url>/2021/01/27/k8s%E9%83%A8%E7%BD%B2conusl/</url>
    <content><![CDATA[<h2 id="准备资源配置清单"><a href="#准备资源配置清单" class="headerlink" title="准备资源配置清单"></a>准备资源配置清单</h2><ul>
<li>consul.yaml</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim consul.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">StatefulSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">consul</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">demo</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">consul</span></span><br><span class="line">    <span class="attr">component:</span> <span class="string">server</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">serviceName:</span> <span class="string">consul</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">consul</span></span><br><span class="line">      <span class="attr">component:</span> <span class="string">server</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">consul</span></span><br><span class="line">        <span class="attr">component:</span> <span class="string">server</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">imagePullSecrets:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">harbor</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">host-time</span></span><br><span class="line">        <span class="attr">hostPath:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">/etc/localtime</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">config</span></span><br><span class="line">        <span class="attr">configMap:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">consul-config</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">consul</span></span><br><span class="line">        <span class="attr">image:</span> <span class="number">10.166</span><span class="number">.33</span><span class="number">.110</span><span class="string">/infra/consul:1.9.2</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">        <span class="attr">args:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">&quot;agent&quot;</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">&quot;-server&quot;</span>                  <span class="comment"># 以server加入集群</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">&quot;-bootstrap-expect=3&quot;</span>      <span class="comment"># 组成集群预期需要的数量</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">&quot;-config-dir=/etc/consul/config&quot;</span>                     <span class="comment">#配置文件目录，所有以.json结尾的文件都会被加载，可以是服务或consul自身的配置</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">&quot;-advertise=$(PODIP)&quot;</span>      <span class="comment"># 节点地址</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">&quot;-retry-join=consul-0.consul.$(NAMESPACE).svc.cluster.local&quot;</span>   <span class="comment"># 对已知地址情况下，启动时加入的另一位代理的地址</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">&quot;-retry-join=consul-1.consul.$(NAMESPACE).svc.cluster.local&quot;</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">&quot;-retry-join=consul-2.consul.$(NAMESPACE).svc.cluster.local&quot;</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">consul</span></span><br><span class="line">            <span class="attr">mountPath:</span> <span class="string">/consul/data</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">host-time</span></span><br><span class="line">            <span class="attr">mountPath:</span> <span class="string">/etc/localtime</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">config</span></span><br><span class="line">            <span class="attr">mountPath:</span> <span class="string">/etc/consul/config</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">PODIP</span></span><br><span class="line">            <span class="attr">valueFrom:</span></span><br><span class="line">              <span class="attr">fieldRef:</span></span><br><span class="line">                <span class="attr">fieldPath:</span> <span class="string">status.podIP</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">NAMESPACE</span></span><br><span class="line">            <span class="attr">valueFrom:</span></span><br><span class="line">              <span class="attr">fieldRef:</span></span><br><span class="line">                <span class="attr">fieldPath:</span> <span class="string">metadata.namespace</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8500</span>     <span class="comment"># HTTP API 及 Web UI</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8300</span>     <span class="comment">#  Server RPC，server 用于接受其他 agent 的请求</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">server</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8301</span>     <span class="comment"># Serf LAN，数据中心内 gossip 交换数据用</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">serflan</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8302</span>     <span class="comment"># Serf WAN，跨数据中心 gossip 交换数据用</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">serfwan</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8400</span>     <span class="comment"># CLI RPC，接受命令行的 RPC 调用</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">cli-port</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8600</span>     <span class="comment"># DNS 服务，可以把它配置到 53 端口来响应 dns 请求</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">consuldns</span></span><br><span class="line">  <span class="attr">volumeClaimTemplates:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">consul</span></span><br><span class="line">      <span class="attr">namespace:</span> <span class="string">demo</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">accessModes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">ReadWriteMany</span></span><br><span class="line">      <span class="attr">resources:</span></span><br><span class="line">        <span class="attr">requests:</span></span><br><span class="line">          <span class="attr">storage:</span> <span class="string">5Gi</span></span><br><span class="line">      <span class="attr">storageClassName:</span> <span class="string">nfs</span></span><br></pre></td></tr></table></figure>
<ul>
<li>headless.yaml</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">consul</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">demo</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">consul</span></span><br><span class="line">    <span class="attr">component:</span> <span class="string">server</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">clusterIP:</span> <span class="string">None</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">8500</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8500</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">server</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">8300</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8300</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">serflan-tcp</span></span><br><span class="line">      <span class="attr">protocol:</span> <span class="string">&quot;TCP&quot;</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">8301</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8301</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">serflan-udp</span></span><br><span class="line">      <span class="attr">protocol:</span> <span class="string">&quot;UDP&quot;</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">8301</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8301</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">serfwan-tcp</span></span><br><span class="line">      <span class="attr">protocol:</span> <span class="string">&quot;TCP&quot;</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">8302</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8302</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">serfwan-udp</span></span><br><span class="line">      <span class="attr">protocol:</span> <span class="string">&quot;UDP&quot;</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">8302</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8302</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">cli-port</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">8400</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8400</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">consuldns</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">8600</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8600</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">consul</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">consul-web</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">demo</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">consul</span></span><br><span class="line">    <span class="attr">component:</span> <span class="string">server</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">      <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">8500</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8500</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">server</span></span><br><span class="line">      <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">8300</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8300</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">serflan-tcp</span></span><br><span class="line">      <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">8301</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8301</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">serflan-udp</span></span><br><span class="line">      <span class="attr">protocol:</span> <span class="string">UDP</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">8301</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8301</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">serfwan-tcp</span></span><br><span class="line">      <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">8302</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8302</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">serfwan-udp</span></span><br><span class="line">      <span class="attr">protocol:</span> <span class="string">UDP</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">8302</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8302</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">cli-port</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">8400</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8400</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">consuldns</span></span><br><span class="line">      <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">8600</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8600</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">consul</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ClusterIP</span></span><br></pre></td></tr></table></figure>

<ul>
<li>config.yaml</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">consul-config</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">demo</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">server.json:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">      &quot;bind_addr&quot;: &quot;0.0.0.0&quot;,           // 应为内部集群通信绑定的地址</span></span><br><span class="line"><span class="string">      &quot;client_addr&quot;: &quot;0.0.0.0&quot;,         // consul绑定客户端接口的地址</span></span><br><span class="line"><span class="string">      &quot;disable_host_node_id&quot;: true,     // 将此设置为true将阻止Consul使用来自主机的信息生成确定性节点标识，并将生成随机节点标识，该标识将保留在数据目录中</span></span><br><span class="line"><span class="string">      &quot;data_dir&quot;: &quot;/consul/data&quot;,       // consul持久化数据存储位置</span></span><br><span class="line"><span class="string">      &quot;datacenter&quot;: &quot;shisuyun&quot;,         // 数据中心名称</span></span><br><span class="line"><span class="string">      &quot;bootstrap_expect&quot;: 3,            // 组成集群预期需要的数量</span></span><br><span class="line"><span class="string">      &quot;server&quot;: true,                   // 表示当前使用的server模式</span></span><br><span class="line"><span class="string">      &quot;domain&quot;: &quot;cluster.consul&quot;,       // 默认情况下，Consul响应&quot;consul&quot;中的DNS查询</span></span><br><span class="line"><span class="string">      &quot;retry_join&quot;: [                   // k8s集群</span></span><br><span class="line"><span class="string">        &quot;provider=k8s namespace=demo label_selector=\&quot;app=consul,component=server\&quot;&quot;</span></span><br><span class="line"><span class="string">      ],</span></span><br><span class="line"><span class="string">      &quot;telemetry&quot;: &#123;</span></span><br><span class="line"><span class="string">        &quot;prometheus_retention_time&quot;: &quot;5m&quot;</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span>  <span class="attr">ui.json:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">      &quot;ui&quot; : true,                      // 启用内置的Web UI服务器和所需的HTTP路由</span></span><br><span class="line"><span class="string">      &quot;client_addr&quot; : &quot;0.0.0.0&quot;,</span></span><br><span class="line"><span class="string">      &quot;enable_script_checks&quot; : false,</span></span><br><span class="line"><span class="string">      &quot;disable_remote_exec&quot; : true</span></span><br><span class="line"><span class="string">    &#125;</span></span><br></pre></td></tr></table></figure>

<h2 id="应用资源配置清单"><a href="#应用资源配置清单" class="headerlink" title="应用资源配置清单"></a>应用资源配置清单</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl apply -f headless.yaml</span></span><br><span class="line">service/consul created</span><br><span class="line">service/consul-web created</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl apply -f config.yaml</span></span><br><span class="line">configmap/consul-config  created</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl apply -f consul.yaml</span></span><br><span class="line">statefulset.apps/consul created</span><br></pre></td></tr></table></figure>

<p><img src="https://www.wqblogs.com:4443/image/k8s-consul.png"></p>
]]></content>
      <categories>
        <category>Kubernetes</category>
        <category>consul</category>
      </categories>
      <tags>
        <tag>consul</tag>
        <tag>kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>k8s部署grafana</title>
    <url>/2020/04/20/k8s%E9%83%A8%E7%BD%B2grafana/</url>
    <content><![CDATA[<p><a href="https://hub.docker.com/r/grafana/grafana">grafana官方dockerhub地址</a></p>
<p><a href="https://github.com/grafana/grafana">grafana官方github地址</a></p>
<p><a href="https://grafana.com/">grafana官网</a></p>
<h3 id="准备镜像"><a href="#准备镜像" class="headerlink" title="准备镜像"></a>准备镜像</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 ~]# docker pull grafana/grafana:6.7.2</span><br><span class="line">[root@ops-200 ~]# docker images|grep grafana</span><br><span class="line">grafana/grafana                                                        6.7.2                                       322e0a666176        10 days ago         233MB</span><br><span class="line">[root@ops-200 ~]# docker tag 322e0a666176 harbor.od.com/infra/grafana:v6.7.2</span><br><span class="line">[root@ops-200 ~]# docker push harbor.od.com/infra/grafana:v6.7.2</span><br></pre></td></tr></table></figure>

<h3 id="准备资源配置清单"><a href="#准备资源配置清单" class="headerlink" title="准备资源配置清单"></a>准备资源配置清单</h3><p>创建资源目录</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 ~]# mkdir /data/k8s-yaml/grafana</span><br><span class="line">[root@ops-200 ~]# cd /data/k8s-yaml/grafana</span><br><span class="line">[root@ops-200 grafana]# mkdir /data/nfs-volume/grafana</span><br></pre></td></tr></table></figure>

<p>编写yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line">[<span class="string">root@ops-200</span> <span class="string">grafana</span>]<span class="comment"># vim rbac.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">addonmanager.kubernetes.io/mode:</span> <span class="string">Reconcile</span></span><br><span class="line">    <span class="attr">kubernetes.io/cluster-service:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">grafana</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;*&quot;</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">namespaces</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">deployments</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">pods</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">list</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">watch</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">addonmanager.kubernetes.io/mode:</span> <span class="string">Reconcile</span></span><br><span class="line">    <span class="attr">kubernetes.io/cluster-service:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">grafana</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">grafana</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">User</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">k8s-node</span></span><br><span class="line"></span><br><span class="line">[<span class="string">root@ops-200</span> <span class="string">grafana</span>]<span class="comment"># vim deployment.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">grafana</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">grafana</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">grafana</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">infra</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">progressDeadlineSeconds:</span> <span class="number">600</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">revisionHistoryLimit:</span> <span class="number">7</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">grafana</span></span><br><span class="line">  <span class="attr">strategy:</span></span><br><span class="line">    <span class="attr">rollingUpdate:</span></span><br><span class="line">      <span class="attr">maxSurge:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">maxUnavailable:</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">RollingUpdate</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">grafana</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">grafana</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">grafana</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">harbor.od.com/infra/grafana:v6.7.2</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">3000</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/var/lib/grafana</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">data</span></span><br><span class="line">      <span class="attr">imagePullSecrets:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">harbor</span></span><br><span class="line">      <span class="attr">securityContext:</span></span><br><span class="line">        <span class="attr">runAsUser:</span> <span class="number">0</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">nfs:</span></span><br><span class="line">          <span class="attr">server:</span> <span class="string">ops-200.host.com</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">/data/nfs-volume/grafana</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">data</span></span><br><span class="line"></span><br><span class="line">[<span class="string">root@ops-200</span> <span class="string">grafana</span>]<span class="comment"># vim service.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">grafana</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">infra</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">3000</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">3000</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">grafana</span></span><br><span class="line"></span><br><span class="line">[<span class="string">root@ops-200</span> <span class="string">grafana</span>]<span class="comment"># vim ingress.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">grafana</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">infra</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">grafana.od.com</span></span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">        <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">serviceName:</span> <span class="string">grafana</span></span><br><span class="line">          <span class="attr">servicePort:</span> <span class="number">3000</span></span><br></pre></td></tr></table></figure>

<h3 id="应用资源配置清单"><a href="#应用资源配置清单" class="headerlink" title="应用资源配置清单"></a>应用资源配置清单</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 grafana]# kubectl apply -f rbac.yaml </span><br><span class="line">clusterrole.rbac.authorization.k8s.io/grafana created</span><br><span class="line">clusterrolebinding.rbac.authorization.k8s.io/grafana created</span><br><span class="line">[root@ops-200 grafana]# kubectl apply -f deployment.yaml </span><br><span class="line">deployment.apps/grafana created</span><br><span class="line">[root@ops-200 grafana]# kubectl apply -f service.yaml </span><br><span class="line">service/grafana created</span><br><span class="line">[root@ops-200 grafana]# kubectl apply -f ingress.yaml </span><br><span class="line">ingress.extensions/grafana created</span><br></pre></td></tr></table></figure>

<h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 grafana]# kubectl get pod -ninfra|grep grafana</span><br><span class="line">grafana-766ccf4fcd-9qwn7      1/1     Running   0          4m48s</span><br><span class="line">[root@ops-200 grafana]# kubectl exec -it grafana-766ccf4fcd-9qwn7 bash -n infra </span><br><span class="line">bash-5.0# grafana-cli plugins install grafana-kubernetes-app</span><br><span class="line">bash-5.0# grafana-cli plugins install grafana-clock-panel</span><br><span class="line">bash-5.0# grafana-cli plugins install grafana-piechart-panel</span><br><span class="line">bash-5.0# grafana-cli plugins install briangann-gauge-panel</span><br><span class="line">bash-5.0# grafana-cli plugins install natel-discrete-panel</span><br><span class="line">[root@ops-200 grafana]# kubectl delete pod grafana-766ccf4fcd-9qwn7 -n infra</span><br><span class="line">pod &quot;grafana-766ccf4fcd-9qwn7&quot; deleted</span><br></pre></td></tr></table></figure>

<h3 id="添加数据源"><a href="#添加数据源" class="headerlink" title="添加数据源"></a>添加数据源</h3><h4 id="添加prometheus"><a href="#添加prometheus" class="headerlink" title="添加prometheus"></a>添加prometheus</h4><p><img src="/image/image-20200413165018098.png" alt="image-20200413165018098"></p>
<p>复制证书</p>
<p><img src="/image/image-20200413164903542.png" alt="image-20200413164903542"></p>
<h4 id="k8s插件配置"><a href="#k8s插件配置" class="headerlink" title="k8s插件配置"></a>k8s插件配置</h4><p><img src="/image/image-20200413165651469.png" alt="image-20200413165651469"></p>
<p>复制证书 client证书为&#x2F;root&#x2F;.kube&#x2F;config,需要对其进行解码</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">CA Cert</span> </span><br><span class="line">cat ~/.kube/config | grep certificate-authority-data | cut -d &#x27; &#x27; -f 6 | base64 -d</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Client Cert</span> </span><br><span class="line">cat ~/.kube/config | grep client-certificate-data | cut -d &#x27; &#x27; -f 6 | base64 -d</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Client Key</span> </span><br><span class="line">cat ~/.kube/config | grep client-key-data | cut -d &#x27; &#x27; -f 6 | base64 -d</span><br></pre></td></tr></table></figure>

<p><img src="/image/image-20200413165740480.png" alt="image-20200413165740480"></p>
<h3 id="dashboard展示"><a href="#dashboard展示" class="headerlink" title="dashboard展示"></a>dashboard展示</h3><p><img src="/image/2365689674845.jpg" alt="2365689674845"></p>
]]></content>
      <categories>
        <category>prometheus</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
        <tag>prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>k8s部署jenkins</title>
    <url>/2019/12/31/k8s%E9%83%A8%E7%BD%B2jenkins/</url>
    <content><![CDATA[<h2 id="镜像准备"><a href="#镜像准备" class="headerlink" title="镜像准备"></a>镜像准备</h2><p><a href="https://hub.docker.com/r/jenkins/jenkins">jenkins镜像</a></p>
<ul>
<li>自定义dockerfile</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mkdir</span> /data/dockerfile/jenkins/ -p</span>    </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cd</span> /data/dockerfile/jenkins/</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim Dockerfile</span></span><br><span class="line">FROM jenkins/jenkins:2.276</span><br><span class="line">USER root</span><br><span class="line">RUN /bin/cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &amp;&amp;  echo &#x27;Asia/Shanghai&#x27; &gt;/etc/timezone</span><br><span class="line">ADD config.json /root/.docker/config.json</span><br><span class="line">ADD get-docker.sh /get-docker.sh</span><br><span class="line">RUN echo &quot;deb https://mirrors.aliyun.com/kubernetes/apt/ kubernetes-xenial main&quot; &gt;&gt;/etc/apt/sources.list.d/kubernetes.list</span><br><span class="line">RUN apt-get install -y apt-transport-https</span><br><span class="line">RUN curl -s https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg | apt-key add -</span><br><span class="line">RUN echo &quot;  StrictHostKeyChecking no&quot; &gt;&gt; /etc/ssh/ssh_config &amp;&amp;  /get-docker.sh --mirror Aliyun</span><br><span class="line">RUN apt-get install -y kubectl</span><br></pre></td></tr></table></figure>

<p>这个Dockerfile里我们主要做了以下几件事</p>
<ul>
<li><p>设置容器用户为root</p>
</li>
<li><p>设置容器内的时区  </p>
</li>
<li><p>加入了登录自建harbor仓库的auth文件</p>
</li>
<li><p>安装一个docker的客户端</p>
</li>
<li><p>安装kubectl</p>
</li>
<li><p>下载docker客户端脚本及拷贝登录harbor的auth文件</p>
</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">curl -fsSL get.docker.com -o get-docker.sh</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">chmod</span> +x get-docker.sh</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cp</span> /root/.docker/config.json .</span></span><br></pre></td></tr></table></figure>

<ul>
<li>build镜像</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker build . -t harbor.od.com/infra/jenkins:v2.276</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker push harbor.od.com/infra/jenkins:v2.276</span></span><br></pre></td></tr></table></figure>

<ul>
<li>创建名称空间</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl create ns demo</span></span><br><span class="line">namespace/demo created</span><br></pre></td></tr></table></figure>


<ul>
<li>创建secret</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl create secret docker-registry harbor --docker-server=harbor.od.com --docker-username=admin --docker-password=Harbor12345 -n demo</span></span><br><span class="line">secret/harbor created</span><br></pre></td></tr></table></figure>

<h2 id="创建共享存储"><a href="#创建共享存储" class="headerlink" title="创建共享存储"></a>创建共享存储</h2><ul>
<li>创建nfs</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum install nfs-utils -y     每个节点安装nfs</span></span><br></pre></td></tr></table></figure>

<ul>
<li>创建挂载目录</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mkdir</span> /data/nfs/jenkins -p</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /etc/exports</span></span><br><span class="line">/data/nfs 10.33.166.0/24(rw,async,no_root_squash,no_all_squash)</span><br></pre></td></tr></table></figure>

<ul>
<li>启动服务</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl start rpcbind nfs</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl <span class="built_in">enable</span> rpcbind nfs</span></span><br><span class="line">Created symlink from /etc/systemd/system/multi-user.target.wants/nfs-server.service to /usr/lib/systemd/system/nfs-server.service.</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">showmount -e 10.166.33.107</span></span><br><span class="line">Export list for 10.166.33.107:</span><br><span class="line">/data/nfs 10.33.166.0/24</span><br></pre></td></tr></table></figure>

<h2 id="准备配置清单"><a href="#准备配置清单" class="headerlink" title="准备配置清单"></a>准备配置清单</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mkdir</span> /data/k8s-yaml/jenkins &amp;&amp; <span class="built_in">mkdir</span> /data/nfs/jenkins_home &amp;&amp; <span class="built_in">mkdir</span> /data/nfs/jenkins-repostory &amp;&amp; <span class="built_in">cd</span> /data/k8s-yaml/jenkins</span></span><br></pre></td></tr></table></figure>

<ul>
<li>rbac授权</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim rbac.yaml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ServiceAccount</span><br><span class="line">metadata:</span><br><span class="line">  name: jenkins</span><br><span class="line">  namespace: demo</span><br><span class="line">---</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1beta1</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  name: jenkins</span><br><span class="line">  namespace: demo</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: cluster-admin</span><br><span class="line">subjects:</span><br><span class="line">  - kind: ServiceAccount</span><br><span class="line">    name: jenkins</span><br><span class="line">    namespace: demo</span><br></pre></td></tr></table></figure>

<ul>
<li>deployment</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kind: Deployment</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">metadata:</span><br><span class="line">  name: jenkins</span><br><span class="line">  namespace: demo</span><br><span class="line">  labels:</span><br><span class="line">    name: jenkins</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      name: jenkins</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: jenkins</span><br><span class="line">        name: jenkins</span><br><span class="line">    spec:</span><br><span class="line">      volumes:</span><br><span class="line">        - name: data</span><br><span class="line">          nfs:</span><br><span class="line">            server: 10.166.33.107</span><br><span class="line">            path: /nfs/volume/jenkins-home</span><br><span class="line">        - name: repository</span><br><span class="line">          nfs:</span><br><span class="line">            server: 10.166.33.107</span><br><span class="line">            path: /nfs/volume/jenkins-repostory</span><br><span class="line">        - name: docker</span><br><span class="line">          hostPath:</span><br><span class="line">            path: /run/docker.sock</span><br><span class="line">            type: &#x27;&#x27;</span><br><span class="line">      containers:</span><br><span class="line">        - name: jenkins</span><br><span class="line">          image: &#x27;harbor.od.com/infra/jenkins:2.276&#x27;</span><br><span class="line">          ports:</span><br><span class="line">            - containerPort: 8080</span><br><span class="line">              protocol: TCP</span><br><span class="line">          env:</span><br><span class="line">            # jvm参数及关闭CSPF跨域请求</span><br><span class="line">            - name: JAVA_OPTS</span><br><span class="line">              value: &#x27;-Xmx2048m -Xms2048m -Dhudson.security.csrf.GlobalCrumbIssuerConfiguration.DISABLE_CSRF_PROTECTION=true&#x27;</span><br><span class="line">          resources: &#123;&#125;</span><br><span class="line">          volumeMounts:</span><br><span class="line">            - name: data</span><br><span class="line">              mountPath: /var/jenkins_home</span><br><span class="line">            - name: repository</span><br><span class="line">              mountPath: /root/.m2/repository</span><br><span class="line">            - name: docker</span><br><span class="line">              mountPath: /run/docker.sock</span><br><span class="line">          imagePullPolicy: IfNotPresent</span><br><span class="line">      restartPolicy: Always</span><br><span class="line">      terminationGracePeriodSeconds: 30</span><br><span class="line">      serviceAccountName: jenkins</span><br><span class="line">      serviceAccount: jenkins</span><br><span class="line">      securityContext:</span><br><span class="line">        runAsUser: 0</span><br><span class="line">      imagePullSecrets:</span><br><span class="line">        - name: harbor</span><br><span class="line">      schedulerName: default-scheduler</span><br><span class="line">  strategy:</span><br><span class="line">    type: RollingUpdate</span><br><span class="line">    rollingUpdate:</span><br><span class="line">      maxUnavailable: 25%</span><br><span class="line">      maxSurge: 1</span><br><span class="line">  minReadySeconds: 10</span><br><span class="line">  revisionHistoryLimit: 7</span><br><span class="line">  progressDeadlineSeconds: 600</span><br></pre></td></tr></table></figure>

<ul>
<li>service</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim service.yaml</span></span><br><span class="line">kind: Service</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  name: jenkins</span><br><span class="line">  namespace: demo</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">  - protocol: TCP</span><br><span class="line">    port: 80</span><br><span class="line">    targetPort: 8080</span><br><span class="line">  selector:</span><br><span class="line">    app: jenkins</span><br></pre></td></tr></table></figure>

<p>ingress</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim ingress.yaml</span></span><br><span class="line">kind: Ingress</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">metadata:</span><br><span class="line">  name: jenkins</span><br><span class="line">  namespace: demo</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: jenkins.od.com</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - path: /</span><br><span class="line">        backend:</span><br><span class="line">          serviceName: jenkins</span><br><span class="line">          servicePort: 80</span><br></pre></td></tr></table></figure>

<h2 id="创建资源清单"><a href="#创建资源清单" class="headerlink" title="创建资源清单"></a>创建资源清单</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl apply -f http://k8s-yaml.od.com/jenkins/volume.yaml</span></span><br><span class="line">persistentvolume/jenkins-volume created</span><br><span class="line">persistentvolumeclaim/jenkins-volume created</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl apply -f rbac.yaml</span></span><br><span class="line">serviceaccount/jenkins created</span><br><span class="line">clusterrolebinding.rbac.authorization.k8s.io/jenkins created</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl apply -f http://k8s-yaml.od.com/jenkins/deployment.yaml</span></span><br><span class="line">deployment.extensions/jenkins created</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl apply -f http://k8s-yaml.od.com/jenkins/service.yaml</span></span><br><span class="line">service/jenkins created</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl apply -f http://k8s-yaml.od.com/jenkins/ingress.yaml</span></span><br><span class="line">ingress.extensions/jenkins created</span><br></pre></td></tr></table></figure>

<h2 id="web访问"><a href="#web访问" class="headerlink" title="web访问"></a>web访问</h2><p>密码文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cat</span> /data/nfs/jenkins_home/secrets/initialAdminPassword</span></span><br><span class="line">a19ad09de32b415cb0da32bded04f67f</span><br></pre></td></tr></table></figure>

<p>插件下载加速</p>
<p>选择系统管理 &#x3D;&gt;  插件管理 &#x3D;&gt; 高级 &#x3D;&gt; 升级站点(覆盖默认文件)<br><a href="https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json">https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json</a></p>
<p>调整安全规则</p>
<ul>
<li><p>选择系统管理 &#x3D;&gt; 全局安全配置 &#x3D;&gt; 授权策略 &#x3D;&gt; 选择匿名用户具有可读权限</p>
</li>
<li><p>选择系统管理 &#x3D;&gt; 选择全局安全配置 &#x3D;&gt; 跨站请求伪造保护 &#x3D;&gt; 取消启用代理兼容</p>
</li>
</ul>
<p>安装插件</p>
<ul>
<li>选择系统管理 &#x3D;&gt;  插件管理 &#x3D;&gt; 可选插件 &#x3D;&gt; Blue Ocean</li>
<li>选择系统管理 &#x3D;&gt;  插件管理 &#x3D;&gt; 可选插件 &#x3D;&gt; Build Timestamp</li>
<li>选择系统管理 &#x3D;&gt;  插件管理 &#x3D;&gt; 可选插件 &#x3D;&gt; Kubernetes CLI</li>
<li>选择系统管理 &#x3D;&gt;  插件管理 &#x3D;&gt; 可选插件 &#x3D;&gt; Kubernetes Client API</li>
<li>选择系统管理 &#x3D;&gt;  插件管理 &#x3D;&gt; 可选插件 &#x3D;&gt; Kubernetes Credentials</li>
<li>选择系统管理 &#x3D;&gt;  插件管理 &#x3D;&gt; 可选插件 &#x3D;&gt; Kubernetes</li>
</ul>
]]></content>
      <categories>
        <category>Kubernetes</category>
        <category>jenkins</category>
      </categories>
      <tags>
        <tag>jenkins</tag>
        <tag>kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>k8s部署node-exporter</title>
    <url>/2020/04/17/k8s%E9%83%A8%E7%BD%B2node-exporter/</url>
    <content><![CDATA[<h2 id="交付node-exporter"><a href="#交付node-exporter" class="headerlink" title="交付node-exporter"></a>交付node-exporter</h2><p><a href="https://hub.docker.com/r/prom/node-exporter">node-exporter官方dockerhub地址</a></p>
<p><a href="https://github.com/prometheus/node_exporter">node-expoerer官方github地址</a></p>
<h3 id="准备镜像"><a href="#准备镜像" class="headerlink" title="准备镜像"></a>准备镜像</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 ~]# docker pull prom/node-exporter:v0.18.1</span><br><span class="line">[root@ops-200 ~]# docker images|grep node-exporter</span><br><span class="line">prom/node-exporter                                                     v0.18.1                                     e5a616e4b9cf        10 months ago       22.9MB</span><br><span class="line">[root@ops-200 ~]# docker tag e5a616e4b9cf harbor.od.com/public/node-exporter:v0.18.1</span><br><span class="line">[root@ops-200 ~]# docker push harbor.od.com/public/node-exporter:v0.18.1</span><br></pre></td></tr></table></figure>

<h3 id="准备资源配置清单"><a href="#准备资源配置清单" class="headerlink" title="准备资源配置清单"></a>准备资源配置清单</h3><p><strong>创建资源目录</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 ~]# mkdir /data/k8s-yaml/node-exporter</span><br><span class="line">[root@ops-200 ~]# cd /data/k8s-yaml/node-exporter</span><br></pre></td></tr></table></figure>

<p><strong>编写yaml</strong></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line">[<span class="string">root@ops-200</span> <span class="string">node-exporter</span>]<span class="comment"># vim daemonset.yaml</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">DaemonSet</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">node-exporter</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">daemon:</span> <span class="string">&quot;node-exporter&quot;</span></span><br><span class="line">    <span class="attr">grafanak8sapp:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">daemon:</span> <span class="string">&quot;node-exporter&quot;</span></span><br><span class="line">      <span class="attr">grafanak8sapp:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">node-exporter</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">daemon:</span> <span class="string">&quot;node-exporter&quot;</span></span><br><span class="line">        <span class="attr">grafanak8sapp:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">proc</span></span><br><span class="line">        <span class="attr">hostPath:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">/proc</span></span><br><span class="line">          <span class="attr">type:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">sys</span></span><br><span class="line">        <span class="attr">hostPath:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">/sys</span></span><br><span class="line">          <span class="attr">type:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">      <span class="attr">containers:</span>    </span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">node-exporter</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">harbor.od.com/public/node-exporter:v0.18.1</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">        <span class="attr">args:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--path.procfs=/host_proc</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--path.sysfs=/host_sys</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">node-exporter</span></span><br><span class="line">          <span class="attr">hostPort:</span> <span class="number">9100</span></span><br><span class="line">          <span class="attr">containerPort:</span> <span class="number">9100</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">sys</span></span><br><span class="line">          <span class="attr">readOnly:</span> <span class="literal">true</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/host_sys</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">proc</span></span><br><span class="line">          <span class="attr">readOnly:</span> <span class="literal">true</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/host_proc</span></span><br><span class="line">      <span class="attr">hostNetwork:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h3 id="应用资源配置清单"><a href="#应用资源配置清单" class="headerlink" title="应用资源配置清单"></a>应用资源配置清单</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 node-exporter]# kubectl apply -f daemonset.yaml </span><br><span class="line">daemonset.apps/node-exporter created</span><br></pre></td></tr></table></figure>

<h3 id="查看数据"><a href="#查看数据" class="headerlink" title="查看数据"></a>查看数据</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@k8s01-21 ~]# kubectl get pod -n kube-system -o wide|grep node-exporter</span><br><span class="line">node-exporter-bm6k9                         1/1     Running   0          94s   192.168.1.21   k8s01-21.host.com   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">node-exporter-ltlm9                         1/1     Running   0          94s   192.168.1.23   k8s03-23.host.com   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">node-exporter-r7w4d                         1/1     Running   0          94s   192.168.1.22   k8s02-22.host.com   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">[root@k8s01-21 ~]# curl 192.168.1.23:9100/metrics</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>prometheus</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
        <tag>prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>k8s部署kube-state-metrics</title>
    <url>/2020/04/17/k8s%E9%83%A8%E7%BD%B2kube-state-metrics/</url>
    <content><![CDATA[<h2 id="交付kube-state-metrics"><a href="#交付kube-state-metrics" class="headerlink" title="交付kube-state-metrics"></a>交付kube-state-metrics</h2><p><a href="https://quay.io/repository/coreos/kube-state-metrics?tab=info">kube-state-metrics官方地址</a><br>注：我的环境为1.16.7，所以镜像版本为1.9.4</p>
<h3 id="准备镜像"><a href="#准备镜像" class="headerlink" title="准备镜像"></a>准备镜像</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 ~]# docker pull quay.io/coreos/kube-state-metrics:v1.9.4</span><br><span class="line">[root@ops-200 ~]# docker images|grep kube-state</span><br><span class="line">quay.io/coreos/kube-state-metrics                                      v1.9.4                                      3eab960b6ee2        2 months ago        32.8MB</span><br><span class="line">[root@ops-200 ~]# docker tag 3eab960b6ee2  harbor.od.com/public/kube-state-metrics:v1.9.4</span><br><span class="line">[root@ops-200 ~]# docker push harbor.od.com/public/kube-state-metrics:v1.9.4</span><br></pre></td></tr></table></figure>

<h3 id="准备资源配置清单"><a href="#准备资源配置清单" class="headerlink" title="准备资源配置清单"></a>准备资源配置清单</h3><p><strong>创建资源目录</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 ~]# mkdir /data/k8s-yaml/kube-state-metrics</span><br><span class="line">[root@ops-200 ~]# cd /data/k8s-yaml/kube-state-metrics</span><br></pre></td></tr></table></figure>

<p><strong>编写yaml</strong></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line">[<span class="string">root@ops-200</span> <span class="string">kube-state-metrics</span>]<span class="comment"># vim rbac.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">kube-state-metrics</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/version:</span> <span class="string">v1.9.4</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kube-state-metrics</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">kube-state-metrics</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/version:</span> <span class="string">v1.9.4</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kube-state-metrics</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">configmaps</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">secrets</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">nodes</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">pods</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">services</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">resourcequotas</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">replicationcontrollers</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">limitranges</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">persistentvolumeclaims</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">persistentvolumes</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">namespaces</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">endpoints</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">list</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">watch</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">extensions</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">daemonsets</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">deployments</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">replicasets</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">ingresses</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">list</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">watch</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">apps</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">statefulsets</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">daemonsets</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">deployments</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">replicasets</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">list</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">watch</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">batch</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">cronjobs</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">jobs</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">list</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">watch</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">autoscaling</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">horizontalpodautoscalers</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">list</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">watch</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">authentication.k8s.io</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">tokenreviews</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">create</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">authorization.k8s.io</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">subjectaccessreviews</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">create</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">policy</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">poddisruptionbudgets</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">list</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">watch</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">certificates.k8s.io</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">certificatesigningrequests</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">list</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">watch</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">storage.k8s.io</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">storageclasses</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">volumeattachments</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">list</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">watch</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">admissionregistration.k8s.io</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">mutatingwebhookconfigurations</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">validatingwebhookconfigurations</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">list</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">watch</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">networking.k8s.io</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">networkpolicies</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">list</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">watch</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">kube-state-metrics</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/version:</span> <span class="string">v1.9.4</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kube-state-metrics</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kube-state-metrics</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kube-state-metrics</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span>  </span><br><span class="line"></span><br><span class="line">[<span class="string">root@ops-200</span> <span class="string">kube-state-metrics</span>]<span class="comment"># vim deployment.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">grafanak8sapp:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">kube-state-metrics</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/version:</span> <span class="string">v1.9.4</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kube-state-metrics</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">grafanak8sapp:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">      <span class="attr">app.kubernetes.io/name:</span> <span class="string">kube-state-metrics</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">grafanak8sapp:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">        <span class="attr">app.kubernetes.io/name:</span> <span class="string">kube-state-metrics</span></span><br><span class="line">        <span class="attr">app.kubernetes.io/version:</span> <span class="string">v1.9.4</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">kube-state-metrics</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">harbor.od.com/public/kube-state-metrics:v1.9.4</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8080</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">http-metrics</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8081</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">telemetry</span></span><br><span class="line">        <span class="attr">readinessProbe:</span></span><br><span class="line">          <span class="attr">httpGet:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">            <span class="attr">port:</span> <span class="number">8081</span></span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">5</span></span><br><span class="line">          <span class="attr">timeoutSeconds:</span> <span class="number">5</span></span><br><span class="line">      <span class="attr">serviceAccountName:</span> <span class="string">kube-state-metrics</span></span><br></pre></td></tr></table></figure>

<h3 id="应用资源配置清单"><a href="#应用资源配置清单" class="headerlink" title="应用资源配置清单"></a>应用资源配置清单</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 kube-state-metrics]# kubectl apply -f rbac.yaml </span><br><span class="line">serviceaccount/kube-state-metrics created</span><br><span class="line">clusterrole.rbac.authorization.k8s.io/kube-state-metrics created</span><br><span class="line">clusterrolebinding.rbac.authorization.k8s.io/kube-state-metrics created</span><br><span class="line">[root@ops-200 kube-state-metrics]# vim deployment.yaml </span><br><span class="line">[root@ops-200 kube-state-metrics]# kubectl apply -f deployment.yaml </span><br><span class="line">deployment.apps/kube-state-metrics created</span><br></pre></td></tr></table></figure>

<h3 id="查看数据"><a href="#查看数据" class="headerlink" title="查看数据"></a>查看数据</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@k8s01-21 ~]# kubectl get pod -n kube-system -o wide|grep kube-state</span><br><span class="line">kube-state-metrics-6dfcf5c7d8-2xjqc         1/1     Running   0          3m6s   172.7.23.10   k8s03-23.host.com   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">[root@k8s01-21 ~]# [root@k8s01-21 ~]# curl 172.7.23.10:8080/metrics</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>prometheus</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
        <tag>prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>k8s部署prometheus</title>
    <url>/2020/04/17/k8s%E9%83%A8%E7%BD%B2prometheus/</url>
    <content><![CDATA[<h2 id="交付prometheus"><a href="#交付prometheus" class="headerlink" title="交付prometheus"></a>交付prometheus</h2><p><a href="https://hub.docker.com/r/prom/prometheus">prometheus官方dockerhub地址</a></p>
<p><a href="https://github.com/prometheus/prometheus">prometheus官方github地址</a></p>
<h3 id="准备镜像"><a href="#准备镜像" class="headerlink" title="准备镜像"></a>准备镜像</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 ~]# docker pull prom/prometheus:v2.17.1</span><br><span class="line">[root@ops-200 ~]# docker images|grep prometheus</span><br><span class="line">prom/prometheus                                                        v2.17.1                                     358a0d2395fe        2 weeks ago         135MB</span><br><span class="line">[root@ops-200 ~]# docker tag 358a0d2395fe harbor.od.com/infra/prometheus:v2.17.1</span><br><span class="line">[root@ops-200 ~]# docker push harbor.od.com/infra/prometheus:v2.17.1</span><br></pre></td></tr></table></figure>

<h3 id="准备资源配置清单"><a href="#准备资源配置清单" class="headerlink" title="准备资源配置清单"></a>准备资源配置清单</h3><p>创建资源目录</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 ~]# mkdir /data/k8s-yaml/prometheus</span><br><span class="line">[root@ops-200 ~]# cd /data/k8s-yaml/prometheus</span><br></pre></td></tr></table></figure>

<p>编写yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line">[<span class="string">root@ops-200</span> <span class="string">prometheus</span>]<span class="comment"># vim rbac.yaml </span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">addonmanager.kubernetes.io/mode:</span> <span class="string">Reconcile</span></span><br><span class="line">    <span class="attr">kubernetes.io/cluster-service:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">prometheus</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">infra</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">addonmanager.kubernetes.io/mode:</span> <span class="string">Reconcile</span></span><br><span class="line">    <span class="attr">kubernetes.io/cluster-service:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">prometheus</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">nodes</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">nodes/metrics</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">services</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">endpoints</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">pods</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">list</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">watch</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">configmaps</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">nonResourceURLs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">/metrics</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">addonmanager.kubernetes.io/mode:</span> <span class="string">Reconcile</span></span><br><span class="line">    <span class="attr">kubernetes.io/cluster-service:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">prometheus</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">prometheus</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">prometheus</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">infra</span></span><br><span class="line"></span><br><span class="line">[<span class="string">root@ops-200</span> <span class="string">prometheus</span>]<span class="comment"># vim deployment.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">deployment.kubernetes.io/revision:</span> <span class="string">&quot;5&quot;</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">prometheus</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">prometheus</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">infra</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">progressDeadlineSeconds:</span> <span class="number">600</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">revisionHistoryLimit:</span> <span class="number">7</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">prometheus</span></span><br><span class="line">  <span class="attr">strategy:</span></span><br><span class="line">    <span class="attr">rollingUpdate:</span></span><br><span class="line">      <span class="attr">maxSurge:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">maxUnavailable:</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">RollingUpdate</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">prometheus</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">nodeName:</span> <span class="string">k8s01-21.host.com</span>       <span class="comment"># 因为22资源提交的太多</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">prometheus</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">harbor.od.com/infra/prometheus:v2.17.1</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">        <span class="attr">command:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">/bin/prometheus</span></span><br><span class="line">        <span class="attr">args:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--config.file=/data/etc/prometheus.yml</span>  <span class="comment"># 配置文件</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--storage.tsdb.path=/data/prom-db</span>       </span><br><span class="line">        <span class="bullet">-</span> <span class="string">--storage.tsdb.min-block-duration=10m</span>   <span class="comment"># 只加载10分钟数据到缓存，生产环境可以加大 例：2h </span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--storage.tsdb.retention=72h</span>            <span class="comment"># tsdb存储多久时间数据，生产环境可以加大 例：100h</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--web.enable-lifecycle</span>                  <span class="comment"># 后期修改配置，可以curl url重新加载配置</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">9090</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/data</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">data</span></span><br><span class="line">        <span class="attr">resources:</span></span><br><span class="line">          <span class="attr">requests:</span>         <span class="comment"># 容器启动资源</span></span><br><span class="line">            <span class="attr">cpu:</span> <span class="string">&quot;1000m&quot;</span>    </span><br><span class="line">            <span class="attr">memory:</span> <span class="string">&quot;1.5Gi&quot;</span></span><br><span class="line">          <span class="attr">limits:</span>           <span class="comment"># 容器最大资源</span></span><br><span class="line">            <span class="attr">cpu:</span> <span class="string">&quot;2000m&quot;</span></span><br><span class="line">            <span class="attr">memory:</span> <span class="string">&quot;3Gi&quot;</span></span><br><span class="line">      <span class="attr">imagePullSecrets:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">harbor</span></span><br><span class="line">      <span class="attr">securityContext:</span></span><br><span class="line">        <span class="attr">runAsUser:</span> <span class="number">0</span></span><br><span class="line">      <span class="attr">serviceAccountName:</span> <span class="string">prometheus</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">data</span></span><br><span class="line">        <span class="attr">nfs:</span></span><br><span class="line">          <span class="attr">server:</span> <span class="string">ops-200.host.com</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">/data/nfs-volume/prometheus</span></span><br><span class="line"></span><br><span class="line">[<span class="string">root@ops-200</span> <span class="string">prometheus</span>]<span class="comment"># vim service.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">prometheus</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">infra</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">9090</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">9090</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">prometheus</span></span><br><span class="line"></span><br><span class="line">[<span class="string">root@ops-200</span> <span class="string">prometheus</span>]<span class="comment"># vim ingress.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">kubernetes.io/ingress.class:</span> <span class="string">traefik</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">prometheus</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">infra</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">prometheus.od.com</span></span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">        <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">serviceName:</span> <span class="string">prometheus</span></span><br><span class="line">          <span class="attr">servicePort:</span> <span class="number">9090</span></span><br></pre></td></tr></table></figure>

<h3 id="准备配置文件"><a href="#准备配置文件" class="headerlink" title="准备配置文件"></a>准备配置文件</h3><p>创建配置目录</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 prometheus]# mkdir /data/nfs-volume/prometheus</span><br><span class="line">[root@ops-200 prometheus]# mkdir -p /data/nfs-volume/prometheus/&#123;etc,prom-db&#125;</span><br></pre></td></tr></table></figure>

<p>拷贝证书，需要与apiserver通信</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 prometheus]# cd /data/nfs-volume/prometheus/etc/        </span><br><span class="line">[root@ops-200 etc]# cp /opt/certs/ca.pem /opt/certs/client.pem /opt/certs/client-key.pem .</span><br></pre></td></tr></table></figure>

<p>准备配置</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line">[<span class="string">root@ops-200</span> <span class="string">etc</span>]<span class="comment"># vim prometheus.yml</span></span><br><span class="line"><span class="attr">global:</span></span><br><span class="line">  <span class="attr">scrape_interval:</span>     <span class="string">15s</span></span><br><span class="line">  <span class="attr">evaluation_interval:</span> <span class="string">15s</span></span><br><span class="line"><span class="attr">scrape_configs:</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&#x27;etcd&#x27;</span></span><br><span class="line">  <span class="attr">tls_config:</span></span><br><span class="line">    <span class="attr">ca_file:</span> <span class="string">/data/etc/ca.pem</span></span><br><span class="line">    <span class="attr">cert_file:</span> <span class="string">/data/etc/client.pem</span></span><br><span class="line">    <span class="attr">key_file:</span> <span class="string">/data/etc/client-key.pem</span></span><br><span class="line">  <span class="attr">scheme:</span> <span class="string">https</span></span><br><span class="line">  <span class="attr">static_configs:</span>        <span class="comment"># 静态配置</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">targets:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&#x27;192.168.1.12:2379&#x27;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&#x27;192.168.1.21:2379&#x27;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&#x27;192.168.1.22:2379&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&#x27;kubernetes-apiservers&#x27;</span></span><br><span class="line">  <span class="attr">kubernetes_sd_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">role:</span> <span class="string">endpoints</span></span><br><span class="line">  <span class="attr">scheme:</span> <span class="string">https</span></span><br><span class="line">  <span class="attr">tls_config:</span></span><br><span class="line">    <span class="attr">ca_file:</span> <span class="string">/var/run/secrets/kubernetes.io/serviceaccount/ca.crt</span></span><br><span class="line">  <span class="attr">bearer_token_file:</span> <span class="string">/var/run/secrets/kubernetes.io/serviceaccount/token</span></span><br><span class="line">  <span class="attr">relabel_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__meta_kubernetes_namespace</span>, <span class="string">__meta_kubernetes_service_name</span>, <span class="string">__meta_kubernetes_endpoint_port_name</span>]</span><br><span class="line">    <span class="attr">action:</span> <span class="string">keep</span></span><br><span class="line">    <span class="attr">regex:</span> <span class="string">default;kubernetes;https</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&#x27;kubernetes-pods&#x27;</span></span><br><span class="line">  <span class="attr">kubernetes_sd_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">role:</span> <span class="string">pod</span></span><br><span class="line">  <span class="attr">relabel_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__meta_kubernetes_pod_annotation_prometheus_io_scrape</span>]</span><br><span class="line">    <span class="attr">action:</span> <span class="string">keep</span></span><br><span class="line">    <span class="attr">regex:</span> <span class="literal">true</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__meta_kubernetes_pod_annotation_prometheus_io_path</span>]</span><br><span class="line">    <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">    <span class="attr">target_label:</span> <span class="string">__metrics_path__</span></span><br><span class="line">    <span class="attr">regex:</span> <span class="string">(.+)</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__address__</span>, <span class="string">__meta_kubernetes_pod_annotation_prometheus_io_port</span>]</span><br><span class="line">    <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">    <span class="attr">regex:</span> <span class="string">([^:]+)(?::\d+)?;(\d+)</span></span><br><span class="line">    <span class="attr">replacement:</span> <span class="string">$1:$2</span></span><br><span class="line">    <span class="attr">target_label:</span> <span class="string">__address__</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">action:</span> <span class="string">labelmap</span></span><br><span class="line">    <span class="attr">regex:</span> <span class="string">__meta_kubernetes_pod_label_(.+)</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__meta_kubernetes_namespace</span>]</span><br><span class="line">    <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">    <span class="attr">target_label:</span> <span class="string">kubernetes_namespace</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__meta_kubernetes_pod_name</span>]</span><br><span class="line">    <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">    <span class="attr">target_label:</span> <span class="string">kubernetes_pod_name</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&#x27;kubernetes-kubelet&#x27;</span></span><br><span class="line">  <span class="attr">kubernetes_sd_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">role:</span> <span class="string">node</span></span><br><span class="line">  <span class="attr">relabel_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">action:</span> <span class="string">labelmap</span></span><br><span class="line">    <span class="attr">regex:</span> <span class="string">__meta_kubernetes_node_label_(.+)</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__meta_kubernetes_node_name</span>]</span><br><span class="line">    <span class="attr">regex:</span> <span class="string">(.+)</span></span><br><span class="line">    <span class="attr">target_label:</span> <span class="string">__address__</span></span><br><span class="line">    <span class="attr">replacement:</span> <span class="string">$&#123;1&#125;:10255</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&#x27;kubernetes-cadvisor&#x27;</span></span><br><span class="line">  <span class="attr">kubernetes_sd_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">role:</span> <span class="string">node</span></span><br><span class="line">  <span class="attr">relabel_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">action:</span> <span class="string">labelmap</span></span><br><span class="line">    <span class="attr">regex:</span> <span class="string">__meta_kubernetes_node_label_(.+)</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__meta_kubernetes_node_name</span>]</span><br><span class="line">    <span class="attr">regex:</span> <span class="string">(.+)</span></span><br><span class="line">    <span class="attr">target_label:</span> <span class="string">__address__</span></span><br><span class="line">    <span class="attr">replacement:</span> <span class="string">$&#123;1&#125;:4194</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&#x27;kubernetes-kube-state&#x27;</span></span><br><span class="line">  <span class="attr">kubernetes_sd_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">role:</span> <span class="string">pod</span></span><br><span class="line">  <span class="attr">relabel_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">action:</span> <span class="string">labelmap</span></span><br><span class="line">    <span class="attr">regex:</span> <span class="string">__meta_kubernetes_pod_label_(.+)</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__meta_kubernetes_namespace</span>]</span><br><span class="line">    <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">    <span class="attr">target_label:</span> <span class="string">kubernetes_namespace</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__meta_kubernetes_pod_name</span>]</span><br><span class="line">    <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">    <span class="attr">target_label:</span> <span class="string">kubernetes_pod_name</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__meta_kubernetes_pod_label_grafanak8sapp</span>]</span><br><span class="line">    <span class="attr">regex:</span> <span class="string">.*true.*</span></span><br><span class="line">    <span class="attr">action:</span> <span class="string">keep</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">&#x27;__meta_kubernetes_pod_label_daemon&#x27;</span>, <span class="string">&#x27;__meta_kubernetes_pod_node_name&#x27;</span>]</span><br><span class="line">    <span class="attr">regex:</span> <span class="string">&#x27;node-exporter;(.*)&#x27;</span></span><br><span class="line">    <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">    <span class="attr">target_label:</span> <span class="string">nodename</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&#x27;blackbox_http_pod_probe&#x27;</span></span><br><span class="line">  <span class="attr">metrics_path:</span> <span class="string">/probe</span></span><br><span class="line">  <span class="attr">kubernetes_sd_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">role:</span> <span class="string">pod</span></span><br><span class="line">  <span class="attr">params:</span></span><br><span class="line">    <span class="attr">module:</span> [<span class="string">http_2xx</span>]</span><br><span class="line">  <span class="attr">relabel_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__meta_kubernetes_pod_annotation_blackbox_scheme</span>]</span><br><span class="line">    <span class="attr">action:</span> <span class="string">keep</span></span><br><span class="line">    <span class="attr">regex:</span> <span class="string">http</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__address__</span>, <span class="string">__meta_kubernetes_pod_annotation_blackbox_port</span>,  <span class="string">__meta_kubernetes_pod_annotation_blackbox_path</span>]</span><br><span class="line">    <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">    <span class="attr">regex:</span> <span class="string">([^:]+)(?::\d+)?;(\d+);(.+)</span></span><br><span class="line">    <span class="attr">replacement:</span> <span class="string">$1:$2$3</span></span><br><span class="line">    <span class="attr">target_label:</span> <span class="string">__param_target</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">    <span class="attr">target_label:</span> <span class="string">__address__</span></span><br><span class="line">    <span class="attr">replacement:</span> <span class="string">blackbox-exporter.kube-system:9115</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__param_target</span>]</span><br><span class="line">    <span class="attr">target_label:</span> <span class="string">instance</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">action:</span> <span class="string">labelmap</span></span><br><span class="line">    <span class="attr">regex:</span> <span class="string">__meta_kubernetes_pod_label_(.+)</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__meta_kubernetes_namespace</span>]</span><br><span class="line">    <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">    <span class="attr">target_label:</span> <span class="string">kubernetes_namespace</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__meta_kubernetes_pod_name</span>]</span><br><span class="line">    <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">    <span class="attr">target_label:</span> <span class="string">kubernetes_pod_name</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&#x27;blackbox_tcp_pod_probe&#x27;</span></span><br><span class="line">  <span class="attr">metrics_path:</span> <span class="string">/probe</span></span><br><span class="line">  <span class="attr">kubernetes_sd_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">role:</span> <span class="string">pod</span></span><br><span class="line">  <span class="attr">params:</span></span><br><span class="line">    <span class="attr">module:</span> [<span class="string">tcp_connect</span>]</span><br><span class="line">  <span class="attr">relabel_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__meta_kubernetes_pod_annotation_blackbox_scheme</span>]</span><br><span class="line">    <span class="attr">action:</span> <span class="string">keep</span></span><br><span class="line">    <span class="attr">regex:</span> <span class="string">tcp</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__address__</span>, <span class="string">__meta_kubernetes_pod_annotation_blackbox_port</span>]</span><br><span class="line">    <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">    <span class="attr">regex:</span> <span class="string">([^:]+)(?::\d+)?;(\d+)</span></span><br><span class="line">    <span class="attr">replacement:</span> <span class="string">$1:$2</span></span><br><span class="line">    <span class="attr">target_label:</span> <span class="string">__param_target</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">    <span class="attr">target_label:</span> <span class="string">__address__</span></span><br><span class="line">    <span class="attr">replacement:</span> <span class="string">blackbox-exporter.kube-system:9115</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__param_target</span>]</span><br><span class="line">    <span class="attr">target_label:</span> <span class="string">instance</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">action:</span> <span class="string">labelmap</span></span><br><span class="line">    <span class="attr">regex:</span> <span class="string">__meta_kubernetes_pod_label_(.+)</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__meta_kubernetes_namespace</span>]</span><br><span class="line">    <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">    <span class="attr">target_label:</span> <span class="string">kubernetes_namespace</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__meta_kubernetes_pod_name</span>]</span><br><span class="line">    <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">    <span class="attr">target_label:</span> <span class="string">kubernetes_pod_name</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&#x27;traefik&#x27;</span></span><br><span class="line">  <span class="attr">kubernetes_sd_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">role:</span> <span class="string">pod</span></span><br><span class="line">  <span class="attr">relabel_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__meta_kubernetes_pod_annotation_prometheus_io_scheme</span>]</span><br><span class="line">    <span class="attr">action:</span> <span class="string">keep</span></span><br><span class="line">    <span class="attr">regex:</span> <span class="string">traefik</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__meta_kubernetes_pod_annotation_prometheus_io_path</span>]</span><br><span class="line">    <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">    <span class="attr">target_label:</span> <span class="string">__metrics_path__</span></span><br><span class="line">    <span class="attr">regex:</span> <span class="string">(.+)</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__address__</span>, <span class="string">__meta_kubernetes_pod_annotation_prometheus_io_port</span>]</span><br><span class="line">    <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">    <span class="attr">regex:</span> <span class="string">([^:]+)(?::\d+)?;(\d+)</span></span><br><span class="line">    <span class="attr">replacement:</span> <span class="string">$1:$2</span></span><br><span class="line">    <span class="attr">target_label:</span> <span class="string">__address__</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">action:</span> <span class="string">labelmap</span></span><br><span class="line">    <span class="attr">regex:</span> <span class="string">__meta_kubernetes_pod_label_(.+)</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__meta_kubernetes_namespace</span>]</span><br><span class="line">    <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">    <span class="attr">target_label:</span> <span class="string">kubernetes_namespace</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__meta_kubernetes_pod_name</span>]</span><br><span class="line">    <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">    <span class="attr">target_label:</span> <span class="string">kubernetes_pod_name</span></span><br></pre></td></tr></table></figure>

<h3 id="应用资源配置清单"><a href="#应用资源配置清单" class="headerlink" title="应用资源配置清单"></a>应用资源配置清单</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 etc]# cd /data/k8s-yaml/prometheus/</span><br><span class="line">[root@ops-200 prometheus]# kubectl apply -f rbac.yaml </span><br><span class="line">serviceaccount/prometheus created</span><br><span class="line">clusterrole.rbac.authorization.k8s.io/prometheus created</span><br><span class="line">clusterrolebinding.rbac.authorization.k8s.io/prometheus created</span><br><span class="line">[root@ops-200 prometheus]# kubectl apply -f deployment.yaml </span><br><span class="line">deployment.apps/prometheus created</span><br><span class="line">[root@ops-200 prometheus]# kubectl apply -f service.yaml </span><br><span class="line">service/prometheus created</span><br><span class="line">[root@ops-200 prometheus]# kubectl apply -f ingress.yaml </span><br><span class="line">ingress.extensions/prometheus created</span><br></pre></td></tr></table></figure>

<h3 id="annotaition注释"><a href="#annotaition注释" class="headerlink" title="annotaition注释"></a>annotaition注释</h3><p>Annotations就是注解,Annotation与Label类似，也使用key&#x2F;value键值对的形式进行定义.<br>Label具有严格的命名规则,它定义的是Kubernetes对象的元数据（Metadata），并且用于Label Selector.<br>Annotation则是用户任意定义的“附加”信息,以便客户端（如工具和库）可以检索此metadata.</p>
<p>annotation使用场景</p>
<ol>
<li>声明配置层管理的字段。使用annotation关联这类字段可以用于区分以下几种配置来源：客户端或服务器设置的默认值，自动生成的字段或自动生成的 auto-scaling 和 auto-sizing 系统配置的字段。</li>
<li>创建信息、版本信息或镜像信息。例如时间戳、版本号、git分支、PR序号、镜像哈希值以及仓库地址。</li>
<li>记录日志、监控、分析或审计存储仓库的指针</li>
<li>可以用于debug的客户端（库或工具）信息，例如名称、版本和创建信息。</li>
<li>用户信息，以及工具或系统来源信息、例如来自非Kubernetes生态的相关对象的URL信息。</li>
<li>轻量级部署工具元数据，例如配置或检查点。</li>
<li>负责人的电话或联系方式，或能找到相关信息的目录条目信息，例如团队网站。</li>
</ol>
<h3 id="prometheus添加traefik监控"><a href="#prometheus添加traefik监控" class="headerlink" title="prometheus添加traefik监控"></a>prometheus添加traefik监控</h3><p>spec-&gt;template-&gt;metadata下，添加annotations注释</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line">[<span class="string">root@ops-200</span> <span class="string">etc</span>]<span class="comment"># cd /data/k8s-yaml/traefik/</span></span><br><span class="line">[<span class="string">root@ops-200</span> <span class="string">traefik</span>]<span class="comment"># vim daemonset.yaml </span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">traefik</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">traefik</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">traefik</span></span><br><span class="line">      <span class="attr">annotations:</span></span><br><span class="line">        <span class="attr">prometheus_io_scheme:</span> <span class="string">&quot;traefik&quot;</span></span><br><span class="line">        <span class="attr">prometheus_io_path:</span> <span class="string">&quot;/metrics&quot;</span></span><br><span class="line">        <span class="attr">prometheus_io_port:</span> <span class="string">&quot;8080&quot;</span></span><br><span class="line">[<span class="string">root@ops-200</span> <span class="string">traefik</span>]<span class="comment"># kubectl apply -f daemonset.yaml</span></span><br><span class="line"><span class="string">daemonset.apps/traefik-ingress-controller</span> <span class="string">configured</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>prometheus</strong></p>
<p><img src="/image/image-20200413133958312.png" alt="image-20200413133958312"></p>
<h3 id="dubbo服务接入blackbox存活检查"><a href="#dubbo服务接入blackbox存活检查" class="headerlink" title="dubbo服务接入blackbox存活检查"></a>dubbo服务接入blackbox存活检查</h3><p><strong>提供者</strong></p>
<p>Spinnaker添加annotion</p>
<p>TCP  </p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">blackbox_port:</span> <span class="string">&quot;20880&quot;</span></span><br><span class="line">    <span class="attr">blackbox_scheme:</span> <span class="string">&quot;tcp&quot;</span></span><br></pre></td></tr></table></figure>

<p><img src="/image/image-20200413135358057.png" alt="image-20200413135358057"></p>
<p><strong>prometheus</strong></p>
<p><img src="/image/image-20200413144240407.png" alt="image-20200413144240407"></p>
<p><strong>消费者</strong></p>
<p>Spinnaker添加annotion</p>
<p>HTTP</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">annotations:</span></span><br><span class="line">  <span class="attr">blackbox_path:</span> <span class="string">&quot;/hello?name=health&quot;</span></span><br><span class="line">  <span class="attr">blackbox_port:</span> <span class="string">&quot;8080&quot;</span></span><br><span class="line">  <span class="attr">blackbox_scheme:</span> <span class="string">&quot;http&quot;</span></span><br></pre></td></tr></table></figure>

<p><img src="/image/image-20200413145038983.png" alt="image-20200413145038983"></p>
<p><strong>prometheus</strong></p>
<p><img src="/image/image-20200413145200497.png" alt="image-20200413145200497"></p>
<h3 id="dubbo服务接入jvm监控"><a href="#dubbo服务接入jvm监控" class="headerlink" title="dubbo服务接入jvm监控"></a>dubbo服务接入jvm监控</h3><p><strong>提供者</strong></p>
<p>Spinnaker添加annotion <a href="https://www.wqblogs.com:4443/2020/01/08/%E5%BA%95%E5%8C%85%E5%88%B6%E4%BD%9C/#%E5%87%86%E5%A4%87dockerfile">jvm</a></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">annotations:</span></span><br><span class="line">  <span class="attr">prometheus_io_scrape:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">  <span class="attr">prometheus_io_port:</span> <span class="string">&quot;12346&quot;</span></span><br><span class="line">  <span class="attr">prometheus_io_path:</span> <span class="string">&quot;/&quot;</span></span><br></pre></td></tr></table></figure>

<p><img src="/image/image-20200413154211442.png" alt="image-20200413154211442"></p>
<p><strong>消费者</strong></p>
<p>Spinnaker添加annotion</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">annotations:</span></span><br><span class="line">  <span class="attr">prometheus_io_scrape:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">  <span class="attr">prometheus_io_port:</span> <span class="string">&quot;12346&quot;</span></span><br><span class="line">  <span class="attr">prometheus_io_path:</span> <span class="string">&quot;/&quot;</span></span><br></pre></td></tr></table></figure>

<p><img src="/image/image-20200413154506826.png" alt="image-20200413154506826"></p>
<p><strong>prometheus</strong></p>
<p><img src="/image/image-20200413155039658.png" alt="image-20200413155039658"></p>
]]></content>
      <categories>
        <category>prometheus</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
        <tag>prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>k8s部署prometheus、grafana监控</title>
    <url>/2019/11/09/k8s%E9%83%A8%E7%BD%B2prometheus%E3%80%81grafana%E7%9B%91%E6%8E%A7/</url>
    <content><![CDATA[<p>Prometheus github 地址：<a href="https://github.com/coreos/kube-prometheus">https://github.com/coreos/kube-prometheus</a></p>
<h2 id="监控组成"><a href="#监控组成" class="headerlink" title="监控组成"></a>监控组成</h2><ul>
<li><p>MetricServer：是kubernetes集群资源使用情况的聚合器，收集数据给kubernetes集群内使用，如kubectl,hpa,scheduler等。</p>
</li>
<li><p>PrometheusOperator：是一个系统监测和警报工具箱，用来存储监控数据。</p>
</li>
<li><p>NodeExporter：用于各node的关键度量指标状态数据。</p>
</li>
<li><p>KubeStateMetrics：收集kubernetes集群内资源对象数据，制定告警规则。</p>
</li>
<li><p>Prometheus：采用pull方式收集apiserver，scheduler，controller-manager，kubelet组件数据，通过http协议传输。</p>
</li>
<li><p>Grafana：是可视化数据统计和监控平台</p>
<span id="more"></span></li>
</ul>
<h3 id="搭建监控"><a href="#搭建监控" class="headerlink" title="搭建监控"></a>搭建监控</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mkdir</span> prometheus</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cd</span> prometheus</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">git <span class="built_in">clone</span> https://github.com/coreos/kube-prometheus.git</span></span><br><span class="line">Cloning into &#x27;kube-prometheus&#x27;...</span><br><span class="line">remote: Enumerating objects: 114, done.</span><br><span class="line">remote: Counting objects: 100% (114/114), done.</span><br><span class="line">remote: Compressing objects: 100% (84/84), done.</span><br><span class="line">remote: Total 7037 (delta 60), reused 58 (delta 23), pack-reused 6923</span><br><span class="line">Receiving objects: 100% (7037/7037), 4.22 MiB | 2.40 MiB/s, done.</span><br><span class="line">Resolving deltas: 100% (4217/4217), done.</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cd</span> kube-prometheus/manifests/</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"> kubectl apply -f manifests/setup</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl apply -f manifests/</span></span><br></pre></td></tr></table></figure>


<h3 id="删除服务"><a href="#删除服务" class="headerlink" title="删除服务"></a>删除服务</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"> kubectl delete --ignore-not-found=<span class="literal">true</span> -f manifests/ -f manifests/setup</span></span><br></pre></td></tr></table></figure>


<h3 id="创建ingress服务"><a href="#创建ingress服务" class="headerlink" title="创建ingress服务"></a>创建ingress服务</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"> vim ingress.yaml</span></span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: prometheus-ingress</span><br><span class="line">  namespace: monitoring</span><br><span class="line">  annotations:    </span><br><span class="line">    kubernetes.io/ingress.class: &quot;nginx&quot;</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">    - host: k8s.prometheus.com</span><br><span class="line">      http:</span><br><span class="line">        paths:</span><br><span class="line">        - path: /</span><br><span class="line">          backend:</span><br><span class="line">            serviceName: prometheus-k8s</span><br><span class="line">            servicePort: 9090</span><br><span class="line">---</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: grafana-ingress</span><br><span class="line">  namespace: monitoring</span><br><span class="line">  annotations:</span><br><span class="line">    kubernetes.io/ingress.class: &quot;nginx&quot;</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">    - host: k8s.grafana.com</span><br><span class="line">      http:</span><br><span class="line">        paths:</span><br><span class="line">        - path: /</span><br><span class="line">          backend:</span><br><span class="line">            serviceName: grafana</span><br><span class="line">            servicePort: 3000</span><br><span class="line">---</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: alertmanager-ingress</span><br><span class="line">  namespace: monitoring</span><br><span class="line">  annotations:</span><br><span class="line">    kubernetes.io/ingress.class: &quot;nginx&quot;</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">    - host: k8s.alertmanager.com</span><br><span class="line">      http:</span><br><span class="line">        paths:</span><br><span class="line">        - path: /</span><br><span class="line">          backend:</span><br><span class="line">            serviceName: alertmanager-main</span><br><span class="line">            servicePort: 9093</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl apply -f ingress.yml</span></span><br></pre></td></tr></table></figure>


<h3 id="web访问"><a href="#web访问" class="headerlink" title="web访问"></a>web访问</h3><p><img src="/image/1573276603-Image.png"></p>
<p><img src="/image/1573276629-Image.png"> </p>
]]></content>
      <categories>
        <category>Kubernetes</category>
        <category>prometheus</category>
      </categories>
  </entry>
  <entry>
    <title>k8s集群容器时区自动配置</title>
    <url>/2019/12/05/k8s%E9%9B%86%E7%BE%A4%E5%AE%B9%E5%99%A8%E6%97%B6%E5%8C%BA%E8%87%AA%E5%8A%A8%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="Pod-Preset简介"><a href="#Pod-Preset简介" class="headerlink" title="Pod Preset简介"></a>Pod Preset简介</h2><p>Pod Preset是一种API资源，用于在创建时将其他运行时要求注入到Pod中。您可以使用标签选择器来指定要应用给定Pod预设的Pod</p>
<p>Kubernetes提供了一个准入控制器（PodPreset），该控制器启用后将Pod Presets应用于传入的Pod创建请求。发生吊舱创建请求时，系统将执行以下操作：</p>
<ol>
<li><p>检索所有PodPresets可用的。</p>
</li>
<li><p>检查任何标签选择器是否PodPreset与要创建的容器上的标签匹配。</p>
</li>
<li><p>尝试将定义的各种资源合并PodPreset到正在创建的Pod中。</p>
</li>
<li><p>发生错误时，在Pod上引发一个记录合并错误的事件，并创建Pod 而不从中注入任何资源PodPreset。</p>
</li>
<li><p>注释生成的修改后的Pod规范，以表明已被修改PodPreset。注释的格式为 podpreset.admission.kubernetes.io&#x2F;podpreset-&lt;\pod-preset name&gt;: “&lt;\resource version&gt;“</p>
</li>
</ol>
   <span id="more"></span>

<h2 id="启用Pod-Preset"><a href="#启用Pod-Preset" class="headerlink" title="启用Pod Preset"></a>启用Pod Preset</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 ~]# vim /opt/kubernetes/server/bin/kube-apiserver.sh</span><br><span class="line">  --enable-admission-plugins NamespaceLifecycle...ResourceQuota,PodPreset \ # 追加PodPreset插件</span><br><span class="line">  --runtime-config=settings.k8s.io/v1alpha1=true \                          # 启用api类型</span><br><span class="line">[root@hdss7-21 ~]# supervisorctl restart kube-apiserver-7-21</span><br></pre></td></tr></table></figure>


<h2 id="通过Pod-Preset预设置时区环境变量"><a href="#通过Pod-Preset预设置时区环境变量" class="headerlink" title="通过Pod Preset预设置时区环境变量"></a>通过Pod Preset预设置时区环境变量</h2><p>默认的情况，在K8S里启动一个容器，该容器的设置的时区是UTC0，但是对于很多客户而言，其主机环境并不在UTC0。例如中国客户在UTC8。如果不把容器的时区和主机主机设置为一致，则在查找日志等时候将非常不方便，也容易造成误解</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 ~]# cat allow-tz-env.yaml</span><br><span class="line">apiVersion: settings.k8s.io/v1alpha1</span><br><span class="line">kind: PodPreset</span><br><span class="line">metadata:</span><br><span class="line">  name: allow-tz-env</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">  env:</span><br><span class="line">    - name: TZ</span><br><span class="line">      value: Asia/Shanghai</span><br></pre></td></tr></table></figure>


<p>这里需要注意的地方是，一定需要写selector…matchLabels，但是matchLabels为空，标示应用于所有容器</p>
<h3 id="创建新的pod资源后"><a href="#创建新的pod资源后" class="headerlink" title="创建新的pod资源后"></a>创建新的pod资源后</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 ~]# kubectl exec -it nginx-ds-2hxhr -- env|grep TZ</span><br><span class="line">TZ=Asia/Shanghai</span><br><span class="line">[root@hdss7-21 ~]# kubectl logs -f  nginx-ds-2hxhr</span><br><span class="line">172.7.21.3 - - [04/Dec/2019:23:51:00 +0800] &quot;GET / HTTP/1.1&quot; 200 612 &quot;-&quot; &quot;curl/7.38.0&quot; &quot;-&quot;</span><br></pre></td></tr></table></figure>


<h3 id="删除Pod-Preset"><a href="#删除Pod-Preset" class="headerlink" title="删除Pod Preset"></a>删除Pod Preset</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 ~]#  kubectl delete podpreset allow-tz-env</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
  </entry>
  <entry>
    <title>kubeadm更新证书</title>
    <url>/2021/02/25/kubeadm%E6%9B%B4%E6%8D%A2%E8%AF%81%E4%B9%A6/</url>
    <content><![CDATA[<p>kubeadm 默认证书为一年，一年过期后，会导致api service不可用，使用过程中会出现：x509: certificate has expired or is not yet valid.</p>
<h2 id="查看集群版本信息"><a href="#查看集群版本信息" class="headerlink" title="查看集群版本信息"></a>查看集群版本信息</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubeadm version</span></span><br><span class="line">kubeadm version: &amp;version.Info&#123;Major:&quot;1&quot;, Minor:&quot;19&quot;, GitVersion:&quot;v1.19.3&quot;, GitCommit:&quot;1e11e4a2108024935ecfcb2912226cedeafd99df&quot;, GitTreeState:&quot;clean&quot;, BuildDate:&quot;2020-10-14T12:47:53Z&quot;, GoVersion:&quot;go1.15.2&quot;, Compiler:&quot;gc&quot;, Platform:&quot;linux/amd64&quot;&#125;</span><br></pre></td></tr></table></figure>

<h2 id="查看集群证书过期时间"><a href="#查看集群证书过期时间" class="headerlink" title="查看集群证书过期时间"></a>查看集群证书过期时间</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubeadm alpha certs check-expiration</span></span><br><span class="line">[check-expiration] Reading configuration from the cluster...</span><br><span class="line">[check-expiration] FYI: You can look at this config file with &#x27;kubectl -n kube-system get cm kubeadm-config -oyaml&#x27;</span><br><span class="line"></span><br><span class="line">CERTIFICATE                EXPIRES                  RESIDUAL TIME   CERTIFICATE AUTHORITY   EXTERNALLY MANAGED</span><br><span class="line">admin.conf                 Feb 06, 2022 08:13 UTC   346d                                    no      </span><br><span class="line">apiserver                  Feb 06, 2022 08:12 UTC   346d            ca                      no      </span><br><span class="line">apiserver-etcd-client      Feb 06, 2022 08:12 UTC   346d            etcd-ca                 no      </span><br><span class="line">apiserver-kubelet-client   Feb 06, 2022 08:12 UTC   346d            ca                      no      </span><br><span class="line">controller-manager.conf    Feb 06, 2022 08:13 UTC   346d                                    no      </span><br><span class="line">etcd-healthcheck-client    Nov 06, 2021 09:50 UTC   254d            etcd-ca                 no      </span><br><span class="line">etcd-peer                  Nov 06, 2021 09:50 UTC   254d            etcd-ca                 no      </span><br><span class="line">etcd-server                Nov 06, 2021 09:50 UTC   254d            etcd-ca                 no      </span><br><span class="line">front-proxy-client         Feb 06, 2022 08:12 UTC   346d            front-proxy-ca          no      </span><br><span class="line">scheduler.conf             Feb 06, 2022 08:13 UTC   346d                                    no      </span><br><span class="line"></span><br><span class="line">CERTIFICATE AUTHORITY   EXPIRES                  RESIDUAL TIME   EXTERNALLY MANAGED</span><br><span class="line">ca                      Nov 04, 2030 09:50 UTC   9y              no      </span><br><span class="line">etcd-ca                 Nov 04, 2030 09:50 UTC   9y              no      </span><br><span class="line">front-proxy-ca          Nov 04, 2030 09:50 UTC   9y              no    </span><br></pre></td></tr></table></figure>

<h2 id="下载源码"><a href="#下载源码" class="headerlink" title="下载源码"></a>下载源码</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">git <span class="built_in">clone</span> https://github.com/kubernetes/kubernetes.git</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cd</span> kubernetes/</span></span><br><span class="line">检出相同版本的kubernetes</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">git checkout v1.19.3</span></span><br></pre></td></tr></table></figure>

<h2 id="修改代码"><a href="#修改代码" class="headerlink" title="修改代码"></a>修改代码</h2><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"># vim cmd/kubeadm/app/constants/constants.<span class="keyword">go</span></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">        <span class="comment">// KubernetesDir is the directory Kubernetes owns for storing various configuration files</span></span><br><span class="line">        KubernetesDir = <span class="string">&quot;/etc/kubernetes&quot;</span></span><br><span class="line">        <span class="comment">// ManifestsSubDirName defines directory name to store manifests</span></span><br><span class="line">        ManifestsSubDirName = <span class="string">&quot;manifests&quot;</span></span><br><span class="line">        <span class="comment">// TempDirForKubeadm defines temporary directory for kubeadm</span></span><br><span class="line">        <span class="comment">// should be joined with KubernetesDir.</span></span><br><span class="line">        TempDirForKubeadm = <span class="string">&quot;tmp&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// CertificateValidity defines the validity for all the signed certificates generated by kubeadm</span></span><br><span class="line">        CertificateValidity = time.Hour * <span class="number">24</span> * <span class="number">365</span> * <span class="number">100</span> <span class="comment">// 添加 * 100,修改成100年</span></span><br></pre></td></tr></table></figure>

<h2 id="安装go环境"><a href="#安装go环境" class="headerlink" title="安装go环境"></a>安装go环境</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget https://dl.google.com/go/go1.15.3.linux-amd64.tar.gz</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">tar xf go1.15.3.linux-amd64.tar.gz</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cp</span> -rf go /usr/local/</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cat</span> &gt;&gt;  /etc/profile &lt;&lt;<span class="string">EOF</span></span></span><br><span class="line">export PATH=$PATH:/usr/local/go/bin</span><br><span class="line">EOF</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">source /etc/profile</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">go version</span></span></span><br><span class="line">go version go1.15.3 linux/amd64</span><br></pre></td></tr></table></figure>

<h2 id="编译源码"><a href="#编译源码" class="headerlink" title="编译源码"></a>编译源码</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">编译kubeadm, 这里主要编译kubeadm 即可</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">make WHAT=cmd/kubeadm GOFLAGS=-v</span></span><br><span class="line">编译完产物在 _output/bin/ 目录下</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">./_output/bin/kubeadm version</span></span><br><span class="line">kubeadm version: &amp;version.Info&#123;Major:&quot;1&quot;, Minor:&quot;19&quot;, GitVersion:&quot;v1.19.3&quot;, GitCommit:&quot;1e11e4a2108024935ecfcb2912226cedeafd99df&quot;, GitTreeState:&quot;clean&quot;, BuildDate:&quot;2021-02-25T05:41:59Z&quot;, GoVersion:&quot;go1.15.3&quot;, Compiler:&quot;gc&quot;, Platform:&quot;linux/amd64&quot;&#125;</span><br></pre></td></tr></table></figure>

<h2 id="备份kubeadm与证书"><a href="#备份kubeadm与证书" class="headerlink" title="备份kubeadm与证书"></a>备份kubeadm与证书</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">mkair bak</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cp</span> -fr /etc/kubernetes ./bak/</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cp</span> /usr/bin/kubeadm ./bak/</span></span><br></pre></td></tr></table></figure>

<h2 id="替换证书"><a href="#替换证书" class="headerlink" title="替换证书"></a>替换证书</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cp</span> _output/bin/kubeadm /usr/bin/</span></span><br><span class="line">cp: overwrite ‘/usr/bin/kubeadm’? y</span><br><span class="line">[root@zzmaster ~]# kubeadm version</span><br><span class="line">kubeadm version: &amp;version.Info&#123;Major:&quot;1&quot;, Minor:&quot;19&quot;, GitVersion:&quot;v1.19.3&quot;, GitCommit:&quot;1e11e4a2108024935ecfcb2912226cedeafd99df&quot;, GitTreeState:&quot;clean&quot;, BuildDate:&quot;2021-02-25T05:41:59Z&quot;, GoVersion:&quot;go1.15.3&quot;, Compiler:&quot;gc&quot;, Platform:&quot;linux/amd64&quot;&#125;</span><br><span class="line">生成新的证书</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubeadm alpha certs renew all</span></span><br><span class="line">[renew] Reading configuration from the cluster...</span><br><span class="line">[renew] FYI: You can look at this config file with &#x27;kubectl -n kube-system get cm kubeadm-config -oyaml&#x27;</span><br><span class="line"></span><br><span class="line">certificate embedded in the kubeconfig file for the admin to use and for kubeadm itself renewed</span><br><span class="line">certificate for serving the Kubernetes API renewed</span><br><span class="line">certificate the apiserver uses to access etcd renewed</span><br><span class="line">certificate for the API server to connect to kubelet renewed</span><br><span class="line">certificate embedded in the kubeconfig file for the controller manager to use renewed</span><br><span class="line">certificate for liveness probes to healthcheck etcd renewed</span><br><span class="line">certificate for etcd nodes to communicate with each other renewed</span><br><span class="line">certificate for serving etcd renewed</span><br><span class="line">certificate for the front proxy client renewed</span><br><span class="line">certificate embedded in the kubeconfig file for the scheduler manager to use renewed</span><br></pre></td></tr></table></figure>

<h2 id="验证证书是否更新"><a href="#验证证书是否更新" class="headerlink" title="验证证书是否更新"></a>验证证书是否更新</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubeadm alpha certs check-expiration</span></span><br><span class="line">[check-expiration] Reading configuration from the cluster...</span><br><span class="line">[check-expiration] FYI: You can look at this config file with &#x27;kubectl -n kube-system get cm kubeadm-config -oyaml&#x27;</span><br><span class="line"></span><br><span class="line">CERTIFICATE                EXPIRES                  RESIDUAL TIME   CERTIFICATE AUTHORITY   EXTERNALLY MANAGED</span><br><span class="line">admin.conf                 Feb 01, 2121 05:54 UTC   99y                                     no      </span><br><span class="line">apiserver                  Feb 01, 2121 05:54 UTC   99y             ca                      no      </span><br><span class="line">apiserver-etcd-client      Feb 01, 2121 05:54 UTC   99y             etcd-ca                 no      </span><br><span class="line">apiserver-kubelet-client   Feb 01, 2121 05:54 UTC   99y             ca                      no      </span><br><span class="line">controller-manager.conf    Feb 01, 2121 05:54 UTC   99y                                     no      </span><br><span class="line">etcd-healthcheck-client    Feb 01, 2121 05:54 UTC   99y             etcd-ca                 no      </span><br><span class="line">etcd-peer                  Feb 01, 2121 05:54 UTC   99y             etcd-ca                 no      </span><br><span class="line">etcd-server                Feb 01, 2121 05:54 UTC   99y             etcd-ca                 no      </span><br><span class="line">front-proxy-client         Feb 01, 2121 05:54 UTC   99y             front-proxy-ca          no      </span><br><span class="line">scheduler.conf             Feb 01, 2121 05:54 UTC   99y                                     no      </span><br><span class="line"></span><br><span class="line">CERTIFICATE AUTHORITY   EXPIRES                  RESIDUAL TIME   EXTERNALLY MANAGED</span><br><span class="line">ca                      Nov 04, 2030 09:50 UTC   9y              no      </span><br><span class="line">etcd-ca                 Nov 04, 2030 09:50 UTC   9y              no      </span><br><span class="line">front-proxy-ca          Nov 04, 2030 09:50 UTC   9y              no    </span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>kubeadm部署k8s集群</title>
    <url>/2019/07/22/kubeadm%E9%83%A8%E7%BD%B2k8s%E9%9B%86%E7%BE%A4/</url>
    <content><![CDATA[<h2 id="系统初始化"><a href="#系统初始化" class="headerlink" title="系统初始化"></a>系统初始化</h2><p>安装Base源</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span></span><br></pre></td></tr></table></figure>


<p>安装依赖包</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum install -y conntrack ntpdate ntp ipvsadm ipset jq iptables curl sysstat libseccomp wgetvimnet-tools git bash-completion</span></span><br></pre></td></tr></table></figure>

  <span id="more"></span>

<p>设置防火墙为空规则</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl stop firewalld &amp;&amp; systemctl <span class="built_in">disable</span> firewalld</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum -y install iptables-services &amp;&amp; systemctl start iptables &amp;&amp; systemctl <span class="built_in">enable</span> iptables&amp;&amp; iptables -F &amp;&amp; service iptables save</span></span><br></pre></td></tr></table></figure>


<p>关闭selinux与swap</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">swapoff -a &amp;&amp; sed -i <span class="string">&#x27;/ swap / s/^\(.*\)$/#\1/g&#x27;</span> /etc/fstab</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">setenforce 0 &amp;&amp; sed -i <span class="string">&#x27;s/^SELINUX=.*/SELINUX=disabled/&#x27;</span> /etc/selinux/config</span></span><br></pre></td></tr></table></figure>


<p>调整内核参数</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cat</span> &gt; kubernetes.conf &lt;&lt;<span class="string">EOF</span></span></span><br><span class="line">net.bridge.bridge-nf-call-iptables=1</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables=1</span><br><span class="line">net.ipv4.ip_forward=1</span><br><span class="line">net.ipv4.tcp_tw_recycle=0</span><br><span class="line">vm.swappiness=0        # 禁止使用 swap 空间，只有当系统 OOM 时才允许使用它</span><br><span class="line">vm.overcommit_memory=1 # 不检查物理内存是否够用</span><br><span class="line">vm.panic_on_oom=0 # 开启 </span><br><span class="line">OOMfs.inotify.max_user_instances=8192</span><br><span class="line">fs.inotify.max_user_watches=1048576</span><br><span class="line">fs.file-max=52706963</span><br><span class="line">fs.nr_open=52706963</span><br><span class="line">net.ipv6.conf.all.disable_ipv6=1</span><br><span class="line">net.netfilter.nf_conntrack_max=2310720</span><br><span class="line">EOF</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">cp kubernetes.conf /etc/sysctl.d/kubernetes.conf</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">sysctl -p /etc/sysctl.d/kubernetes.conf</span></span></span><br></pre></td></tr></table></figure>


<p>调整系统时区</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">设置系统时区为中国/上海</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">timedatectl set-timezone Asia/Shanghai</span></span><br><span class="line">将当前的 UTC 时间写入硬件时钟</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">timedatectl set-local-rtc 0</span></span><br><span class="line">重启依赖于系统时间的服务</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl restart rsyslog</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl restart crond</span></span><br></pre></td></tr></table></figure>


<p>关闭系统不需要的服务</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"> systemctl stop postfix &amp;&amp; systemctl <span class="built_in">disable</span> postfix</span></span><br></pre></td></tr></table></figure>


<p>升级内核至4.44</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-3.el7.elrepo.noarch.rpm</span></span><br><span class="line">安装完成后检查 /boot/grub2/grub.cfg 中对应内核 menuentry 中是否包含 initrd16 配置，如果没有，再安装一次！</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum --enablerepo=elrepo-kernel install -y kernel-lt</span></span><br><span class="line">设置开机从新内核启动</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">grub2-set-default <span class="string">&#x27;CentOS Linux (4.4.189-1.el7.elrepo.x86_64) 7 (Core)&#x27;</span></span></span><br><span class="line">卸载3.10版内核</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rpm -qa|grep kernel</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum remove -y kernel-3.10.0-1062.1.2.el7.x86_64</span></span><br></pre></td></tr></table></figure>


<p>配置ipvs</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"> yum -y install ipvsadm  ipset</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"> modprobe br_netfilter</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"> <span class="built_in">cat</span> &gt; /etc/sysconfig/modules/ipvs.modules &lt;&lt;<span class="string">EOF</span></span></span><br><span class="line">modprobe -- ip_vs</span><br><span class="line">modprobe -- ip_vs_rr</span><br><span class="line">modprobe -- ip_vs_wrr</span><br><span class="line">modprobe -- ip_vs_sh</span><br><span class="line">modprobe -- nf_conntrack_ipv4</span><br><span class="line">EOF</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="string"> chmod 755 /etc/sysconfig/modules/ipvs.modules &amp;&amp; bash /etc/sysconfig/modules/ipvs.modules &amp;&amp;lsmod | grep -e ip_vs -e nf_conntrack_ipv4</span></span></span><br></pre></td></tr></table></figure>


<p>安装docker</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum install -y yum-utils device-mapper-persistent-data lvm2 wget vim</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget -O /etc/yum.repos.d/docker-ce.repo https://download.docker.com/linux/centos/docker-ce.repo</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">sed -i <span class="string">&#x27;s+download.docker.com+mirrors.tuna.tsinghua.edu.cn/docker-ce+&#x27;</span> /etc/yum.repos.d/docker-ce.repo</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum update -y &amp;&amp; yum install -y docker-ce</span></span><br></pre></td></tr></table></figure>


<p>重启机器</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum remove -y kernel-3.10.0-1062.1.2.el7.x86_64</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">grub2-set-default <span class="string">&#x27;CentOS Linux (4.4.189-1.el7.elrepo.x86_64) 7 (Core)&#x27;</span> &amp;&amp; reboot</span></span><br></pre></td></tr></table></figure>


<p>主机名解析</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cat</span> &lt;&lt; <span class="string">EOF &gt;&gt;/etc/hosts</span></span></span><br><span class="line">192.168.9.20 master</span><br><span class="line">192.168.9.22 node01</span><br><span class="line">192.168.9.24 node02</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>


<h2 id="部署安装集群"><a href="#部署安装集群" class="headerlink" title="部署安装集群"></a>部署安装集群</h2><h3 id="docker配置"><a href="#docker配置" class="headerlink" title="docker配置"></a>docker配置</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">创建 /etc/docker 目录</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mkdir</span> /etc/docker</span></span><br><span class="line">配置 daemon.</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cat</span> &gt; /etc/docker/daemon.json &lt;&lt;<span class="string">EOF</span></span></span><br><span class="line">&#123;</span><br><span class="line">&quot;registry-mirrors&quot;: [&quot;https://registry.docker-cn.com&quot;],   # 阿里云加速</span><br><span class="line">&quot;insecure-registries&quot;: [&quot;https://harbor.ui.com&quot;],         # harbor私有仓库,没有不需要加</span><br><span class="line">&quot;exec-opts&quot;: [&quot;native.cgroupdriver=systemd&quot;],</span><br><span class="line">&quot;log-driver&quot;: &quot;json-file&quot;,</span><br><span class="line">&quot;log-opts&quot;: &#123;&quot;max-size&quot;: &quot;100m&quot; &#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">重启docker服务</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">systemctl daemon-reload &amp;&amp; systemctl restart docker &amp;&amp; systemctl enable docker</span></span></span><br></pre></td></tr></table></figure>


<h3 id="安装kubeadm"><a href="#安装kubeadm" class="headerlink" title="安装kubeadm"></a>安装kubeadm</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; /etc/yum.repos.d/kubernetes.repo</span></span></span><br><span class="line">[kubernetes]</span><br><span class="line">name=Kubernetes</span><br><span class="line">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">repo_gpgcheck=1</span><br><span class="line">gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span><br><span class="line">EOF</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">yum install kubelet-1.18.3 kubeadm-1.18.3 kubectl-1.18.3 -y</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">systemctl enable kubelet &amp;&amp; systemctl start kubelet</span></span></span><br></pre></td></tr></table></figure>


<h3 id="初始化master"><a href="#初始化master" class="headerlink" title="初始化master"></a>初始化master</h3><p>配置初始化yaml</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubeadm config <span class="built_in">print</span> init-defaults &gt; kubeadm-config.yaml</span></span><br><span class="line">11 localAPIEndpoint:</span><br><span class="line">12   advertiseAddress: 192.168.9.20  # MasterIP</span><br><span class="line">13   bindPort: 6443</span><br><span class="line">32 imageRepository: registry.aliyuncs.com/google_containers  # 更换成阿里源</span><br><span class="line">33 kind: ClusterConfiguration</span><br><span class="line">34 kubernetesVersion: v1.18.3    # 修改k8s版本，与kubeadm版本一致</span><br><span class="line">35 networking:</span><br><span class="line">36   dnsDomain: cluster.local</span><br><span class="line">37   podSubnet: &quot;10.244.0.0/16&quot;  # 新增pod地址范围</span><br><span class="line">38   serviceSubnet: 10.96.0.0/12</span><br><span class="line">39 scheduler: &#123;&#125;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">配置默认ipvs模式</span></span><br><span class="line">40 ---</span><br><span class="line">41 apiVersion: kubeproxy.config.k8s.io/v1alpha1</span><br><span class="line">42 kind: KubeProxyConfiguration</span><br><span class="line">43 featureGates:</span><br><span class="line">44   SupportIPVSProxyMode: true</span><br><span class="line">45 mode: ipvs</span><br></pre></td></tr></table></figure>


<p>初始化主节点</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubeadm init --config=kubeadm-config.yaml | <span class="built_in">tee</span> kubeadm-init.log</span></span><br><span class="line">To start using your cluster, you need to run the following as a regular user:</span><br><span class="line">  mkdir -p $HOME/.kube</span><br><span class="line">  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config</span><br><span class="line">  sudo chown $(id -u):$(id -g) $HOME/.kube/config</span><br><span class="line">You should now deploy a pod network to the cluster.</span><br><span class="line">Run &quot;kubectl apply -f [podnetwork].yaml&quot; with one of the options listed at:</span><br><span class="line">  https://kubernetes.io/docs/concepts/cluster-administration/addons/</span><br><span class="line">Then you can join any number of worker nodes by running the following on each as root:</span><br><span class="line">kubeadm join 192.168.9.20:6443 --token abcdef.0123456789abcdef \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:18c80afbdc12239db14f27b40fc372ac8548b9467395c83582386df1bee86e6f</span><br></pre></td></tr></table></figure>


<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">   <span class="built_in">mkdir</span> -p <span class="variable">$HOME</span>/.kube</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">   sudo <span class="built_in">cp</span> -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">   sudo <span class="built_in">chown</span> $(<span class="built_in">id</span> -u):$(<span class="built_in">id</span> -g) <span class="variable">$HOME</span>/.kube/config</span></span><br><span class="line">[root@master ~]# kubectl get node</span><br><span class="line">NAME     STATUS     ROLES    AGE    VERSION</span><br><span class="line">master   NotReady   master   3m2s   v1.18.3</span><br></pre></td></tr></table></figure>


<h3 id="node加入集群"><a href="#node加入集群" class="headerlink" title="node加入集群"></a>node加入集群</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum install kubelet-1.18.3 kubeadm-1.18.3 -y</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubeadm <span class="built_in">join</span> 192.168.9.20:6443 --token abcdef.0123456789abcdef \</span></span><br><span class="line"><span class="language-bash">    --discovery-token-ca-cert-hash sha256:18c80afbdc12239db14f27b40fc372ac8548b9467395c83582386df1bee86e6f</span></span><br></pre></td></tr></table></figure>


<h3 id="部署网络"><a href="#部署网络" class="headerlink" title="部署网络"></a>部署网络</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get node</span></span><br><span class="line">NAME     STATUS   ROLES    AGE     VERSION</span><br><span class="line">master   Ready    master   11m     v1.18.3</span><br><span class="line">node01   Ready    &lt;none&gt;   5m44s   v1.18.3</span><br><span class="line">node02   Ready    &lt;none&gt;   4m5s    v1.18.3</span><br></pre></td></tr></table></figure>


<h3 id="给node节点定义角色标签"><a href="#给node节点定义角色标签" class="headerlink" title="给node节点定义角色标签"></a>给node节点定义角色标签</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl label node node01 node-role.kubernetes.io/node=</span></span><br><span class="line">node/node01 labeled</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl label node node02 node-role.kubernetes.io/node=</span></span><br><span class="line">node/node02 labeled</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get node</span></span><br><span class="line">NAME     STATUS   ROLES    AGE   VERSION</span><br><span class="line">master   Ready    master   23m   v1.18.3</span><br><span class="line">node01   Ready    node     17m   v1.18.3</span><br><span class="line">node02   Ready    node     15m   v1.18.3</span><br></pre></td></tr></table></figure>


<h3 id="node节点执行kubectl操作"><a href="#node节点执行kubectl操作" class="headerlink" title="node节点执行kubectl操作"></a>node节点执行kubectl操作</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mkdir</span> ~/.kube</span></span><br><span class="line">master拷贝配置文件</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">scp /etc/kubernetes/admin.conf node01:/root/.kube/config</span></span><br></pre></td></tr></table></figure>


<p>至此，一个简单的k8s集群搭建成功了 </p>
]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>kubeadm部署高可用k8s集群</title>
    <url>/2020/11/12/kubeadm%E9%AB%98%E5%8F%AF%E7%94%A8/</url>
    <content><![CDATA[<h2 id="系统初始化"><a href="#系统初始化" class="headerlink" title="系统初始化"></a>系统初始化</h2><p>配置主机名解析</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@master-01 ~]# cat &gt;&gt;/etc/hosts &lt;&lt;EOF</span><br><span class="line">10.166.33.120 master-01</span><br><span class="line">10.166.33.121 master-02</span><br><span class="line">10.166.33.122 master-03</span><br><span class="line">EOF  </span><br></pre></td></tr></table></figure>

<p>安装Base源</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@master-01 ~]# curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br></pre></td></tr></table></figure>

<p>安装依赖包</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@master-01 ~]# yum install -y conntrack ntpdate ntp jq iptables curl sysstat libseccomp wgetvimnet-tools wget bash-completion</span><br></pre></td></tr></table></figure>

<p>配置防火墙</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@master-01 ~]# systemctl stop firewalld &amp;&amp; systemctl disable firewalld</span><br><span class="line">[root@master-01 ~]# yum -y install iptables-services &amp;&amp; systemctl start iptables &amp;&amp; systemctl enable iptables&amp;&amp; iptables -F &amp;&amp; service iptables save</span><br></pre></td></tr></table></figure>

<p>关闭selinux与swap</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@master-01 ~]# swapoff -a &amp;&amp; sed -i &#x27;/ swap / s/^\(.*\)$/#\1/g&#x27; /etc/fstab</span><br><span class="line">[root@master-01 ~]# setenforce 0 &amp;&amp; sed -i &#x27;s/^SELINUX=.*/SELINUX=disabled/&#x27; /etc/selinux/config</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>调整内核</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@master-01 ~]# cat &gt; /etc/sysctl.d/kubernetes.conf &lt;&lt;EOF</span><br><span class="line">vm.swappiness=0         # 禁止使用 swap 空间，只有当系统 OOM 时才允许使用它</span><br><span class="line">vm.overcommit_memory=1  # 表示内核允许分配所有的物理内存，而不管当前的内存状态如何</span><br><span class="line">vm.panic_on_oom=0       # 表示当内存耗尽时，内核会触发OOM killer杀掉最耗内存的进程</span><br><span class="line">vm.max_map_count=262144  </span><br><span class="line">net.bridge.bridge-nf-call-iptables=1</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables=1</span><br><span class="line">net.ipv4.ip_forward=1</span><br><span class="line">net.ipv4.tcp_tw_recycle=0</span><br><span class="line">net.ipv4.tcp_wmem=4096 12582912 16777216</span><br><span class="line">net.ipv4.tcp_rmem=4096 12582912 16777216</span><br><span class="line">net.ipv4.tcp_max_syn_backlog=8096</span><br><span class="line">net.ipv4.tcp_slow_start_after_idle=0</span><br><span class="line">net.ipv4.tcp_tw_reuse=1</span><br><span class="line">net.core.somaxconn=32768</span><br><span class="line">net.core.wmem_max=26214400</span><br><span class="line">net.core.rmem_max=26214400</span><br><span class="line">net.core.rmem_default=26214400</span><br><span class="line">net.core.netdev_max_backlog=16384</span><br><span class="line">net.ipv4.ip_forward=1</span><br><span class="line">net.ipv4.neigh.default.gc_thresh1=8000</span><br><span class="line">net.ipv4.neigh.default.gc_thresh2=9000</span><br><span class="line">net.ipv4.neigh.default.gc_thresh3=10000</span><br><span class="line">net.ipv4.conf.default.promote_secondaries=1</span><br><span class="line">net.ipv6.conf.all.disable_ipv6=1</span><br><span class="line">net.netfilter.nf_conntrack_max=2310720</span><br><span class="line">fs.inotify.max_user_watches=1048576</span><br><span class="line">fs.inotify.max_user_instances=8192</span><br><span class="line">fs.inotify.max_queued_events=16384</span><br><span class="line">fs.file-max=52706963</span><br><span class="line">fs.nr_open=52706963</span><br><span class="line">kernel.pid_max=196608</span><br><span class="line">EOF</span><br><span class="line">[root@master-01 ~]# sysctl -p /etc/sysctl.d/kubernetes.conf</span><br></pre></td></tr></table></figure>

<p>调整系统时间</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@master-01 ~]# timedatectl set-timezone Asia/Shanghai</span><br><span class="line">主节点配置</span><br><span class="line">[root@master-01 ~]# vim /etc/ntp.conf </span><br><span class="line">restrict 127.0.0.1</span><br><span class="line">restrict ::1</span><br><span class="line">restrict 10.166.33.120 nomodify notrap nopeer noquery           # 当前节点ip</span><br><span class="line">restrict 10.166.33.254 mask 255.255.255.0 nomodify notrap       # 集群所在网段的网关（Gateway），子网掩码（Genmask）</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">server 0.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">server 1.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">server 2.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">server 3.centos.pool.ntp.org iburst</span></span><br><span class="line">server 127.127.1.0</span><br><span class="line">Fudge 127.127.1.0 stratum 10</span><br><span class="line">从节点配置</span><br><span class="line">[root@master-02 ~]# vim /etc/ntp.conf</span><br><span class="line">restrict 127.0.0.1 </span><br><span class="line">restrict ::1</span><br><span class="line">restrict 10.166.33.121 nomodify notrap nopeer noquery</span><br><span class="line">restrict 10.166.33.254 mask 255.255.255.0 nomodify notrap</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">server 0.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">server 1.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">server 2.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">server 3.centos.pool.ntp.org iburst</span></span><br><span class="line">server 10.166.33.120</span><br><span class="line">Fudge 10.166.33.120 stratum 10</span><br><span class="line"></span><br><span class="line">[root@master-01 ~]# systemctl start ntpd</span><br><span class="line">[root@master-01 ~]# systemctl enable ntpd</span><br><span class="line">[root@master-01 ~]# ntpq -p</span><br><span class="line">     remote           refid      st t when poll reach   delay   offset  jitter</span><br><span class="line">==============================================================================</span><br><span class="line">*LOCAL(0)        .LOCL.           5 l   30   64    1    0.000    0.000   0.000</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>配置ipvs</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@master-01 ~]# yum -y install ipvsadm ipset</span><br><span class="line">[root@master-01 ~]# modprobe br_netfilter</span><br><span class="line">[root@master-01 ~]# cat &gt; /etc/sysconfig/modules/ipvs.modules &lt;&lt;EOF</span><br><span class="line">modprobe -- ip_vs</span><br><span class="line">modprobe -- ip_vs_rr</span><br><span class="line">modprobe -- ip_vs_wrr</span><br><span class="line">modprobe -- ip_vs_sh</span><br><span class="line">modprobe -- nf_conntrack_ipv4</span><br><span class="line">EOF</span><br><span class="line">[root@master-01 ~]# chmod 755 /etc/sysconfig/modules/ipvs.modules &amp;&amp; bash /etc/sysconfig/modules/ipvs.modules &amp;&amp;lsmod | grep -e ip_vs -e nf_conntrack_ipv4</span><br><span class="line">ip_vs_sh               12688  0 </span><br><span class="line">ip_vs_wrr              12697  0 </span><br><span class="line">ip_vs_rr               12600  0 </span><br><span class="line">ip_vs                 145497  6 ip_vs_rr,ip_vs_sh,ip_vs_wrr</span><br><span class="line">nf_conntrack_ipv4      15053  0 </span><br><span class="line">nf_defrag_ipv4         12729  1 nf_conntrack_ipv4</span><br><span class="line">nf_conntrack          133095  3 ip_vs,xt_conntrack,nf_conntrack_ipv4</span><br><span class="line">libcrc32c              12644  3 xfs,ip_vs,nf_conntrack</span><br></pre></td></tr></table></figure>

<h2 id="部署集群"><a href="#部署集群" class="headerlink" title="部署集群"></a>部署集群</h2><h3 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@master-01 ~]# wget -O /etc/yum.repos.d/docker-ce.repo https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line">[root@master-01 ~]# sed -i &#x27;s+download.docker.com+mirrors.tuna.tsinghua.edu.cn/docker-ce+&#x27; /etc/yum.repos.d/docker-ce.repo</span><br><span class="line">[root@master-01 ~]# yum install -y docker-ce</span><br></pre></td></tr></table></figure>
<p>配置docker lv</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@master-01 ~]# pvcreate /dev/sda4</span><br><span class="line">[root@master-01 ~]# vgcreate dockerlv /dev/sda4</span><br><span class="line">[root@master-01 ~]# lvcreate --wipesignatures y -n docker-data dockerlv -l 95%VG</span><br><span class="line">[root@master-01 ~]# mkfs.xfs /dev/dockerlv/docker-data </span><br><span class="line">[root@master-01 ~]# mkdir /var/lib/docker</span><br><span class="line">[root@master-01 ~]# echo &quot;/dev/dockerlv/docker-data  /var/lib/docker    xfs   rw,relatime,attr2,inode64,usrquota,prjquota     0 0&quot; &gt;&gt; /etc/fstab</span><br><span class="line">[root@master-01 ~]# mount -a</span><br></pre></td></tr></table></figure>
<p>docker 配置文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@master-01 ~]# mkdir /etc/docker</span><br><span class="line">[root@master-01 ~]# vim /etc/docker/daemon.json</span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https://djbk5ums.mirror.aliyuncs.com&quot;],</span><br><span class="line">  &quot;storage-driver&quot;: &quot;overlay2&quot;,</span><br><span class="line">  &quot;storage-opts&quot;: [</span><br><span class="line">    &quot;overlay2.override_kernel_check=true&quot;,</span><br><span class="line">    &quot;overlay2.size=10G&quot;  // 如果限制容器空间大小，需要xfs文件系统及支持配额</span><br><span class="line">  ],</span><br><span class="line">  &quot;exec-opts&quot;: [</span><br><span class="line">    &quot;native.cgroupdriver=systemd&quot;</span><br><span class="line">  ],</span><br><span class="line">  &quot;log-driver&quot;: &quot;json-file&quot;,</span><br><span class="line">  &quot;log-opts&quot;: &#123;</span><br><span class="line">    &quot;max-size&quot;: &quot;20m&quot;,</span><br><span class="line">    &quot;max-file&quot;: &quot;10&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;live-restore&quot;: true,</span><br><span class="line">  &quot;max-concurrent-downloads&quot;: 10,</span><br><span class="line">  &quot;max-concurrent-uploads&quot;: 10,</span><br><span class="line">  &quot;oom-score-adjust&quot;: -1000</span><br><span class="line">&#125;</span><br><span class="line">[root@master-01 ~]# systemctl daemon-reload &amp;&amp; systemctl restart docker &amp;&amp; systemctl enable docker</span><br></pre></td></tr></table></figure>

<h3 id="安装keepalived"><a href="#安装keepalived" class="headerlink" title="安装keepalived"></a>安装keepalived</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@master-01 ~]# yum install -y keepalived</span><br><span class="line">[root@master-01 ~]# vim /etc/keepalived/keepalived.conf</span><br><span class="line">global_defs &#123;</span><br><span class="line">   script_user root root</span><br><span class="line">&#125;</span><br><span class="line">vrrp_script check &#123;</span><br><span class="line">    script &quot;/etc/keepalived/check.sh&quot;</span><br><span class="line">    interval 2</span><br><span class="line">    timeout 1</span><br><span class="line">    rise 1</span><br><span class="line">    fall 3</span><br><span class="line">    user root root</span><br><span class="line">&#125;</span><br><span class="line">vrrp_instance master &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 120</span><br><span class="line">    priority 200</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 123456789</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        check</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.166.33.125</span><br><span class="line">    &#125;</span><br><span class="line">   unicast_src_ip 10.166.33.120</span><br><span class="line">   unicast_peer &#123; </span><br><span class="line">    10.166.33.121</span><br><span class="line">    10.166.33.122</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@master-02 ~]# vim /etc/keepalived/keepalived.conf</span><br><span class="line">global_defs &#123;</span><br><span class="line">   script_user root</span><br><span class="line">   router_id control-plane</span><br><span class="line">   vrrp_garp_master_delay 2</span><br><span class="line">   vrrp_garp_master_repeat 3</span><br><span class="line">   vrrp_garp_master_refresh 30</span><br><span class="line">   vrrp_garp_interval 0.001</span><br><span class="line">   vrrp_gna_interval 0.000001</span><br><span class="line">   vrrp_no_swap</span><br><span class="line">   checker_no_swap</span><br><span class="line">&#125;</span><br><span class="line">vrrp_script check &#123;</span><br><span class="line">    script &quot;/etc/keepalived/check.sh&quot;</span><br><span class="line">    interval 2</span><br><span class="line">    timeout 1</span><br><span class="line">    rise 1</span><br><span class="line">    fall 3</span><br><span class="line">    user root root</span><br><span class="line">&#125;</span><br><span class="line">vrrp_instance master &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 120</span><br><span class="line">    priority 150</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 123456789</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        check</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.166.33.125</span><br><span class="line">    &#125;</span><br><span class="line">   unicast_src_ip 10.166.33.121</span><br><span class="line">   unicast_peer &#123; </span><br><span class="line">    10.166.33.120</span><br><span class="line">    10.166.33.122</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@master-03 ~]# vim /etc/keepalived/keepalived.conf</span><br><span class="line">global_defs &#123;</span><br><span class="line">   script_user root</span><br><span class="line">   router_id control-plane</span><br><span class="line">   vrrp_garp_master_delay 2</span><br><span class="line">   vrrp_garp_master_repeat 3</span><br><span class="line">   vrrp_garp_master_refresh 30</span><br><span class="line">   vrrp_garp_interval 0.001</span><br><span class="line">   vrrp_gna_interval 0.000001</span><br><span class="line">   vrrp_no_swap</span><br><span class="line">   checker_no_swap</span><br><span class="line">&#125;</span><br><span class="line">vrrp_script check &#123;</span><br><span class="line">    script &quot;/etc/keepalived/check.sh&quot;</span><br><span class="line">    interval 2</span><br><span class="line">    timeout 1</span><br><span class="line">    rise 1</span><br><span class="line">    fall 3</span><br><span class="line">    user root root</span><br><span class="line">&#125;</span><br><span class="line">vrrp_instance master &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 120</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 123456789</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        check</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.166.33.125</span><br><span class="line">    &#125;</span><br><span class="line">   unicast_src_ip 10.166.33.122</span><br><span class="line">   unicast_peer &#123; </span><br><span class="line">    10.166.33.120</span><br><span class="line">    10.166.33.121</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@master-01 ~]# cat /etc/keepalived/check.sh</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/usr/bin/env bash</span></span><br><span class="line">ports=&quot;6443&quot;                   # 集群没部署之前可以设置22端口</span><br><span class="line">for x in $ports; do</span><br><span class="line">  &lt;/dev/tcp/127.0.0.1/$x</span><br><span class="line">  if [[ $? -eq 0 ]]; then</span><br><span class="line">    echo &quot;probe $x successfully&quot;</span><br><span class="line">  else</span><br><span class="line">    echo &quot;probe $x failed&quot;</span><br><span class="line">    exit 1</span><br><span class="line">  fi</span><br><span class="line">done</span><br><span class="line">[root@master-01 ~]# chmod +x /etc/keepalived/check.sh</span><br><span class="line">[root@master-01 ~]# systemctl start keepalived.service</span><br><span class="line">[root@master-01 ~]# systemctl enable keepalived.service</span><br></pre></td></tr></table></figure>

<h3 id="安装kubedam"><a href="#安装kubedam" class="headerlink" title="安装kubedam"></a>安装kubedam</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@master-01 ~]# cat &lt;&lt;EOF &gt; /etc/yum.repos.d/kubernetes.repo</span><br><span class="line">[kubernetes]</span><br><span class="line">name=Kubernetes</span><br><span class="line">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">repo_gpgcheck=1</span><br><span class="line">gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span><br><span class="line">EOF</span><br><span class="line">[root@master-03 ~]# yum install kubelet-1.19.3 kubeadm-1.19.3 kubectl-1.19.3 -y</span><br><span class="line">[root@master-01 ~]# systemctl enable kubelet</span><br></pre></td></tr></table></figure>

<h3 id="初始化master"><a href="#初始化master" class="headerlink" title="初始化master"></a>初始化master</h3><p>初始化配置文件</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line">[<span class="string">root@master-01</span> <span class="string">~</span>]<span class="comment"># kubeadm config print init-defaults &gt; kubeadm-config.yaml</span></span><br><span class="line">[<span class="string">root@master-01</span> <span class="string">~</span>]<span class="comment"># vim kubeadm-config.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">kubeadm.k8s.io/v1beta2</span></span><br><span class="line"><span class="attr">bootstrapTokens:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">groups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">system:bootstrappers:kubeadm:default-node-token</span></span><br><span class="line">  <span class="attr">token:</span> <span class="string">abcdef.0123456789abcdef</span></span><br><span class="line">  <span class="attr">ttl:</span> <span class="string">24h0m0s</span></span><br><span class="line">  <span class="attr">usages:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">signing</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">authentication</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">InitConfiguration</span></span><br><span class="line"><span class="attr">localAPIEndpoint:</span></span><br><span class="line">  <span class="attr">advertiseAddress:</span> <span class="number">10.166</span><span class="number">.33</span><span class="number">.120</span>          <span class="comment"># 当前master ip</span></span><br><span class="line">  <span class="attr">bindPort:</span> <span class="number">6443</span></span><br><span class="line"><span class="attr">nodeRegistration:</span></span><br><span class="line">  <span class="attr">criSocket:</span> <span class="string">/var/run/dockershim.sock</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">master-01</span></span><br><span class="line">  <span class="attr">taints:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">effect:</span> <span class="string">NoSchedule</span></span><br><span class="line">    <span class="attr">key:</span> <span class="string">node-role.kubernetes.io/master</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiServer:</span></span><br><span class="line">  <span class="attr">timeoutForControlPlane:</span> <span class="string">4m0s</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">kubeadm.k8s.io/v1beta2</span></span><br><span class="line"><span class="attr">certificatesDir:</span> <span class="string">/etc/kubernetes/pki</span></span><br><span class="line"><span class="attr">clusterName:</span> <span class="string">kubernetes</span></span><br><span class="line"><span class="attr">controllerManager:</span> &#123;&#125;</span><br><span class="line"><span class="attr">controlPlaneEndpoint:</span> <span class="string">&quot;10.166.33.125:6443&quot;</span>   <span class="comment"># 推荐配置lb负载均衡的ip+prot,这里使用的是keepalived</span></span><br><span class="line"><span class="attr">dns:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">CoreDNS</span></span><br><span class="line"><span class="attr">etcd:</span></span><br><span class="line">  <span class="attr">local:</span></span><br><span class="line">    <span class="attr">dataDir:</span> <span class="string">/var/lib/etcd</span></span><br><span class="line"><span class="attr">imageRepository:</span> <span class="string">registry.aliyuncs.com/google_containers</span>  <span class="comment"># 更换阿里源</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterConfiguration</span></span><br><span class="line"><span class="attr">kubernetesVersion:</span> <span class="string">v1.19.3</span>                                </span><br><span class="line"><span class="attr">networking:</span></span><br><span class="line">  <span class="attr">dnsDomain:</span> <span class="string">cluster.local</span></span><br><span class="line">  <span class="attr">podSubnet:</span> <span class="number">10.244</span><span class="number">.0</span><span class="number">.0</span><span class="string">/16</span> </span><br><span class="line">  <span class="attr">serviceSubnet:</span> <span class="number">10.96</span><span class="number">.0</span><span class="number">.0</span><span class="string">/12</span></span><br><span class="line"><span class="attr">scheduler:</span> &#123;&#125;</span><br><span class="line"><span class="string">---</span>                                   <span class="comment"># 配置为开启ipvs模式</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">kubeproxy.config.k8s.io/v1alpha1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">KubeProxyConfiguration</span></span><br><span class="line"><span class="attr">featureGates:</span></span><br><span class="line">  <span class="attr">SupportIPVSProxyMode:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">mode:</span> <span class="string">ipvs</span></span><br></pre></td></tr></table></figure>

<p>初始化节点</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@master-01 ~]# kubeadm init --config=kubeadm-config.yaml --upload-certs| tee kubeadm-init.log</span><br><span class="line">Your Kubernetes control-plane has initialized successfully!</span><br><span class="line"></span><br><span class="line">To start using your cluster, you need to run the following as a regular user:</span><br><span class="line"></span><br><span class="line">  mkdir -p $HOME/.kube</span><br><span class="line">  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config</span><br><span class="line">  sudo chown $(id -u):$(id -g) $HOME/.kube/config</span><br><span class="line"></span><br><span class="line">You should now deploy a pod network to the cluster.</span><br><span class="line">Run &quot;kubectl apply -f [podnetwork].yaml&quot; with one of the options listed at:</span><br><span class="line">  https://kubernetes.io/docs/concepts/cluster-administration/addons/</span><br><span class="line"></span><br><span class="line">You can now join any number of the control-plane node running the following command on each as root:</span><br><span class="line"></span><br><span class="line">  kubeadm join 10.166.33.125:6443 --token abcdef.0123456789abcdef \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:b4ee43acb3a77e9d83ccf144b02eda021226846eff9e54dc6f664abbf3b6bf72 \</span><br><span class="line">    --control-plane --certificate-key efa140f2ca6cf179426cea52e5093f345e3a5a25ce96dd550f3ebd984134f200</span><br><span class="line"></span><br><span class="line">Please note that the certificate-key gives access to cluster sensitive data, keep it secret!</span><br><span class="line">As a safeguard, uploaded-certs will be deleted in two hours; If necessary, you can use</span><br><span class="line">&quot;kubeadm init phase upload-certs --upload-certs&quot; to reload certs afterward.</span><br><span class="line"></span><br><span class="line">Then you can join any number of worker nodes by running the following on each as root:</span><br><span class="line"></span><br><span class="line">kubeadm join 10.166.33.125:6443 --token abcdef.0123456789abcdef \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:b4ee43acb3a77e9d83ccf144b02eda021226846eff9e54dc6f664abbf3b6bf72 </span><br><span class="line"></span><br><span class="line">[root@master-01 ~]# mkdir -p $HOME/.kube</span><br><span class="line">[root@master-01 ~]# sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config</span><br><span class="line">[root@master-01 ~]# sudo chown $(id -u):$(id -g) $HOME/.kube/config</span><br></pre></td></tr></table></figure>

<p>安装网络插件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@master-01 ~]# kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml</span><br><span class="line">[root@master-01 ~]# kubectl get nodes</span><br><span class="line">NAME        STATUS   ROLES    AGE   VERSION</span><br><span class="line">master-01   Ready    master   3m   v1.19.3</span><br></pre></td></tr></table></figure>

<p>master加入集群</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@master-02 ~]# kubeadm join 10.166.33.125:6443 --token abcdef.0123456789abcdef \</span><br><span class="line">     --discovery-token-ca-cert-hash sha256:b4ee43acb3a77e9d83ccf144b02eda021226846eff9e54dc6f664abbf3b6bf72 \</span><br><span class="line">     --control-plane --certificate-key efa140f2ca6cf179426cea52e5093f345e3a5a25ce96dd550f3ebd984134f200</span><br><span class="line">[root@master-02 ~]# mkdir -p $HOME/.kube</span><br><span class="line">[root@master-02 ~]# sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config</span><br><span class="line">[root@master-02 ~]# sudo chown $(id -u):$(id -g) $HOME/.kube/config</span><br><span class="line">[root@master-02 ~]# kubectl get nodes</span><br><span class="line">NAME        STATUS   ROLES    AGE     VERSION</span><br><span class="line">master-01   Ready    master   12m     v1.19.3</span><br><span class="line">master-02   Ready    master   9m21s   v1.19.3</span><br><span class="line">master-03   Ready    master   8m26s   v1.19.3</span><br><span class="line">[root@master-02 ~]# kubectl get po -nkube-system</span><br><span class="line">NAME                                READY   STATUS    RESTARTS   AGE</span><br><span class="line">coredns-6d56c8448f-865wm            1/1     Running   0          15m</span><br><span class="line">coredns-6d56c8448f-xlm9h            1/1     Running   0          15m</span><br><span class="line">etcd-master-01                      1/1     Running   0          15m</span><br><span class="line">etcd-master-02                      1/1     Running   0          12m</span><br><span class="line">etcd-master-03                      1/1     Running   0          11m</span><br><span class="line">kube-apiserver-master-01            1/1     Running   0          15m</span><br><span class="line">kube-apiserver-master-02            1/1     Running   0          12m</span><br><span class="line">kube-apiserver-master-03            1/1     Running   0          11m</span><br><span class="line">kube-controller-manager-master-01   1/1     Running   1          15m</span><br><span class="line">kube-controller-manager-master-02   1/1     Running   0          12m</span><br><span class="line">kube-controller-manager-master-03   1/1     Running   0          11m</span><br><span class="line">kube-flannel-ds-7tcbq               1/1     Running   0          9m35s</span><br><span class="line">kube-flannel-ds-cj4rm               1/1     Running   0          6m39s</span><br><span class="line">kube-flannel-ds-h4pb7               1/1     Running   0          9m35s</span><br><span class="line">kube-proxy-4f2rr                    1/1     Running   0          15m</span><br><span class="line">kube-proxy-6k7sc                    1/1     Running   0          11m</span><br><span class="line">kube-proxy-b8shv                    1/1     Running   0          12m</span><br><span class="line">kube-scheduler-master-01            1/1     Running   1          15m</span><br><span class="line">kube-scheduler-master-02            1/1     Running   0          12m</span><br><span class="line">kube-scheduler-master-03            1/1     Running   0          11m</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>kubernetes之“Hello World”</title>
    <url>/2019/07/03/kubernetes%E4%B9%8B%E2%80%9CHello%20World%E2%80%9D/</url>
    <content><![CDATA[<h3 id="安装Kubernetes"><a href="#安装Kubernetes" class="headerlink" title="安装Kubernetes"></a>安装Kubernetes</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"> systemctl <span class="built_in">disable</span> firewalld</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"> systemctl stop firewalld</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum install -y etcd kubernetes</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl start etcd docker</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl start kube-apiserver kube-controller-manager kube-scheduler</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl start kubelet kube-proxy</span></span><br></pre></td></tr></table></figure>

 <span id="more"></span>

<h3 id="启动mysql服务"><a href="#启动mysql服务" class="headerlink" title="启动mysql服务"></a>启动mysql服务</h3><p>创建一个RC定义文件：mysql-rc.yaml</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"> vim mysql-rc.yaml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ReplicationController     # 副本控制器RC</span><br><span class="line">metadata:</span><br><span class="line">  name: mysql                   # RC的名称，全局唯一</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1                      # Pod副本期待数量</span><br><span class="line">  selector:</span><br><span class="line">    app: mysql                   # 符合目标的Pod拥有此标签</span><br><span class="line">  template:                        # 根据此模板创建Pod的副本（实例）</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: mysql                 # Pod副本拥有的标签，对应RC的selector</span><br><span class="line">    spec:</span><br><span class="line">      containers:                    # Pod内容器的定义部分</span><br><span class="line">      - name: mysql               # 容器的名称</span><br><span class="line">        image: mysql:5.7               # 容器对应的镜像</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 3306    # 容器应用监听的端口号</span><br><span class="line">        env:                               # 注入容器内的环境变量</span><br><span class="line">        - name: MYSQL_ROOT_PASSWORD</span><br><span class="line">          value: &quot;123456&quot;</span><br></pre></td></tr></table></figure>


<p>yaml文件说明：</p>
<p>kind：表明此资源对象的类型。这里的值是ReplicationController，表示这是一个RC</p>
<p>spec.replicas：指定Pod副本数量，默认为1</p>
<p>spec.selector： RC通过该属性来筛选要控制的Pod</p>
<p>spec.template：这里就是我们之前的Pod的定义的模块，但是不需要apiVersion和kind了</p>
<p>spec.template.metadata.labels： 注意这里的Pod的labels要和spec.selector相同，这样RC就可以来控制当前这个Pod了。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl create -f mysql-rc.yaml</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get rc</span></span><br><span class="line">NAME      DESIRED   CURRENT   READY     AGE</span><br><span class="line">mysql     1         1         0         3s</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get pods</span></span><br><span class="line">NAME          READY     STATUS    RESTARTS   AGE</span><br><span class="line">myweb-jqhz5   1/1       Running   0          59s</span><br></pre></td></tr></table></figure>


<h4 id="rc无法创建"><a href="#rc无法创建" class="headerlink" title="rc无法创建"></a>rc无法创建</h4><ul>
<li><p>报错1</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get pods</span></span><br><span class="line">No resources found.  #发现RC创建成功，但是查看Pods时，却显示不存在</span><br></pre></td></tr></table></figure>

<p>解决：</p>
</li>
</ul>
<p>编辑&#x2F;etc&#x2F;kubernetes&#x2F;apiserver 去除 KUBE_ADMISSION_CONTROL 中的 SecurityContextDeny,ServiceAccount ，并重启kube-apiserver.service服务</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /etc/kubernetes/apiserver</span></span><br><span class="line">KUBE_ADMISSION_CONTROL=&quot;--admission-control=NamespaceLifecycle,NamespaceExists,LimitRanger,SecurityContextDen</span><br><span class="line">y,ResourceQuota&quot;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl restart kube-apiserver.service</span></span><br></pre></td></tr></table></figure>


<ul>
<li><p>报错2（node节点，单机忽略）：</p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">FailedSync  Error syncing pod, skipping: failed to &quot;StartContainer&quot; for &quot;POD&quot; with ErrImagePull: &quot;image pull failed for registry.access.redhat.com/rhel7/pod-infrastructure:latest, this may be because there are no credentials on this request.  details: (open /etc/docker/certs.d/registry.access.redhat.com/redhat-ca.crt: no such file or directory)&quot;</span><br><span class="line"> 9m    11s    39    &#123;kubelet 127.0.0.1&#125;        Warning    FailedSync    Error syncing pod, skipping: failed to &quot;StartContainer&quot; for &quot;POD&quot; with ImagePullBackOff: &quot;Back-off pulling image \&quot;registry.access.redhat.com/rhel7/pod-infrastructure:latest\&quot;&quot;</span><br></pre></td></tr></table></figure></li>
</ul>
<p>解决：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">证书问题</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget http://mirror.centos.org/centos/7/os/x86_64/Packages/python-rhsm-certificates-1.19.10-1.el7_4.x86_64.rpm</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rpm2cpio python-rhsm-certificates-1.19.10-1.el7_4.x86_64.rpm | cpio -iv --to-stdout ./etc/rhsm/ca/redhat-uep.pem | <span class="built_in">tee</span> /etc/rhsm/ca/redhat-uep.pem</span></span><br><span class="line">pod-infrastructure镜像问题</span><br><span class="line">方法1&gt;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker pull registry.access.redhat.com/rhel7/pod-infrastructure:latest</span></span><br><span class="line">方法2&gt;</span><br><span class="line">链接：https://pan.wqblogs.com:4443/sharing/WHPft6aOK</span><br><span class="line">下载ftp到服务器</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker load -i pod-infrastructure-latest.tar.gz</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker tag registry.access.redhat.com/rhel7/pod-infrastructure:latest 10.0.0.11:81/pod-infrastructure:latest</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /etc/kubernetes/kubelet</span></span><br><span class="line">KUBELET_POD_INFRA_CONTAINER=&quot;--pod-infra-container-image=10.0.0.11:81/pod-infrastructure:latest&quot;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl restart kubelet</span></span><br></pre></td></tr></table></figure>


<p>创建与之关联的Service</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim mysql-svc.yaml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service     # 表明是Kubernetes Service</span><br><span class="line">metadata:</span><br><span class="line">  name: mysql     # Service的全局唯一名称  </span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">    - port: 3306  # Service提供服务的端口号</span><br><span class="line">  selector:</span><br><span class="line">    app: mysql     # Service对应的pod拥有这里定义的标签</span><br></pre></td></tr></table></figure>


<p>yaml文件说明：</p>
<p>metadata.name：Service的服务名</p>
<p>port： 定义Service的虚拟端口</p>
<p>spec.selector：确定哪些Pod的副本（示例）对应到本服务</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl create -f mysql-svc.yaml</span></span><br><span class="line">service &quot;mysql&quot; created</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get svc</span></span><br><span class="line">NAME         CLUSTER-IP     EXTERNAL-IP   PORT(S)    AGE</span><br><span class="line">kubernetes   10.254.0.1     &lt;none&gt;        443/TCP    3d</span><br><span class="line">mysql        10.254.39.76   &lt;none&gt;        3306/TCP   17s</span><br></pre></td></tr></table></figure>


<p>注意到mysql服务被分配了一个10.254.39.76的Cluster IP地址，这是一个虚拟地址，随后Kubernetes集群中其他新创建的Pod就可以通过Service的Cluster IP+端口号 3306来连接和访问它了</p>
<h3 id="启动tomcat服务"><a href="#启动tomcat服务" class="headerlink" title="启动tomcat服务"></a>启动tomcat服务</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim myweb-rc.yaml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ReplicationController</span><br><span class="line">metadata:</span><br><span class="line">  name: myweb</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    app: myweb</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: myweb</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: myweb</span><br><span class="line">        image: kubeguide/tomcat-app:v1</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 8080</span><br><span class="line">        env:</span><br><span class="line">        - name: MYSQL_SERVICE_HOST</span><br><span class="line">          value: &#x27;10.254.39.76&#x27;</span><br><span class="line">        - name: MYSQL_SERVICE_PORT</span><br><span class="line">          value: &#x27;3306&#x27;</span><br></pre></td></tr></table></figure>


<p>与mysql连接的地址通过ENV方式注入。即在myweb-rc.yaml中配置的MYSQL_SERVICE_HOST和MYSQL_SERVICE_PORT环境变量指定</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl create -f myweb-rc.yaml</span></span><br><span class="line">replicationcontroller &quot;myweb&quot; created</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get pods</span></span><br><span class="line">NAME          READY     STATUS    RESTARTS   AGE</span><br><span class="line">myweb-jqhz5   1/1       Running   1          3m</span><br><span class="line">myweb-2n9sm   1/1       Running   0          3m</span><br></pre></td></tr></table></figure>


<p>创建与之关联的Service</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim myweb-src.yaml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: myweb</span><br><span class="line">spec:</span><br><span class="line">  type: NodePort</span><br><span class="line">  ports:</span><br><span class="line">    - port: 8080</span><br><span class="line">      nodePort: 30001</span><br><span class="line">  selector:</span><br><span class="line">    app: myweb</span><br></pre></td></tr></table></figure>


<p> type: NodePort和nodePort: 30001，表明此Service开启了NodePort方式的外网访问模式</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl create -f myweb-src.yaml</span></span><br><span class="line">service &quot;myweb&quot; created</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get service</span></span><br><span class="line">NAME         CLUSTER-IP      EXTERNAL-IP   PORT(S)          AGE</span><br><span class="line">kubernetes   10.254.0.1      &lt;none&gt;        443/TCP          3d</span><br><span class="line">mysql        10.254.39.76    &lt;none&gt;        3306/TCP         3h</span><br><span class="line">myweb        10.254.74.251   &lt;nodes&gt;       8080:30001/TCP   1m</span><br></pre></td></tr></table></figure>


<h3 id="浏览器访问网页"><a href="#浏览器访问网页" class="headerlink" title="浏览器访问网页"></a>浏览器访问网页</h3><p>访问<a href="http://ip:30001/demo">http://IP:30001/demo</a></p>
<p><img src="/image/1562149872-1562149862647.jpg"></p>
<p>添加数据</p>
<p><img src="/image/1562149903-1562149894889.jpg"></p>
<p>查看新数据</p>
<p><img src="/image/1562149927-1562149919371.jpg"></p>
<p>看不见这个网页检查：</p>
<p>1.防火墙原因</p>
<p>2.进入myweb查看环境变量是否正确</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl <span class="built_in">exec</span> -ti myweb-jqhz5 bash</span></span><br><span class="line">root@myweb-jqhz5:/usr/local/tomcat# echo $MYSQL_SERVICE_PORT</span><br><span class="line">3306</span><br><span class="line">root@myweb-jqhz5:/usr/local/tomcat# echo $MYSQL_SERVICE_HOST</span><br><span class="line">10.254.39.76</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>kubernetes POD控制器</title>
    <url>/2019/10/17/kubernetes%20POD%E6%8E%A7%E5%88%B6%E5%99%A8/</url>
    <content><![CDATA[<h2 id="什么是控制器"><a href="#什么是控制器" class="headerlink" title="什么是控制器"></a>什么是控制器</h2><p>Kubernetes中内建了很多controller（控制器），这些相当于一个状态机，用来控制Pod的具体状态和行为</p>
<h2 id="控制器类型"><a href="#控制器类型" class="headerlink" title="控制器类型"></a>控制器类型</h2><ul>
<li><p>ReplicationController和ReplicaSet</p>
</li>
<li><p>Deployment</p>
</li>
<li><p>DaemonSet</p>
</li>
<li><p>StateFulSet</p>
</li>
<li><p>Job&#x2F;CronJob</p>
</li>
</ul>
   <span id="more"></span>

<h3 id="ReplicationController和ReplicaSet"><a href="#ReplicationController和ReplicaSet" class="headerlink" title="ReplicationController和ReplicaSet"></a>ReplicationController和ReplicaSet</h3><p>ReplicationController（RC）用来确保容器应用的副本数始终保持在用户定义的副本数，即如果有容器异常退出，会自动创建新的Pod来替代；而如果异常多出来的容器也会自动回收；</p>
<p>在新版本的Kubernetes中建议使用ReplicaSet来取代ReplicationController。ReplicaSet跟ReplicationController没有本质的不同，只是名字不一样，并且ReplicaSet支持集合式的selector；</p>
<h3 id="Deployment"><a href="#Deployment" class="headerlink" title="Deployment"></a>Deployment</h3><p>Deployment为Pod和ReplicaSet提供了一个声明式定义(declarative)方法，用来替代以前的ReplicationController来方便的管理应用。典型的应用场景包括；</p>
<ul>
<li><p>定义Deployment来创建Pod和ReplicaSet</p>
</li>
<li><p>滚动升级和回滚应用</p>
</li>
<li><p>扩容和缩容</p>
</li>
<li><p>暂停和继续Deployment</p>
</li>
</ul>
<h3 id="DaemonSet"><a href="#DaemonSet" class="headerlink" title="DaemonSet"></a>DaemonSet</h3><p>DaemonSet确保全部（或者一些）Node上运行一个Pod的副本。当有Node加入集群时，也会为他们新增一个Pod。当有Node从集群移除时，这些Pod也会被回收。删除DaemonSet将会删除它创建的所有Pod</p>
<p>使用DaemonSet的一些典型用法：</p>
<ul>
<li><p>运行集群存储daemon，例如在每个Node上运行glusterd、ceph</p>
</li>
<li><p>在每个Node上运行日志收集daemon，例如fluentd、logstash</p>
</li>
<li><p>在每个Node上运行监控daemon，例如Prometheus Node Exporter、collectd、Datadog代理、New Relic代理，或Gangliagmond</p>
</li>
</ul>
<h3 id="Job"><a href="#Job" class="headerlink" title="Job"></a>Job</h3><p>Job负责批处理任务，即仅执行一次的任务，它保证批处理任务的一个或多个Pod成功结束</p>
<p>CronJob</p>
<p>Cron Job管理基于时间的Job，即：</p>
<ul>
<li>在给定时间点只运行一次</li>
<li>周期性地在给定时间点运行</li>
</ul>
<p><strong>使用前提条件</strong>：<strong>当前使用的Kubernetes集群，版本&gt;&#x3D; 1.8（对CronJob）。对于先前版本的集群，版本&lt;1.8，启动API Server时，通过传递选项–runtime-config&#x3D;batch&#x2F;v2alpha1&#x3D;true可以开启batch&#x2F;v2alpha1API</strong></p>
<p>典型的用法如下所示：</p>
<ul>
<li><p>在给定的时间点调度Job运行</p>
</li>
<li><p>创建周期性运行的Job，例如：数据库备份、发送邮件</p>
</li>
</ul>
<h3 id="StatefulSet"><a href="#StatefulSet" class="headerlink" title="StatefulSet"></a>StatefulSet</h3><p>StatefulSet作为Controller为Pod提供唯一的标识。它可以保证部署和scale的顺序</p>
<p>StatefulSet是为了解决有状态服务的问题（对应Deployments和ReplicaSets是为无状态服务而设计），其应用场景包括：</p>
<ul>
<li><p>稳定的持久化存储，即Pod重新调度后还是能访问到相同的持久化数据，基于PVC来实现</p>
</li>
<li><p>稳定的网络标志，即Pod重新调度后其PodName和HostName不变，基于Headless Service（即没有Cluster IP的Service）来实现</p>
</li>
<li><p>有序部署，有序扩展，即Pod是有顺序的，在部署或者扩展的时候要依据定义的顺序依次依次进行（即从0到N-1，在下一个Pod运行之前所有之前的Pod必须都是Running和Ready状态），基于init containers来实现</p>
</li>
<li><p>有序收缩，有序删除（即从N-1到0）</p>
</li>
</ul>
]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
  </entry>
  <entry>
    <title>kubernetes安装dashboard</title>
    <url>/2019/09/23/kubernetes%E5%AE%89%E8%A3%85dashboard/</url>
    <content><![CDATA[<h3 id="导入镜像"><a href="#导入镜像" class="headerlink" title="导入镜像"></a>导入镜像</h3><p>链接：<a href="https://pan.baidu.com/s/1FjMf0_GAVX8lyxNuPVNF2A">https://pan.baidu.com/s/1FjMf0_GAVX8lyxNuPVNF2A</a> 提取码：t1ei</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker load -i dashboard_1.10.1.atr.gz</span></span><br></pre></td></tr></table></figure>

 <span id="more"></span>

<h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget https://raw.githubusercontent.com/kubernetes/dashboard/v1.10.1/src/deploy/recommended/kubernetes-dashboard.yaml</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"> vim kubernetes-dashboard.yaml</span></span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: kubernetes-dashboard </span><br><span class="line">        image: k8s.gcr.io/kubernetes-dashboard-amd64:v1.10.1</span><br><span class="line">        imagePullPolicy: IfNotPresent      # 当本地有镜像就优先本地，不远程pull</span><br><span class="line">spec:</span><br><span class="line">  type: NodePort   # 配置nodeIP访问</span><br><span class="line">  ports:</span><br><span class="line">    - port: 443</span><br><span class="line">      targetPort: 8443</span><br></pre></td></tr></table></figure>


<h3 id="启动dashboard"><a href="#启动dashboard" class="headerlink" title="启动dashboard"></a>启动dashboard</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"> kubectl create -f kubernetes-dashboard.yaml</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get deploy -n kube-system</span></span><br><span class="line">NAME                   READY   UP-TO-DATE   AVAILABLE   AGE</span><br><span class="line">coredns                2/2     2            2           3h9m</span><br><span class="line">kubernetes-dashboard   1/1     1            1           15m</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get svc -n kube-system</span></span><br><span class="line">NAME                   TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)                  AGE</span><br><span class="line">kube-dns               ClusterIP   10.254.0.10      &lt;none&gt;        53/UDP,53/TCP,9153/TCP   3h10m</span><br><span class="line">kubernetes-dashboard   NodePort    10.254.252.116   &lt;none&gt;        443:30195/TCP            40m</span><br></pre></td></tr></table></figure>


<h3 id="访问url"><a href="#访问url" class="headerlink" title="访问url"></a>访问url</h3><p><a href="https://10.0.0.11:30195/">https://10.0.0.11:30195</a></p>
<p><img src="/image/1569225047-15692250151.png"></p>
<h4 id="创建token令牌"><a href="#创建token令牌" class="headerlink" title="创建token令牌"></a>创建token令牌</h4><p>创建serviceaccount</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl create serviceaccount dashboard-admin -n kube-system</span></span><br><span class="line">serviceaccount/dashboard-admin created</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get sa -n kube-system|grep admin</span></span><br><span class="line">dashboard-admin                      1         78s</span><br></pre></td></tr></table></figure>


<p>把serviceaccount绑定在clusteradmin，授权serviceaccount用户具有整个集群的访问管理权限</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl create clusterrolebinding dashboard-cluster-admin --clusterrole=cluster-admin --serviceaccount=kube-system:dashboard-admin</span></span><br><span class="line">clusterrolebinding.rbac.authorization.k8s.io/dashboard-cluster-admin created</span><br></pre></td></tr></table></figure>


<p>获取token令牌</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get secret -n kube-system|grep dashboard</span></span><br><span class="line">dashboard-admin-token-vxjsd                      kubernetes.io/service-account-token   3      3m36s</span><br><span class="line">kubernetes-dashboard-certs                       Opaque                                0      69m</span><br><span class="line">kubernetes-dashboard-key-holder                  Opaque                                2      46m</span><br><span class="line">kubernetes-dashboard-token-bjdkr                 kubernetes.io/service-account-token   3      69m</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl describe secret dashboard-admin-token-vxjsd -n kube-system</span></span><br><span class="line">Name:         dashboard-admin-token-vxjsd</span><br><span class="line">Namespace:    kube-system</span><br><span class="line">Labels:       &lt;none&gt;</span><br><span class="line">Annotations:  kubernetes.io/service-account.name: dashboard-admin</span><br><span class="line">              kubernetes.io/service-account.uid: c945044a-b2c2-4adc-95a3-2ce7b127766e</span><br><span class="line">Type:  kubernetes.io/service-account-token  </span><br><span class="line">Data</span><br><span class="line">====</span><br><span class="line">ca.crt:     1025 bytes</span><br><span class="line">namespace:  11 bytes</span><br><span class="line">token:      eyJhbGciOiJSUzI1NiIsImtpZCI6IiJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJkYXNoYm9hcmQtYWRtaW4tdG9rZW4tdnhqc2QiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiZGFzaGJvYXJkLWFkbWluIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiYzk0NTA0NGEtYjJjMi00YWRjLTk1YTMtMmNlN2IxMjc3NjZlIiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50Omt1YmUtc3lzdGVtOmRhc2hib2FyZC1hZG1pbiJ9.Kg8LiUjCznuL8MxEJV2urJ-Z5iiFaxVeuMLAhQguxV8j7wMpKtEmVzQRytjCaODOL60jqN9N3SXmZNSViwJfX2OcPBnWOHiGtUNxqfymSMJ7jyUVV3NceEGu3iaBsukHQZDl5N4bECUmaXAzktX-79QUXfkRT8ZB2h46t5asLd4Os7ixBwUuReXeyGdqTO2fCcvFn88AgekxBbueDmU55hKw2ELV0-AyB40N-7LqjfPcAx2X_TjL0FjdbjQKJ9w_nrm7dK-3NOA9yrJkkuY856WJjz8n-eJVuG1J2B2qaVJqbW_d8kGzlIDOl_QFlHd0sO1sFWc016ivWL92yaseHQ</span><br></pre></td></tr></table></figure>


<h4 id="修改token过期时间"><a href="#修改token过期时间" class="headerlink" title="修改token过期时间"></a>修改token过期时间</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"> vim kubernetes-dashboard.yaml</span></span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 8443</span><br><span class="line">          protocol: TCP</span><br><span class="line">        args:</span><br><span class="line">          - --auto-generate-certificates</span><br><span class="line">          - --token-ttl=43200    # 修改token过期时间</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl apply -f kubernetes-dashboard.yaml</span></span><br><span class="line">secret/kubernetes-dashboard-certs unchanged</span><br><span class="line">serviceaccount/kubernetes-dashboard unchanged</span><br><span class="line">role.rbac.authorization.k8s.io/kubernetes-dashboard-minimal unchanged</span><br><span class="line">rolebinding.rbac.authorization.k8s.io/kubernetes-dashboard-minimal unchanged</span><br><span class="line">deployment.apps/kubernetes-dashboard configured</span><br><span class="line">service/kubernetes-dashboard unchanged</span><br></pre></td></tr></table></figure>


<h4 id="token登录"><a href="#token登录" class="headerlink" title="token登录"></a>token登录</h4><p><img src="/image/1569225187-15692251811.png"></p>
<p><img src="/image/1569225216-15692252071.png"></p>
<h3 id="部署监控"><a href="#部署监控" class="headerlink" title="部署监控"></a>部署监控</h3><p><strong>Heapster+InfluxDB+Grafana</strong></p>
<p>访问 <a href="https://github.com/kubernetes-retired/heapster">https://github.com/kubernetes-retired/heapster</a></p>
<p>heapster&#x2F;deploy&#x2F;kube-config&#x2F;influxdb</p>
<p>获取 grfana.yaml heapster.yaml influxdb.yaml</p>
<p>heapster&#x2F;deploy&#x2F;kube-config&#x2F;rbac</p>
<p>获取 heapster-rbac.yml</p>
<p>yml与镜像包</p>
<p>链接：<a href="https://pan.baidu.com/s/1gDlbS6-OC11YFQKuxkS7Ig">https://pan.baidu.com/s/1gDlbS6-OC11YFQKuxkS7Ig</a> 提取码：j881</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"> kubectl create -f .</span></span><br></pre></td></tr></table></figure>


<h4 id="heapster报错："><a href="#heapster报错：" class="headerlink" title="heapster报错："></a>heapster报错：</h4><h5 id="x509-certificate-signed-by-unknown-authority"><a href="#x509-certificate-signed-by-unknown-authority" class="headerlink" title="x509: certificate signed by unknown authority"></a>x509: certificate signed by unknown authority</h5><p><img src="/image/1569472718-Image.png"></p>
<p>把原来的参数更改成下面的参数,heapster 即可正常启动</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">--source=kubernetes:https://kubernetes.default?inClusterConfig=false&amp;useServiceAccount=true&amp;auth=&amp;kubeletPort=10250&amp;kubeletHttps=true&amp;insecure=true</span><br></pre></td></tr></table></figure>

<h5 id="403-Forbidden"><a href="#403-Forbidden" class="headerlink" title="403 Forbidden"></a>403 Forbidden</h5><p><img src="/image/1569472734-Image.png"></p>
<p>修改ClusterRole: system:heapster的权限，添加Resource: nodes&#x2F;stats的create权限</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl describe clusterrole system:heapster</span></span><br><span class="line">Name:         system:heapster</span><br><span class="line">Labels:       kubernetes.io/bootstrapping=rbac-defaults</span><br><span class="line">Annotations:  rbac.authorization.kubernetes.io/autoupdate: true</span><br><span class="line">PolicyRule:</span><br><span class="line">  Resources               Non-Resource URLs  Resource Names  Verbs</span><br><span class="line">  ---------               -----------------  --------------  -----</span><br><span class="line">  events                  []                 []              [get list watch]</span><br><span class="line">  namespaces              []                 []              [get list watch]</span><br><span class="line">  nodes                   []                 []              [get list watch]</span><br><span class="line">  pods                    []                 []              [get list watch]</span><br><span class="line">  deployments.extensions  []                 []              [get list watch]</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get clusterrole system:heapster -o yaml &gt; heapster-clusterrole.yaml</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim heapster-clusterrole.yaml</span></span><br><span class="line">16   resources:</span><br><span class="line">17   - events</span><br><span class="line">18   - namespaces</span><br><span class="line">19   - nodes</span><br><span class="line">20   - pods</span><br><span class="line">21   - nodes/stats</span><br><span class="line">22   verbs:</span><br><span class="line">23   - create</span><br><span class="line">24   - get</span><br><span class="line">25   - list</span><br><span class="line">26   - watch</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl apply -f heapster-clusterrole.yaml</span></span><br><span class="line">Warning: kubectl apply should be used on resource created by either kubectl create --save-config or kubectl apply</span><br><span class="line">clusterrole.rbac.authorization.k8s.io/system:heapster configured</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl delete -f heapster.yml</span></span><br><span class="line">serviceaccount &quot;heapster&quot; deleted</span><br><span class="line">deployment.extensions &quot;heapster&quot; deleted</span><br><span class="line">service &quot;heapster&quot; deleted</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl apply -f heapster.yml</span></span><br><span class="line">serviceaccount/heapster created</span><br><span class="line">deployment.extensions/heapster created</span><br><span class="line">service/heapster created</span><br></pre></td></tr></table></figure>


<p><img src="/image/1569472776-Image.png"> </p>
]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>linux中cp强制覆盖</title>
    <url>/2019/03/20/linux%E4%B8%ADcp%E5%BC%BA%E5%88%B6%E8%A6%86%E7%9B%96/</url>
    <content><![CDATA[<p>我们平常在Linux中使用 cp 命令时,会发现将一个目录中文件复制到另一个目录具有相同文件名称时,即使添加了 -rf 参数强制覆盖复制时,系统仍然会提示让你一个个的手工输入 y 确认复制,令人不胜其烦</p>
 <span id="more"></span>

<p><strong>alias命令</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">alias</span></span></span><br><span class="line">alias cp=&#x27;cp -i&#x27;</span><br><span class="line">alias egrep=&#x27;egrep --color=auto&#x27;</span><br><span class="line">alias fgrep=&#x27;fgrep --color=auto&#x27;</span><br><span class="line">alias grep=&#x27;grep --color=auto&#x27;</span><br><span class="line">alias l.=&#x27;ls -d .* --color=auto&#x27;</span><br><span class="line">alias ll=&#x27;ls -l --color=auto&#x27;</span><br><span class="line">alias ls=&#x27;ls --color=auto&#x27;</span><br><span class="line">alias mv=&#x27;mv -i&#x27;</span><br><span class="line">alias rm=&#x27;rm -i&#x27;</span><br><span class="line">alias which=&#x27;alias | /usr/bin/which --tty-only --read-alias --show-dot --show-tilde&#x27;</span><br></pre></td></tr></table></figure>


<p>注：我们平时使用 cp 命令,虽然没有添加任何参数 ,但系统默认会在我们使用 cp 命令时自动添加 -i 参数</p>
<p>-i 即交互的缩写方式,也就是在使用 cp 命令作文件覆盖操作之前,系统会要求确认提示</p>
<p><strong>cp命令</strong></p>
<p>-a：此选项通常在复制目录时使用，它保留链接、文件属性，并复制目录下的所有内容。其作用等于dpR参数组合。</p>
<p>-d：复制时保留链接。这里所说的链接相当于Windows系统中的快捷方式。</p>
<p>-f：覆盖已经存在的目标文件而不给出提示。</p>
<p>-i：与-f选项相反，在覆盖目标文件之前给出提示，要求用户确认是否覆盖，回答”y”时目标文件将被覆盖。</p>
<p>-p：除复制文件的内容外，还把修改时间和访问权限也复制到新文件中。</p>
<p>-r：若给出的源文件是一个目录文件，此时将复制该目录下所有的子目录和文件。</p>
<p>-l：不复制文件，只是生成链接文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cp</span> -f test01 /backup/test01</span></span><br><span class="line">cp: overwrite ‘/backup/test01’? y</span><br></pre></td></tr></table></figure>


<p>注：默认+i，进入交互模式</p>
<p>解决方案1：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">\<span class="built_in">cp</span> -f test01 /backup/test01</span></span><br></pre></td></tr></table></figure>


<p>解决方案2：</p>
<p>临时关闭别名</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">unalias</span> <span class="built_in">cp</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">alias</span> <span class="built_in">cp</span></span></span><br><span class="line">-bash: alias: cp: not found</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cp</span> -f test01 /backup/test01</span></span><br></pre></td></tr></table></figure>


<p>永久关闭别名</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">sed -i <span class="string">&quot;s/alias cp=&#x27;cp -i&#x27;/#alias cp=&#x27;cp -i&#x27;/g&quot;</span> ~/.bashrc</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">source</span> ~/.bashrc</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cp</span> -f test01 /backup/test01</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>linux基础</category>
      </categories>
      <tags>
        <tag>linux基础</tag>
      </tags>
  </entry>
  <entry>
    <title>linux开机启动过程</title>
    <url>/2018/11/30/linux%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B/</url>
    <content><![CDATA[<p>1.打开电源</p>
<p>2.BIOS开机自检</p>
<p>  BIOS的工作主要是检测一些硬件设备</p>
<p>3.MBR引导</p>
<p>  MBR位于硬盘的第一个扇区总共512bytes，其中前446bytes里面的编码是在选择引导分区也就是决定要由哪个分区来引导</p>
<p>4.GRUB菜单选择不同内核</p>
 <span id="more"></span>

<p>5.加载内核</p>
<p>  根据grub设定的内核映像所在路径，系统读取内存映像，并进行解压缩操作</p>
<p>6.运行init进程，读取&#x2F;etc&#x2F;inittab配置文件设定的运行级别</p>
<p>  运行级别0：系统停机状态，系统默认运行级别不能设为0，否则不能正常启动</p>
<p>  运行级别1：单用户工作状态，root权限，用于系统维护，禁止远程登陆</p>
<p>  运行级别2：多用户状态(没有NFS)</p>
<p>  运行级别3：完全的多用户状态(有NFS)，登陆后进入控制台命令行模式</p>
<p>  运行级别4：系统未使用，保留</p>
<p>  运行级别5：X11控制台，登陆后进入图形GUI模式</p>
<p>  运行级别6：系统正常关闭并重启，默认运行级别不能设为6，否则不能正常启动</p>
<p>7.init进程执行rc.sysinit脚本</p>
<p>8.启动内核模块</p>
<p>  依据&#x2F;etc&#x2F;modules.conf文件或&#x2F;etc&#x2F;modules.d目录下的文件来装载内核模块</p>
<p>9.执行不同运行级别的脚本程序</p>
<p>  根据运行级别的不同，系统会运行rc0.d到rc6.d中的相应的脚本程序，来完成相应的初始化工作和启动相应的服务</p>
<p>10.执行&#x2F;etc&#x2F;rc.d&#x2F;rc.local</p>
<p>  执行开机自启动文件</p>
<p>11.执行&#x2F;bin&#x2F;login，进入大陆状态</p>
<p>  显示登录页面，输入账户与密码登入系统</p>
<p><img src="/image/1543574212-Image.png"> </p>
]]></content>
      <categories>
        <category>linux基础</category>
      </categories>
      <tags>
        <tag>linux基础</tag>
      </tags>
  </entry>
  <entry>
    <title>linux文件与用户权限</title>
    <url>/2019/01/06/linux%E6%96%87%E4%BB%B6%E4%B8%8E%E7%94%A8%E6%88%B7%E6%9D%83%E9%99%90/</url>
    <content><![CDATA[<h2 id="文件权限"><a href="#文件权限" class="headerlink" title="文件权限"></a><strong>文件权限</strong></h2><h3 id="rwx"><a href="#rwx" class="headerlink" title="rwx"></a><strong>rwx</strong></h3><p>rwx含义</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ll /etc/hosts</span></span><br><span class="line">-rw-r--r-- 1 root root 218 Dec  3 17:27 /etc/hosts</span><br><span class="line">rw-                   r--                    r--          root             root</span><br></pre></td></tr></table></figure>

 <span id="more"></span>

<p>文件所有者      所有者属于组    其他     root用户   root用户组</p>
<p>r   read        读</p>
<p>w  write       写</p>
<p>x   execute  执行</p>
<p>r&#x3D;&#x3D;4   w&#x3D;&#x3D;2  x&#x3D;&#x3D;1，即rwx：4+2+1&#x3D;7； rw-：4+2&#x3D;6； r–：4</p>
<p>对于文件rwx</p>
<p>r  查看文件的内容</p>
<p>w  修改文件的内容 需要r权限的配合</p>
<p>*  w权限需要r的配合</p>
<p>*  只有w权限的时候，文件的所有者可以强制修改（vim），但是原文件内容消失</p>
<p>x  执行文件的权限 需要r的权限配合</p>
<p>对于目录rwx</p>
<p>r   显示目录里的内容 相当于ls  需要x配合</p>
<p>w  对目录里面的内容就行修改 可以在目录中删除，创建文件 需要x权限的配合</p>
<p>x   进入到目录中的权限 cd  是否能查看目录里面的文件属性信息</p>
<h3 id="修改权限"><a href="#修改权限" class="headerlink" title="修改权限"></a><strong>修改权限</strong></h3><p>命令 chmod 用以修改文件的权限：</p>
<p>chmod mode filename</p>
<p>mode 参数格式如下：</p>
<p>u、g、o     分别代表用户、组、其他</p>
<p>a           代表ugo</p>
<p>+、-        代表加入或删除对应权限</p>
<p>r、w、x     代表三种权限</p>
<p>-R          递归地修改</p>
<p>文件最大权限-rw-rw-rw-        666，一般文件644</p>
<p>目录默认最大权限-rwxrwxrwx 777，一般目录755</p>
<h3 id="特殊权限"><a href="#特殊权限" class="headerlink" title="特殊权限"></a><strong>特殊权限</strong></h3><p>chattr  +a  只能追加，不能删除 （append）</p>
<p>chattr  +i   无敌 不能进行任何操作，root用户也不能操作(immutable）</p>
<p>lsattr  显示文件系统的权限</p>
<h2 id="用户权限"><a href="#用户权限" class="headerlink" title="用户权限"></a><strong>用户权限</strong></h2><h3 id="uid与gid"><a href="#uid与gid" class="headerlink" title="uid与gid"></a><strong>uid与gid</strong></h3><p>UID  用户的ID    user id</p>
<p>GID  用户组的ID  group id</p>
<h3 id="linux下用户分类"><a href="#linux下用户分类" class="headerlink" title="linux下用户分类"></a><strong>linux下用户分类</strong></h3><p>root uid 0  最高权限</p>
<p>  对root用户加以限制保证系统的更加安全<br>   1. 禁止root远程登陆，不让你以root用户的身份连接到系统中</p>
<p>   2. 更改sshd默认端口号</p>
<p>傀儡用户 uid 1-499（Centos6）uid 1-999（Centos7）</p>
<p>  虚拟用户是没有办法使用</p>
<p>  产生虚拟用户是满足一个需求： linux下面每个软件&#x2F;服务运行的时候都需要一个用户</p>
<p>普通用户 uid 500-65535 （Centos6）1000-65535（Centos7）</p>
<p>   在系统上的任务是进行普通工作</p>
<p>heweiqun     :x                 :1007  :1009  :                        :&#x2F;home&#x2F;heweiqun    :&#x2F;bin&#x2F;bash</p>
<p>用户名   原来密码的位置    UID   GID   用户的说明信息    用户的家目录            命令解释器</p>
<h3 id="默认的命令解释器"><a href="#默认的命令解释器" class="headerlink" title="默认的命令解释器"></a><strong>默认的命令解释器</strong></h3><p>&#x2F;bin&#x2F;bash      默认</p>
<p>&#x2F;sbin&#x2F;nologin  无法登陆系统–虚拟用户</p>
<h3 id="用户管理命令"><a href="#用户管理命令" class="headerlink" title="用户管理命令"></a><strong>用户管理命令</strong></h3><p>useradd 创建用户</p>
<p>useradd [选项] 登录名</p>
<p>  -u，–uid UID：指定UID，默认是上一个用户的UID+1</p>
<p>  -g，–gid GID：指定基本组ID，此组得事先存在；</p>
<p>  -G，–GROUP1[,GROUP2,……[,GROUPSN]]：指明用户所属的附加组，多个组之间用逗号分隔</p>
<p>  -d，–home HOME_DIR：以指定路径为用户的家目录；通过复制&#x2F;etc&#x2F;skel此目录并重命名实现；指定的家目录路径如果事先存在，则不会为用户复制环境配置文件</p>
<p>  -s，–shell SHELL：指定用户的默认命令编辑器</p>
<p>  -M：不为用户创建主目录</p>
<p>userdel 删除用户</p>
<p>userdel [选项] 登录名</p>
<p>  -r：删除用户时一并删除其家目录和用户邮箱；</p>
<p>usermod 修改用户属性</p>
<p>usermod [选项] 登录名</p>
<p>  -u，–uid UID：修改用户的ID为此处指定的新UID；</p>
<p>  -g，–group GROUP：修改用户所属的基本组；此组得事先存在；</p>
<p>  -G, –groupsGROUP1[,GROUP2,…[,GROUPN]]]：修改用户所属的附加组，原来的附加组会被覆盖；</p>
<p>  -d，–home HOME_DIR：修改用户的家目录；用户原有的文件不会被转移至新位置；</p>
<p>  -m，–move-home：只能与-d选项一同使用，用于将原来的家目录移动为新的家目录；</p>
<p>  -l，–login NEW_LOGING：修改用户名；</p>
<p>  -s, –shell SHELL：修改用户的默认shell；</p>
<h3 id="用户组管理命令"><a href="#用户组管理命令" class="headerlink" title="用户组管理命令"></a><strong>用户组管理命令</strong></h3><p>groupadd命令：添加组</p>
<p>groupadd [选项] group_name</p>
<p>  -g GID：指定GID，默认是上一个组的GID+1</p>
<p>  -r：创建系统组</p>
<p>groupmod命令：修改组属性</p>
<p>groupmod [选项] GROUP</p>
<p>  -g GID：修改GID</p>
<p>  -n new_name：修改组名</p>
<p>groupdel命令：删除组</p>
<p>groupdel [选项] GROUP</p>
<h3 id="修改权限-1"><a href="#修改权限-1" class="headerlink" title="修改权限"></a><strong>修改权限</strong></h3><p>命令 chown 用以修改文件的权限：</p>
<p>-R    递归修改文件或目录的的所有者或组（很危险） </p>
]]></content>
      <categories>
        <category>linux基础</category>
      </categories>
      <tags>
        <tag>linux基础</tag>
      </tags>
  </entry>
  <entry>
    <title>linux目录结构</title>
    <url>/2018/11/30/linux%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><p>对于每一个Linux学习者来说，了解Linux文件系统的目录结构，是学好Linux的至关重要的一步。深入了解linux文件目录结构的标准和每个目录的详细功能，对于我们用好linux系统至关重要</p>
<p>FHS</p>
<p>Filesystem Hierarchy Standard（文件系统层次化标准）的缩写，多数Linux版本采用这种文件组织形式，类似于Windows操作系统中c盘的文件目录，FHS采用树形结构组织文件。FHS定义了系统中每个区域的用途、所需要的最小构成的文件和目录</p>
 <span id="more"></span>

<p><img src="/image/1543567410-Image.png"></p>
<p>相关概念</p>
<p>1）Linux的所有目录结构是一个有层次的树形目录结构</p>
<p>2）根“&#x2F;”是所有目录的顶点</p>
<p>3）目录结构和分区设备是没有关系的，也就是不同的目录可以跨越不同的磁盘设备或分区，通过挂载实现磁盘入口 ,如  mount &#x2F;dev&#x2F;sdb2 &#x2F;mnt    把U盘挂载到&#x2F;mnt目录下</p>
<p>4）所有的目录都是按照一定的类别有规律的组织和命名的。</p>
<p>5）绝对路径：从根开始的路径</p>
<p>6）相对路径：不从根开始的路径</p>
<table>
<thead>
<tr>
<th>&#x2F;目录结构</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>&#x2F;bin,&#x2F;usr&#x2F;bin</td>
<td>（&#x2F;usr&#x2F;bin）该目录为命令文件目录，也称为二进制目录。包含了供系统管理员及普通用户使用的重要的linux命令和二进制（可执行）文件，包含shell解释器等</td>
</tr>
<tr>
<td>&#x2F;boot</td>
<td>Linux的内核及系统引导程序所需的文件目录。安装系统分区的时候一般要分一个&#x2F;boot分区</td>
</tr>
<tr>
<td>&#x2F;dev</td>
<td>设备（device）文件目录，存放linux系统下的设备文件，访问该目录下某个文件，相当于访问某个设备，存放连接到计算机上的设备（终端、磁盘驱动器、光驱及网卡等）的对应文件，包括字符设备和块设备等，常用的是挂载光驱mount &#x2F;dev&#x2F;cdrom&#x2F;mnt</td>
</tr>
<tr>
<td>&#x2F;etc</td>
<td>系统配置文件存放的目录，该目录存放系统的大部分配置文件和子目录，不建议在此目录下存放可执行文件，重要的配置文件有&#x2F;etc&#x2F;inittab、&#x2F;etc&#x2F;fstab、&#x2F;etc&#x2F;init.d、&#x2F;etc&#x2F;X11（X Window系统有关）、&#x2F;etc&#x2F;sysconfig（与网络有关）、&#x2F;etc&#x2F;xinetd.d修改配置文件之前记得备份。该目录下的文件由系统管理员来使用，普通用户对大部分文件有只读权限</td>
</tr>
<tr>
<td>&#x2F;home</td>
<td>系统默认的用户宿主目录，新增用户账号时，用户的宿主目录都存放在此目录下，<del>表示当前用户的宿主目录，</del>test表示用户test的宿主目录</td>
</tr>
<tr>
<td>&#x2F;lib,&#x2F;usr&#x2F;lib,&#x2F;usr&#x2F;local&#x2F;lib</td>
<td>系统使用的函数库的目录，程序在执行过程中，需要调用一些额外的参数时需要函数库的协助，该目录下存放了各种编程语言库。典型的linux系统包含了C、C++和FORTRAN语言的库文件。&#x2F;lib目录下的库映像文件可以用来启动系统并执行一些命令，目录&#x2F;lib&#x2F;modules包含了可加载的内核模块，&#x2F;lib目录存放了所有重要的库文件，其他的库文件则大部分存放在&#x2F;usr&#x2F;lib目录下</td>
</tr>
<tr>
<td>&#x2F;lost+found</td>
<td>在EXT2或EXT3文件系统中，当系统意外崩溃或机器意外关机，产生的一些文件碎片放在这里。在系统启动的过程中fsck工具会检查这里，并修复已经损坏的文件系统。有时系统发生问题，有很多的文件被移到这个目录中，可能会用手工的方法来修复，或者移动文件到运来的位置上</td>
</tr>
<tr>
<td>&#x2F;media</td>
<td>放置的就是可移除的装置。 包括软碟、光碟、DVD等等装置都暂时挂载于此。 常见的档名有：&#x2F;media&#x2F;floppy, &#x2F;media&#x2F;cdrom等等</td>
</tr>
<tr>
<td>&#x2F;mnt</td>
<td>主要用来临时挂载文件系统，为某些设备提供默认挂载点</td>
</tr>
<tr>
<td>&#x2F;opt</td>
<td>作为可选文件和程序的存放目录。有些软件包也会被安装在这里，也就是自定义软件包；有些用户自己编译的软件包，就可以安装在这个目录中</td>
</tr>
<tr>
<td>&#x2F;proc</td>
<td>存放所有标志为文件的进程，它们是通过进程号或其他的系统动态信息进行标识。例如CPU、硬盘分区、内存信息等存放在这里</td>
</tr>
<tr>
<td>&#x2F;root</td>
<td>系统管理员root的宿主目录</td>
</tr>
<tr>
<td>&#x2F;run,&#x2F;var&#x2F;run&#x2F;</td>
<td>某些程序或者是服务启动后，会将他们的PID放置在这个目录下</td>
</tr>
<tr>
<td>&#x2F;sbin,&#x2F;usr&#x2F;sbin,&#x2F;usr&#x2F;local&#x2F;sbin</td>
<td>放置系统管理员使用的可执行命令，如fdisk、shutdown、mount等。与&#x2F;bin不同的是，这几个目录是给系统管理员root使用的命令，一般用户只能”查看”而不能设置和使用</td>
</tr>
<tr>
<td>&#x2F;sys</td>
<td>该目录用于将系统设备组织或层次结构，并向用户提供详细的内核数据信息</td>
</tr>
<tr>
<td>&#x2F;tmp</td>
<td>包含系统和用户创建的临时文件。当系统重新启动时，这个目录下的文件都将被删除</td>
</tr>
<tr>
<td>&#x2F;usr</td>
<td>应用程序存放目录，&#x2F;usr&#x2F;bin 存放应用程序， &#x2F;usr&#x2F;share 存放共享数据，&#x2F;usr&#x2F;lib存放不能直接运行的，却是许多程序运行所必需的一些函数库文件，&#x2F;usr&#x2F;local 存放软件升级包，&#x2F;usr&#x2F;share&#x2F;doc 系统说明文件存放目录</td>
</tr>
<tr>
<td>&#x2F;var</td>
<td>放置系统执行过程中经常变化的文件，如随时更改的日志文件&#x2F;var&#x2F;log。&#x2F;var&#x2F;log&#x2F;message： 所有的登录文件存放目录。&#x2F;var&#x2F;spool&#x2F;mail： 邮件存放的目录。 &#x2F;var&#x2F;run:程序或服务启动后。建议单独分区，设置较大的磁盘空间</td>
</tr>
</tbody></table>
<h2 id="x2F-etc"><a href="#x2F-etc" class="headerlink" title="&#x2F;etc"></a>&#x2F;etc</h2><table>
<thead>
<tr>
<th>&#x2F;etc主要目录文件</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>&#x2F;etc&#x2F;sysconfig&#x2F;network-scripts</td>
<td>服务器的网络配置文件目录</td>
</tr>
<tr>
<td>&#x2F;etc&#x2F;redhat-release</td>
<td>服务器系统版本文件</td>
</tr>
<tr>
<td>&#x2F;etc&#x2F;passwd</td>
<td>用户账户文件</td>
</tr>
<tr>
<td>&#x2F;etc&#x2F;sysconfig&#x2F;network</td>
<td>主机名文件</td>
</tr>
<tr>
<td>&#x2F;etc&#x2F;rc.local</td>
<td>开机自启动文件</td>
</tr>
<tr>
<td>&#x2F;etc&#x2F;fstab</td>
<td>开机挂载的文件</td>
</tr>
<tr>
<td>&#x2F;etc&#x2F;profile</td>
<td>全局环境变量文件</td>
</tr>
<tr>
<td>&#x2F;etc&#x2F;profile</td>
<td>启动文件</td>
</tr>
<tr>
<td>&#x2F;etc&#x2F;hosts</td>
<td>负责IP地址与域名快速解析的文件</td>
</tr>
</tbody></table>
<h2 id="x2F-var"><a href="#x2F-var" class="headerlink" title="&#x2F;var"></a>&#x2F;var</h2><table>
<thead>
<tr>
<th>&#x2F;var主要目录文件</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>&#x2F;var&#x2F;log</td>
<td>各种系统日志存放地</td>
</tr>
<tr>
<td>&#x2F;var&#x2F;log&#x2F;messages</td>
<td>系统信息默认日志文件</td>
</tr>
<tr>
<td>&#x2F;var&#x2F;log&#x2F;dmesg</td>
<td>核心启动日志</td>
</tr>
<tr>
<td>&#x2F;var&#x2F;log&#x2F;secure</td>
<td>安全信息和登入系统存取信息的文件</td>
</tr>
<tr>
<td>&#x2F;var&#x2F;run&#x2F;utmp</td>
<td>记录现在登录的用户</td>
</tr>
<tr>
<td>&#x2F;var&#x2F;log&#x2F;wtmp</td>
<td>记录所有的登入和登出</td>
</tr>
<tr>
<td>&#x2F;var&#x2F;log&#x2F;btmp</td>
<td>记录错误的登入尝试</td>
</tr>
<tr>
<td>&#x2F;var&#x2F;log&#x2F;lastlog</td>
<td>记录每个用户最后的登入信息</td>
</tr>
<tr>
<td>&#x2F;var&#x2F;spool&#x2F;cron&#x2F;root</td>
<td>定时任务crontab默认路径，按用户名命名的文件</td>
</tr>
</tbody></table>
<h2 id="x2F-proc"><a href="#x2F-proc" class="headerlink" title="&#x2F;proc"></a>&#x2F;proc</h2><table>
<thead>
<tr>
<th>&#x2F;proc主要目录文件</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>&#x2F;proc</td>
<td>虚拟目录，是内存映射，内核和进程的虚拟文件系统目录</td>
</tr>
<tr>
<td>&#x2F;proc&#x2F;version</td>
<td>内核版本</td>
</tr>
<tr>
<td>&#x2F;proc&#x2F;sys&#x2F;kernel</td>
<td>系统内核功能</td>
</tr>
<tr>
<td>&#x2F;proc&#x2F;meminfo</td>
<td>查看内存信息</td>
</tr>
<tr>
<td>&#x2F;proc&#x2F;cpuinfo</td>
<td>关于处理器的信息，如类型、厂家、型号和性能等</td>
</tr>
<tr>
<td>&#x2F;proc&#x2F;mounts</td>
<td>设备的挂载信息，df -h类似</td>
</tr>
<tr>
<td>&#x2F;proc&#x2F;loadavg</td>
<td>系统负载平均值信息（系统的繁忙情况，比较准确，但是不够细致系统性能指标）,uptime的结果,负载值不要超过CPU的术数，看负责top,uptime</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>linux基础</category>
      </categories>
      <tags>
        <tag>linux基础</tag>
      </tags>
  </entry>
  <entry>
    <title>LVM硬盘管理</title>
    <url>/2021/01/20/lvm%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<h2 id="创建lvm"><a href="#创建lvm" class="headerlink" title="创建lvm"></a>创建lvm</h2><ul>
<li>创建物理卷 PV</li>
</ul>
<p>物理卷（Physical Volumes）简称PV，是在磁盘的物理分区或与磁盘分区具有同样功能的设备（如RAID)上创建而来。它只是在物理分区中划出了一个特殊的区域，用于记载与LVM相关的管理参数</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">lsblk</span><br><span class="line">NAME            MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT</span><br><span class="line">sr0              11:0    1  1024M  0 rom  </span><br><span class="line">vda             252:0    0   512G  0 disk</span><br><span class="line">├─vda1          252:1    0   200M  0 part /boot</span><br><span class="line">├─vda2          252:2    0  99.8G  0 part</span><br><span class="line">│ └─centos-root 253:0    0 511.8G  0 lvm  /</span><br><span class="line">└─vda3          252:3    0   412G  0 part</span><br><span class="line"> └─centos-root 253:0    0 511.8G  0 lvm  /</span><br><span class="line">vdb             252:16   0     2G  0 disk</span><br><span class="line"></span><br><span class="line">将整块磁盘初始化为物理卷</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">pvcreate /dev/vdb</span></span><br><span class="line">  Physical volume &quot;/dev/vdb&quot; successfully created.</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">pvs</span></span><br><span class="line">  PV         VG     Fmt  Attr PSize    PFree</span><br><span class="line">  /dev/vda2  centos lvm2 a--    99.80g    0</span><br><span class="line">  /dev/vda3  centos lvm2 a--  &lt;412.00g    0</span><br><span class="line">  /dev/vdb          lvm2 ---     2.00g 2.00g</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<ul>
<li>创建卷组 VG</li>
</ul>
<p>卷组（Volume Group）简称VG，它是一个或者多个物理卷的组合。卷组将多个物理卷组合在一起，形成一个可管理的单元，它类似于非LVM系统中的物理硬盘</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vgcreate vg-data /dev/vdb   创建为vg-data卷组，该卷包含/dev/sdb一个物理卷</span></span><br><span class="line">  Volume group &quot;vg-data&quot; successfully created</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vgdisplay</span></span><br><span class="line">  --- Volume group ---</span><br><span class="line">  VG Name               vg-data</span><br><span class="line">  System ID             </span><br><span class="line">  Format                lvm2</span><br><span class="line">  Metadata Areas        1</span><br><span class="line">  Metadata Sequence No  1</span><br><span class="line">  VG Access             read/write</span><br><span class="line">  VG Status             resizable</span><br><span class="line">  MAX LV                0</span><br><span class="line">  Cur LV                0</span><br><span class="line">  Open LV               0</span><br><span class="line">  Max PV                0</span><br><span class="line">  Cur PV                1</span><br><span class="line">  Act PV                1</span><br><span class="line">  VG Size               &lt;2.00 GiB</span><br><span class="line">  PE Size               4.00 MiB</span><br><span class="line">  Total PE              511</span><br><span class="line">  Alloc PE / Size       0 / 0   </span><br><span class="line">  Free  PE / Size       511 / &lt;2.00 GiB</span><br><span class="line">  VG UUID               gPEexr-FwEl-2QHI-F9Mw-0aZ2-2G67-zuRCYI</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<ul>
<li>创建逻辑卷 LV</li>
</ul>
<p>逻辑卷（Logical Volumes）简称LV，是在卷组中划分的一个逻辑区域，类似于非LVM系统中的硬盘分区</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">从vg-data卷组中创建一个lv-data逻辑卷，指定95%的空间，因为VG卷组中PE占用一部分</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">lvcreate --wipesignatures y -n lv-data vg-data -l 95%VG</span></span><br><span class="line">  Logical volume &quot;lv-data&quot; created.</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">lvdisplay</span></span><br><span class="line">  --- Logical volume ---</span><br><span class="line">  LV Path                /dev/vg-data/lv-data</span><br><span class="line">  LV Name                lv-data</span><br><span class="line">  VG Name                vg-data</span><br><span class="line">  LV UUID                TA7YgD-iDBK-rwmT-gf2O-2Gbi-lnVX-2SsD05</span><br><span class="line">  LV Write Access        read/write</span><br><span class="line">  LV Creation host, time slave-11, 2021-01-20 20:49:31 +0800</span><br><span class="line">  LV Status              available</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">open                 0</span></span><br><span class="line">  LV Size                1.89 GiB</span><br><span class="line">  Current LE             485</span><br><span class="line">  Segments               1</span><br><span class="line">  Allocation             inherit</span><br><span class="line">  Read ahead sectors     auto</span><br><span class="line">  - currently set to     256</span><br><span class="line">  Block device           253:1</span><br><span class="line"></span><br><span class="line">删除逻辑卷</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">lvremove /dev/vg-data/lv-data</span>   </span><br><span class="line">  Do you really want to remove active logical volume vg-data/lv-data? [y/n]: y</span><br><span class="line">    Logical volume &quot;lv-data&quot; successfully removed</span><br><span class="line"></span><br><span class="line">通过指定空间大小创建逻辑卷    </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">lvcreate --wipesignatures y -n lv-data vg-data -L 1.9G</span></span><br><span class="line">    Rounding up size to full physical extent 1.90 GiB</span><br><span class="line">    Logical volume &quot;lv-data&quot; created.</span><br></pre></td></tr></table></figure>

<ul>
<li>创建文件系统</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">mkfs.xfs /dev/vg-data/lv-data</span></span><br><span class="line">meta-data=/dev/vg-data/lv-data   isize=512    agcount=4, agsize=124672 blks</span><br><span class="line">         =                       sectsz=512   attr=2, projid32bit=1</span><br><span class="line">         =                       crc=1        finobt=0, sparse=0</span><br><span class="line">data     =                       bsize=4096   blocks=498688, imaxpct=25</span><br><span class="line">         =                       sunit=0      swidth=0 blks</span><br><span class="line">naming   =version 2              bsize=4096   ascii-ci=0 ftype=1</span><br><span class="line">log      =internal log           bsize=4096   blocks=2560, version=2</span><br><span class="line">         =                       sectsz=512   sunit=0 blks, lazy-count=1</span><br><span class="line">realtime =none                   extsz=4096   blocks=0, rtextents=0</span><br><span class="line"></span><br><span class="line">挂载目录</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mkdir</span> /data</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">mount /dev/vg-data/lv-data /data/</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">df</span> -h</span></span><br><span class="line">Filesystem                       Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/mapper/centos-root        512G   12G  500G   3% /</span><br><span class="line">devtmpfs                        36G     0   36G   0% /dev</span><br><span class="line">tmpfs                           36G     0   36G   0% /dev/shm</span><br><span class="line">tmpfs                           36G  6.3M   36G   1% /run</span><br><span class="line">tmpfs                           36G     0   36G   0% /sys/fs/cgroup</span><br><span class="line">/dev/vda1                      197M  131M   66M  67% /boot</span><br><span class="line">tmpfs                          7.1G     0  7.1G   0% /run/user/0</span><br><span class="line">/dev/mapper/vg--data-lv--data  1.9G   33M  1.9G   2% /data</span><br><span class="line"></span><br><span class="line">设置开机自启</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">echo</span> <span class="string">&#x27;/dev/vg-data/lv-data /data xfs     defaults        0 0&#x27;</span> &gt;&gt;/etc/fstab</span></span><br></pre></td></tr></table></figure>

<h2 id="热扩容磁盘之后扩容逻辑卷"><a href="#热扩容磁盘之后扩容逻辑卷" class="headerlink" title="热扩容磁盘之后扩容逻辑卷"></a>热扩容磁盘之后扩容逻辑卷</h2><ul>
<li>在虚拟化平台上&#x2F;dev&#x2F;vdb 热扩容了3G</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">lsblk</span></span><br><span class="line">NAME                MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT</span><br><span class="line">sr0                  11:0    1  1024M  0 rom  </span><br><span class="line">vda                 252:0    0   512G  0 disk</span><br><span class="line">├─vda1              252:1    0   200M  0 part /boot</span><br><span class="line">├─vda2              252:2    0  99.8G  0 part</span><br><span class="line">│ └─centos-root     253:0    0 511.8G  0 lvm  /</span><br><span class="line">└─vda3              252:3    0   412G  0 part</span><br><span class="line">  └─centos-root     253:0    0 511.8G  0 lvm  /</span><br><span class="line">vdb                 252:16   0     5G  0 disk</span><br><span class="line">└─vg--data-lv--data 253:1    0   1.9G  0 lvm  /data</span><br></pre></td></tr></table></figure>
<ul>
<li>扩展物理卷</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">pvresize /dev/vdb</span></span><br><span class="line">  Physical volume &quot;/dev/vdb&quot; changed</span><br><span class="line">  1 physical volume(s) resized or updated / 0 physical volume(s) not resized</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">pvdisplay</span></span><br><span class="line">  --- Physical volume ---</span><br><span class="line">  PV Name               /dev/vdb</span><br><span class="line">  VG Name               vg-data</span><br><span class="line">  PV Size               &lt;5.00 GiB / not usable 3.00 MiB</span><br><span class="line">  Allocatable           yes</span><br><span class="line">  PE Size               4.00 MiB</span><br><span class="line">  Total PE              1279</span><br><span class="line">  Free PE               792</span><br><span class="line">  Allocated PE          487</span><br><span class="line">  PV UUID               vej7dt-Nqmm-WZwF-LhmO-uOq8-XO2z-hObKKg</span><br></pre></td></tr></table></figure>

<ul>
<li>扩展逻辑卷</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">lvextend -l +100%FREE /dev/vg-data/lv-data</span></span><br><span class="line">  Size of logical volume vg-data/lv-data changed from 1.90 GiB (487 extents) to &lt;5.00 GiB (1279 extents).</span><br><span class="line">  Logical volume vg-data/lv-data successfully resized.</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">lvdisplay</span></span><br><span class="line">  --- Logical volume ---</span><br><span class="line">  LV Path                /dev/vg-data/lv-data</span><br><span class="line">  LV Name                lv-data</span><br><span class="line">  VG Name                vg-data</span><br><span class="line">  LV UUID                LOmTC1-78oq-j0lO-MijV-7FLB-EHdS-s8PsHc</span><br><span class="line">  LV Write Access        read/write</span><br><span class="line">  LV Creation host, time slave-11, 2021-01-20 20:50:20 +0800</span><br><span class="line">  LV Status              available</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">open                 1</span></span><br><span class="line">  LV Size                &lt;5.00 GiB</span><br><span class="line">  Current LE             1279</span><br><span class="line">  Segments               1</span><br><span class="line">  Allocation             inherit</span><br><span class="line">  Read ahead sectors     auto</span><br><span class="line">  - currently set to     256</span><br><span class="line">  Block device           253:1</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>扩展文件系统</li>
</ul>
<p>使用 resize2fs或xfs_growfs 对挂载目录在线扩容<br>resize2fs  针对文件系统ext2 ext3 ext4<br>xfs_growfs 针对文件系统xfs</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">xfs_growfs /dev/vg-data/lv-data</span></span><br><span class="line">meta-data=/dev/mapper/vg--data-lv--data isize=512    agcount=4, agsize=124672 blks</span><br><span class="line">         =                       sectsz=512   attr=2, projid32bit=1</span><br><span class="line">         =                       crc=1        finobt=0 spinodes=0</span><br><span class="line">data     =                       bsize=4096   blocks=498688, imaxpct=25</span><br><span class="line">         =                       sunit=0      swidth=0 blks</span><br><span class="line">naming   =version 2              bsize=4096   ascii-ci=0 ftype=1</span><br><span class="line">log      =internal               bsize=4096   blocks=2560, version=2</span><br><span class="line">         =                       sectsz=512   sunit=0 blks, lazy-count=1</span><br><span class="line">realtime =none                   extsz=4096   blocks=0, rtextents=0</span><br><span class="line">data blocks changed from 498688 to 1309696</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">df</span> -h|grep data</span></span><br><span class="line">/dev/mapper/vg--data-lv--data  5.0G   33M  5.0G   1% /data</span><br></pre></td></tr></table></figure>

<h2 id="通过添加磁盘来扩容逻辑卷"><a href="#通过添加磁盘来扩容逻辑卷" class="headerlink" title="通过添加磁盘来扩容逻辑卷"></a>通过添加磁盘来扩容逻辑卷</h2><ul>
<li>虚拟化平台上创建一块磁盘</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">lsblk</span></span><br><span class="line">NAME                MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT</span><br><span class="line">sr0                  11:0    1  1024M  0 rom  </span><br><span class="line">vda                 252:0    0   512G  0 disk</span><br><span class="line">├─vda1              252:1    0   200M  0 part /boot</span><br><span class="line">├─vda2              252:2    0  99.8G  0 part</span><br><span class="line">│ └─centos-root     253:0    0 511.8G  0 lvm  /</span><br><span class="line">└─vda3              252:3    0   412G  0 part</span><br><span class="line">  └─centos-root     253:0    0 511.8G  0 lvm  /</span><br><span class="line">vdb                 252:16   0     5G  0 disk</span><br><span class="line">└─vg--data-lv--data 253:1    0     5G  0 lvm  /data</span><br><span class="line">vdc                 252:32   0     5G  0 disk</span><br></pre></td></tr></table></figure>
<ul>
<li>创建物理卷</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">pvcreate /dev/vdc</span></span><br><span class="line">  Physical volume &quot;/dev/vdc&quot; successfully created.</span><br></pre></td></tr></table></figure>

<ul>
<li>扩展卷组</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vgextend vg-data /dev/vdc</span></span><br><span class="line">  Volume group &quot;vg-data&quot; successfully extended</span><br></pre></td></tr></table></figure>

<ul>
<li>扩展逻辑卷</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">lvextend -l +100%FREE /dev/vg-data/lv-data</span></span><br><span class="line">  Size of logical volume vg-data/lv-data changed from &lt;5.00 GiB (1279 extents) to 9.99 GiB (2558 extents).</span><br><span class="line">  Logical volume vg-data/lv-data successfully resized.</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">lvs</span></span><br><span class="line">  LV      VG      Attr       LSize    Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert</span><br><span class="line">  root    centos  -wi-ao---- &lt;511.80g                                                    </span><br><span class="line">  lv-data vg-data -wi-ao----    9.99g</span><br></pre></td></tr></table></figure>

<ul>
<li>扩展文件系统</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">xfs_growfs /dev/vg-data/lv-data</span></span><br><span class="line">meta-data=/dev/mapper/vg--data-lv--data isize=512    agcount=11, agsize=124672 blks</span><br><span class="line">         =                       sectsz=512   attr=2, projid32bit=1</span><br><span class="line">         =                       crc=1        finobt=0 spinodes=0</span><br><span class="line">data     =                       bsize=4096   blocks=1309696, imaxpct=25</span><br><span class="line">         =                       sunit=0      swidth=0 blks</span><br><span class="line">naming   =version 2              bsize=4096   ascii-ci=0 ftype=1</span><br><span class="line">log      =internal               bsize=4096   blocks=2560, version=2</span><br><span class="line">         =                       sectsz=512   sunit=0 blks, lazy-count=1</span><br><span class="line">realtime =none                   extsz=4096   blocks=0, rtextents=0</span><br><span class="line">data blocks changed from 1309696 to 2619392</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">df</span> -h|grep data</span></span><br><span class="line">/dev/mapper/vg--data-lv--data   10G   34M   10G   1% /data</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux基础</category>
      </categories>
      <tags>
        <tag>LVM</tag>
      </tags>
  </entry>
  <entry>
    <title>mongodb主从</title>
    <url>/2018/11/22/mongodb%E4%B8%BB%E4%BB%8E/</url>
    <content><![CDATA[<h2 id="服务器环境"><a href="#服务器环境" class="headerlink" title="服务器环境  "></a>服务器环境  </h2><table>
<thead>
<tr>
<th>主机名</th>
<th>IP</th>
<th>内存+磁盘</th>
<th>系统</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>master</td>
<td>10.0.0.40&#x2F;172.16.1.40</td>
<td>2G+100G</td>
<td>centos7.4</td>
<td>主数据库</td>
</tr>
<tr>
<td>slave</td>
<td>10.0.0.401&#x2F;172.16.1.41</td>
<td>2G+100G</td>
<td>centos7.4</td>
<td>从数据库</td>
</tr>
</tbody></table>
 <span id="more"></span>

<p>安装mongod</p>
<p>yum安装，添加yum源</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /etc/yum.repos.d/mongodb-org.repo</span></span><br><span class="line">[mongodb-org]</span><br><span class="line">name=MongoDB Repository</span><br><span class="line">baseurl=http://mirrors.aliyun.com/mongodb/yum/redhat/7Server/mongodb-org/3.6/x86_64/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum clean all</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum install -y mongodb-org</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">sed -i  <span class="string">&#x27;s#127.0.0.1#0.0.0.0#g&#x27;</span> /etc/mongod.conf</span></span><br></pre></td></tr></table></figure>

<p>运行mongod</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># /usr/bin/mongod -f /etc/mongod.conf</span><br><span class="line"># mongo</span><br><span class="line">创建账号</span><br><span class="line">&gt; use admin;</span><br><span class="line">&gt; db.createUser(&#123;user:&quot;root&quot;,pwd:&quot;123456&quot;,roles:[&#123;role:&quot;root&quot;,db:&quot;admin&quot;&#125;,&#123;role:&quot;userAdminAnyDatabase&quot;,db:&quot;admin&quot;&#125;]&#125;);</span><br><span class="line">Successfully added user: &#123;</span><br><span class="line">    &quot;user&quot; : &quot;root&quot;,</span><br><span class="line">    &quot;roles&quot; : [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;role&quot; : &quot;root&quot;,</span><br><span class="line">            &quot;db&quot; : &quot;admin&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;role&quot; : &quot;userAdminAnyDatabase&quot;,</span><br><span class="line">            &quot;db&quot; : &quot;admin&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">&gt; db.auth(&quot;root&quot;,&quot;123456&quot;);</span><br><span class="line">1</span><br><span class="line">&gt; show dbs;</span><br><span class="line">admin   0.000GB</span><br><span class="line">config  0.000GB</span><br><span class="line">local   0.000GB</span><br></pre></td></tr></table></figure>

<p>配置主从</p>
<p>重启mongo</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ps -ef|grep mongo</span></span><br><span class="line">root       2170      1  0 16:27 ?        00:00:08 mongod -f /etc/mongod.conf</span><br><span class="line">root       2224   1880  0 16:43 pts/1    00:00:00 grep --color=auto mongo</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">kill</span> -9 2170</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">mongod -f /etc/mongod.conf --master</span></span><br></pre></td></tr></table></figure>

<p>创建slaves数据库用户（避免手动切换从库没创用户）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># mongod -f /etc/mongod.conf</span><br><span class="line">&gt; db.createUser(&#123;user:&quot;root&quot;,pwd:&quot;123456&quot;,roles:[&#123;role:&quot;root&quot;,db:&quot;admin&quot;&#125;,&#123;role:&quot;userAdminAnyDatabase&quot;,db:&quot;admin&quot;&#125;]&#125;);</span><br><span class="line">&gt; db.auth(&quot;root&quot;,&quot;123456&quot;);</span><br><span class="line">1</span><br><span class="line"># mongod -f /etc/mongod.conf --slave --source 172.16.1.40:27017</span><br><span class="line">#设置slave可读  </span><br><span class="line">&gt; rs.slaveOk()</span><br><span class="line">&gt; show dbs;</span><br><span class="line">admin   0.000GB</span><br><span class="line">config  0.000GB</span><br><span class="line">local   0.000GB</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>mongodb</category>
      </categories>
      <tags>
        <tag>mongodb</tag>
      </tags>
  </entry>
  <entry>
    <title>mongodb副本集</title>
    <url>/2019/01/08/mongodb%E5%89%AF%E6%9C%AC%E9%9B%86/</url>
    <content><![CDATA[<h2 id="mongodb副本集介绍"><a href="#mongodb副本集介绍" class="headerlink" title="mongodb副本集介绍"></a>mongodb副本集介绍</h2><p>副本集（Replica Set）是一组MongoDB实例组成的集群，由一个主（Primary）服务器和多个备份（Secondary）服务器构成。通过Replication，将数据的更新由Primary推送到其他实例上，在一定的延迟之后，每个MongoDB实例维护相同的数据集副本。通过维护冗余的数据库副本，能够实现数据的异地备份，读写分离和自动故障转移。</p>
<p>也就是说如果主服务器崩溃了，备份服务器会自动将其中一个成员升级为新的主服务器。使用复制功能时，如果有一台服务器宕机了，仍然可以从副本集的其他服务器上访问数据。如果服务器上的数据损坏或者不可访问，可以从副本集的某个成员中创建一份新的数据副本。</p>
 <span id="more"></span>

<h2 id="mongodb副本集搭建"><a href="#mongodb副本集搭建" class="headerlink" title="mongodb副本集搭建"></a>mongodb副本集搭建</h2><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><p>三台机器</p>
<p>10.0.0.20 172.16.1.20  master  primary</p>
<p>10.0.0.21 172.16.1.21  slave01 secondary</p>
<p>10.0.0.22 172.16.1.22  slave02 secondary</p>
<p>这三台机器上皆已安装mongodb，<a href="https://www.wqblogs.com:4443/mongod%E4%B8%BB%E4%BB%8E/">安装过程略</a></p>
<h3 id="编辑配置文件"><a href="#编辑配置文件" class="headerlink" title="编辑配置文件"></a>编辑配置文件</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /etc/mongod.conf</span></span><br><span class="line">  bindIp: 127.0.0.1,172.16.1.20</span><br><span class="line">replication:</span><br><span class="line">  oplogSizeMB: 20</span><br><span class="line">  replSetName: kyd</span><br></pre></td></tr></table></figure>


<p>注：需要确保每台机器的配置文件中的bindIp都有配置监听自身的内网IP</p>
<h3 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl start mongod.service</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">netstat -luntp|grep mongo</span></span><br><span class="line">tcp        0      0 172.16.1.20:27017       0.0.0.0:*               LISTEN      8615/mongod</span><br><span class="line">tcp        0      0 127.0.0.1:27017         0.0.0.0:*               LISTEN      8895/mongod</span><br></pre></td></tr></table></figure>


<h3 id="恢复数据库"><a href="#恢复数据库" class="headerlink" title="恢复数据库"></a>恢复数据库</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">mongorestore  -uroot -ppassword --authenticationDatabase admin -d keyidaDB  /server/tools/mongod/bak/keyidaDB</span></span><br></pre></td></tr></table></figure>


<h3 id="副本集命令操作"><a href="#副本集命令操作" class="headerlink" title="副本集命令操作"></a>副本集命令操作</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rs.status()        #查看成员的运行状态等信息</span><br><span class="line">rs.config()        #查看配置信息</span><br><span class="line">rs.slaveOk()     #允许在SECONDARY节点上进行查询操作，默认从节点不具有查询功能</span><br><span class="line">rs.isMaster()    #查询该节点是否是主节点</span><br><span class="line">rs.add(&#123;&#125;)         #添加新的节点到该副本集中</span><br><span class="line">rs.remove()      #从副本集中删除节点</span><br></pre></td></tr></table></figure>


<h3 id="创建副本集"><a href="#创建副本集" class="headerlink" title="创建副本集"></a>创建副本集</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># mongo --port 27017 -u &quot;root&quot; -p &quot;password&quot; --authenticationDatabase &quot;admin&quot;</span><br><span class="line">&gt; config = &#123;                               创建副本集</span><br><span class="line">...   _id:&quot;kyd&quot;,</span><br><span class="line">...   members:[</span><br><span class="line">...     &#123;_id:1,host:&quot;172.16.1.20:27017&quot;&#125;,</span><br><span class="line">...     &#123;_id:2,host:&quot;172.16.1.21:27017&quot;&#125;,</span><br><span class="line">...     &#123;_id:3,host:&quot;172.16.1.22:27017&quot;&#125;</span><br><span class="line">...   ]</span><br><span class="line">... &#125;</span><br><span class="line">&#123;</span><br><span class="line">    &quot;_id&quot; : &quot;kyd&quot;,</span><br><span class="line">    &quot;members&quot; : [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;_id&quot; : 1,</span><br><span class="line">            &quot;host&quot; : &quot;172.16.1.20:27017&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;_id&quot; : 2,</span><br><span class="line">            &quot;host&quot; : &quot;172.16.1.21:27017&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;_id&quot; : 3,</span><br><span class="line">            &quot;host&quot; : &quot;172.16.1.22:27017&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">&gt; rs.initiate(config)            #初始化</span><br><span class="line">&#123;</span><br><span class="line">    &quot;info&quot; : &quot;try querying local.system.replset to see current configuration&quot;,</span><br><span class="line">    &quot;ok&quot; : 0,</span><br><span class="line">    &quot;errmsg&quot; : &quot;already initialized&quot;,</span><br><span class="line">    &quot;code&quot; : 23,</span><br><span class="line">    &quot;codeName&quot; : &quot;AlreadyInitialized&quot;,</span><br><span class="line">    &quot;operationTime&quot; : Timestamp(1546929446, 1),</span><br><span class="line">    &quot;$clusterTime&quot; : &#123;</span><br><span class="line">        &quot;clusterTime&quot; : Timestamp(1546929446, 1),</span><br><span class="line">        &quot;signature&quot; : &#123;</span><br><span class="line">            &quot;hash&quot; : BinData(0,&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAA=&quot;),</span><br><span class="line">            &quot;keyId&quot; : NumberLong(0)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">kyd:SECONDARY&gt; rs.status()      #查看集群状态</span><br><span class="line">&#123;</span><br><span class="line">    &quot;set&quot; : &quot;kyd&quot;,</span><br><span class="line">    &quot;date&quot; : ISODate(&quot;2019-01-08T09:48:47.657Z&quot;),</span><br><span class="line">    &quot;myState&quot; : 1,</span><br><span class="line">    &quot;term&quot; : NumberLong(1),</span><br><span class="line">    &quot;syncingTo&quot; : &quot;&quot;,</span><br><span class="line">    &quot;syncSourceHost&quot; : &quot;&quot;,</span><br><span class="line">    &quot;syncSourceId&quot; : -1,</span><br><span class="line">    &quot;heartbeatIntervalMillis&quot; : NumberLong(2000),</span><br><span class="line">    &quot;optimes&quot; : &#123;</span><br><span class="line">        &quot;lastCommittedOpTime&quot; : &#123;</span><br><span class="line">            &quot;ts&quot; : Timestamp(1546940924, 1),</span><br><span class="line">            &quot;t&quot; : NumberLong(1)</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;readConcernMajorityOpTime&quot; : &#123;</span><br><span class="line">            &quot;ts&quot; : Timestamp(1546940924, 1),</span><br><span class="line">            &quot;t&quot; : NumberLong(1)</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;appliedOpTime&quot; : &#123;</span><br><span class="line">            &quot;ts&quot; : Timestamp(1546940924, 1),</span><br><span class="line">            &quot;t&quot; : NumberLong(1)</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;durableOpTime&quot; : &#123;</span><br><span class="line">            &quot;ts&quot; : Timestamp(1546940924, 1),</span><br><span class="line">            &quot;t&quot; : NumberLong(1)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;members&quot; : [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;_id&quot; : 1,</span><br><span class="line">            &quot;name&quot; : &quot;172.16.1.20:27017&quot;,</span><br><span class="line">            &quot;health&quot; : 1,</span><br><span class="line">            &quot;state&quot; : 1,</span><br><span class="line">            &quot;stateStr&quot; : &quot;PRIMARY&quot;,</span><br><span class="line">            &quot;uptime&quot; : 632,</span><br><span class="line">            &quot;optime&quot; : &#123;</span><br><span class="line">                &quot;ts&quot; : Timestamp(1546940924, 1),</span><br><span class="line">                &quot;t&quot; : NumberLong(1)</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;optimeDate&quot; : ISODate(&quot;2019-01-08T09:48:44Z&quot;),</span><br><span class="line">            &quot;syncingTo&quot; : &quot;&quot;,</span><br><span class="line">            &quot;syncSourceHost&quot; : &quot;&quot;,</span><br><span class="line">            &quot;syncSourceId&quot; : -1,</span><br><span class="line">            &quot;infoMessage&quot; : &quot;could not find member to sync from&quot;,</span><br><span class="line">            &quot;electionTime&quot; : Timestamp(1546940921, 1),</span><br><span class="line">            &quot;electionDate&quot; : ISODate(&quot;2019-01-08T09:48:41Z&quot;),</span><br><span class="line">            &quot;configVersion&quot; : 1,</span><br><span class="line">            &quot;self&quot; : true,</span><br><span class="line">            &quot;lastHeartbeatMessage&quot; : &quot;&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;_id&quot; : 2,</span><br><span class="line">            &quot;name&quot; : &quot;172.16.1.21:27017&quot;,</span><br><span class="line">            &quot;health&quot; : 1,</span><br><span class="line">            &quot;state&quot; : 2,</span><br><span class="line">            &quot;stateStr&quot; : &quot;SECONDARY&quot;,</span><br><span class="line">            &quot;uptime&quot; : 16,</span><br><span class="line">            &quot;optime&quot; : &#123;</span><br><span class="line">                &quot;ts&quot; : Timestamp(1546940924, 1),</span><br><span class="line">                &quot;t&quot; : NumberLong(1)</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;optimeDurable&quot; : &#123;</span><br><span class="line">                &quot;ts&quot; : Timestamp(1546940924, 1),</span><br><span class="line">                &quot;t&quot; : NumberLong(1)</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;optimeDate&quot; : ISODate(&quot;2019-01-08T09:48:44Z&quot;),</span><br><span class="line">            &quot;optimeDurableDate&quot; : ISODate(&quot;2019-01-08T09:48:44Z&quot;),</span><br><span class="line">            &quot;lastHeartbeat&quot; : ISODate(&quot;2019-01-08T09:48:45.949Z&quot;),</span><br><span class="line">            &quot;lastHeartbeatRecv&quot; : ISODate(&quot;2019-01-08T09:48:46.807Z&quot;),</span><br><span class="line">            &quot;pingMs&quot; : NumberLong(0),</span><br><span class="line">            &quot;lastHeartbeatMessage&quot; : &quot;&quot;,</span><br><span class="line">            &quot;syncingTo&quot; : &quot;172.16.1.22:27017&quot;,</span><br><span class="line">            &quot;syncSourceHost&quot; : &quot;172.16.1.22:27017&quot;,</span><br><span class="line">            &quot;syncSourceId&quot; : 3,</span><br><span class="line">            &quot;infoMessage&quot; : &quot;&quot;,</span><br><span class="line">            &quot;configVersion&quot; : 1</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;_id&quot; : 3,</span><br><span class="line">            &quot;name&quot; : &quot;172.16.1.22:27017&quot;,</span><br><span class="line">            &quot;health&quot; : 1,</span><br><span class="line">            &quot;state&quot; : 2,</span><br><span class="line">            &quot;stateStr&quot; : &quot;SECONDARY&quot;,</span><br><span class="line">            &quot;uptime&quot; : 16,</span><br><span class="line">            &quot;optime&quot; : &#123;</span><br><span class="line">                &quot;ts&quot; : Timestamp(1546940924, 1),</span><br><span class="line">                &quot;t&quot; : NumberLong(1)</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;optimeDurable&quot; : &#123;</span><br><span class="line">                &quot;ts&quot; : Timestamp(1546940924, 1),</span><br><span class="line">                &quot;t&quot; : NumberLong(1)</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;optimeDate&quot; : ISODate(&quot;2019-01-08T09:48:44Z&quot;),</span><br><span class="line">            &quot;optimeDurableDate&quot; : ISODate(&quot;2019-01-08T09:48:44Z&quot;),</span><br><span class="line">            &quot;lastHeartbeat&quot; : ISODate(&quot;2019-01-08T09:48:45.941Z&quot;),</span><br><span class="line">            &quot;lastHeartbeatRecv&quot; : ISODate(&quot;2019-01-08T09:48:46.150Z&quot;),</span><br><span class="line">            &quot;pingMs&quot; : NumberLong(0),</span><br><span class="line">            &quot;lastHeartbeatMessage&quot; : &quot;&quot;,</span><br><span class="line">            &quot;syncingTo&quot; : &quot;172.16.1.20:27017&quot;,</span><br><span class="line">            &quot;syncSourceHost&quot; : &quot;172.16.1.20:27017&quot;,</span><br><span class="line">            &quot;syncSourceId&quot; : 1,</span><br><span class="line">            &quot;infoMessage&quot; : &quot;&quot;,</span><br><span class="line">            &quot;configVersion&quot; : 1</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;ok&quot; : 1,</span><br><span class="line">    &quot;operationTime&quot; : Timestamp(1546940924, 1),</span><br><span class="line">    &quot;$clusterTime&quot; : &#123;</span><br><span class="line">        &quot;clusterTime&quot; : Timestamp(1546940924, 1),</span><br><span class="line">        &quot;signature&quot; : &#123;</span><br><span class="line">            &quot;hash&quot; : BinData(0,&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAA=&quot;),</span><br><span class="line">            &quot;keyId&quot; : NumberLong(0)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h2 id="mongodb副本集测试"><a href="#mongodb副本集测试" class="headerlink" title="mongodb副本集测试"></a>mongodb副本集测试</h2><h3 id="节点查看同步"><a href="#节点查看同步" class="headerlink" title="节点查看同步"></a>节点查看同步</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kyd:SECONDARY&gt; rs.slaveOk()</span><br><span class="line">kyd:SECONDARY&gt; show dbs</span><br><span class="line">admin     0.000GB</span><br><span class="line">config    0.000GB</span><br><span class="line">keyidaDB  0.025GB</span><br><span class="line">local     0.000GB</span><br></pre></td></tr></table></figure>


<h3 id="模拟主库宕机"><a href="#模拟主库宕机" class="headerlink" title="模拟主库宕机"></a>模拟主库宕机</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># systemctl stop mongod.service</span><br><span class="line">kyd:SECONDARY&gt; rs.status()</span><br><span class="line">&#123;</span><br><span class="line">    &quot;set&quot; : &quot;kyd&quot;,</span><br><span class="line">    &quot;date&quot; : ISODate(&quot;2019-01-08T09:53:04.898Z&quot;),</span><br><span class="line">    &quot;myState&quot; : 1,</span><br><span class="line">    &quot;term&quot; : NumberLong(2),</span><br><span class="line">    &quot;syncingTo&quot; : &quot;&quot;,</span><br><span class="line">    &quot;syncSourceHost&quot; : &quot;&quot;,</span><br><span class="line">    &quot;syncSourceId&quot; : -1,</span><br><span class="line">    &quot;heartbeatIntervalMillis&quot; : NumberLong(2000),</span><br><span class="line">    &quot;optimes&quot; : &#123;</span><br><span class="line">        &quot;lastCommittedOpTime&quot; : &#123;</span><br><span class="line">            &quot;ts&quot; : Timestamp(1546941180, 1),</span><br><span class="line">            &quot;t&quot; : NumberLong(2)</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;readConcernMajorityOpTime&quot; : &#123;</span><br><span class="line">            &quot;ts&quot; : Timestamp(1546941180, 1),</span><br><span class="line">            &quot;t&quot; : NumberLong(2)</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;appliedOpTime&quot; : &#123;</span><br><span class="line">            &quot;ts&quot; : Timestamp(1546941180, 1),</span><br><span class="line">            &quot;t&quot; : NumberLong(2)</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;durableOpTime&quot; : &#123;</span><br><span class="line">            &quot;ts&quot; : Timestamp(1546941180, 1),</span><br><span class="line">            &quot;t&quot; : NumberLong(2)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;members&quot; : [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;_id&quot; : 1,</span><br><span class="line">            &quot;name&quot; : &quot;172.16.1.20:27017&quot;,</span><br><span class="line">            &quot;health&quot; : 0,</span><br><span class="line">            &quot;state&quot; : 8,</span><br><span class="line">            &quot;stateStr&quot; : &quot;(not reachable/healthy)&quot;,</span><br><span class="line">            &quot;uptime&quot; : 0,</span><br><span class="line">            &quot;optime&quot; : &#123;</span><br><span class="line">                &quot;ts&quot; : Timestamp(0, 0),</span><br><span class="line">                &quot;t&quot; : NumberLong(-1)</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;optimeDurable&quot; : &#123;</span><br><span class="line">                &quot;ts&quot; : Timestamp(0, 0),</span><br><span class="line">                &quot;t&quot; : NumberLong(-1)</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;optimeDate&quot; : ISODate(&quot;1970-01-01T00:00:00Z&quot;),</span><br><span class="line">            &quot;optimeDurableDate&quot; : ISODate(&quot;1970-01-01T00:00:00Z&quot;),</span><br><span class="line">            &quot;lastHeartbeat&quot; : ISODate(&quot;2019-01-08T09:53:03.200Z&quot;),</span><br><span class="line">            &quot;lastHeartbeatRecv&quot; : ISODate(&quot;2019-01-08T09:52:30.372Z&quot;),</span><br><span class="line">            &quot;pingMs&quot; : NumberLong(0),</span><br><span class="line">            &quot;lastHeartbeatMessage&quot; : &quot;Connection refused&quot;,</span><br><span class="line">            &quot;syncingTo&quot; : &quot;&quot;,</span><br><span class="line">            &quot;syncSourceHost&quot; : &quot;&quot;,</span><br><span class="line">            &quot;syncSourceId&quot; : -1,</span><br><span class="line">            &quot;infoMessage&quot; : &quot;&quot;,</span><br><span class="line">            &quot;configVersion&quot; : -1</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;_id&quot; : 2,</span><br><span class="line">            &quot;name&quot; : &quot;172.16.1.21:27017&quot;,</span><br><span class="line">            &quot;health&quot; : 1,</span><br><span class="line">            &quot;state&quot; : 1,</span><br><span class="line">            &quot;stateStr&quot; : &quot;PRIMARY&quot;,</span><br><span class="line">            &quot;uptime&quot; : 368,</span><br><span class="line">            &quot;optime&quot; : &#123;</span><br><span class="line">                &quot;ts&quot; : Timestamp(1546941180, 1),</span><br><span class="line">                &quot;t&quot; : NumberLong(2)</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;optimeDate&quot; : ISODate(&quot;2019-01-08T09:53:00Z&quot;),</span><br><span class="line">            &quot;syncingTo&quot; : &quot;&quot;,</span><br><span class="line">            &quot;syncSourceHost&quot; : &quot;&quot;,</span><br><span class="line">            &quot;syncSourceId&quot; : -1,</span><br><span class="line">            &quot;infoMessage&quot; : &quot;could not find member to sync from&quot;,</span><br><span class="line">            &quot;electionTime&quot; : Timestamp(1546941159, 1),</span><br><span class="line">            &quot;electionDate&quot; : ISODate(&quot;2019-01-08T09:52:39Z&quot;),</span><br><span class="line">            &quot;configVersion&quot; : 1,</span><br><span class="line">            &quot;self&quot; : true,</span><br><span class="line">            &quot;lastHeartbeatMessage&quot; : &quot;&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;_id&quot; : 3,</span><br><span class="line">            &quot;name&quot; : &quot;172.16.1.22:27017&quot;,</span><br><span class="line">            &quot;health&quot; : 1,</span><br><span class="line">            &quot;state&quot; : 2,</span><br><span class="line">            &quot;stateStr&quot; : &quot;SECONDARY&quot;,</span><br><span class="line">            &quot;uptime&quot; : 271,</span><br><span class="line">            &quot;optime&quot; : &#123;</span><br><span class="line">                &quot;ts&quot; : Timestamp(1546941180, 1),</span><br><span class="line">                &quot;t&quot; : NumberLong(2)</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;optimeDurable&quot; : &#123;</span><br><span class="line">                &quot;ts&quot; : Timestamp(1546941180, 1),</span><br><span class="line">                &quot;t&quot; : NumberLong(2)</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;optimeDate&quot; : ISODate(&quot;2019-01-08T09:53:00Z&quot;),</span><br><span class="line">            &quot;optimeDurableDate&quot; : ISODate(&quot;2019-01-08T09:53:00Z&quot;),</span><br><span class="line">            &quot;lastHeartbeat&quot; : ISODate(&quot;2019-01-08T09:53:03.181Z&quot;),</span><br><span class="line">            &quot;lastHeartbeatRecv&quot; : ISODate(&quot;2019-01-08T09:53:03.129Z&quot;),</span><br><span class="line">            &quot;pingMs&quot; : NumberLong(0),</span><br><span class="line">            &quot;lastHeartbeatMessage&quot; : &quot;&quot;,</span><br><span class="line">            &quot;syncingTo&quot; : &quot;172.16.1.21:27017&quot;,</span><br><span class="line">            &quot;syncSourceHost&quot; : &quot;172.16.1.21:27017&quot;,</span><br><span class="line">            &quot;syncSourceId&quot; : 2,</span><br><span class="line">            &quot;infoMessage&quot; : &quot;&quot;,</span><br><span class="line">            &quot;configVersion&quot; : 1</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;ok&quot; : 1,</span><br><span class="line">    &quot;operationTime&quot; : Timestamp(1546941180, 1),</span><br><span class="line">    &quot;$clusterTime&quot; : &#123;</span><br><span class="line">        &quot;clusterTime&quot; : Timestamp(1546941180, 1),</span><br><span class="line">        &quot;signature&quot; : &#123;</span><br><span class="line">            &quot;hash&quot; : BinData(0,&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAA=&quot;),</span><br><span class="line">            &quot;keyId&quot; : NumberLong(0)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h3 id="配置权重"><a href="#配置权重" class="headerlink" title="配置权重"></a>配置权重</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kyd:PRIMARY&gt; cfg = rs.conf()</span><br><span class="line">kyd:PRIMARY&gt; cfg.members[0].priority = 5</span><br><span class="line">5</span><br><span class="line">kyd:PRIMARY&gt; cfg.members[1].priority = 3</span><br><span class="line">3</span><br><span class="line">kyd:PRIMARY&gt; cfg.members[2].priority = 1</span><br><span class="line">1</span><br><span class="line">kyd:PRIMARY&gt; rs.reconfig(cfg)</span><br><span class="line">kyd:PRIMARY&gt; rs.config()</span><br><span class="line">&#123;</span><br><span class="line">    &quot;_id&quot; : &quot;kyd&quot;,</span><br><span class="line">    &quot;version&quot; : 4,</span><br><span class="line">    &quot;protocolVersion&quot; : NumberLong(1),</span><br><span class="line">    &quot;members&quot; : [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;_id&quot; : 1,</span><br><span class="line">            &quot;host&quot; : &quot;172.16.1.20:27017&quot;,</span><br><span class="line">            &quot;arbiterOnly&quot; : false,</span><br><span class="line">            &quot;buildIndexes&quot; : true,</span><br><span class="line">            &quot;hidden&quot; : false,</span><br><span class="line">            &quot;priority&quot; : 5,</span><br><span class="line">            &quot;tags&quot; : &#123;</span><br><span class="line"> </span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;slaveDelay&quot; : NumberLong(0),</span><br><span class="line">            &quot;votes&quot; : 1</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;_id&quot; : 2,</span><br><span class="line">            &quot;host&quot; : &quot;172.16.1.21:27017&quot;,</span><br><span class="line">            &quot;arbiterOnly&quot; : false,</span><br><span class="line">            &quot;buildIndexes&quot; : true,</span><br><span class="line">            &quot;hidden&quot; : false,</span><br><span class="line">            &quot;priority&quot; : 3,</span><br><span class="line">            &quot;tags&quot; : &#123;</span><br><span class="line"> </span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;slaveDelay&quot; : NumberLong(0),</span><br><span class="line">            &quot;votes&quot; : 1</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;_id&quot; : 3,</span><br><span class="line">            &quot;host&quot; : &quot;172.16.1.22:27017&quot;,</span><br><span class="line">            &quot;arbiterOnly&quot; : false,</span><br><span class="line">            &quot;buildIndexes&quot; : true,</span><br><span class="line">            &quot;hidden&quot; : false,</span><br><span class="line">            &quot;priority&quot; : 1,</span><br><span class="line">            &quot;tags&quot; : &#123;</span><br><span class="line"> </span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;slaveDelay&quot; : NumberLong(0),</span><br><span class="line">            &quot;votes&quot; : 1</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;settings&quot; : &#123;</span><br><span class="line">        &quot;chainingAllowed&quot; : true,</span><br><span class="line">        &quot;heartbeatIntervalMillis&quot; : 2000,</span><br><span class="line">        &quot;heartbeatTimeoutSecs&quot; : 10,</span><br><span class="line">        &quot;electionTimeoutMillis&quot; : 10000,</span><br><span class="line">        &quot;catchUpTimeoutMillis&quot; : -1,</span><br><span class="line">        &quot;catchUpTakeoverDelayMillis&quot; : 30000,</span><br><span class="line">        &quot;getLastErrorModes&quot; : &#123;</span><br><span class="line"> </span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;getLastErrorDefaults&quot; : &#123;</span><br><span class="line">            &quot;w&quot; : 1,</span><br><span class="line">            &quot;wtimeout&quot; : 0</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;replicaSetId&quot; : ObjectId(&quot;5c3471ef15042a2c98169171&quot;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>mongodb</category>
      </categories>
      <tags>
        <tag>mongodb</tag>
      </tags>
  </entry>
  <entry>
    <title>mongodb备份与恢复</title>
    <url>/2019/01/07/mongodb%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D/</url>
    <content><![CDATA[<p><strong>mongod备份</strong></p>
<p>备份脚本</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /server/scripts/mongod_bak.sh</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">备份路径</span></span><br><span class="line">Back=/backup/mongod/bak</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">当前时间</span></span><br><span class="line">DATE=`date +%Y_%m_%d`</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">打包名称</span></span><br><span class="line">Tar=&quot;mongodb.$DATE.tar.gz&quot;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建备份目录</span></span><br><span class="line">[ ! -d &quot;$Back&quot; ] &amp;&amp; mkdir -p &quot;$Back&quot;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">删除以前备份目录</span></span><br><span class="line">cd $Back &amp;&amp;  rm -rf *</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">全备</span></span><br><span class="line">User=root</span><br><span class="line">Pwd=password</span><br><span class="line">mongodump -u$User -p$Pwd --authenticationDatabase admin -o $Back</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">打包</span></span><br><span class="line">cd /backup/mongod</span><br><span class="line">tar -zcPf $Tar $Back</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">删除5天之前的备份</span></span><br><span class="line">rm -rf $(find /backup/mongod -type f -name &#x27;*.gz&#x27; -mtime +5)</span><br></pre></td></tr></table></figure>

 <span id="more"></span>

<p><strong>定时任务</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">crontab -e</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">数据库备份每天凌晨2点执行</span></span><br><span class="line">00 02 * * * /bin/sh /server/scripts/mongod_bak.sh &gt;/dev/null 2&gt;&amp;1</span><br></pre></td></tr></table></figure>

<p><strong>mongod恢复</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mv</span> mongodb.2019_01_08.tar.gz mongodb.tar.gz</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">tar xf mongodb.tar.gz</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">mongorestore  -uroot -ppassword --authenticationDatabase admin -d keyidaDB  /server/tools/mongod/bak/keyidaDB</span></span><br><span class="line">-d 指定数据库</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>mongodb</category>
      </categories>
      <tags>
        <tag>mongodb</tag>
      </tags>
  </entry>
  <entry>
    <title>multipss尝鲜</title>
    <url>/2022/12/30/multipass%E9%85%8D%E7%BD%AE%E8%99%9A%E6%9C%BA/</url>
    <content><![CDATA[<p>查看可下载的Ubuntu镜像</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">multipass find</span></span><br><span class="line">Image                       Aliases           Version          Description</span><br><span class="line">core                        core16            20200818         Ubuntu Core 16</span><br><span class="line">core18                                        20211124         Ubuntu Core 18</span><br><span class="line">snapcraft:core18            18.04             20201111         Snapcraft builder for Core 18</span><br><span class="line">snapcraft:core20            20.04             20210921         Snapcraft builder for Core 20</span><br><span class="line">snapcraft:core22            22.04             20220426         Snapcraft builder for Core 22</span><br><span class="line">18.04                       bionic            20221207         Ubuntu 18.04 LTS</span><br><span class="line">20.04                       focal             20221213         Ubuntu 20.04 LTS</span><br><span class="line">22.04                       jammy,lts         20221214         Ubuntu 22.04 LTS</span><br><span class="line">appliance:adguard-home                        20200812         Ubuntu AdGuard Home Appliance</span><br><span class="line">appliance:mosquitto                           20200812         Ubuntu Mosquitto Appliance</span><br><span class="line">appliance:nextcloud                           20200812         Ubuntu Nextcloud Appliance</span><br><span class="line">appliance:openhab                             20200812         Ubuntu openHAB Home Appliance</span><br><span class="line">appliance:plexmediaserver                     20200812         Ubuntu Plex Media Server Appliance</span><br><span class="line">anbox-cloud-appliance                         latest           Anbox Cloud Appliance</span><br><span class="line">charm-dev                                     latest           A development and testing environment for charmers</span><br><span class="line">docker                                        latest           A Docker environment with Portainer and related tools</span><br><span class="line">jellyfin                                      latest           Jellyfin is a Free Software Media System that puts you in control of managing and streaming your media.</span><br><span class="line">minikube                                      latest           minikube is local Kubernetes</span><br></pre></td></tr></table></figure>

<p>创建虚拟机</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">multipass launch focal -n vm01 -c 1 -m 1G -d 10G</span></span><br></pre></td></tr></table></figure>

<p>自定义配置</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">focal，别名：20.04</span><br><span class="line">-n, --name: 名称</span><br><span class="line">-c, --cpus: cpu核心数, 默认: 1</span><br><span class="line">-m, --mem: 内存大小, 默认: 1G</span><br><span class="line">-d, --disk: 硬盘大小, 默认: 5G</span><br></pre></td></tr></table></figure>

<p>查看虚拟机列表</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">multipass list</span></span><br><span class="line">Name                    State             IPv4             Image</span><br><span class="line">vm01                    Running           172.22.76.182    Ubuntu 20.04 LTS</span><br></pre></td></tr></table></figure>

<p>查看虚拟机信息</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">multipass info vm01</span></span><br><span class="line">Name:           vm01</span><br><span class="line">State:          Running</span><br><span class="line">IPv4:           172.22.76.182</span><br><span class="line">Release:        Ubuntu 20.04.5 LTS</span><br><span class="line">Image hash:     1bf86f40534c (Ubuntu 20.04 LTS)</span><br><span class="line">Load:           0.00 0.00 0.00</span><br><span class="line">Disk usage:     1.4G out of 9.5G</span><br><span class="line">Memory usage:   175.4M out of 911.9M</span><br><span class="line">Mounts:         --</span><br></pre></td></tr></table></figure>

<p>外部操作虚拟机</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">multipass <span class="built_in">exec</span> vm01 ip add</span></span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 ::1/128 scope host</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP group default qlen 1000</span><br><span class="line">    link/ether 52:54:00:da:af:b9 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 172.22.76.182/20 brd 172.22.79.255 scope global dynamic eth0</span><br><span class="line">       valid_lft 85443sec preferred_lft 85443sec</span><br><span class="line">    inet6 fe80::5054:ff:feda:afb9/64 scope link</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br></pre></td></tr></table></figure>

<p>进入虚拟机</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">multipass.exe shell vm01</span></span><br><span class="line">Welcome to Ubuntu 20.04.5 LTS (GNU/Linux 5.4.0-135-generic x86_64)</span><br><span class="line"></span><br><span class="line"> * Documentation:  https://help.ubuntu.com</span><br><span class="line"> * Management:     https://landscape.canonical.com</span><br><span class="line"> * Support:        https://ubuntu.com/advantage</span><br><span class="line"></span><br><span class="line">  System information as of Tue Dec 27 11:35:07 CST 2022</span><br><span class="line"></span><br><span class="line">  System load:  0.0               Processes:             105</span><br><span class="line">  Usage of /:   15.2% of 9.51GB   Users logged in:       0</span><br><span class="line">  Memory usage: 26%               IPv4 address for eth0: 172.22.76.182</span><br><span class="line">  Swap usage:   0%</span><br><span class="line"></span><br><span class="line"> * Strictly confined Kubernetes makes edge and IoT secure. Learn how MicroK8s</span><br><span class="line">   just raised the bar for easy, resilient and secure K8s cluster deployment.</span><br><span class="line"></span><br><span class="line">   https://ubuntu.com/engage/secure-kubernetes-at-the-edge</span><br><span class="line"></span><br><span class="line">0 updates can be applied immediately.</span><br><span class="line"></span><br><span class="line">New release &#x27;22.04.1 LTS&#x27; available.</span><br><span class="line">Run &#x27;do-release-upgrade&#x27; to upgrade to it.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Last login: Tue Dec 27 11:32:15 2022 from 172.22.64.1</span><br><span class="line">ubuntu@vm01:~$</span><br></pre></td></tr></table></figure>

<p>删除虚机并释放</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">关闭虚机</span></span><br><span class="line">multipass stop vm01</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">删除虚机</span></span><br><span class="line">multipass delete vm01</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">释放虚机</span></span><br><span class="line">multipass purge</span><br></pre></td></tr></table></figure>

<p><a href="https://cloudinit.readthedocs.io/en/latest/topics/examples.html">虚机预配置</a></p>
<p>使用–cloud-init 选项就行虚机启动初始化配置，下列<strong>yaml</strong> 则是容器的初始化配置文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">cloud-config</span></span><br><span class="line">apt:</span><br><span class="line">  primary:</span><br><span class="line">    - arches: [default]</span><br><span class="line">      uri: http://mirrors.aliyun.com/ubuntu/</span><br><span class="line">runcmd:</span><br><span class="line">  - sudo swapoff -a</span><br><span class="line">  - sudo sed -i &#x27;/ swap / s/^\(.*\)$/#\1/g&#x27; /etc/fstab</span><br><span class="line">  - sudo setenforce 0</span><br><span class="line">  - sudo sed -i &quot;s/SELINUX=enforcing/SELINUX=disabled/g&quot; /etc/selinux/config</span><br><span class="line">  - sudo systemctl disable ufw &amp;&amp; sudo systemctl stop ufw</span><br><span class="line">  - sudo timedatectl set-timezone Asia/Shanghai</span><br><span class="line">  - sudo echo &quot;PermitRootLogin yes&quot; &gt;&gt; /etc/ssh/sshd_config</span><br><span class="line">  - sudo sed -i &quot;s/PasswordAuthentication no/PasswordAuthentication yes/&quot;  /etc/ssh/sshd_config</span><br><span class="line">  - sudo systemctl restart ssh</span><br></pre></td></tr></table></figure>

<p><code>apt</code>配置虚机主apt存储库</p>
<p><code>runcmd</code> 可以指定虚机首次启动时运行的命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">multipass launch focal -n node01 -c 2 -m 4G -d 50G --cloud-init systemd-init.yaml</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>无聊操作</category>
      </categories>
      <tags>
        <tag>multipass</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql主从复制+读写分离</title>
    <url>/2018/11/22/mysql%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6+%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB/</url>
    <content><![CDATA[<h2 id="服务器环境"><a href="#服务器环境" class="headerlink" title="服务器环境"></a>服务器环境</h2><table>
<thead>
<tr>
<th>主机名</th>
<th>IP</th>
<th>内存+磁盘</th>
<th>系统</th>
</tr>
</thead>
<tbody><tr>
<td>master</td>
<td>10.0.0.30&#x2F;172.16.1.30</td>
<td>2G+100G</td>
<td>centos7.4</td>
</tr>
<tr>
<td>slave</td>
<td>10.0.0.31&#x2F;172.16.1.31</td>
<td>2G+100G</td>
<td>centos7.4</td>
</tr>
<tr>
<td>proxy</td>
<td>10.0.0.32&#x2F;172.16.1.32</td>
<td>2G+100G</td>
<td>centos7.4</td>
</tr>
</tbody></table>
<span id="more"></span>
<h2 id="主从复制"><a href="#主从复制" class="headerlink" title="主从复制"></a>主从复制</h2><p>原理：</p>
<p><img src="/image/15429530931.png"></p>
<p>从库生成两个线程，一个I&#x2F;O线程，一个SQL线程；</p>
<p>i&#x2F;o线程去请求主库 的binlog，并将得到的binlog日志写到relay log（中继日志） 文件中；</p>
<p>主库会生成一个 log dump 线程，用来给从库 i&#x2F;o线程传binlog；</p>
<p>SQL线程，会读取relay log文件中的日志，并解析成具体操作，来实现主从的操作一致，而最终数据一致。</p>
<p>用途：</p>
<ul>
<li><p>实时灾备，用于故障切换</p>
</li>
<li><p>读写分离，提供查询服务</p>
</li>
<li><p>备份，避免影响业务</p>
</li>
</ul>
<h3 id="安装mysql-5-6-42"><a href="#安装mysql-5-6-42" class="headerlink" title="安装mysql-5.6.42"></a>安装mysql-5.6.42</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@master ~]# cd /server/tools/</span><br><span class="line">[root@master tools]# wget https://dev.mysql.com/get/Downloads/MySQL-5.6/mysql-5.6.42-linux-glibc2.12-x86_64.tar.gz</span><br><span class="line">[root@master tools]# useradd mysql -s /sbin/nologin -M</span><br><span class="line">[root@master tools]# tar xf mysql-5.6.42-linux-glibc2.12-x86_64.tar.gz</span><br><span class="line">[root@master tools]# mv mysql-5.6.42-linux-glibc2.12-x86_64 /mysql</span><br><span class="line">[root@master tools]# cd mysql/</span><br><span class="line">[root@master mysql]# yum -y install make gcc-c++ cmake bison-devel  ncurses-devel libaio</span><br><span class="line">[root@master mysql]# cmake . -DCMAKE_INSTALL_PREFIX=/application/mysql\</span><br><span class="line">-DMYSQL_DATADIR=/application/mysql/data \</span><br><span class="line">-DMYSQL_UNIX_ADDR=/tmp/mysql.sock \</span><br><span class="line">-DDEFAULT_CHARSET=utf8 \</span><br><span class="line">-DDEFAULT_COLLATION=utf8_general_ci \</span><br><span class="line">-DWITH_EXTRA_CHARSETS=all \</span><br><span class="line">-DWITH_INNOBASE_STORAGE_ENGINE=1 \</span><br><span class="line">-DWITH_FEDERATED_STORAGE_ENGINE=1 \</span><br><span class="line">-DWITH_BLACKHOLE_STORAGE_ENGINE=1 \</span><br><span class="line">-DWITHOUT_EXAMPLE_STORAGE_ENGINE=1 \</span><br><span class="line">-DWITH_ZLIB=bundled \</span><br><span class="line">-DWITH_SSL=bundled \</span><br><span class="line">-DENABLED_LOCAL_INFILE=1 \</span><br><span class="line">-DWITH_EMBEDDED_SERVER=1 \</span><br><span class="line">-DENABLE_DOWNLOADS=1 \</span><br><span class="line">-DWITH_DEBUG=0</span><br><span class="line">[root@master mysql]# make &amp;&amp; make install</span><br><span class="line">[root@master mysql]# cd /application/mysql/scripts/</span><br><span class="line">[root@master scripts]# useradd mysql -s /sbin/nologin -M</span><br><span class="line">[root@master scripts]# chown -R mysql.mysql /application/mysql/data</span><br><span class="line">[root@master scripts]# vim /etc/my.cnf</span><br><span class="line">[client]</span><br><span class="line">port = 3306</span><br><span class="line">socket = /tmp/mysql.sock</span><br><span class="line">default-character-set=utf8</span><br><span class="line">[mysqld]</span><br><span class="line">user = mysql</span><br><span class="line">port = 3306</span><br><span class="line">socket=/tmp/mysql.sock</span><br><span class="line">basedir = /application/mysql</span><br><span class="line">datadir = /application/mysql/data</span><br><span class="line">pid-file = /application/mysql/data/msyql.pid</span><br><span class="line">skip-name-resolve</span><br><span class="line">character-set-server=utf8</span><br><span class="line">max_connections=1000</span><br><span class="line">default-storage-engine=INNODB</span><br><span class="line">lower_case_table_name=1</span><br><span class="line">server-id = 1</span><br><span class="line">log-bin = binlog</span><br><span class="line">log-bin-index = binlog.index</span><br><span class="line">expire_logs_days = 7</span><br><span class="line">query_cache_size=128M</span><br><span class="line">table_open_cache=128</span><br><span class="line">tmp_table_size=512M</span><br><span class="line">thread_cache_size=1024</span><br><span class="line">myisam_max_sort_file_size=100G</span><br><span class="line">myisam_sort_buffer_size=213M</span><br><span class="line">key_buffer_size=1024M</span><br><span class="line">read_buffer_size=8M</span><br><span class="line">read_rnd_buffer_size=8M</span><br><span class="line">sort_buffer_size=256K</span><br><span class="line">innodb_additional_mem_pool_size=16M</span><br><span class="line">innodb_flush_log_at_trx_commit=2</span><br><span class="line">innodb_log_buffer_size=8M</span><br><span class="line">innodb_buffer_pool_size=712M</span><br><span class="line">innodb_log_file_size=48M</span><br><span class="line">innodb_thread_concurrency=17</span><br><span class="line">innodb_autoextend_increment=64</span><br><span class="line">innodb_buffer_pool_instances=8</span><br><span class="line">innodb_concurrency_tickets=5000</span><br><span class="line">innodb_old_blocks_time=1000</span><br><span class="line">innodb_open_files=300</span><br><span class="line">innodb_stats_on_metadata=0</span><br><span class="line">innodb_file_per_table=1</span><br><span class="line">innodb_checksum_algorithm=0</span><br><span class="line">back_log=1024</span><br><span class="line">flush_time=0</span><br><span class="line">join_buffer_size=1024M</span><br><span class="line">max_allowed_packet=4M</span><br><span class="line">max_connect_errors=100</span><br><span class="line">open_files_limit=4161</span><br><span class="line">query_cache_type=1</span><br><span class="line">sort_buffer_size=8M</span><br><span class="line">table_definition_cache=1400</span><br><span class="line">binlog_row_event_max_size=8K</span><br><span class="line">sync_master_info=10000</span><br><span class="line">sync_relay_log=10000</span><br><span class="line">sync_relay_log_info=10000</span><br><span class="line">innodb_buffer_pool_size=1G</span><br><span class="line">innodb_log_file_size=512M</span><br><span class="line">innodb_io_capacity=2000</span><br><span class="line">innodb_max_dirty_pages_pct=40</span><br><span class="line">innodb_adaptive_flushing=ON</span><br><span class="line">innodb_write_io_threads=4</span><br><span class="line">innodb_read_io_threads=4</span><br><span class="line">innodb_flush_neighbors=0</span><br><span class="line">innodb_file_io_threads=4</span><br><span class="line">innodb_io_capacity_max=6000</span><br><span class="line">innodb_lru_scan_depth=2000</span><br><span class="line">innodb_autoinc_lock_mode=2</span><br><span class="line">thread_stack=256k</span><br><span class="line">max_heap_table_size=256M</span><br><span class="line">symbolic-links=0</span><br><span class="line">binlog_cache_size=2M</span><br><span class="line">bind-address=0.0.0.0</span><br><span class="line">[mysqld_safe]</span><br><span class="line">log-error=/var/log/mysqld.log</span><br><span class="line">[root@master scripts]# ./mysql_install_db --defaults-file=/etc/my.cnf --user=mysql --basedir=/application/mysql --datadir=/application/mysql/data</span><br><span class="line">[root@master scripts]# cp /application/mysql/support-files/mysql.server /etc/init.d/mysqld</span><br><span class="line">[root@master scripts]# sed -i &#x27;s#/usr/local/mysql#/application/mysql#g&#x27; /etc/init.d/mysqld</span><br><span class="line">[root@master scripts]# chmod 755 /etc/init.d/mysqld</span><br><span class="line">[root@master scripts]# /etc/init.d/mysqld start</span><br><span class="line">[root@master scripts]# ln -s /tmp/mysql.sock /var/lib/mysql/mysql.sock</span><br></pre></td></tr></table></figure>

<p>放入开机启动</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@master scripts]# chkconfig --add mysqld</span><br><span class="line">[root@master scripts]# chkconfig mysqld on</span><br></pre></td></tr></table></figure>

<p>配置环境变量</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@master scripts]# echo &#x27;export PATH=/application/mysql/bin:$PATH&#x27; &gt;&gt; /etc/profile</span><br><span class="line">[root@master scripts]# source /etc/profile</span><br></pre></td></tr></table></figure>



<p>配置root密码</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@master scripts]# mysqladmin -u root password &#x27;123456&#x27;</span><br><span class="line">Warning: Using a password on the command line interface can be insecure.</span><br></pre></td></tr></table></figure>



<h3 id="部署mysql主从复制"><a href="#部署mysql主从复制" class="headerlink" title="部署mysql主从复制"></a>部署mysql主从复制</h3><p>创建复制用户</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@master ~]# mysql -uroot -p123456</span><br><span class="line">mysql&gt; create user copy;                         #创建新用户</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mysql&gt; grant replication slave on *.* to &#x27;copy&#x27;@&#x27;172.16.1.%&#x27; identified by &#x27;123456&#x27;;      #copy用户必须具有replication slave权限，除此之外没有必要添加不必要的权限，密码为123456。172.16.1.%为copy用户可以在172.16.1.0-172.16.1.255网段内都可以登录数据库</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mysql&gt; flush privileges;</span><br><span class="line">Query OK, 0 rows affected (0.13 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mysql&gt; flush table with read lock;     #锁表</span><br><span class="line">Query OK, 0 rows affected (0.11 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mysql&gt; show master status;</span><br><span class="line">+---------------+----------+--------------+------------------+-------------------+</span><br><span class="line">| File          | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |</span><br><span class="line">+---------------+----------+--------------+------------------+-------------------+</span><br><span class="line">| binlog.000011 |      635 |              |                  |                   |</span><br><span class="line">+---------------+----------+--------------+------------------+-------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mysql&gt; unlock tables;                     #解锁</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br></pre></td></tr></table></figure>

<p>从库使用复制用户连接master</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@slave scripts]# mysql -uroot -p123456 &lt;&lt;EOF</span><br><span class="line">CHANGE MASTER TO</span><br><span class="line">&gt; MASTER_HOST=&#x27;172.16.1.30&#x27;,</span><br><span class="line">&gt; MASTER_PORT=3306,</span><br><span class="line">&gt; MASTER_USER=&#x27;copy&#x27;,</span><br><span class="line">&gt; MASTER_PASSWORD=&#x27;123456&#x27;,</span><br><span class="line">&gt; MASTER_LOG_FILE=&#x27;binlog.000011&#x27;,</span><br><span class="line">&gt; MASTER_LOG_POS=635;</span><br><span class="line">&gt; EOF</span><br><span class="line">Warning: Using a password on the command line interface can be insecure.</span><br><span class="line">[root@slave scripts]# mysql -uroot -p123456</span><br><span class="line">mysql&gt; start slave;                        #开启同步</span><br><span class="line">Query OK, 0 rows affected (0.10 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mysql&gt; show slave status \G;        #查看同步是否正常</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting for master to send event</span><br><span class="line">                  Master_Host: 172.16.1.30</span><br><span class="line">                  Master_User: copy</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">              Master_Log_File: binlog.000011</span><br><span class="line">          Read_Master_Log_Pos: 635</span><br><span class="line">               Relay_Log_File: msyql-relay-bin.000002</span><br><span class="line">                Relay_Log_Pos: 280</span><br><span class="line">        Relay_Master_Log_File: binlog.000011</span><br><span class="line">             Slave_IO_Running: Yes</span><br><span class="line">            Slave_SQL_Running: Yes</span><br><span class="line">              Replicate_Do_DB:</span><br><span class="line">          Replicate_Ignore_DB:</span><br><span class="line">           Replicate_Do_Table:</span><br><span class="line">       Replicate_Ignore_Table:</span><br><span class="line">      Replicate_Wild_Do_Table:</span><br><span class="line">  Replicate_Wild_Ignore_Table:</span><br><span class="line">                   Last_Errno: 0</span><br><span class="line">                   Last_Error:</span><br><span class="line">                 Skip_Counter: 0</span><br><span class="line">          Exec_Master_Log_Pos: 635</span><br><span class="line">              Relay_Log_Space: 453</span><br><span class="line">              Until_Condition: None</span><br><span class="line">               Until_Log_File:</span><br><span class="line">                Until_Log_Pos: 0</span><br><span class="line">           Master_SSL_Allowed: No</span><br><span class="line">           Master_SSL_CA_File:</span><br><span class="line">           Master_SSL_CA_Path:</span><br><span class="line">              Master_SSL_Cert:</span><br><span class="line">            Master_SSL_Cipher:</span><br><span class="line">               Master_SSL_Key:</span><br><span class="line">        Seconds_Behind_Master: 0</span><br><span class="line">Master_SSL_Verify_Server_Cert: No</span><br><span class="line">                Last_IO_Errno: 0</span><br><span class="line">                Last_IO_Error:</span><br><span class="line">               Last_SQL_Errno: 0</span><br><span class="line">               Last_SQL_Error:</span><br><span class="line">  Replicate_Ignore_Server_Ids:</span><br><span class="line">             Master_Server_Id: 1</span><br><span class="line">                  Master_UUID: eca64d79-e884-11e8-89be-000c29b4f5cd</span><br><span class="line">             Master_Info_File: /application/mysql/data/master.info</span><br><span class="line">                    SQL_Delay: 0</span><br><span class="line">          SQL_Remaining_Delay: NULL</span><br><span class="line">      Slave_SQL_Running_State: Slave has read all relay log; waiting for the slave I/O thread to update it</span><br><span class="line">           Master_Retry_Count: 86400</span><br><span class="line">                  Master_Bind:</span><br><span class="line">      Last_IO_Error_Timestamp:</span><br><span class="line">     Last_SQL_Error_Timestamp:</span><br><span class="line">               Master_SSL_Crl:</span><br><span class="line">           Master_SSL_Crlpath:</span><br><span class="line">           Retrieved_Gtid_Set:</span><br><span class="line">            Executed_Gtid_Set:</span><br><span class="line">                Auto_Position: 0</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ERROR:</span><br><span class="line">No query specified</span><br></pre></td></tr></table></figure>

<h3 id="测试主从"><a href="#测试主从" class="headerlink" title="测试主从"></a>测试主从</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">master：</span><br><span class="line">mysql&gt; create database 三国;</span><br><span class="line">Query OK, 1 row affected (0.04 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">slave：</span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| 三国               |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| test               |</span><br><span class="line">+--------------------+</span><br><span class="line">5 rows in set (0.10 sec)</span><br></pre></td></tr></table></figure>

<h2 id="读写分离"><a href="#读写分离" class="headerlink" title="读写分离"></a>读写分离</h2><h3 id="安装lua"><a href="#安装lua" class="headerlink" title="安装lua"></a>安装lua</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@proxy ~]# cd /server/tools/</span><br><span class="line">[root@proxy tools]# wget https://www.lua.org/ftp/lua-5.3.4.tar.gz</span><br><span class="line">[root@proxy tools]# tar xf lua-5.3.4.tar.gz</span><br><span class="line">[root@proxy tools]# cd lua-5.3.4/</span><br><span class="line">[root@proxy lua-5.3.4]# yum install -y autoconf libevent-devel pkgconfig libtool libtermcap-devel ncurses-devel readline-devel gcc gcc-c++</span><br><span class="line">[root@proxy lua-5.3.4]# make linux install</span><br><span class="line">[root@proxy lua-5.3.4]# export LUA_CFLAGS=&quot;-I /usr/local/include&quot; LUA_LIBS=&quot;-L /usr/local/lib -llua -ldl&quot; LDFLAGS=&quot;-lm&quot;</span><br></pre></td></tr></table></figure>

<h3 id="安装proxy"><a href="#安装proxy" class="headerlink" title="安装proxy"></a>安装proxy</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@proxy tools]# wget https://downloads.mysql.com/archives/get/file/mysql-proxy-0.8.5-linux-glibc2.3-x86-64bit.tar.gz</span><br><span class="line">[root@proxy tools]# tar xf mysql-proxy-0.8.5-linux-glibc2.3-x86-64bit.tar.gz</span><br><span class="line">[root@proxy tools]# mv mysql-proxy-0.8.5-linux-glibc2.3-x86-64bit /application/proxy</span><br><span class="line">[root@proxy proxy]# cp ./share/doc/mysql-proxy/rw-splitting.lua ./lua/</span><br><span class="line">[root@proxy proxy]# vim ./lua/rw-splitting.lua</span><br><span class="line">38 if not proxy.global.config.rwsplit then</span><br><span class="line">39         proxy.global.config.rwsplit = &#123;</span><br><span class="line">40                 min_idle_connections = 1,     #默认为4，方便测试</span><br><span class="line">41                 max_idle_connections = 1,    #默认为4，方便测试</span><br><span class="line">42</span><br><span class="line">43                 is_debug = false</span><br><span class="line">44         &#125;</span><br><span class="line">45 end</span><br><span class="line">[root@proxy proxy]# vim /etc/mysql-porxy.cnf</span><br><span class="line">[mysql-proxy]</span><br><span class="line">user=root</span><br><span class="line">admin-username=proxy</span><br><span class="line">admin-password=123456</span><br><span class="line">proxy-address=172.16.1.32:4040</span><br><span class="line">proxy-read-only-backend-addresses=172.16.1.31:3306</span><br><span class="line">proxy-backend-addresses=172.16.1.30:3306</span><br><span class="line">proxy-lua-script=/application/proxy/lua/rw-splitting.lua</span><br><span class="line">log-file=/application/proxy/log/mysql-proxy.log</span><br><span class="line">log-level=info</span><br><span class="line">daemon=true</span><br><span class="line">keepalive=true</span><br><span class="line">[root@proxy proxy]# mkdir log</span><br><span class="line">[root@proxy proxy]# chmod 660 /etc/mysql-porxy.cnf</span><br><span class="line">[root@proxy proxy]# ./bin/mysql-proxy --defaults-file=/etc/mysql-porxy.cnf</span><br><span class="line">[root@proxy proxy]# netstat -luntp|grep 4040</span><br><span class="line">tcp        0      0 172.16.1.32:4040        0.0.0.0:*               LISTEN      3254/mysql-proxy</span><br></pre></td></tr></table></figure>

<h3 id="测试读写"><a href="#测试读写" class="headerlink" title="测试读写"></a>测试读写</h3><p>proxy yum安装mysql</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@proxy tools]# wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm</span><br><span class="line">[root@proxy tools]# rpm -ivh mysql-community-release-el7-5.noarch.rpm</span><br><span class="line">[root@proxy tools]# yum install -y mysql-server</span><br><span class="line">[root@proxy tools]# systemctl start mysqld</span><br><span class="line">[root@proxy tools]# mysqladmin -u root password &#x27;123456&#x27;</span><br><span class="line">Warning: Using a password on the command line interface can be insecure.</span><br></pre></td></tr></table></figure>

<p>master创建proxy用户</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; grant all on *.* to &#x27;proxy&#x27;@&#x27;172.16.1.%&#x27; identified by &#x27;123456&#x27;;</span><br><span class="line">Query OK, 0 rows affected (0.07 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mysql&gt; flush privileges;</span><br><span class="line">Query OK, 0 rows affected (0.11 sec)</span><br></pre></td></tr></table></figure>

<p>proxy创建数据</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@proxy tools]# mysql -uproxy -h 172.16.1.32 -P 4040 -p123456</span><br><span class="line">mysql&gt; use 三国;</span><br><span class="line">Database changed</span><br><span class="line">mysql&gt; create table 三国(武将 varchar(30),阵营 varchar(30),技能 varchar(30))default charset=utf8;</span><br><span class="line">Query OK, 0 rows affected (0.37 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mysql&gt; insert into 三国 values(&#x27;曹操&#x27;,&#x27;魏&#x27;,&#x27;枭雄&#x27;);</span><br><span class="line">Query OK, 1 row affected (0.11 sec)</span><br></pre></td></tr></table></figure>

<p>master：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; use 三国;</span><br><span class="line">Reading table information for completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line">mysql&gt; select * from 三国;</span><br><span class="line">+--------+--------+--------+</span><br><span class="line">| 武将   | 阵营   | 技能   |</span><br><span class="line">+--------+--------+--------+</span><br><span class="line">| 曹操   | 魏     | 枭雄   |</span><br><span class="line">+--------+--------+--------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure>

<p>slave：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; use 三国;</span><br><span class="line">Reading table information for completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line">mysql&gt; select * from 三国;</span><br><span class="line">+--------+--------+--------+</span><br><span class="line">| 武将   | 阵营   | 技能   |</span><br><span class="line">+--------+--------+--------+</span><br><span class="line">| 曹操   | 魏     | 枭雄   |</span><br><span class="line">+--------+--------+--------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure>

<p>关闭同步测试读写</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; stop slave;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br></pre></td></tr></table></figure>

<p>proxy</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; insert into 三国 values(&#x27;刘备&#x27;,&#x27;蜀&#x27;,&#x27;激将&#x27;);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br></pre></td></tr></table></figure>



<p>master：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; select * from 三国;</span><br><span class="line">+--------+--------+--------+</span><br><span class="line">| 武将   | 阵营   | 技能   |</span><br><span class="line">+--------+--------+--------+</span><br><span class="line">| 曹操   | 魏     | 枭雄   |</span><br><span class="line">| 刘备   | 蜀     | 激将   |</span><br><span class="line">+--------+--------+--------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure>



<p>slave：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; select * from 三国;</span><br><span class="line">+--------+--------+--------+</span><br><span class="line">| 武将   | 阵营   | 技能   |</span><br><span class="line">+--------+--------+--------+</span><br><span class="line">| 曹操   | 魏     | 枭雄   |</span><br><span class="line">+--------+--------+--------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>mysql</category>
      </categories>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>nacos初探</title>
    <url>/2019/02/12/nacos%E5%88%9D%E6%8E%A2/</url>
    <content><![CDATA[<h2 id="nacos简介"><a href="#nacos简介" class="headerlink" title="nacos简介"></a><strong>nacos简介</strong></h2><p>阿里baba于2018年7月份发布Nacos</p>
<p>Nacos 支持基于 DNS 和基于 RPC 的服务发现。服务提供者使用 原生SDK、OpenAPI、或一个独立的Agent TODO注册 Service 后，服务消费者可以使用DNS TODO 或HTTP&amp;API查找和发现服务。</p>
<p>Nacos 提供对服务的实时的健康检查，阻止向不健康的主机或服务实例发送请求。Nacos 支持传输层 (PING 或 TCP)和应用层 (如 HTTP、MySQL、用户自定义）的健康检查。 对于复杂的云环境和网络拓扑环境中（如 VPC、边缘网络等）服务的健康检查，Nacos 提供了 agent 上报模式和服务端主动检测2种健康检查模式。Nacos 还提供了统一的健康检查仪表盘，帮助您根据健康状态管理服务的可用性及流量。</p>
 <span id="more"></span>

<p>Nacos 提供了一个简洁易用的UI (控制台样例 Demo) 帮助您管理所有的服务和应用的配置。Nacos 还提供包括配置版本跟踪、金丝雀发布、一键回滚配置以及客户端配置更新状态跟踪在内的一系列开箱即用的配置管理特性，帮助您更安全地在生产环境中管理配置变更和降低配置变更带来的风险。</p>
<p>Nacos 无缝支持一些主流的开源生态，例如</p>
<p>* Spring Cloud</p>
<p>* Apache Dubbo and Dubbo Mesh TODO</p>
<p>* Kubernetes and CNCF TODO</p>
<h2 id="安装jdk"><a href="#安装jdk" class="headerlink" title="安装jdk"></a><strong>安装jdk</strong></h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget https://download.oracle.com/otn-pub/java/jdk/8u201-b09/42970487e3af4f5aa5bca3f542482c60/jdk-8u201-linux-x64.tar.gz?AuthParam=1549948422_0661c9178a87be37f9871182657318c3</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">tar xf jdk-8u201-linux-x64.tar.gz\?AuthParam\=1549948422_0661c9178a87be37f9871182657318c3 -C /opt</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /etc/profile</span></span><br><span class="line">export JAVA_HOME=/opt/jdk1.8.0_201</span><br><span class="line">export JRE_HOME=/opt/jdk1.8.0_201/jre</span><br><span class="line">export PATH=$JAVA_HOME/bin:$JAVA_HOME/jre/bin:$PATH</span><br><span class="line">export CLASSPATH=.$CLASSPATH:$JAVA_HOME/lib:$JAVA_HOME/jre/lib:$JAVA_HOME/lib/tools.jar</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">source</span> /etc/profile</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">java -version</span></span><br><span class="line">java version &quot;1.8.0_201&quot;</span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_201-b09)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.201-b09, mixed mode)</span><br></pre></td></tr></table></figure>


<h2 id="配置mysql"><a href="#配置mysql" class="headerlink" title="配置mysql"></a><strong>配置mysql</strong></h2><p>创建nacos_devtest数据库</p>
<p>导入nacos-mysql.sql</p>
<p><a href="https://github.com/alibaba/nacos/blob/master/distribution/conf/nacos-mysql.sql">https://github.com/alibaba/nacos/blob/master/distribution/conf/nacos-mysql.sql</a></p>
<h2 id="安装nacos"><a href="#安装nacos" class="headerlink" title="安装nacos"></a><strong>安装nacos</strong></h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget https://github.com/alibaba/nacos/releases/download/0.8.0/nacos-server-0.8.0.tar.gz</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">tar -xvf nacos-server-0.8.0.tar.gz</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cd</span> nacos/conf</span></span><br><span class="line">配置mysql连接</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">vim application.properties</span></span><br><span class="line">spring.datasource.platform=mysql</span><br><span class="line">db.num=1</span><br><span class="line">db.url.0=jdbc:mysql://IP:3306/nacos_devtest?characterEncoding=utf8&amp;connectTimeout=1000&amp;socketTimeout=3000&amp;autoReconnect=true db.user=nacos_devtest</span><br><span class="line">db.password=youdontknow</span><br></pre></td></tr></table></figure>


<h3 id="单机模式启动Nacos"><a href="#单机模式启动Nacos" class="headerlink" title="单机模式启动Nacos"></a>单机模式启动Nacos</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">../bin/startup.sh -m standalone</span></span><br></pre></td></tr></table></figure>


<h3 id="集群模式启动"><a href="#集群模式启动" class="headerlink" title="集群模式启动"></a>集群模式启动</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim cluster.conf</span> </span><br><span class="line">ip:port</span><br><span class="line">10.0.0.21:8848</span><br><span class="line">10.0.0.20:8848</span><br><span class="line">10.0.0.22:8848</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">sh startup.sh</span></span><br></pre></td></tr></table></figure>


<h2 id="web登录"><a href="#web登录" class="headerlink" title="web登录"></a><strong>web登录</strong></h2><p><a href="http://106.12.11.107:8848/nacos/index.html">http://IP:8848/nacos/index.html</a></p>
<p>用户名：nacos 密码：nacos</p>
<h3 id="测试服务"><a href="#测试服务" class="headerlink" title="测试服务"></a><strong>测试服务</strong></h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">服务注册</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">curl -X PUT <span class="string">&#x27;http://127.0.0.1:8848/nacos/v1/ns/instance?serviceName=nacos.naming.serviceName&amp;ip=20.18.7.10&amp;port=8080&#x27;</span></span></span><br><span class="line">服务发现</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">curl -X GET <span class="string">&#x27;http://127.0.0.1:8848/nacos/v1/ns/instances?serviceName=nacos.naming.serviceName&#x27;</span></span></span><br><span class="line">发布配置</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">curl -X POST <span class="string">&quot;http://127.0.0.1:8848/nacos/v1/cs/configs?dataId=nacos.cfg.dataId&amp;group=test&amp;content=helloWorld&quot;</span></span></span><br><span class="line">获取配置</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">curl -X GET <span class="string">&quot;http://127.0.0.1:8848/nacos/v1/cs/configs?dataId=nacos.cfg.dataId&amp;group=test&quot;</span></span></span><br></pre></td></tr></table></figure>


<h2 id="遇到的坑："><a href="#遇到的坑：" class="headerlink" title="遇到的坑："></a><strong>遇到的坑：</strong></h2><p>数据库：不要使用mysql8，最好5.6</p>
<p>jdk：不要使用open jdk，使用oracle jdk，不然web登录不上去</p>
<p><a href="https://nacos.io/zh-cn/docs/what-is-nacos.html">官方文档</a> </p>
]]></content>
      <categories>
        <category>微服务</category>
      </categories>
      <tags>
        <tag>注册中心</tag>
      </tags>
  </entry>
  <entry>
    <title>nexus配置yum仓库</title>
    <url>/2019/03/20/nexus%E9%85%8D%E7%BD%AEyum%E4%BB%93%E5%BA%93/</url>
    <content><![CDATA[<h3 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h3><p>在生产环境中，我们不可能所有的服务器都能连接外网更新RPM包，比较理想的环境是：有一台Linux服务器可以连接外网，剩余的服务器通过这台YUM服务器更新。以前比较传统的做法是先把包下载到内网中的YUM服务器上，然后通过createrepo命令生成本地仓库，其余服务器通过HTTP访问这个链接，这种做法比较费时费事。有没有一种比较好的方式，让我们直接通过这台服务器代理连接到公网的163、阿里 YUM仓库呢，这就是本次介绍的Nexus代理。无论你的客户机是CentOS6还是CentOS7又或者是Ubuntu，不论你是想用YUM还是PIP又或者是NPM包管理器，Nexus都能满足你的需求。</p>
 <span id="more"></span>

<p><a href="https://www.wqblogs.com:4443/2018/12/05/%E4%BD%BF%E7%94%A8nexus%E9%85%8D%E7%BD%AEdocker%E4%BB%93%E5%BA%93/">安装nexus略</a></p>
<h3 id="配置nexus"><a href="#配置nexus" class="headerlink" title="配置nexus"></a>配置nexus</h3><p>设置 &#x3D;&gt; Repositories &#x3D;&gt; Create repository &#x3D;&gt; yum(proxy)</p>
<p>创建仓库</p>
<p><a href="http://mirrors.163.com/centos/">http://mirrors.163.com/centos/</a></p>
<p><img src="/image/1553078291-Image.png"></p>
<p>复制仓库url</p>
<p><img src="/image/1553078341-15530783361.png"></p>
<h3 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim nexus.repo</span></span><br><span class="line">[nexus]</span><br><span class="line">name=Nexus Repository</span><br><span class="line">baseurl=http://IP:Port/repository/yum-163/$releasever/os/$basearch/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br></pre></td></tr></table></figure>

<p>清除缓存</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum clean all</span></span><br><span class="line">Loaded plugins: fastestmirror</span><br><span class="line">Cleaning repos: nexus</span><br><span class="line">Cleaning up everything</span><br><span class="line">Maybe you want: rm -rf /var/cache/yum, to also free up space taken by orphaned data from disabled or removed repos</span><br><span class="line">Cleaning up list of fastest mirrors</span><br></pre></td></tr></table></figure>

<p>下载测试</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum install -y lrzsz</span></span><br><span class="line">Loaded plugins: fastestmirror</span><br><span class="line">nexus                                                                   | 2.2 kB  00:00:00     </span><br><span class="line">(1/2): nexus/7/x86_64/group_gz                                          | 166 kB  00:00:00     </span><br><span class="line">(2/2): nexus/7/x86_64/primary                                           | 2.8 MB  00:00:09     </span><br><span class="line">Determining fastest mirrors</span><br><span class="line">nexus                                                                              10019/10019</span><br><span class="line">Package lrzsz-0.12.20-36.el7.x86_64 already installed and latest version</span><br><span class="line">Nothing to do</span><br></pre></td></tr></table></figure>

<p><img src="/image/1553078378-15530783691.png"> </p>
]]></content>
      <categories>
        <category>nexus</category>
      </categories>
      <tags>
        <tag>nexus</tag>
      </tags>
  </entry>
  <entry>
    <title>nexus镜像仓库配置ssl</title>
    <url>/2019/09/09/nexus%E9%95%9C%E5%83%8F%E4%BB%93%E5%BA%93%E9%85%8D%E7%BD%AEssl/</url>
    <content><![CDATA[<p>因为安全原因，docker push&#x2F;pull的时候必须使用https协议，这里我选择使用ngin代理一下使用Nexus的docker repository</p>
 <span id="more"></span>

<h3 id="域名配置ssl"><a href="#域名配置ssl" class="headerlink" title="域名配置ssl"></a>域名配置ssl</h3><p><a href="https://www.wqblogs.com:4443/2019/06/24/acme.sh%E5%88%9B%E5%BB%BAssl%E8%AF%81%E4%B9%A6/">证书配置访问</a></p>
<h3 id="nginx配置"><a href="#nginx配置" class="headerlink" title="nginx配置"></a>nginx配置</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">   listen 443 ssl;</span><br><span class="line">   server_name nexus.wqblogs.com:4443;</span><br><span class="line">   ssl_certificate /application/nginx/conf/ssl/nexus/fullchain.cer;</span><br><span class="line">   ssl_certificate_key /application/nginx/conf/ssl/nexus/nexus.wqblogs.com:4443.key;</span><br><span class="line">   ssl_session_timeout 5m;</span><br><span class="line">   ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">   ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;</span><br><span class="line">   ssl_prefer_server_ciphers on;</span><br><span class="line">  location / &#123;</span><br><span class="line">    proxy_pass http://192.168.0.4:8088;    #nexus docker仓库配置http端口</span><br><span class="line">    proxy_redirect default;</span><br><span class="line">    proxy_set_header REMOTE_ADDR $remote_addr;</span><br><span class="line">    proxy_set_header X-Forwarded-Proto https;</span><br><span class="line">    proxy_set_header Host $http_host;</span><br><span class="line">    proxy_http_version 1.1;</span><br><span class="line">    proxy_set_header Connection &quot;&quot;;</span><br><span class="line">    proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">    proxy_set_header Connection &quot;upgrade&quot;;</span><br><span class="line">  &#125;</span><br><span class="line">server &#123;</span><br><span class="line">  listen 80;</span><br><span class="line">  server_name nexus.wqblogs.com:4443;</span><br><span class="line">  rewrite ^(.*)$  https://$host$1 permanent;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">nginx -t   配置文件检查</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">nginx -s stop;nginx</span></span><br></pre></td></tr></table></figure>

<h3 id="push错误：nginx-413"><a href="#push错误：nginx-413" class="headerlink" title="push错误：nginx 413"></a>push错误：nginx 413</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker tag docker.io/centos:latest nexus.wqblogs.com:4443/centos:latest   给镜像定义私有仓库的新标签</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker push nexus.wqblogs.com:4443/centos:latest</span></span><br><span class="line">The push refers to a repository [nexus.wqblogs.com:4443/centos]</span><br><span class="line">877b494a9f30: Pushing 201.9 MB/201.9 MB</span><br><span class="line">error parsing HTTP 413 response body: invalid character &#x27;&lt;&#x27; looking for beginning of value: &quot;&lt;html&gt;\r\n&lt;head&gt;&lt;title&gt;413 Request Entity Too Large&lt;/title&gt;&lt;/head&gt;\r\n&lt;body bgcolor=\&quot;white\&quot;&gt;\r\n&lt;center&gt;&lt;h1&gt;413 Request Entity Too Large&lt;/h1&gt;&lt;/center&gt;\r\n&lt;hr&gt;&lt;center&gt;nginx&lt;/center&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;\r\n&quot;</span><br></pre></td></tr></table></figure>

<p>解决：</p>
<p>nginx 配置文件添加    client_max_body_size 1000m;</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"> nginx -s stop;nginx</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker push nexus.wqblogs.com:4443/centos:latest</span></span><br><span class="line">The push refers to a repository [nexus.wqblogs.com:4443/centos]</span><br><span class="line">877b494a9f30: Pushed</span><br><span class="line">latest: digest: sha256:a36b9e68613d07eec4ef553da84d0012a5ca5ae4a830cf825bb68b929475c869 size: 529</span><br></pre></td></tr></table></figure>

<p><img src="/image/1568018045-15680180381.png"> </p>
]]></content>
      <categories>
        <category>nexus</category>
      </categories>
      <tags>
        <tag>nexus</tag>
      </tags>
  </entry>
  <entry>
    <title>nfs-ganesha高可用</title>
    <url>/2020/08/31/nfs-ganesha%E9%AB%98%E5%8F%AF%E7%94%A8/</url>
    <content><![CDATA[<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">keepalived master配置：</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cat</span> /etc/keepalived/keepalived.conf</span></span><br><span class="line">global_defs &#123;</span><br><span class="line">script_user root root</span><br><span class="line">&#125;</span><br><span class="line">vrrp_script chk_port_ceph &#123;</span><br><span class="line">  script &quot;/etc/keepalived/check_ports_ganesha&quot;</span><br><span class="line">  interval 3</span><br><span class="line">  weight -50</span><br><span class="line">&#125;</span><br><span class="line">vrrp_instance VI_2 &#123;</span><br><span class="line">state MASTER</span><br><span class="line">interface bond0</span><br><span class="line">nopreempt</span><br><span class="line">virtual_router_id 14</span><br><span class="line">priority 200</span><br><span class="line">advert_int 1</span><br><span class="line">authentication &#123;</span><br><span class="line">auth_type PASS</span><br><span class="line">auth_pass vLKKIb310LIvN6gj</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_ipaddress &#123;</span><br><span class="line">192.168.1.27/24 dev bond0 label bond0:ganesha</span><br><span class="line">&#125;</span><br><span class="line">track_script &#123;</span><br><span class="line">    chk_port_ceph</span><br><span class="line">&#125;</span><br><span class="line">  notify_master &quot;systemctl restart nfs-ganesha&quot;</span><br><span class="line">  notify_backup &quot;systemctl stop nfs-ganesha&quot;</span><br><span class="line">  notify_fault  &quot;systemctl stop nfs-ganesha&quot;</span><br><span class="line">  notify_stop  &quot;systemctl stop nfs-ganesha&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">keepalived  backup配置:</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cat</span> /etc/keepalived/keepalived.conf</span></span><br><span class="line">global_defs &#123;</span><br><span class="line">script_user root root</span><br><span class="line">&#125;</span><br><span class="line">vrrp_script chk_port_ceph &#123;</span><br><span class="line">  script &quot;/etc/keepalived/check_ports_ganesha&quot;</span><br><span class="line">  interval 3</span><br><span class="line">  weight -50</span><br><span class="line">&#125;</span><br><span class="line">vrrp_instance VI_2 &#123;</span><br><span class="line">state BACKUP</span><br><span class="line">nopreempt</span><br><span class="line">interface bond0</span><br><span class="line">virtual_router_id 14</span><br><span class="line">priority 150</span><br><span class="line">advert_int 1</span><br><span class="line">authentication &#123;</span><br><span class="line">auth_type PASS</span><br><span class="line">auth_pass vLKKIb310LIvN6gj</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_ipaddress &#123;</span><br><span class="line">192.168.1.27/24  dev bond0 label bond0:ganesha</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">track_script &#123;</span><br><span class="line">    chk_port_ceph</span><br><span class="line">&#125;</span><br><span class="line">  notify_master &quot;systemctl start nfs-ganesha&quot;</span><br><span class="line">  notify_backup &quot;systemctl stop nfs-ganesha&quot;</span><br><span class="line">  notify_fault  &quot;systemctl stop nfs-ganesha&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">检测脚本</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cat</span> check_ports_ganesha</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line">vip=192.168.1.27</span><br><span class="line">if ! /sbin/ip addr | grep -q $vip; then</span><br><span class="line">    exit</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">systemctl status nfs-ganesha &gt;/dev/null</span><br><span class="line">if [ $? -ne 0 ]; then</span><br><span class="line">    systemctl restart nfs-ganesha </span><br><span class="line">    systemctl status nfs-ganesha &gt;/dev/null</span><br><span class="line">    if [ $? -eq 0 ]; then</span><br><span class="line">        echo 0</span><br><span class="line">    else   </span><br><span class="line">        systemctl stop keepalived</span><br><span class="line">    fi</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>ceph</category>
      </categories>
      <tags>
        <tag>ceph</tag>
      </tags>
  </entry>
  <entry>
    <title>nginx基础优化</title>
    <url>/2019/09/23/nginx%E5%9F%BA%E7%A1%80%E4%BC%98%E5%8C%96/</url>
    <content><![CDATA[<p>nginx配置文件优化</p>
<span id="more"></span>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 普通用户登录</span></span><br><span class="line"><span class="attribute">user</span> www www;           <span class="comment"># 定义www为启动用户，不推荐root用户</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 进程绑定cpu</span></span><br><span class="line"><span class="attribute">worker_processes</span>  <span class="number">2</span>;        <span class="comment"># cpu核数</span></span><br><span class="line"><span class="attribute">worker_cpu_affinity</span> <span class="number">01</span> <span class="number">10</span>;  <span class="comment"># 表示开启两个进程，第一个进程对应01，第二个进程对应10</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># nginx最大打开文件数</span></span><br><span class="line"><span class="attribute">worker_rlimit_nofile</span> <span class="number">65535</span>; <span class="comment"># 表示开启nginx的worker进程打开最大文件数</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># nginx事件处理模型</span></span><br><span class="line"><span class="section">events</span> &#123;</span><br><span class="line">    <span class="attribute">use</span> <span class="literal">epoll</span>;                 <span class="comment"># 使用epoll模型</span></span><br><span class="line">    <span class="attribute">worker_connections</span> <span class="number">65535</span>;  <span class="comment"># 单个进程允许的客户端最大连接数</span></span><br><span class="line">    <span class="attribute">multi_accept</span> <span class="literal">on</span>;           <span class="comment"># 告诉nginx收到一个新连接通知后接受尽可能多的连接，默认是on，设置为on后，多个worker按串行方式来处理连接，也就是一个连接只有一个worker被唤醒，其他的处于休眠状态，设置为off后，多个worker按并行方式来处理连接，也就是一个连接会唤醒所有的worker，直到连接分配完毕，没有取得连接的继续休眠</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="section">http</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 高速传输模式</span></span><br><span class="line">    <span class="attribute">include</span>       mime.types;   </span><br><span class="line">    <span class="attribute">default_type</span>  application/octet-stream;</span><br><span class="line">    <span class="attribute">sendfile</span>      <span class="literal">on</span>;  <span class="comment"># 开启高效文件传输模式</span></span><br><span class="line">    <span class="attribute">tcp_nopush</span>    <span class="literal">on</span>;  <span class="comment"># 必须在sendfile开启模式才有效，防止网路阻塞，积极的减少网络报文段的数量</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 连接超时时间</span></span><br><span class="line">    <span class="attribute">keepalive_timeout</span>  <span class="number">65</span>;  <span class="comment"># 可短连接保持会话超时时间，超过这个时间，服务器会断开这个连接</span></span><br><span class="line">    <span class="attribute">tcp_nodelay</span> <span class="literal">on</span>;         <span class="comment"># 防止网络堵塞</span></span><br><span class="line">    <span class="attribute">open_file_cache</span> max=<span class="number">65535</span> inactive=<span class="number">60s</span>;  <span class="comment"># 将为打开文件制定缓存。max指定缓存数量，建议和打开文件数一致，inactive是指经过多长时间文件没被请求后删除缓存</span></span><br><span class="line">    <span class="attribute">open_file_cache_valid</span>    <span class="number">30s</span>;  <span class="comment"># 多长时间检查一次缓存的有效信息</span></span><br><span class="line">    <span class="attribute">open_file_cache_min_uses</span>   <span class="number">1</span>;  <span class="comment"># 指上面inactive参数时间内文件的最少使用次数，如果超过这个数字，文件描叙符一直在缓存中打开的，如果没再inactive时间内一次没被使用，它将被移除</span></span><br><span class="line">    <span class="attribute">client_header_buffer_size</span> <span class="number">4k</span>;  <span class="comment"># 客户端请求头部的缓冲区大小</span></span><br><span class="line">    <span class="attribute">client_header_timeout</span> <span class="number">15</span>;      <span class="comment"># 设置请求头的超时时间</span></span><br><span class="line">    <span class="attribute">client_body_timeout</span>   <span class="number">15</span>;      <span class="comment"># 设置请求体的超时时间</span></span><br><span class="line">    <span class="attribute">client_max_body_size</span> <span class="number">10m</span>;      <span class="comment"># 上传文件大小限制</span></span><br><span class="line">    <span class="attribute">client_body_buffer_size</span> <span class="number">256k</span>;  <span class="comment"># 缓冲区代理缓冲用户端请求的最大字节数</span></span><br><span class="line">    <span class="attribute">reset_timedout_connection</span> <span class="literal">on</span>;  <span class="comment"># 告诉nginx关闭不响应的客户端连接。这将会释放那个客户端所占有的内存空间</span></span><br><span class="line">    <span class="attribute">send_timeout</span>   <span class="number">15</span>;             <span class="comment"># 响应客户端超时时间</span></span><br><span class="line">    <span class="attribute">server_tokens</span> <span class="literal">off</span>;             <span class="comment"># 隐藏版本号</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># gzip压缩</span></span><br><span class="line">    <span class="attribute">gzip</span> <span class="literal">on</span>;                <span class="comment"># 开启压缩</span></span><br><span class="line">    <span class="attribute">gzip_min_length</span>    <span class="number">2k</span>;  <span class="comment"># 用于设置允许压缩的页面最小字节数</span></span><br><span class="line">    <span class="attribute">gzip_buffers</span>    <span class="number">4</span> <span class="number">16k</span>;  <span class="comment"># 设置用于处理请求压缩的缓冲区数量和大小</span></span><br><span class="line">    <span class="attribute">gzip_http_version</span> <span class="number">1</span>.<span class="number">1</span>;  <span class="comment"># 压缩版本</span></span><br><span class="line">    <span class="attribute">gzip_comp_level</span> <span class="number">6</span>;      <span class="comment"># 压缩等级</span></span><br><span class="line">    <span class="attribute">gzip_types</span> text/plain text/css text/javascriptapplication/json application/javascript application/x-javascriptapplication/xml;  <span class="comment"># 压缩类型</span></span><br><span class="line">    <span class="attribute">gzip_vary</span> <span class="literal">on</span>;           <span class="comment"># 和http头有关系，加个vary头，给代理服务器用的，有的浏览器支持压缩，有的不支持，所以避免浪费不支持的也压缩，所以根据客户端的HTTP头来判断，是否需要压缩</span></span><br><span class="line">    <span class="attribute">gzip_proxied</span> any;       <span class="comment"># 无条件压缩所有结果数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># fastcgi调优</span></span><br><span class="line">    <span class="attribute">fastcgi_connect_timeout</span> <span class="number">300</span>;       <span class="comment"># 指连接到后端FastCGL的超时时间</span></span><br><span class="line">    <span class="attribute">fastcgi_send_timeout</span> <span class="number">300</span>;          <span class="comment"># 指向FastCGL传送请求的超时时间</span></span><br><span class="line">    <span class="attribute">fastcgi_read_timeout</span> <span class="number">300</span>;          <span class="comment"># 指接收FastCGL答应的超时时间</span></span><br><span class="line">    <span class="attribute">fastcgi_buffer_size</span>  <span class="number">64k</span>;          <span class="comment"># 指定读取FastCGL答应第一部分需要多大缓冲区，该值表示使用1个64kb的缓冲区读取应答第一部分(应答头)</span></span><br><span class="line">    <span class="attribute">fastcgi_buffers</span>    <span class="number">4</span> <span class="number">64k</span>;          <span class="comment"># 指定本地需要多少和多大的缓冲区来缓冲fastcgi应答请求</span></span><br><span class="line">    <span class="attribute">fastcgi_busy_buffers_size</span> <span class="number">128k</span>;    <span class="comment"># 用于设置系统很忙时可以使用的proxy_buffers大小，默认值是fastcgi_buffer的2倍</span></span><br><span class="line">    <span class="attribute">fastcgi_temp_file_write_size</span> <span class="number">128k</span>; <span class="comment"># 写入缓存文件使用多大的数据块，默认值是fastcgi_buffer的2倍</span></span><br><span class="line">    <span class="attribute">fastcgi_temp_path</span> /application/nginx/fastcgi_temp;   <span class="comment"># FastCGI 临时文件的存放路径</span></span><br><span class="line">    <span class="attribute">fastcgi_intercept_errors</span> <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">fastcgi_cache_key</span> <span class="string">&quot;<span class="variable">$request_method</span>://<span class="variable">$host</span><span class="variable">$request_uri</span>&quot;</span>;</span><br><span class="line">    <span class="attribute">fastcgi_cache_path</span> /application/nginx/fastcgi_cache levels=<span class="number">1</span>:<span class="number">2</span> keys_zone=cache_fastcgi:<span class="number">128m</span> inactive=<span class="number">1d</span> max_size=<span class="number">1g</span>;    <span class="comment"># 这个指令为FastCGI缓存指定一个路径，目录结构等级，关键字区域存储时间和非活动删除时间、以及最大占用空间</span></span><br><span class="line">    <span class="attribute">fastcgi_cache</span> cache_fastcgi;    <span class="comment"># fastcgi_cache指令引用我们在fastcgicache_path指令中指定的内存区域名称，并将缓存存储在此区域中</span></span><br><span class="line">    <span class="attribute">fastcgi_cache_valid</span> <span class="number">200</span> <span class="number">302</span> <span class="number">1h</span>; <span class="comment"># 表示将200和302应答缓存一个小时</span></span><br><span class="line">    <span class="attribute">fastcgi_cache_valid</span> <span class="number">301</span> <span class="number">1d</span>;     <span class="comment"># 表示将301应答缓存1天</span></span><br><span class="line">    <span class="attribute">fastcgi_cache_valid</span> any <span class="number">1m</span>;     <span class="comment"># 表示其他应答均缓存1分钟</span></span><br><span class="line">    <span class="attribute">fastcgi_cache_min_uses</span> <span class="number">1</span>;       <span class="comment"># 表示经过多少次请求的相同URL将被缓存</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 日志配置</span></span><br><span class="line">    <span class="attribute">log_format</span>  main  <span class="string">&#x27;<span class="variable">$remote_addr</span> ? <span class="variable">$remote_user</span> [<span class="variable">$time_local</span>] &quot;<span class="variable">$request</span>&quot;&#x27;</span></span><br><span class="line">                      <span class="string">&#x27;<span class="variable">$status</span> <span class="variable">$body_bytes_sent</span> &quot;<span class="variable">$http_referer</span>&quot;&#x27;</span></span><br><span class="line">                     <span class="string">&#x27;&quot;<span class="variable">$http_user_agent</span>&quot; &quot;<span class="variable">$http_x_forwarded_for</span>&quot;&#x27;</span>;</span><br><span class="line">      <span class="attribute">access_log</span>  /application/nginx/logs/access.log  main;</span><br><span class="line">      <span class="attribute">error_log</span>   /application/nginx/logs/<span class="literal">error</span>.log     <span class="literal">info</span>;</span><br><span class="line">      <span class="attribute">include</span> /application/nginx/conf/conf.d/<span class="regexp">*.conf</span>;</span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure>


<p>为网站开启 Nginx 缓存清理</p>
<p>编译purge模块</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget http://labs.frickle.com/files/ngx_cache_purge-2.3.tar.gz</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">tar xf ngx_cache_purge-2.3.tar.gz -C /opt/</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"> <span class="built_in">cd</span> nginx-1.15.2/</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">nginx -V</span></span><br><span class="line">nginx version: nginx/1.15.2</span><br><span class="line">built by gcc 4.8.5 20150623 (Red Hat 4.8.5-28) (GCC)</span><br><span class="line">built with OpenSSL 1.0.2k-fips  26 Jan 2017</span><br><span class="line">TLS SNI support enabled</span><br><span class="line">configure arguments: --prefix=/application/nginx --user=www --group=www --with-http_stub_status_module --with-http_ssl_module</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"> ./configure --prefix=/application/nginx --user=www --group=www --with-http_stub_status_module --with-http_ssl_module  --add-module=/opt/ngx_cache_purge-2.3</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">make</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cd</span> objs/</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mv</span> /application/nginx/sbin/nginx /application/nginx/sbin/nginx.bak</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cp</span> nginx /application/nginx/sbin/</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ll /application/nginx/sbin/</span></span><br><span class="line">total 11576</span><br><span class="line">-rwxr-xr-x 1 root root 5960496 Oct 30 14:21 nginx</span><br><span class="line">-rwxr-xr-x 1 www  www  5889784 Nov 22  2018 nginx.bak</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">nginx -s stop;nginx</span></span><br></pre></td></tr></table></figure>

<p>proxy_cache与fastcgi_cache区别</p>
<p>proxy_cache的作用是缓存后端服务器的内容，包括静态的和动态。</p>
<p>fastcgi_cache用是缓存fastcgi生成的内容，很多情况是php生成的动态的内容。</p>
<p>proxy_cache缓存减少了nginx与后端通信的次数，节省了传输时间和后端宽带。</p>
<p>fastcgi_cache缓存减少了nginx与php的通信的次数，更减轻了php和数据库(mysql)的压力，这比用memcached之类的缓存要轻松得多。 </p>
]]></content>
      <categories>
        <category>nginx</category>
      </categories>
  </entry>
  <entry>
    <title>nginx tcp反向代理的使用</title>
    <url>/2019/11/08/nginx%20tcp%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p>nginx从1.9.0开始，新增加了一个stream模块，用来实现四层协议的转发、代理或者负载均衡等。比如在内网有一个mysql服务，想暴露到公网上去使用，就可以通过nginx代理的方式通过nginx来进行内网mysql的访问</p>
 <span id="more"></span>

<table>
<thead>
<tr>
<th>mysql</th>
<th>192.168.9.21</th>
</tr>
</thead>
<tbody><tr>
<td>nginx</td>
<td>192.168.9.20</td>
</tr>
</tbody></table>
<h2 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a><strong>mysql</strong></h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget http://repo.mysql.com/mysql57-community-release-el7-8.noarch.rpm</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"> rpm -ivh mysql57-community-release-el7-8.noarch.rpm</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum -y install mysql-server</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl start mysqld.service</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cat</span> /var/log/mysqld.log |grep password</span></span><br><span class="line">2019-11-08T01:14:44.247099Z 1 [Note] A temporary password is generated for root@localhost: juF6-igW+!tq</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">mysql -uroot -p</span></span><br><span class="line">Enter password: juF6-igW+!tq</span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">alter user <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> identified by <span class="string">&#x27;Passwd123!&#x27;</span>;</span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">grant all privileges on *.* to root@<span class="string">&#x27;192.168.9.20&#x27;</span> identified by <span class="string">&#x27;Passwd123!&#x27;</span>;   <span class="comment"># 为反向代理授权一个账户</span></span></span><br></pre></td></tr></table></figure>

<h2 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a><strong>nginx</strong></h2><p>编译nginx增加stream模块</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment"># wget http://nginx.org/download/nginx-1.17.5.tar.gz</span></span><br><span class="line"><span class="comment"># tar xf nginx-1.17.5.tar.gz</span></span><br><span class="line"><span class="comment"># cd nginx-1.17.5/</span></span><br><span class="line"><span class="comment"># useradd -s /sbin/nologin -M www</span></span><br><span class="line"><span class="comment"># yum install -y pcre-devel openssl-devel </span></span><br><span class="line"><span class="comment"># ./configure --prefix=/application/nginx --user=www --group=www --with-http_ssl_module  --with-stream --with-stream_ssl_module</span></span><br><span class="line"><span class="comment"># make &amp;&amp; make install</span></span><br><span class="line"><span class="comment"># vim nginx.conf</span></span><br><span class="line"><span class="attribute">worker_processes</span>  <span class="number">1</span>;</span><br><span class="line"><span class="section">events</span> &#123;</span><br><span class="line">    <span class="attribute">worker_connections</span>  <span class="number">1024</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="section">stream</span> &#123;     <span class="comment"># 与http同级</span></span><br><span class="line">  <span class="section">upstream</span> mysql_host &#123;</span><br><span class="line">    <span class="attribute">server</span> <span class="number">192.168.9.21:3306</span>;    </span><br><span class="line">  &#125;</span><br><span class="line">  <span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">3333</span>;  <span class="comment"># 代理端口，避免mysql端口暴露公网</span></span><br><span class="line">    <span class="attribute">proxy_connect_timeout</span> <span class="number">5s</span>;</span><br><span class="line">    <span class="attribute">proxy_timeout</span> <span class="number">5s</span>;</span><br><span class="line">    <span class="attribute">proxy_pass</span> mysql_host;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># export PATH=$PATH:/application/nginx/sbin:$PATH</span></span><br><span class="line"><span class="comment"># nginx</span></span><br></pre></td></tr></table></figure>

<h2 id="client客户端"><a href="#client客户端" class="headerlink" title="client客户端"></a>client客户端</h2><p>![]&#x2F;image&#x2F;1573181644-Image.png)</p>
]]></content>
      <categories>
        <category>nginx</category>
      </categories>
  </entry>
  <entry>
    <title>nginx的几种调度算法</title>
    <url>/2019/09/22/nginx%E7%9A%84%E5%87%A0%E7%A7%8D%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95/</url>
    <content><![CDATA[<h2 id="Nginx负载均衡算法"><a href="#Nginx负载均衡算法" class="headerlink" title="Nginx负载均衡算法"></a>Nginx负载均衡算法</h2><h3 id="weight轮询-默认"><a href="#weight轮询-默认" class="headerlink" title="weight轮询(默认)"></a>weight轮询(默认)</h3><p>接收到的请求按照顺序逐一分配到不同的后端服务器，即使在使用过程中，某一台后端服务器宕机，nginx会自动将该服务器剔除出队列，请求受理情况不会受到任何影响。 这种方式下，可以给不同的后端服务器设置一个权重值（weight），用于调整不同的服务器上请求的分配率；权重数据越大，被分配到请求的几率越大；该权重值，主要是针对实际工作环境中不同的后端服务器硬件配置进行调整的。</p>
 <span id="more"></span>

<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">upstream</span> backend &#123;</span><br><span class="line">    <span class="attribute">server</span> <span class="number">192.168.9.22:8080</span> weight=<span class="number">6</span>;</span><br><span class="line">    <span class="attribute">server</span> <span class="number">192.168.9.23:8080</span> weight=<span class="number">8</span>;</span><br><span class="line">    <span class="attribute">server</span> <span class="number">192.168.9.24:8080</span> backup;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="ip-hash"><a href="#ip-hash" class="headerlink" title="ip_hash"></a>ip_hash</h3><p>每个请求按照发起客户端的ip的hash结果进行匹配，这样的算法下一个固定ip地址的客户端总会访问到同一个后端服务器，这也在一定程度上解决了集群部署环境下session共享的问题，后端服务down了之后，用户就会访问不到。</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">upstream</span> backend &#123;</span><br><span class="line">    ip_hash;</span><br><span class="line">    <span class="attribute">server</span> <span class="number">192.168.9.22:8080</span> weight=<span class="number">6</span>;</span><br><span class="line">    <span class="attribute">server</span> <span class="number">192.168.9.23:8080</span> weight=<span class="number">8</span>;</span><br><span class="line">    <span class="attribute">server</span> <span class="number">192.168.9.24:8080</span> weight=<span class="number">10</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="fair"><a href="#fair" class="headerlink" title="fair"></a>fair</h3><p>智能调整调度算法，动态的根据后端服务器的请求处理到响应的时间进行均衡分配，响应时间短处理效率高的服务器分配到请求的概率高，响应时间长处理效率低的服务器分配到的请求少；结合了前两者的优点的一种调度算法。但是需要注意的是nginx默认不支持fair算法，如果要使用这种调度算法，请安装upstream_fair模块</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">upstream</span> backend &#123;</span><br><span class="line">    <span class="attribute">server</span> <span class="number">192.168.9.22:8080</span> weight=<span class="number">6</span>;</span><br><span class="line">    <span class="attribute">server</span> <span class="number">192.168.9.23:8080</span> weight=<span class="number">8</span>;</span><br><span class="line">    <span class="attribute">server</span> <span class="number">192.168.9.24:8080</span> backup;</span><br><span class="line">    fair;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="url-hash"><a href="#url-hash" class="headerlink" title="url_hash"></a>url_hash</h3><p>按照访问的url的hash结果分配请求，每个请求的url会指向后端固定的某个服务器，可以在nginx作为静态服务器的情况下提高缓存效率。同样要注意nginx默认不支持这种调度算法，要使用的话需要安装nginx的hash软件包</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">upstream</span> backend &#123;</span><br><span class="line">    url_hash;</span><br><span class="line">    <span class="attribute">server</span> <span class="number">192.168.9.22:8080</span> weight=<span class="number">6</span>;</span><br><span class="line">    <span class="attribute">server</span> <span class="number">192.168.9.23:8080</span> weight=<span class="number">8</span>;</span><br><span class="line">    <span class="attribute">server</span> <span class="number">192.168.9.24:8080</span> backup;</span><br><span class="line">    <span class="attribute">hash</span> <span class="variable">$request_uri</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Nginx负载均衡调度状态"><a href="#Nginx负载均衡调度状态" class="headerlink" title="Nginx负载均衡调度状态"></a>Nginx负载均衡调度状态</h2><p>在Nginx upstream模块中，可以设定每台后端服务器在负载均衡调度中的状态，常用的状态有：</p>
<p>weight              设置服务器权重值，默认值为1</p>
<p>max_fails        设置最大失败次数</p>
<p>fail_timeout   设置失败超时时间，单位为秒</p>
<p>down                标记服务器已关机，不参与集群调度</p>
<p>backup             预留的备份机器。当其他所有的非backup机器出现故障或者忙的时候，才会请求backup机器，因此这台机器的压力最轻</p>
<p>注意:backup不能和ip_hash同时配置 </p>
]]></content>
      <categories>
        <category>nginx</category>
      </categories>
  </entry>
  <entry>
    <title>nginx配置身份验证</title>
    <url>/2019/03/19/nginx%E9%85%8D%E7%BD%AE%E8%BA%AB%E4%BB%BD%E9%AA%8C%E8%AF%81/</url>
    <content><![CDATA[<p>在某些情况下，需要对某些内容的访问进行限制，在Nginx中也提供了这样的限制措施</p>
<h3 id="访问身份验证"><a href="#访问身份验证" class="headerlink" title="访问身份验证"></a>访问身份验证</h3><p>在Nginx的插件模块中有一个模块ngx_http_auth_basic_module可以要求用户进行身份认证，默认情况下nginx已经安装了这个模块</p>
 <span id="more"></span>

<p>创建密钥文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum install -y httpd-tool</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">htpasswd -bc /etc/nginx/conf.d/htpasswd.kyd keyida hahahaha</span></span><br><span class="line">Adding password for user keyida</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cat</span> /etc/nginx/conf.d/htpasswd.kyd</span></span><br><span class="line">keyida:$apr1$33rucHkY$XLC96xeenirwS70mPeQRH0</span><br></pre></td></tr></table></figure>

<p>配置nginx</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">upstream</span> kibana&#123;</span><br><span class="line">     <span class="attribute">server</span> <span class="number">172.17.252.102:5601</span>;</span><br><span class="line">&#125;  </span><br><span class="line">  server&#123;</span><br><span class="line">     <span class="attribute">listen</span> <span class="number">88</span>;</span><br><span class="line">     <span class="attribute">server_name</span> IP;</span><br><span class="line">     <span class="attribute">auth_basic</span> <span class="string">&quot;User Authentication&quot;</span>;</span><br><span class="line">     <span class="attribute">auth_basic_user_file</span> /etc/nginx/conf.d/htpasswd.kyd;</span><br><span class="line">     <span class="attribute">error_page</span>   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  /50x.html;</span><br><span class="line">   </span><br><span class="line">      <span class="section">location</span> = /50x.html &#123;</span><br><span class="line">          <span class="attribute">root</span>   html;</span><br><span class="line">      &#125;   </span><br><span class="line">     <span class="section">location</span> / &#123;</span><br><span class="line">              <span class="attribute">proxy_pass</span> http://kibana;</span><br><span class="line">              <span class="attribute">proxy_set_header</span> Host <span class="variable">$http_host</span>;</span><br><span class="line">              <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">              <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">     &#125;        </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>配置完成后重启nginx服务即可。正常情况下会出现以下输入框输入设置的用户名和密码即可</p>
<p><img src="/image/1552983944-15529839391.png"></p>
<h3 id="限制IP访问"><a href="#限制IP访问" class="headerlink" title="限制IP访问"></a>限制IP访问</h3><p>在nginx.conf中添加以下配置可实现全局限制，也可将此配置放到server中或location中，放到server中只针对站点进行限制，location中只针对匹配的url进行限制</p>
<p>　　allow 106.12.11.107; #允许的IP</p>
<p>　　deny 106.12.11.106；#不允许</p>
<p>　　deny all; #全部不允许</p>
<p>可添加多条allow或deny,deny all结尾表示除了上面allow的其他都禁止，deny all;</p>
<p>deny 一定要加一个ip，否则直接跳转到403，下面的规则将不起作用 </p>
]]></content>
      <categories>
        <category>nginx</category>
      </categories>
      <tags>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>node_exporter与grafana部署</title>
    <url>/2020/04/09/node_exporter%E4%B8%8Egrafana%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<h2 id="部署node-exporter"><a href="#部署node-exporter" class="headerlink" title="部署node_exporter"></a>部署node_exporter</h2><h3 id="下载node-exporter"><a href="#下载node-exporter" class="headerlink" title="下载node_exporter"></a>下载node_exporter</h3><p><a href="https://prometheus.io/download/#node_exporter"><strong>https://prometheus.io/download/#node_exporter</strong></a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget https://github.com/prometheus/node_exporter/releases/download/v0.18.1/node_exporter-0.18.1.linux-amd64.tar.gz</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">tar xf node_exporter-0.18.1.linux-amd64.tar.gz</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cd</span> node_exporter-0.18.1.linux-amd64/</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cp</span> node_exporter /usr/sbin/</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">which</span> node_exporter</span></span><br><span class="line">/usr/sbin/node_exporter</span><br></pre></td></tr></table></figure>

<h3 id="启动脚本"><a href="#启动脚本" class="headerlink" title="启动脚本"></a>启动脚本</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /etc/systemd/system/node_exporter.service</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=node_exporter</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">User=prometheus</span><br><span class="line">ExecStart=/usr/sbin/node_exporter</span><br><span class="line">Restart=on-failure</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>

<h3 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl start node_exporter</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ps -ef|grep node_exporter</span></span><br><span class="line">prometh+  5417     1  0 14:43 ?        00:00:00 /usr/sbin/node_exporter</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">netstat -luntp|grep 9100</span></span><br><span class="line">tcp6       0      0 :::9100                 :::*                    LISTEN      5417/node_exporter</span><br></pre></td></tr></table></figure>

<h3 id="查看metrics"><a href="#查看metrics" class="headerlink" title="查看metrics"></a>查看metrics</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># curl 127.0.0.1:9100/metrics</span><br></pre></td></tr></table></figure>

<h3 id="prometheus配置"><a href="#prometheus配置" class="headerlink" title="prometheus配置"></a>prometheus配置</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&#x27;node&#x27;</span></span><br><span class="line">  <span class="attr">static_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">targets:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">localhost:9100</span></span><br></pre></td></tr></table></figure>

<p>–web.listen-address&#x3D;”:9100”            # node_exporter监听的端口，默认是9100，可通过此配置修改端口</p>
<h3 id="刷新prometheus配置"><a href="#刷新prometheus配置" class="headerlink" title="刷新prometheus配置"></a>刷新prometheus配置</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">curl -XPOST http://localhost:9090/-/reload</span></span><br></pre></td></tr></table></figure>

<p><img src="/image/7344128673.jpg" alt="7344128673"></p>
<h2 id="安装grafana"><a href="#安装grafana" class="headerlink" title="安装grafana"></a>安装grafana</h2><h3 id="下载grafana"><a href="#下载grafana" class="headerlink" title="下载grafana"></a>下载grafana</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget https://dl.grafana.com/oss/release/grafana-6.7.2-1.x86_64.rpm</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum install -y grafana-6.7.2-1.x86_64.rpm</span></span><br></pre></td></tr></table></figure>

<h3 id="启动服务-1"><a href="#启动服务-1" class="headerlink" title="启动服务"></a>启动服务</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl start grafana-server</span></span><br></pre></td></tr></table></figure>

<h3 id="web操作"><a href="#web操作" class="headerlink" title="web操作"></a>web操作</h3><p>默认账号密码 admin admin</p>
<p><img src="/image/9876533465.jpg" alt="9876533465"></p>
<p>添加数据源</p>
<p><img src="/image/734923548.jpg" alt="734923548"></p>
<p>添加dashboard</p>
<p><a href="https://grafana.com/grafana/dashboards/8919">https://grafana.com/grafana/dashboards/8919</a><br><a href="https://grafana.com/grafana/dashboards/11174">https://grafana.com/grafana/dashboards/11174</a><br><img src="/image/3253473568.jpg" alt="3253473568"></p>
<p>监控dashboard</p>
<p><img src="/image/96763543751.jpg" alt="96763543751"></p>
]]></content>
      <categories>
        <category>prometheus</category>
      </categories>
      <tags>
        <tag>prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>nomad优点与对比</title>
    <url>/2019/06/23/nomad%E4%BC%98%E7%82%B9%E4%B8%8E%E5%AF%B9%E6%AF%94/</url>
    <content><![CDATA[<p><strong>nomad优点</strong> </p>
<ul>
<li><p>简单性：Nomad作为单个进程运行，没有外部依赖性。运营商可以轻松配置，管理和扩展Nomad。开发人员可以轻松定义和运行应用程序。</p>
</li>
<li><p>灵活性：Nomad可以运行容器化，遗留，微服务和批处理应用程序的各种工作负载。Nomad可以安排服务，批处理和系统作业，并且可以在Linux和Windows上运行。</p>
</li>
<li><p>可扩展性和高性能：Nomad可以每秒调度数千个容器，可扩展到单个群集中的数千个节点，并可轻松跨区域和云提供商进行联合。 </p>
</li>
<li><p>HashiCorp互操作性：Nomad优雅地与Vault集成，用于秘密管理，Consul用于服务发现和动态配置。Nomad的Consul式架构和类似Terraform的工作规范降低了HashiCorp堆栈现有用户的进入门槛。</p>
</li>
</ul>
 <span id="more"></span>

<p> <strong>Nomad对阵Kubernetes</strong> </p>
<p>Kubernetes是最初由Google设计的容器编排系统，现在由Cloud Native Computing Foundation（CNCF）管理，由Google，Red Hat，CoreOS和许多其他人开发。Kubernetes旨在提供运行Docker或基于Rkt的应用程序所需的所有功能，包括集群管理，调度，服务发现，监控，秘密管理等。<br>Nomad仅旨在提供集群管理和调度，并且设计时具有小范围的Unix理念，同时使用诸如Consul之类的工具 进行服务发现和Vault进行秘密管理。<br>虽然Kubernetes专注于Docker，但Nomad更为通用。Nomad支持虚拟化，容器化和独立的应用程序，包括Docker。Nomad设计有可扩展的驱动程序，支持将扩展到所有常见的驱动程序。<br>Kubernetes被设计为六个以上互操作服务的集合，它们共同提供全部功能。协调和存储由etcd在核心提供。状态由API控制器包装，API控制器由其他服务使用，这些服务为调度等功能提供更高级别的API。Kubernetes支持在高可用性配置中运行，但操作设置复杂。<br>Nomad在架构上要简单得多。Nomad是单个二进制文件，用于客户端和服务器，并且不需要外部服务来进行协调或存储。Nomad将轻量级资源管理器和复杂的调度程序组合到一个系统中。默认情况下，Nomad是分布式的，高度可用且操作简单。<br>Kubernetes文档声明他们可以支持超过5,000个节点的集群，并且它们支持多可用区&#x2F;多区域配置。事实证明，Nomad可以在实际生产环境中扩展到超过10,000个节点的簇大小。Nomad本身也支持多数据中心和多区域配置。 </p>
]]></content>
      <categories>
        <category>nomad</category>
      </categories>
      <tags>
        <tag>nomad</tag>
      </tags>
  </entry>
  <entry>
    <title>nomad之acl使用</title>
    <url>/2019/03/25/nomad%E4%B9%8Bacl%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h3 id="配置启用ACL"><a href="#配置启用ACL" class="headerlink" title="配置启用ACL"></a>配置启用ACL</h3><p>server.hcl里添加</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">acl <span class="punctuation">&#123;</span></span><br><span class="line">  enabled = <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">  token_ttl = <span class="string">&quot;30s&quot;</span></span><br><span class="line">  policy_ttl = <span class="string">&quot;60s&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p>重启服务</p>
 <span id="more"></span>

<h3 id="acl用法"><a href="#acl用法" class="headerlink" title="acl用法"></a>acl用法</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">创建acl策略</span><br><span class="line">nomad acl policy apply &lt;policy_name&gt; &lt;path&gt; </span><br><span class="line">  命令需要两个参数，即策略名称和文件路径 </span><br><span class="line">  -description 设置ACL策略的人类可读描述</span><br><span class="line">删除acl策略</span><br><span class="line">nomad acl policy delete &lt;policy_name&gt;</span><br><span class="line">查看acl策略信息</span><br><span class="line">nomad acl policy info &lt;policy_name&gt;</span><br><span class="line">列出可用acl策略</span><br><span class="line">nomad acl policy list</span><br><span class="line">创建acl令牌</span><br><span class="line">nomad acl token create [options]</span><br><span class="line">  -name：设置ACL令牌的可读名称。</span><br><span class="line">  -type：设置令牌的类型。必须是“客户”（默认）或“管理”之一。</span><br><span class="line">  -global：切换令牌的全局模式。全球代币被复制到所有地区。默认为false。</span><br><span class="line">  -policy：指定与令牌关联的策略。可以多次指定，但仅限客户端类型令牌。</span><br><span class="line">删除acl令牌</span><br><span class="line">nomad acl token delete &lt;token_accessor_id&gt;</span><br><span class="line">查看令牌信息</span><br><span class="line">nomad acl token info &lt;token_accessor_id&gt;</span><br><span class="line">获取当前设置的信息</span><br><span class="line">export NOMAD_TOKEN=&lt;token_accessor_id&gt;</span><br><span class="line">nomad acl token self</span><br><span class="line">令牌更新</span><br><span class="line">nomad acl token update [options] &lt;token_accessor_id&gt;</span><br><span class="line">  命令需要现有令牌的访问者ID</span><br><span class="line">  -name：设置ACL令牌的可读名称。</span><br><span class="line">  -type：设置令牌的类型。必须是“客户”（默认）或“管理”之一。</span><br><span class="line">  -global：切换令牌的全局模式。全球代币被复制到所有地区。默认为false。</span><br><span class="line">  -policy：指定与令牌关联的策略。可以多次指定，但仅限客户端类型令牌。</span><br></pre></td></tr></table></figure>

<h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><p>创建策略文件</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"># vim ui.hcl </span><br><span class="line"># Allow read only access to the default namespace</span><br><span class="line">namespace <span class="string">&quot;default&quot;</span> <span class="punctuation">&#123;</span></span><br><span class="line">  policy = <span class="string">&quot;read&quot;</span></span><br><span class="line">  capabilities = <span class="punctuation">[</span><span class="string">&quot;read-logs&quot;</span><span class="punctuation">,</span> <span class="string">&quot;read-fs&quot;</span><span class="punctuation">,</span> <span class="string">&quot;dispatch-job&quot;</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line">agent <span class="punctuation">&#123;</span></span><br><span class="line">    policy = <span class="string">&quot;read&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line">node <span class="punctuation">&#123;</span></span><br><span class="line">    policy = <span class="string">&quot;read&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line">quota <span class="punctuation">&#123;</span></span><br><span class="line">    policy = <span class="string">&quot;read&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p>创建acl策略</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">nomad acl policy apply -description <span class="string">&#x27;webui token&#x27;</span> webui ui.hcl</span></span><br><span class="line">Successfully wrote &quot;webui&quot; ACL policy!</span><br></pre></td></tr></table></figure>

<p>创建acl令牌</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">nomad acl token create -name=<span class="string">&quot;webui token&quot;</span> -policy=webui</span></span><br><span class="line">Accessor ID  = c0b4f80a-b684-ba4f-0079-b2039c4effea</span><br><span class="line">Secret ID    = c023b2e5-1355-2d45-78e3-7301b8f66542</span><br><span class="line">Name         = webui token</span><br><span class="line">Type         = client</span><br><span class="line">Global       = false</span><br><span class="line">Policies     = [webui]</span><br><span class="line">Create Time  = 2019-03-25 03:13:32.709078228 +0000 UTC</span><br><span class="line">Create Index = 314</span><br><span class="line">Modify Index = 314</span><br></pre></td></tr></table></figure>

<p>更新acl策略</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">nomad acl policy apply webui ui.hcl</span></span><br><span class="line">Successfully wrote &quot;webui&quot; ACL policy!</span><br></pre></td></tr></table></figure>


<p>更新acl令牌</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">nomad acl token update -name=<span class="string">&quot;webui token&quot;</span> -policy=webui c0b4f80a-b684-ba4f-0079-b2039c4effea</span></span><br><span class="line">Accessor ID  = c0b4f80a-b684-ba4f-0079-b2039c4effea</span><br><span class="line">Secret ID    = c023b2e5-1355-2d45-78e3-7301b8f66542</span><br><span class="line">Name         = webui token</span><br><span class="line">Type         = client</span><br><span class="line">Global       = false</span><br><span class="line">Policies     = [webui]</span><br><span class="line">Create Time  = 2019-03-25 03:13:32.709078228 +0000 UTC</span><br><span class="line">Create Index = 314</span><br><span class="line">Modify Index = 510</span><br></pre></td></tr></table></figure>


<h3 id="初始令牌"><a href="#初始令牌" class="headerlink" title="初始令牌"></a>初始令牌</h3><p>创建初始令牌</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">nomad acl bootstrap</span></span><br><span class="line">Accessor ID  = 6eab8174-562c-7a2a-81e8-c819dd6da943</span><br><span class="line">Secret ID    = 38a80e38-4828-4d08-3c42-404ec946d49b</span><br><span class="line">Name         = Bootstrap Token</span><br><span class="line">Type         = management</span><br><span class="line">Global       = true</span><br><span class="line">Policies     = n/a</span><br><span class="line">Create Time  = 2019-01-03 07:40:06.840932047 +0000 UTC</span><br><span class="line">Create Index = 21</span><br><span class="line">Modify Index = 21</span><br></pre></td></tr></table></figure>

<p>更新初始令牌</p>
<p>需要去集群的leader更新</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">nomad acl bootstrap</span></span><br><span class="line">Error bootstrapping: Unexpected response code: 500 (Invalid bootstrap reset index (specified 7, reset index: 21))</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">echo</span> 21 &gt; /opt/nomad/server_data/server/acl-bootstrap-reset</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">nomad acl bootstrap</span></span><br><span class="line">Accessor ID  = 5c18f31f-882a-a6c1-a0dd-f7edb2d79146</span><br><span class="line">Secret ID    = ba4ad1d5-3926-0e71-47bc-050bd6677b69</span><br><span class="line">Name         = Bootstrap Token</span><br><span class="line">Type         = management</span><br><span class="line">Global       = true</span><br><span class="line">Policies     = n/a</span><br><span class="line">Create Time  = 2019-01-03 07:51:25.797913677 +0000 UTC</span><br><span class="line">Create Index = 33</span><br><span class="line">Modify Index = 33</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>nomad</category>
      </categories>
      <tags>
        <tag>nomad</tag>
      </tags>
  </entry>
  <entry>
    <title>nomad容器编排</title>
    <url>/2019/01/03/nomad%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92/</url>
    <content><![CDATA[<h2 id="nomad简介"><a href="#nomad简介" class="headerlink" title="nomad简介"></a>nomad简介</h2><p>Nomad是一个管理机器集群并在集群上运行应用程序的工具。</p>
<p>Nomad的特点：</p>
<p>支持docker,Nomad的job可以使用docker驱动将应用部署到集群中</p>
<p>Nomad安装在linux中仅需单一的二进制文件，不需要其他服务协调，Nomad将资源管理器和调度程序的功能集成到一个系统中</p>
 <span id="more"></span>

<p>多数据中心，可以跨数据中心调度</p>
<p>分布式高可用，支持多种驱动程序（Docker、VMS、Java）运行job，支持多种系统（Linux、Windows、BSD、OSX</p>
<h2 id="nomad安装（集群）"><a href="#nomad安装（集群）" class="headerlink" title="nomad安装（集群）"></a>nomad安装（集群）</h2><p>因资源限制，只能2个server，2个client节点</p>
<p>必要条件：安装consul（略）</p>
<p>nomad:</p>
<p>每个区域预计有三个或五个服务端。这在失败和性能的可用性之间取得平衡，因为随着更多服务端的添加，共识逐渐变慢。但是，每个区域的客户端数量没有限制。</p>
<p>客户端配置为与其区域服务端通信，并使用远程过程调用（RPC）进行通信以进行自我注册，发送实时心跳，等待新分配以及更新分配状态。客户端向服务端注册以提供可用资源，属性和已安装的驱动程序。服务端使用此信息来安排决策并创建分配以将工作分配给客户端。</p>
<p>consul:</p>
<p>在每个数据中心内，我们都有客户端和服务端的混合体。预计有三到五台服务端。这在失败和性能的可用性之间取得平衡，因为随着更多机器的添加，共识逐渐变慢。但是，客户端数量没有限制，可以轻松扩展到数千或数万</p>
<h3 id="下载nomad"><a href="#下载nomad" class="headerlink" title="下载nomad"></a>下载nomad</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget https://releases.hashicorp.com/nomad/0.8.1/nomad_0.8.1_linux_amd64.zip</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">unzip nomad_0.8.1_linux_amd64.zip</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mv</span> nomad /usr/bin</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mkdir</span> -p /opt/nomad/&#123;server_data,client_data,conf&#125;</span></span><br></pre></td></tr></table></figure>


<h3 id="编写server配置文件"><a href="#编写server配置文件" class="headerlink" title="编写server配置文件"></a>编写server配置文件</h3><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"># vim server.hcl</span><br><span class="line">log_level = <span class="string">&quot;DEBUG&quot;</span></span><br><span class="line">datacenter= <span class="string">&quot;testkydhuabei2&quot;</span>         #数据中心</span><br><span class="line">bind_addr = <span class="string">&quot;0.0.0.0&quot;</span></span><br><span class="line">data_dir = <span class="string">&quot;/opt/nomad/server_data&quot;</span>  #data目录</span><br><span class="line">name = <span class="string">&quot;master1&quot;</span></span><br><span class="line">advertise <span class="punctuation">&#123;</span></span><br><span class="line">  http = <span class="string">&quot;172.17.252.105:4646&quot;</span>       #web访问地址</span><br><span class="line">  rpc = <span class="string">&quot;172.17.252.105:4647&quot;</span></span><br><span class="line">  serf = <span class="string">&quot;172.17.252.105:4648&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line">server <span class="punctuation">&#123;</span></span><br><span class="line">  enabled = <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">  # Self-elect<span class="punctuation">,</span> should be <span class="number">3</span> or <span class="number">5</span> for production</span><br><span class="line">  bootstrap_expect = <span class="number">2</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"># vim server.hcl</span><br><span class="line">log_level = <span class="string">&quot;DEBUG&quot;</span></span><br><span class="line">datacenter= <span class="string">&quot;testkydhuabei2&quot;</span></span><br><span class="line">bind_addr = <span class="string">&quot;0.0.0.0&quot;</span></span><br><span class="line">data_dir = <span class="string">&quot;/opt/nomad/server_data&quot;</span></span><br><span class="line">name = <span class="string">&quot;master2&quot;</span></span><br><span class="line">advertise <span class="punctuation">&#123;</span></span><br><span class="line">  http = <span class="string">&quot;172.17.252.104:4646&quot;</span></span><br><span class="line">  rpc = <span class="string">&quot;172.17.252.104:4647&quot;</span></span><br><span class="line">  serf = <span class="string">&quot;172.17.252.104:4648&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line">server <span class="punctuation">&#123;</span></span><br><span class="line">  enabled = <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">  # Self-elect<span class="punctuation">,</span> should be <span class="number">3</span> or <span class="number">5</span> for production</span><br><span class="line">  bootstrap_expect = <span class="number">2</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>


<h3 id="启动server服务"><a href="#启动server服务" class="headerlink" title="启动server服务"></a>启动server服务</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">nohup</span> nomad agent -config=/opt/nomad/conf/server.hcl &amp;</span></span><br></pre></td></tr></table></figure>


<p>查看consul是否抓取到</p>
<p><img src="/image/15465230071.png"></p>
<h3 id="打开web界面"><a href="#打开web界面" class="headerlink" title="打开web界面"></a>打开web界面</h3><p><img src="/image/15465230311.png"></p>
<h3 id="编写client配置文件"><a href="#编写client配置文件" class="headerlink" title="编写client配置文件"></a>编写client配置文件</h3><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"># vim client.hcl</span><br><span class="line">log_level = <span class="string">&quot;DEBUG&quot;</span></span><br><span class="line">data_dir = <span class="string">&quot;/opt/nomad/client_data&quot;</span></span><br><span class="line">datacenter= <span class="string">&quot;testkydhuabei2&quot;</span></span><br><span class="line">name= <span class="string">&quot;client1&quot;</span></span><br><span class="line">client <span class="punctuation">&#123;</span></span><br><span class="line">  enabled = <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">  servers = <span class="punctuation">[</span><span class="string">&quot;172.17.252.105:4647&quot;</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line">ports <span class="punctuation">&#123;</span></span><br><span class="line">  http = <span class="number">5656</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"># vim client.hcl</span><br><span class="line">log_level = <span class="string">&quot;DEBUG&quot;</span></span><br><span class="line">data_dir = <span class="string">&quot;/opt/nomad/client_data&quot;</span></span><br><span class="line">datacenter= <span class="string">&quot;testkydhuabei2&quot;</span></span><br><span class="line">name= <span class="string">&quot;client2&quot;</span></span><br><span class="line">client <span class="punctuation">&#123;</span></span><br><span class="line">  enabled = <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">  servers = <span class="punctuation">[</span><span class="string">&quot;172.17.252.104:4647&quot;</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line">ports <span class="punctuation">&#123;</span></span><br><span class="line">  http = <span class="number">5656</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>


<h3 id="启动client服务"><a href="#启动client服务" class="headerlink" title="启动client服务"></a>启动client服务</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">nohup</span> nomad agent -config=/opt/nomad/conf/client.hcl &amp;</span></span><br></pre></td></tr></table></figure>


<h3 id="查看web"><a href="#查看web" class="headerlink" title="查看web"></a>查看web</h3><p><img src="/image/15465230501.png"> </p>
]]></content>
      <categories>
        <category>nomad</category>
      </categories>
      <tags>
        <tag>nomad</tag>
      </tags>
  </entry>
  <entry>
    <title>nomad简单使用</title>
    <url>/2019/01/04/nomad%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[ <span id="more"></span>

<h2 id="创建job"><a href="#创建job" class="headerlink" title="创建job"></a>创建job</h2><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"># vim auth.nomad</span><br><span class="line">job <span class="string">&quot;auth&quot;</span> <span class="punctuation">&#123;</span>                        #job名称</span><br><span class="line">  datacenters = <span class="punctuation">[</span><span class="string">&quot;testkydhuabei2&quot;</span><span class="punctuation">]</span>  #设置数据中心（consul）</span><br><span class="line">  type = <span class="string">&quot;service&quot;</span>                  #设置该job类型是服务，主要用于conusl的服务注册，不写这条，该job不会注册服务到consul</span><br><span class="line">  update <span class="punctuation">&#123;</span>                          #更新模块</span><br><span class="line">    max_parallel = <span class="number">1</span>                #同时更新任务数量</span><br><span class="line">    min_healthy_time = <span class="string">&quot;10s&quot;</span>        #分配必须处于健康状态的最低时间，然后标记为正常状态</span><br><span class="line">    healthy_deadline = <span class="string">&quot;3m&quot;</span>         #标记为健康的截止日期，之后分配自动转换为不健康状态</span><br><span class="line">    auto_revert = <span class="literal"><span class="keyword">true</span></span>              #指定job在部署失败时是否应自动恢复到上一个稳定job</span><br><span class="line">    canary = <span class="number">1</span>                      #金丝雀</span><br><span class="line">    stagger = <span class="string">&quot;30s&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"> </span><br><span class="line">  group <span class="string">&quot;auth&quot;</span> <span class="punctuation">&#123;</span>                 #组名称</span><br><span class="line">      count = <span class="number">2</span>                  #启动服务数量</span><br><span class="line">      restart <span class="punctuation">&#123;</span>                  #失败重启模块</span><br><span class="line">        attempts = <span class="number">10</span>            #时间间隔内重启次数</span><br><span class="line">        interval = <span class="string">&quot;5m&quot;</span>          #在服务开始运行的持续时间内，如果一直出现故障，则会由mode控制。mode是控制任务在一个时间间隔内失败多次的行为</span><br><span class="line">        delay = <span class="string">&quot;25s&quot;</span>            #重新启动任务之前要等待的时间</span><br><span class="line">        mode = <span class="string">&quot;delay&quot;</span>           #指示调度程序延迟下一次重启，直到下一次重启成功</span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    task <span class="string">&quot;auth&quot;</span> <span class="punctuation">&#123;</span></span><br><span class="line">      driver = <span class="string">&quot;docker&quot;</span>                                  #使用docker驱动</span><br><span class="line">        config <span class="punctuation">&#123;</span></span><br><span class="line">            network_mode = <span class="string">&quot;host&quot;</span>                        #网络模式是host</span><br><span class="line">            image = <span class="string">&quot;IP/kyd/ace-auth-server:latest&quot;</span>      #需拉取的镜像</span><br><span class="line">            args = <span class="punctuation">[</span>                                     #容器运行时的命令参数</span><br><span class="line">               <span class="string">&quot;--spring.profiles.active=prd&quot;</span><span class="punctuation">]</span>           #生产环境</span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          volumes = <span class="punctuation">[</span>                                    #挂载参数</span><br><span class="line">             <span class="string">&quot;/etc/localtime:/etc/localtime&quot;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">            auth <span class="punctuation">&#123;</span>            #仓库的登陆设置</span><br><span class="line">              username = <span class="string">&quot;user&quot;</span></span><br><span class="line">              password = <span class="string">&quot;password&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">        resources <span class="punctuation">&#123;</span>           #配置服务资源</span><br><span class="line">            cpu    = <span class="number">1000</span>     #限制服务cpu</span><br><span class="line">            memory = <span class="number">2048</span>     #限制服务内存</span><br><span class="line">            network <span class="punctuation">&#123;</span></span><br><span class="line">                mbits = <span class="number">10</span>    #限制<span class="number">10</span>m带宽</span><br><span class="line">          port <span class="string">&quot;http&quot;</span> <span class="punctuation">&#123;</span></span><br><span class="line">              static = <span class="number">1777</span>   #固定静态port</span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">     <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h2 id="nomad常用命令"><a href="#nomad常用命令" class="headerlink" title="nomad常用命令"></a>nomad常用命令</h2><p>nomad node status                      #查看集群node状态</p>
<p>nomad run auth.nomad             #启动job，创建容器</p>
<p>nomad stop auth                          #停止job（包括容器）</p>
<p>nomad status auth                       #查看job状态</p>
<p>nomad job history auth              #查看job历史版本</p>
<p>nomad job promote auth           #金丝雀更新job</p>
<p>nomad job plan auth.nomad     #试运行你计划修改或增加的是否正常，正常的话会返回一个索引号，根据索引号更新job</p>
<p>nomad status ID                          #查看节点下服务状态</p>
<p>nomad alloc-status ID                #查看job的分配情况</p>
<p>nomad logs -tail -f ID                 #查看服务日志 </p>
]]></content>
      <categories>
        <category>nomad</category>
      </categories>
      <tags>
        <tag>nomad</tag>
      </tags>
  </entry>
  <entry>
    <title>nomad访问控制</title>
    <url>/2019/03/25/nomad%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/</url>
    <content><![CDATA[<h3 id="acl三大组件"><a href="#acl三大组件" class="headerlink" title="acl三大组件"></a>acl三大组件</h3><p><img src="/image/1553499074-15534990531.png"> acl策略 </p>
 <span id="more"></span>

<p>ACL策略是一组命名规则。每个策略都必须具有唯一名称，可选说明和规则集。客户端ACL令牌可以与多个策略相关联，并且如果任何关联策略授予该功能，则允许请求。管理令牌不能与策略关联，因为它们被授予所有功能 acl令牌 ACL令牌用于验证请求并确定调用者是否有权执行操作。每个ACL令牌都有一个公共访问者ID，用于标识令牌，一个用于向Nomad发出请求的机密ID，以及一个可选的人类可读名称。所有client类型令牌都与一个或多个策略相关联，并且如果任何关联策略允许，则可以执行操作 能力（Capabilities） 功能是可以执行的一组操作。这包括列出作业，提交作业，查询节点等。management令牌被授予所有功能，而client令牌通过ACL策略被授予特定功能。下面的规则规范中讨论了完整的功能集</p>
<h3 id="构建策略规则的acl规则"><a href="#构建策略规则的acl规则" class="headerlink" title="构建策略规则的acl规则"></a>构建策略规则的acl规则</h3><p>namespace   命名空间与作业相关的操作 agent Agent   API中的实用程序操作 node               节点级目录操作 operator         Operator API中的集群级操作 quota               配额规范相关操作</p>
<h3 id="策略规范"><a href="#策略规范" class="headerlink" title="策略规范"></a>策略规范</h3><p>read：允许读取资源但不修改资源 write：允许读取和修改资源 deny：不允许读取或修改资源。当多个策略与令牌关联时，拒绝优先 HCL格式的规范</p>
<pre><code>namespace &quot;default&quot; &#123;
    policy = &quot;read&quot;
&#125;

agent &#123;
    policy = &quot;read&quot;
&#125;

node &#123;
    policy = &quot;read&quot;
&#125;

quota &#123;
    policy = &quot;read&quot;
&#125;
</code></pre>
<h3 id="Namespace规则"><a href="#Namespace规则" class="headerlink" title="Namespace规则"></a>Namespace规则</h3><p>capabilities精细列表 deny                          当多个策略与令牌关联时，拒绝将优先并阻止任何功能。 list-jobs                    允许列出作业并查看粗粒状态。 read-job                   允许检查作业并查看细粒状态。 submit-job              允许提交或修改作业。 dispatch-job           允许分派作业 read-logs                 允许查看与作业关联的日志。 read-fs                     允许查看关联的分配文件系统。 sentinel-override  允许覆盖软强制策略 功能简写 deny policy   [“deny”] read policy    [“list-jobs”, “read-job”] write policy   [“list-jobs”, “read-job”, “submit-job”, “read-logs”, “read-fs”, “dispatch-job”] 提供策略简写和功能列表时，将合并功能：</p>
<pre><code>namespace &quot;default&quot; &#123;
  policy = &quot;read&quot;
  capabilities = [&quot;read-logs&quot;, &quot;read-fs&quot;, &quot;dispatch-job&quot;]
&#125;
</code></pre>
<h3 id="node规则"><a href="#node规则" class="headerlink" title="node规则"></a>node规则</h3><p>该node策略控制对Node API的访问，例如列出节点或触发节点消耗。使用node密钥为所有节点指定节点规则：</p>
<pre><code>node &#123;
    policy = &quot;read&quot;
&#125;
</code></pre>
<p>每个规则集只允许一个节点策略，其值设置为其中一个策略处置</p>
<h3 id="agent规则"><a href="#agent规则" class="headerlink" title="agent规则"></a>agent规则</h3><p>该agent策略控制对Agent API中的实用程序操作的访问，例如join和leave。使用agent密钥为所有代理指定代理规则：</p>
<pre><code>agent &#123;
    policy = &quot;write&quot;
&#125;
</code></pre>
<p>每个规则集只允许一个代理策略，其值设置为其中一个策略处置</p>
<h3 id="operator规则"><a href="#operator规则" class="headerlink" title="operator规则"></a>operator规则</h3><p>该operator策略控制对Operator API的访问。Operator规则如下：</p>
<pre><code>operator &#123;
    policy = &quot;read&quot;
&#125;
</code></pre>
<p>每个规则集只允许一个集群操作策略，其值设置为其中一个策略处置。在上面的示例中，令牌可用于查询操作以进行诊断，但不进行任何更改 </p>
]]></content>
      <categories>
        <category>nomad</category>
      </categories>
      <tags>
        <tag>nomad</tag>
      </tags>
  </entry>
  <entry>
    <title>nomad集群配置TLS通信</title>
    <url>/2019/01/04/nomad%E9%9B%86%E7%BE%A4%E9%85%8D%E7%BD%AETLS%E9%80%9A%E4%BF%A1/</url>
    <content><![CDATA[<h3 id="安装cfssl"><a href="#安装cfssl" class="headerlink" title="安装cfssl"></a>安装cfssl</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget https://pkg.cfssl.org/R1.2/cfssl_linux-amd64</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">chmod</span> +x cfssl_linux-amd64 cfssljson_linux-amd64</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mv</span> cfssl_linux-amd64 /usr/local/bin/cfssl</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mv</span> cfssljson_linux-amd64 /usr/local/bin/cfssljson</span></span><br></pre></td></tr></table></figure>

 <span id="more"></span>

<h3 id="创建CA证书与密钥"><a href="#创建CA证书与密钥" class="headerlink" title="创建CA证书与密钥"></a>创建CA证书与密钥</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">cfssl print-defaults csr | cfssl gencert -initca - | cfssljson -bare nomad-ca</span></span><br><span class="line">2019/01/02 16:20:41 [INFO] generating a new CA key and certificate from CSR</span><br><span class="line">2019/01/02 16:20:42 [INFO] generate received request</span><br><span class="line">2019/01/02 16:20:42 [INFO] received CSR</span><br><span class="line">2019/01/02 16:20:42 [INFO] generating key: ecdsa-256</span><br><span class="line">2019/01/02 16:20:46 [INFO] encoded CSR</span><br><span class="line">2019/01/02 16:20:46 [INFO] signed certificate with serial number 37827941229344468151739322322345060849519453185</span><br></pre></td></tr></table></figure>

<h3 id="添加证书过期时间"><a href="#添加证书过期时间" class="headerlink" title="添加证书过期时间"></a>添加证书过期时间</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim cfssl.json</span></span><br><span class="line">&#123;</span><br><span class="line">  &quot;signing&quot;: &#123;</span><br><span class="line">    &quot;default&quot;: &#123;</span><br><span class="line">      &quot;expiry&quot;: &quot;87600h&quot;,</span><br><span class="line">      &quot;usages&quot;: [</span><br><span class="line">        &quot;signing&quot;,</span><br><span class="line">        &quot;key encipherment&quot;,</span><br><span class="line">        &quot;server auth&quot;,</span><br><span class="line">        &quot;client auth&quot;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h3 id="创建节点证书"><a href="#创建节点证书" class="headerlink" title="创建节点证书"></a>创建节点证书</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">echo</span> <span class="string">&#x27;&#123;&#125;&#x27;</span> | cfssl gencert -ca=nomad-ca.pem -ca-key=nomad-ca-key.pem -config=cfssl.json \</span></span><br><span class="line"><span class="language-bash">    -hostname=<span class="string">&quot;server.global.nomad,localhost,127.0.0.1&quot;</span> - | cfssljson -bare server</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">echo</span> <span class="string">&#x27;&#123;&#125;&#x27;</span> | cfssl gencert -ca=nomad-ca.pem -ca-key=nomad-ca-key.pem -config=cfssl.json \</span></span><br><span class="line"><span class="language-bash">    -hostname=<span class="string">&quot;client.global.nomad,localhost,127.0.0.1&quot;</span> - | cfssljson -bare client</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">echo</span> <span class="string">&#x27;&#123;&#125;&#x27;</span> | cfssl gencert -ca=nomad-ca.pem -ca-key=nomad-ca-key.pem -profile=client \</span></span><br><span class="line"><span class="language-bash">    - | cfssljson -bare cli</span></span><br></pre></td></tr></table></figure>

<h3 id="创建server配置文件"><a href="#创建server配置文件" class="headerlink" title="创建server配置文件"></a>创建server配置文件</h3><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"># vim server.hcl</span><br><span class="line">log_level = <span class="string">&quot;DEBUG&quot;</span></span><br><span class="line">datacenter= <span class="string">&quot;testkydhuabei2&quot;</span></span><br><span class="line">data_dir = <span class="string">&quot;/opt/nomad/server_data&quot;</span></span><br><span class="line">name = <span class="string">&quot;master1&quot;</span></span><br><span class="line">server <span class="punctuation">&#123;</span></span><br><span class="line">  enabled = <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">  bootstrap_expect = <span class="number">2</span></span><br><span class="line">  #Encrypt gossip communication</span><br><span class="line">  encrypt = <span class="string">&quot;cg8StVXbQJ0gPvMd9o7yrg==&quot;</span>    </span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line">tls <span class="punctuation">&#123;</span></span><br><span class="line">  http = <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">  rpc  = <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">  ca_file   = <span class="string">&quot;nomad-ca.pem&quot;</span></span><br><span class="line">  cert_file = <span class="string">&quot;server.pem&quot;</span></span><br><span class="line">  key_file  = <span class="string">&quot;server-key.pem&quot;</span></span><br><span class="line">  verify_server_hostname = <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">  verify_https_client    = <span class="literal"><span class="keyword">false</span></span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>


<h3 id="配置client-hcl配置文件"><a href="#配置client-hcl配置文件" class="headerlink" title="配置client.hcl配置文件"></a>配置client.hcl配置文件</h3><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"># vim client.hcl log_level = <span class="string">&quot;DEBUG&quot;</span></span><br><span class="line">data_dir = <span class="string">&quot;/opt/nomad/client_data&quot;</span></span><br><span class="line">datacenter= <span class="string">&quot;testkydhuabei2&quot;</span></span><br><span class="line">name= <span class="string">&quot;client1&quot;</span></span><br><span class="line">  client <span class="punctuation">&#123;</span></span><br><span class="line">    enabled = <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">    servers = <span class="punctuation">[</span><span class="string">&quot;127.0.0.1:4647&quot;</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line">ports <span class="punctuation">&#123;</span></span><br><span class="line">  http = <span class="number">5656</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line">tls <span class="punctuation">&#123;</span></span><br><span class="line">  http = <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">  rpc  = <span class="literal"><span class="keyword">true</span></span></span><br><span class="line"></span><br><span class="line">  ca_file   = <span class="string">&quot;nomad-ca.pem&quot;</span></span><br><span class="line">  cert_file = <span class="string">&quot;client.pem&quot;</span></span><br><span class="line">  key_file  = <span class="string">&quot;client-key.pem&quot;</span></span><br><span class="line"></span><br><span class="line">  verify_server_hostname = <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">  verify_https_client    = <span class="literal"><span class="keyword">false</span></span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="启动server与client"><a href="#启动server与client" class="headerlink" title="启动server与client"></a>启动server与client</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">nohup</span> nomad agent -config=/opt/nomad/conf/server.hcl &gt;nohup_server.log 2&gt;&amp;1 &amp;</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">nohup</span> nomad agent -config=/opt/nomad/conf/client.hcl &gt;nohup_client.log 2&gt;&amp;1 &amp;</span></span><br></pre></td></tr></table></figure>

<p>添加变量</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /etc/profile</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">nomad</span></span><br><span class="line">export NOMAD_ADDR=https://localhost:4646</span><br><span class="line">export NOMAD_CACERT=/opt/nomad/conf/nomad-ca.pem</span><br><span class="line">export NOMAD_CLIENT_CERT=/opt/nomad/conf/cli.pem</span><br><span class="line">export NOMAD_CLIENT_KEY=/opt/nomad/conf/cli-key.pem</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">source</span> /etc/profile</span></span><br></pre></td></tr></table></figure>

<p>查看node状态</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">nomad node status</span></span><br><span class="line">ID        DC              Name     Class   Drain  Eligibility  Status</span><br><span class="line">ac18e0bd  testkydhuabei2  client1  &lt;none&gt;  false  eligible     ready</span><br><span class="line">3d1fdb9e  testkydhuabei2  client2  &lt;none&gt;  false  eligible     ready</span><br></pre></td></tr></table></figure>

<p>访问UI界面</p>
<p><a href="https://ip:4646/">https://IP:4646</a></p>
<p><a href="https://www.nomadproject.io/guides/security/securing-nomad.html">官网文档</a> </p>
]]></content>
      <categories>
        <category>nomad</category>
      </categories>
      <tags>
        <tag>nomad</tag>
      </tags>
  </entry>
  <entry>
    <title>oss本地挂载</title>
    <url>/2019/01/16/oss%E6%9C%AC%E5%9C%B0%E6%8C%82%E8%BD%BD/</url>
    <content><![CDATA[<p><strong>下载软件</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget http://gosspublic.alicdn.com/ossfs/ossfs_1.80.5_centos7.0_x86_64.rpm</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rpm -ivh ossfs_1.80.5_centos7.0_x86_64.rpm</span></span><br></pre></td></tr></table></figure>
<p><strong>配置文件</strong><br> <span id="more"></span><br>设置bucket name 和 AccessKeyId&#x2F;Secret信息，将其存放在&#x2F;etc&#x2F;passwd-ossfs 文件中。注意这个文件的权限必须正确设置，建议设为640</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">echo</span> my-bucket:my-access-key-id:my-access-key-secret &gt; /etc/passwd-ossfs</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">chmod</span> 640 /etc/passwd-ossfs</span></span><br></pre></td></tr></table></figure>
<p><strong>挂载指定目录</strong></p>
<p>ossfs my-bucket my-mount-point -ourl&#x3D;my-oss-endpoint</p>
<p>示例：</p>
<p>将my-bucket这个bucket挂载到&#x2F;tmp&#x2F;ossfs目录下，AccessKeyId是faint，AccessKeySecret是123，OSS endpoint是<a href="http://oss-cn-hangzhou.aliyuncs.com/">http://oss-cn-hangzhou.aliyuncs.com</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">echo</span> my-bucket:faint:123 &gt; /etc/passwd-ossfs</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">chmod</span> 640 /etc/passwd-ossfs</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mkdir</span> /tmp/ossfs</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ossfs my-bucket /tmp/ossfs -ourl=http://oss-cn-hangzhou.aliyuncs.com</span></span><br></pre></td></tr></table></figure>
<p><strong>卸载bucket</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">fusermount -u /tmp/ossfs</span></span><br></pre></td></tr></table></figure>
<p><strong>开机挂载</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /etc/fstab</span></span><br><span class="line"><span class="meta prompt_">ossfs#</span><span class="language-bash">my-bucket /tmp/ossfs fuse _netdev,url=http://oss-cn-hangzhou.aliyuncs.com,allow_other 0 0</span></span><br></pre></td></tr></table></figure>
<p>其中my-bucket换成自己的,挂载地址默认为&#x2F;tmp&#x2F;ossfs,url修改为自己的,可以用外网地址或者内网地址</p>
<p>保存fstab文件后运行mount命令: mount -a 检查配置有无问题</p>
<p><strong>问题：</strong></p>
<p>使用ossfs上传到OSS的文件Content-Type全是“application&#x2F;octet-stream”是怎么回事？</p>
<p>ossfs 通过查询 <a href="https://www.wqblogs.com:4443/wp-content/uploads/mime.types">&#x2F;etc&#x2F;mime.types</a> 中的内容来确定文件的 Content-Type ，请检查这个文件是否存在，如果不存在，则需要添加：</p>
<p>对于centos可以通过 yum install mailcap 来添加</p>
<p>也可以手动添加，每种格式一行，每行格式为： application&#x2F;javascript js</p>
<p>注：已挂载目录须重新挂载生效mime.types文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">fusermount -zu /tmp/ossfs</span>      </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ossfs my-bucket /tmp/ossfs -ourl=http://oss-cn-hangzhou.aliyuncs.com</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>ecs</category>
      </categories>
  </entry>
  <entry>
    <title>playbook变量使用</title>
    <url>/2019/05/27/playbook%E5%8F%98%E9%87%8F%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<ol>
<li>在剧本里编写变量，ansible命令赋值</li>
</ol>
 <span id="more"></span>
<pre><code><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim hwq.yml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">host:</span> <span class="string">all</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">install</span> <span class="string">package</span></span><br><span class="line">      <span class="attr">yum:</span> <span class="string">name=&#123;&#123;package1&#125;&#125;</span></span><br><span class="line">  <span class="attr">yum:</span> <span class="string">name=&#123;&#123;package2&#125;&#125;</span></span><br></pre></td></tr></table></figure>
</code></pre>
<ol start="2">
<li><p>直接在palybook里赋值</p>
 <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim hwq.yml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">host:</span> <span class="string">all</span></span><br><span class="line">  <span class="attr">vars:</span></span><br><span class="line">     <span class="bullet">-</span> <span class="attr">package1:</span> <span class="string">httpd</span></span><br><span class="line">     <span class="bullet">-</span> <span class="attr">package2:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">     <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">install</span> <span class="string">package</span></span><br><span class="line">        <span class="attr">yum:</span> <span class="string">name=&#123;&#123;package1&#125;&#125;</span></span><br><span class="line">        <span class="attr">yum:</span> <span class="string">name=&#123;&#123;package2&#125;&#125;</span></span><br></pre></td></tr></table></figure>

</li>
<li><p>在独立变量yml文件中定义（使用变量文件）</p>
 <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim vars.yml</span></span><br><span class="line"><span class="attr">var1:</span> <span class="string">httpd</span></span><br><span class="line"><span class="attr">var2:</span> <span class="string">vsftpd</span></span><br><span class="line"><span class="comment"># vim hwq.yml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.11</span></span><br><span class="line">  <span class="attr">remote_user:</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">vars_files:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">vars.yml</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">installed</span> <span class="string">package</span></span><br><span class="line">      <span class="attr">yum:</span> <span class="string">name=&#123;&#123;var1&#125;&#125;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">create</span> <span class="string">file</span></span><br><span class="line">      <span class="attr">file:</span> <span class="string">name=/data/&#123;&#123;var2&#125;&#125;.log</span> <span class="string">state=touch</span></span><br></pre></td></tr></table></figure>

</li>
<li><p>在主机列表里设置变量</p>
 <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim /etc/ansible/hosts</span></span><br><span class="line">[<span class="string">webservice</span>] <span class="comment">#主机私有变量</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.1</span><span class="number">.11</span>   <span class="string">http_port=8080</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.1</span><span class="number">.12</span> <span class="string">http_port=9090</span></span><br><span class="line">[<span class="string">webservice:vars</span>] <span class="comment">#webservice公用变量</span></span><br><span class="line"><span class="string">http_port=80</span></span><br><span class="line"><span class="comment"># vim hwq.yml</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">create</span> <span class="string">port</span> <span class="string">txt</span></span><br><span class="line">  <span class="attr">file:</span> <span class="string">name=/data/&#123;&#123;http_port&#125;&#125;.txt</span> <span class="string">state=touch</span></span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>ansible</category>
      </categories>
      <tags>
        <tag>ansible</tag>
      </tags>
  </entry>
  <entry>
    <title>postgresql生产事故</title>
    <url>/2022/11/27/postgresql%E7%94%9F%E4%BA%A7%E4%BA%8B%E6%95%85/</url>
    <content><![CDATA[<h2 id="postgresql生产事故"><a href="#postgresql生产事故" class="headerlink" title="postgresql生产事故"></a>postgresql生产事故</h2><h3 id="事故概要"><a href="#事故概要" class="headerlink" title="事故概要"></a>事故概要</h3><p>环境：</p>
<ul>
<li><p>底层环境为：K8s + Docker</p>
</li>
<li><p>部署方式：Operator + StatefulSet</p>
</li>
</ul>
<p>现象：</p>
<p>通过远程工具方式连接<code>pooler</code>：<code>ERROR: client_login_timeout(server down) ERROR: SSL required</code></p>
<p>通过master终端连接 <code>psql -hxxxx -Upostgres -dpostgres</code>：发现执行夯住</p>
<p>查看pooler日志： <code>postgres/postgres@xxxx:49696 pooler error: pgbouncer cannot connect to server</code></p>
<h3 id="排查过程"><a href="#排查过程" class="headerlink" title="排查过程"></a>排查过程</h3><ul>
<li>测试通过pooler pod终端连接</li>
</ul>
<p>通过客户端使用pooler地址链接发现超时，然后通过终端方式连接master，发现夯住，排除了pod 网络及端口。</p>
<ul>
<li>测试通过master pod终端连接</li>
</ul>
<p>通过终端方式直联master，发现夯住，然后通过top命令发现cpu负载500以上，执行<code>patronictl list</code>查看集群状态也是夯住</p>
<ul>
<li>通过slave pod终端查看集群状态<br>Patroni是一个基于Python的开源PostgreSQL模板和控制器，运行高可用性Postgres集群。可以通过patronictl查看集群状态、重启加载集群、移除集群、切换Leader等操作。</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">patronictl list</span></span><br><span class="line">+ Cluster: gismip-postgresql (7026907782262050884) -------+----+-----------+-----------------+</span><br><span class="line">| Member | Host | Role | State | TL | Lag in MB | Pending restart |</span><br><span class="line">+---------------------+---------------+---------+---------+----+-----------+-----------------+</span><br><span class="line">| gismip-postgresql-0 | 172.28.188.75 | Leader | running | 40 | 0 | * |</span><br><span class="line">| gismip-postgresql-1 | 172.28.27.38 | Replica | running | 40 | 0| * |</span><br><span class="line">| gismip-postgresql-2 | 172.28.0.22 | Replica | running | 27 | 39587 | * |</span><br><span class="line">+---------------------+---------------+---------+---------+----+-----------+-----------------+</span><br></pre></td></tr></table></figure>

<p>发现TL(timeline 时间线)不一致并且postgresql-2副本有小4个GB延迟</p>
<h3 id="解决过程"><a href="#解决过程" class="headerlink" title="解决过程"></a>解决过程</h3><ul>
<li>手动干预主从，切换主从</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">patronictl switchover</span></span><br><span class="line">Master [gismip-postgresql-0]: # 回车，确认当前leader</span><br><span class="line">Candidate [&#x27;gismip-postgresql-1&#x27;, &#x27;gismip-postgresql-2&#x27;] []: gismip-postgresql-1 # 手动配置主，把slave写入 回车</span><br><span class="line">When should the switchover take place (e.g. 2022-11-27T20:37 ) [now]: # 回车切换</span><br></pre></td></tr></table></figure>

<ul>
<li>初始化postgresql-2节点,一般有延迟或者副本异常运行时，可以使用此方法初始化节点信息以重新加入集群</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">patronictl reinit gismip-postgresql gismip-postgresql-2</span></span><br><span class="line">+ Cluster: gismip-postgresql (7026907782262050884) -------+----+-----------+-----------------+</span><br><span class="line">| Member | Host | Role | State | TL | Lag in MB | Pending restart |</span><br><span class="line">+---------------------+---------------+---------+---------+----+-----------+-----------------+</span><br><span class="line">| gismip-postgresql-0 | 172.28.188.75 | Replica | running | 40 | 0 | * |</span><br><span class="line">| gismip-postgresql-1 | 172.28.27.38 | Leader | running | 40 | | * |</span><br><span class="line">| gismip-postgresql-2 | 172.28.0.22 | Replica | running | 27 | 39587 | * |</span><br><span class="line">+---------------------+---------------+---------+---------+----+-----------+-----------------+</span><br><span class="line">Are you sure you want to reinitialize members gismip-postgresql-2? [y/N]: # 输入Y 确认重新初始化数据</span><br></pre></td></tr></table></figure>

<ul>
<li>查看集群状态，集群已正常</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">patronictl list</span></span><br><span class="line">+ Cluster: gismip-postgresql (7026907782262050884) -------+----+-----------+-----------------+</span><br><span class="line">| Member              |      Host     |   Role  |  State  | TL | Lag in MB | Pending restart |</span><br><span class="line">+---------------------+---------------+---------+---------+----+-----------+-----------------+</span><br><span class="line">| gismip-postgresql-0 | 172.28.188.75 | Replica | running | 40 |         0 |        *        |</span><br><span class="line">| gismip-postgresql-1 |  172.28.27.38 |  Leader | running | 40 |           |        *        |</span><br><span class="line">| gismip-postgresql-2 |  172.28.0.22  | Replica | running | 40 |         0 |        *        |</span><br><span class="line">+---------------------+---------------+---------+---------+----+-----------+-----------------+</span><br></pre></td></tr></table></figure>












]]></content>
      <categories>
        <category>Kubernetes</category>
        <category>postgresql</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
        <tag>postgresql</tag>
      </tags>
  </entry>
  <entry>
    <title>prometheus监控</title>
    <url>/2020/04/09/prometheus%E7%9B%91%E6%8E%A7/</url>
    <content><![CDATA[<h3 id="监控项种类"><a href="#监控项种类" class="headerlink" title="监控项种类"></a>监控项种类</h3><p>一般可分为 : 业务级别监控 &#x2F; 系统级别监控 &#x2F; 网络监控 &#x2F; 程序代码监控&#x2F; 日志监控 &#x2F; 用户行为分析监控&#x2F; 其他种类监控</p>
<p>这里给出几个例子</p>
<p>  例如:</p>
<p>  * 业务监控 可以包含 用户访问QPS，DAU日活，访问状态(http code)， 业务接又(登陆，注册，聊天，上传，留言，短信，搜索)，产品转化率，充值额度，用户投诉 等等这些很宏观的概念(上层)</p>
<p>  * 系统监控 主要是跟操作系统相关的 基本监控项 CPU&#x2F; 内存 &#x2F; 硬盘 &#x2F; IO &#x2F; TCP链接 &#x2F; 流量 等等 (zabbix, prometheus)</p>
<p>  * 网络监控 (IDC)对网络状态的监控(交换机，路由器，防火墙，VPN) 互联网公司必不可少，但是很多时候又被忽略 例如:内网之间(物理内网，逻辑内网) 外网丢包率、延迟、等等</p>
<p>  * 日志监控 监控中的重头戏(ELK)，往往单独设计和搭建，全部种类的日志都有需要采集 (syslog, soft, 网络设备，用户行为)</p>
<p>  * 程序监控 一般需要和开发人员配合，程序中嵌入各种接口直接获取数据或者特质的日志格式</p>
<h3 id="prometheus核心组件"><a href="#prometheus核心组件" class="headerlink" title="prometheus核心组件"></a>prometheus核心组件</h3><p><img src="/image/prometheus.jpg" alt="prometheus"></p>
<p>• <strong>Prometheus Server</strong>是Prometheus组件中的核心部分，负责实现对监控数据的获取，存储以及查询。</p>
<p>• <strong>AlertManager</strong>：即Prometheus体系中的告警处理中心。</p>
<p>• <strong>Pushgateway</strong>：一个支持短暂工作的推送网关  </p>
<p>  由于Prometheus数据采集基于Pull模型进行设计，因此在网络环境的配置上必须要让Prometheus Server能够直接与Exporter进行通信。 当这种网络需求无法直接满足时，就可以利用PushGateway来进行中转。可以通过PushGateway将内部网络的监控数据主动Push到Gateway当中。而Prometheus Server则可以采用同样Pull的方式从PushGateway中获取到监控数据。</p>
<p>• <strong>Exporters</strong>：用于暴露已有的第三方服务的 metrics 给 Prometheus</p>
<h3 id="prometheus特点"><a href="#prometheus特点" class="headerlink" title="prometheus特点"></a>prometheus特点</h3><ul>
<li><p>一个多维数据模型，其中包含通过度量标准名称和键&#x2F;值对标识的时间序列数据</p>
</li>
<li><p>PromQL，一种灵活的查询语言 </p>
</li>
<li><p>不依赖分布式存储；单服务器节点是自治的</p>
</li>
<li><p>时间序列收集通过http协议，使用 pull 模式拉取数据，简单易懂</p>
</li>
<li><p>通过服务发现或静态配置发现目标</p>
</li>
<li><p>支持多种统计数据模型，图形化友好</p>
</li>
</ul>
<h3 id="优点与不足"><a href="#优点与不足" class="headerlink" title="优点与不足"></a>优点与不足</h3><p>优点<br>• 更适合云环境的监控，尤其对k8s有着更好的支持<br>• 监控数据存储在基于时间序列的数据库内，便于对已有的数据进行新的聚合<br>• 监控数据的精细程度 绝对的第一 可以精确到 1~5秒的采集精度<br>• 周边插件很丰富 exporter 大多数都不需要自己开发了<br>• 本身基于数学计算模型，大量的实用函数可以实现很复杂规则的业务逻辑监控(例如QPS的曲线弯曲 凸起 下跌的 比例等等模糊概念)<br>• 本身是开源的，更新速度快，bug修复快。支持N多种语言做本身和插件的二次开发</p>
<p>一些不足的地方<br>• 自身界面相对较弱，很多配置需要修改配置文件，但可以藉由grafana出图<br>• 学习成本太大，尤其是其独有的数学命令行<br>• 对磁盘资源也是耗费的较大，这个具体要看监控的集群量和监控项的多少和保存时间的长短</p>
<h3 id="工作流程"><a href="#工作流程" class="headerlink" title="工作流程"></a>工作流程</h3><p>通过exporters从数据源主动拉取数据（metrics），保存到时序数据库（TSDB）中，可以通过HTTP Server访问，同时可以发起报警，对于数据库中的时序数据，提供PromeQL进行查询，提供给web UI或者可视化系统Grafana等展示。</p>
]]></content>
      <categories>
        <category>prometheus</category>
      </categories>
      <tags>
        <tag>prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>prometheus部署</title>
    <url>/2020/04/09/prometheus%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<h3 id="下载prometheus"><a href="#下载prometheus" class="headerlink" title="下载prometheus"></a>下载prometheus</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget https://github.com/prometheus/prometheus/releases/download/v2.17.1/prometheus-2.17.1.linux-amd64.tar.gz</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">tar xf prometheus-2.17.1.linux-amd64.tar.gz -C /opt/</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">ln</span> -s /opt/prometheus-2.17.1.linux-amd64/ /opt/prometheus</span></span><br></pre></td></tr></table></figure>

<h3 id="创建目录与授权"><a href="#创建目录与授权" class="headerlink" title="创建目录与授权"></a>创建目录与授权</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cd</span> /opt/prometheus</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mkdir</span> etc data</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cp</span> prometheus.yml etc/</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">useradd prometheus -M -s /sbin/nologin</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">chown</span> prometheus.prometheus -R /opt/prometheus/</span></span><br></pre></td></tr></table></figure>

<h3 id="启动脚本"><a href="#启动脚本" class="headerlink" title="启动脚本"></a>启动脚本</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /etc/systemd/system/prometheus.service</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=Prometheus</span><br><span class="line">Documentation=https://prometheus.io/</span><br><span class="line">After=network.target</span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">User=prometheus</span><br><span class="line">ExecStart=/opt/prometheus/prometheus --config.file=/opt/prometheus/etc/prometheus.yml --web.read-timeout=5m --web.max-connections=512 --storage.tsdb.path=/opt/prometheus/data --storage.tsdb.min-block-duration=10m --storage.tsdb.retention=72h --query.timeout=2m --query.max-concurrency=20 --web.enable-lifecycle</span><br><span class="line">Restart=on-failure</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>

<p>–config.file&#x3D;&#x2F;data&#x2F;etc&#x2F;prometheus.yml  # 配置文件<br>–web.read-timeout&#x3D;5m                   # 请求链接的最大等待时间,防止太多的空闲链接占用资源<br>–web.max-connections&#x3D;512               # 最大链接数<br>–storage.tsdb.path&#x3D;&#x2F;data               # 存储数据路径<br>–storage.tsdb.min-block-duration&#x3D;10m   # 只加载10分钟数据到缓存，生产环境可以加大 例：2h<br>–storage.tsdb.retention&#x3D;72h            # tsdb存储多久时间数据，生产环境可以加大 例：15d,15天为宜<br>–query.timeout&#x3D;2m                      # 查询中止前可能需要的最长时间<br>–query.max-concurrency&#x3D;20              # 并发执行的最大查询数<br>–web.enable-lifecycle                  # 后期修改配置，可以curl url重新加载配置</p>
<h3 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl start prometheus.service</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ps -ef|grep prometheus</span></span><br><span class="line">prometh+   506     1  0 14:35 ?        00:00:00 /opt/prometheus/prometheus --config.file=/opt/prometheus/etc/prometheus.yml --storage.tsdb.path=/opt/prometheus/data --storage.tsdb.min-block-duration=10m --storage.tsdb.retention=72h --web.enable-lifecycle</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">netstat -luntp|grep 9090</span></span><br><span class="line">tcp6       0      0 :::9090                 :::*                    LISTEN      506/prometheus  </span><br></pre></td></tr></table></figure>

<h3 id="web访问"><a href="#web访问" class="headerlink" title="web访问"></a>web访问</h3><p><img src="/image/128706345348923.png" alt="128706345348923"></p>
]]></content>
      <categories>
        <category>prometheus</category>
      </categories>
      <tags>
        <tag>prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>python版本管理工具pyenv</title>
    <url>/2019/05/27/python%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7pyenv/</url>
    <content><![CDATA[<h2 id="pyenv管理工具"><a href="#pyenv管理工具" class="headerlink" title="pyenv管理工具"></a>pyenv管理工具</h2><h3 id="pyenv介绍"><a href="#pyenv介绍" class="headerlink" title="pyenv介绍"></a>pyenv介绍</h3><p>pyenv 是 Python 版本管理工具。 pyenv 可以改变全局的 Python 版本，安装多个版本的 Python， 设置目录级别的 Python 版本，还能创建和管理 virtual python environments 。所有的设置都是用户级别的操作，不需要 sudo 命令。</p>
<p>pyenv 主要用来管理 Python 的版本，比如一个项目需要 Python 2.x ，一个项目需要 Python 3.x 。 而 virtualenv 主要用来管理 Python 包的依赖，不同项目需要依赖的包版本不同，则需要使用虚拟环境。</p>
 <span id="more"></span>

<p>pyenv 通过系统修改环境变量来实现 Python 不同版本的切换。而 virtualenv 通过将 Python 包安装到一个目录来作为 Python 包虚拟环境，通过切换目录来实现不同包环境间的切换。</p>
<p>pyenv 的美好之处在于，它并没有使用将不同的</p>
<p>PATH植入不同的shell这种高耦合的工作方式，而是简单地在PATH 的最前面插入了一个垫片路径（shims）：~&#x2F;.pyenv&#x2F;shims:&#x2F;usr&#x2F;local&#x2F;bin:&#x2F;usr&#x2F;bin:&#x2F;bin。</p>
<p>所有对 Python 可执行文件的查找都会首先被这个 shims 路径截获，从而使后方的系统路径失效。</p>
<h3 id="pyenv安装"><a href="#pyenv安装" class="headerlink" title="pyenv安装"></a>pyenv安装</h3><p>自动安装安装pyenv管理工具</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">useradd python</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">passwd python</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">su python</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">curl -L https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer | bash</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"> vim ~/.bashrc</span></span><br><span class="line">export PATH=&quot;/home/python/.pyenv/bin:$PATH&quot;</span><br><span class="line">eval &quot;$(pyenv init -)&quot;</span><br><span class="line">eval &quot;$(pyenv virtualenv-init -)&quot;</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"> <span class="built_in">source</span> ~/.bashrc</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">yum install -y gcc make patch gdbm-devel openssl-devel sqlite-devel readline-devel zlib-devel libffi-devel</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">mkdir</span> ~/.pyenv/cache &amp;&amp; <span class="built_in">cd</span> ~/.pyenv/cache     <span class="comment">#创建缓存目录,存储从官网下载好的 python</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">wget https://www.python.org/ftp/python/3.7.3/Python-3.7.3.tar.xz</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">pyenv install 3.7.3 -v     <span class="comment">#安装python3.7, 卸载命令是uninstall</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">pyenv versions</span></span><br><span class="line">* system (set by /home/python/.pyenv/version)</span><br><span class="line">  3.7.3</span><br></pre></td></tr></table></figure>

<h3 id="python环境隔离（global、shell、local）"><a href="#python环境隔离（global、shell、local）" class="headerlink" title="python环境隔离（global、shell、local）"></a>python环境隔离（global、shell、local）</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">pyenv global 3.7.3  <span class="comment"># 设置全局 python 版本, python 用户登录之后使用的环境是 python3.7.3</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">python -V</span></span><br><span class="line">Python 3.7.3</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">pyenv shell 3.7.3     <span class="comment"># 设置单前会话是 python 版本,注意 xshell 断开连接 python 版本会还原</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">python -V</span></span><br><span class="line">Python 3.7.3</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">pyenv shell --<span class="built_in">unset</span>  <span class="comment">#  --unset 参数可以用于取消当前 shell 设定的版本</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">python -V</span></span><br><span class="line">Python 2.7.5</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">mkdir</span> hwq</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> hwq/</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">pyenv <span class="built_in">local</span> 3.7.3  <span class="comment"># 设置 Python 本地版本，通过将版本环境写入当前目录, 子目录继承环境</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">python -V</span></span><br><span class="line">Python 3.7.3</span><br></pre></td></tr></table></figure>

<h3 id="Virtualenv"><a href="#Virtualenv" class="headerlink" title="Virtualenv"></a>Virtualenv</h3><p>创建虚拟环境(独立空间), 隔离python环境</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">pyenv virtualenv 3.7.3 hwq   <span class="comment"># 创建一个3.7.3版本的名称为hwq独立空间</span></span></span><br><span class="line">Looking in links: /tmp/tmphyldtmmf</span><br><span class="line">Requirement already satisfied: setuptools in /home/python/.pyenv/versions/3.7.3/envs/hwq/lib/python3.7/site-packages (40.8.0)</span><br><span class="line">Requirement already satisfied: pip in /home/python/.pyenv/versions/3.7.3/envs/hwq/lib/python3.7/site-packages (19.0.3)</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">pyenv versions    <span class="comment"># 查看现有的python版本</span></span></span><br><span class="line">* system (set by /home/python/hwq/.python-version)</span><br><span class="line">  3.7.3</span><br><span class="line">  3.7.3/envs/hwq</span><br><span class="line">  hwq</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">pyenv <span class="built_in">local</span> hwq   <span class="comment"># 在hwq目录进入本地独立空间</span></span></span><br><span class="line">(hwq) $ pyenv version</span><br><span class="line">hwq (set by /home/python/hwq/.python-version)</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> ../           <span class="comment"># 退出本目录就会退出独立空间</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> -</span> </span><br><span class="line">/home/python/hwq</span><br><span class="line"><span class="meta prompt_">(hwq)$ </span><span class="language-bash">            <span class="comment"># 回到hwq目录就会进入独立空间</span></span></span><br></pre></td></tr></table></figure>

<h4 id="virtualenv常用命令"><a href="#virtualenv常用命令" class="headerlink" title="virtualenv常用命令"></a>virtualenv常用命令</h4><p>pyenv virtualenvs    # 列出当前所有虚拟环境</p>
<p>pyenv activate env-name  # 激活虚拟环境</p>
<p>pyenv deactivate #退出虚拟环境，回到系统环境</p>
<h3 id="pip操作"><a href="#pip操作" class="headerlink" title="pip操作"></a>pip操作</h3><h4 id="更换阿里镜像加速"><a href="#更换阿里镜像加速" class="headerlink" title="更换阿里镜像加速"></a>更换阿里镜像加速</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">mkdir</span> ~/.pip</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vim ~/.pip/pip.conf</span></span><br><span class="line">[global]</span><br><span class="line">index-url = http://mirrors.aliyun.com/pypi/simple/</span><br><span class="line">trusted-host = mirrors.aliyun.com</span><br></pre></td></tr></table></figure>

<h4 id="pip导出及导入"><a href="#pip导出及导入" class="headerlink" title="pip导出及导入"></a>pip导出及导入</h4><p>同版本python包导出安装，保证环境统一</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">输出本地包环境至文件</span></span><br><span class="line">(hwq) $ pip freeze &gt;requirement</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">根据文件进行安装包</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">pip install -r  requirement</span></span><br></pre></td></tr></table></figure>

<h3 id="安装jupyter"><a href="#安装jupyter" class="headerlink" title="安装jupyter"></a>安装jupyter</h3><p> web版 python shell，可以方便使用python</p>
<p>Jupyter Notebook是以网页的形式打开，可以在网页页面中直接编写代码和运行代码，代码的运行结果也会直接在代码块下显示的程序。如在编程过程中需要编写说明文档，可在同一个页面中直接编写，便于作及时的说明和解释。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">(hwq)$ </span><span class="language-bash">pip install ipython</span></span><br><span class="line"><span class="meta prompt_">(hwq)$ </span><span class="language-bash">pip install jupyter</span></span><br><span class="line">(hwq) $ jupyter notebook password          #web的auth密码</span><br><span class="line">Enter password:</span><br><span class="line">Verify password:</span><br><span class="line">[NotebookPasswordApp] Wrote hashed password to /home/python/.jupyter/jupyter_notebook_config.json</span><br><span class="line">(hwq) $ jupyter notebook -h</span><br><span class="line">    jupyter notebook                       # start the notebook</span><br><span class="line">    jupyter notebook --certfile=mycert.pem # use SSL/TLS certificate</span><br><span class="line">    jupyter notebook password              # enter a password to protect the server</span><br><span class="line">(hwq) $ jupyter notebook --ip=0.0.0.0      #运行jupyter notebook 默认端口 8888</span><br></pre></td></tr></table></figure>

<p>主页面的文件夹对应虚拟空间目录</p>
<p><img src="/image/1558942807-1558942796191.jpg"> </p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>rabbitmq集群与镜像配置</title>
    <url>/2019/01/09/rabbitmq%E9%9B%86%E7%BE%A4%E4%B8%8E%E9%95%9C%E5%83%8F%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="部署集群"><a href="#部署集群" class="headerlink" title="部署集群"></a>部署集群</h2><h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><p>准备三台机器，<a href="https://www.wqblogs.com:4443/2018/12/07/RabbitMQ%E5%AE%89%E8%A3%85/">安装过程略</a></p>
 <span id="more"></span>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="built_in">cat</span> &gt;&gt; /etc/hosts &lt;&lt;<span class="string">EOF</span></span></span><br><span class="line">172.16.1.20 rabbit-a   #磁盘节点</span><br><span class="line">172.16.1.21 rabbit-b   #内存节点</span><br><span class="line">172.16.1.22 rabbit-c    #磁盘节点</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<h3 id="同步cookiewenjain"><a href="#同步cookiewenjain" class="headerlink" title="同步cookiewenjain"></a>同步cookiewenjain</h3><p>Erlang Cookie 是保证不同节点可以相互通信的密钥，要保证集群中的不同节点相互通信必须共享相同的 Erlang</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">scp /var/lib/rabbitmq/.erlang.cookie root@rabbit-b:/var/lib/rabbitmq/</span></span><br><span class="line">root@rabbit-b&#x27;s password:</span><br><span class="line">.erlang.cookie                                             100%   20    50.1KB/s   00:00</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">scp /var/lib/rabbitmq/.erlang.cookie root@rabbit-c:/var/lib/rabbitmq/</span></span><br><span class="line">root@rabbit-c&#x27;s password:</span><br><span class="line">.erlang.cookie                                             100%   20    53.9KB/s   00:00</span><br></pre></td></tr></table></figure>

<h3 id="rabbit-b操作"><a href="#rabbit-b操作" class="headerlink" title="rabbit-b操作"></a>rabbit-b操作</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rabbitmqctl stop_app</span></span><br><span class="line">Stopping rabbit application on node rabbit@rabbit-b ...</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rabbitmqctl reset</span></span><br><span class="line">Resetting node rabbit@rabbit-b ...</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rabbitmqctl join_cluster --ram rabbit@rabbit-a</span></span><br><span class="line">默认是磁盘节点，如果是内存节点的话，需要加--ram参数</span><br><span class="line">Clustering node rabbit@rabbit-b with rabbit@rabbit-a</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rabbitmqctl start_app</span></span><br><span class="line">Starting node rabbit@rabbit-b ...</span><br><span class="line">completed with 3 plugins.</span><br></pre></td></tr></table></figure>

<h3 id="rabbit-c操作"><a href="#rabbit-c操作" class="headerlink" title="rabbit-c操作"></a>rabbit-c操作</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rabbitmqctl stop_app</span></span><br><span class="line">Stopping rabbit application on node rabbit@rabbit-c ...</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rabbitmqctl reset</span></span><br><span class="line">Resetting node rabbit@rabbit-c ...</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rabbitmqctl join_cluster rabbit@rabbit-a</span></span><br><span class="line">Clustering node rabbit@rabbit-c with rabbit@rabbit-a</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rabbitmqctl start_app</span></span><br><span class="line">Starting node rabbit@rabbit-c ...</span><br><span class="line">completed with 3 plugins.</span><br></pre></td></tr></table></figure>

<h3 id="查看集群状态"><a href="#查看集群状态" class="headerlink" title="查看集群状态"></a>查看集群状态</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rabbitmqctl cluster_status</span></span><br><span class="line">Cluster status of node rabbit@rabbit-a ...</span><br><span class="line">[&#123;nodes,[&#123;disc,[&#x27;rabbit@rabbit-a&#x27;,&#x27;rabbit@rabbit-c&#x27;]&#125;,</span><br><span class="line">         &#123;ram,[&#x27;rabbit@rabbit-b&#x27;]&#125;]&#125;,</span><br><span class="line">&#123;running_nodes,[&#x27;rabbit@rabbit-c&#x27;,&#x27;rabbit@rabbit-b&#x27;,&#x27;rabbit@rabbit-a&#x27;]&#125;,</span><br><span class="line">&#123;cluster_name,&lt;&lt;&quot;rabbit@rabbit-a&quot;&gt;&gt;&#125;,</span><br><span class="line">&#123;partitions,[]&#125;,</span><br><span class="line">&#123;alarms,[&#123;&#x27;rabbit@rabbit-c&#x27;,[]&#125;,</span><br><span class="line">          &#123;&#x27;rabbit@rabbit-b&#x27;,[]&#125;,</span><br><span class="line">          &#123;&#x27;rabbit@rabbit-a&#x27;,[]&#125;]&#125;]</span><br></pre></td></tr></table></figure>

<h2 id="rabbitmq镜像设置"><a href="#rabbitmq镜像设置" class="headerlink" title="rabbitmq镜像设置"></a>rabbitmq镜像设置</h2><h3 id="创建策略"><a href="#创建策略" class="headerlink" title="创建策略"></a>创建策略</h3><p><img src="/image/15470276581.png"></p>
<p><img src="/image/15470276941.png"></p>
<h3 id="查看是否生效"><a href="#查看是否生效" class="headerlink" title="查看是否生效"></a>查看是否生效</h3><p><img src="/image/15470277271.png"></p>
<h3 id="创建queues加入节点"><a href="#创建queues加入节点" class="headerlink" title="创建queues加入节点"></a>创建queues加入节点</h3><p><img src="/image/15470277641.png"></p>
<p><img src="/image/15470277931.png"></p>
<p><img src="/image/15470278261.png"> </p>
]]></content>
      <categories>
        <category>rabbitmq</category>
      </categories>
      <tags>
        <tag>rabbitmq</tag>
      </tags>
  </entry>
  <entry>
    <title>rabbitmq集群节点操作</title>
    <url>/2019/02/28/rabbitmq%E9%9B%86%E7%BE%A4%E8%8A%82%E7%82%B9%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<p><strong>节点增加</strong></p>
<p>注：需要同步.erlang.cooike内容</p>
<p>1. rabbitmq-server -detached</p>
<p>2. rabbitmqctl stop_app</p>
<p>3. rabbitmqctl join_cluster –ram rabbit@rabbitmq1</p>
<p>4. rabbitmqctl start_app</p>
<p>5. rabbitmqctl  cluster_status</p>
 <span id="more"></span>

<p><strong>节点删除</strong></p>
<p>1. rabbitmqctl stop_app</p>
<p>2. rabbitmqctl reset</p>
<p><strong>硬删除</strong></p>
<p>直接删掉集群中的某个节点：</p>
<p>rabbitmqctl forget_cluster_node   node_name</p>
<p><strong>由disc–&gt;ram</strong></p>
<p>1.节点删除   <br>   rabbitmq-server -detached</p>
<p>   rabbitctl stop_app</p>
<p>   rabbitmqctl reset</p>
<p>2.清除原数据（暂时备份到其他地方）</p>
<p>3.节点增加</p>
<p>  rabbitmqctl join_cluster –ram rabbit@rabbitmq1</p>
<p>  rabbitmqctl start_app</p>
<p>磁盘节点</p>
<p>rabbitmqctl join_cluster rabbit@rabbitmq2</p>
<p>内存节点</p>
<p>rabbitmqctl join_cluster –ram rabbit@rabbitmq1 </p>
]]></content>
      <categories>
        <category>rabbitmq</category>
      </categories>
      <tags>
        <tag>rabbitmq</tag>
      </tags>
  </entry>
  <entry>
    <title>redis主从复制+哨兵切换</title>
    <url>/2018/11/22/redis%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6+%E5%93%A8%E5%85%B5%E5%88%87%E6%8D%A2/</url>
    <content><![CDATA[<h2 id="服务器环境"><a href="#服务器环境" class="headerlink" title="服务器环境  "></a>服务器环境  </h2><table>
<thead>
<tr>
<th>主机名</th>
<th>IP</th>
<th>内存+磁盘</th>
<th>系统</th>
</tr>
</thead>
<tbody><tr>
<td>master</td>
<td>10.0.0.20&#x2F;172.16.1.20</td>
<td>2G+100G</td>
<td>centos7.4</td>
</tr>
<tr>
<td>slave01</td>
<td>10.0.0.21&#x2F;172.16.1.21</td>
<td>2G+100G</td>
<td>centos7.4</td>
</tr>
<tr>
<td>slave02</td>
<td>10.0.0.22&#x2F;172.16.1.22</td>
<td>2G+100G</td>
<td>centos7.4</td>
</tr>
</tbody></table>
 <span id="more"></span>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cat</span> /etc/redhat-release</span></span><br><span class="line">CentOS Linux release 7.4.1708 (Core)</span><br><span class="line">[root@master ~]# sestatus</span><br><span class="line">SELinux status:                 disabled</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl status firewalld.service</span></span><br><span class="line">● firewalld.service - firewalld - dynamic firewall daemon</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/firewalld.service; disabled; vendor preset: enabled)</span><br><span class="line">   Active: inactive (dead)</span><br><span class="line">     Docs: man:firewalld(1)</span><br></pre></td></tr></table></figure>

<h2 id="部署redis"><a href="#部署redis" class="headerlink" title="部署redis"></a>部署redis</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum install -y wget gcc-c++ rubygems ruby</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cd</span> /server/tools/</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget http://download.redis.io/releases/redis-3.2.9.tar.gz</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">tar xf redis-3.2.9.tar.gz</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cd</span> redis-3.2.9/</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">make</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">make PREFIX=/application/redis install</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mkdir</span> -p /application/redis/etc</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cp</span> src/redis-trib.rb /usr/bin</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cp</span> redis.conf /application/redis/etc/</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cd</span> /application/redis/bin</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cp</span> redis-cli redis-server /usr/bin</span></span><br></pre></td></tr></table></figure>

<h2 id="配置主从复制"><a href="#配置主从复制" class="headerlink" title="配置主从复制"></a>配置主从复制</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">master配置文件</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim redis.conf</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"> egrep -v <span class="string">&#x27;^$|^#&#x27;</span> /application/redis/etc/redis.conf</span></span><br><span class="line">bind 10.0.0.20</span><br><span class="line">port 6379</span><br><span class="line">daemonize yes                #后台运行</span><br><span class="line">masterauth 123123         # 从机对主机验证的密码</span><br><span class="line">requirepass 123123        #认证密码</span><br><span class="line">slave配置文件</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim redis.conf</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">egrep -v <span class="string">&#x27;^$|^#&#x27;</span> /application/redis/etc/redis.conf</span></span><br><span class="line">bind 10.0.0.21</span><br><span class="line">port 6379</span><br><span class="line">daemonize yes                 #后台运行</span><br><span class="line">slaveof 10.0.0.20 6379      #连接（映射到）master主机</span><br><span class="line">masterauth 123123</span><br><span class="line">requirepass 123123</span><br><span class="line">启动redis</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">redis-server /application/redis/etc/redis.conf</span></span><br><span class="line"></span><br><span class="line">查看redis集群详情</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">redis-cli -h 10.0.0.20 -p 6379 -a 123123 info replication</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Replication</span></span><br><span class="line">role:master                  #本机是主</span><br><span class="line">connected_slaves:2     #2个奴隶</span><br><span class="line">slave0:ip=10.0.0.21,port=6379,state=online,offset=19993,lag=1</span><br><span class="line">slave1:ip=10.0.0.22,port=6379,state=online,offset=19993,lag=1</span><br><span class="line">master_repl_offset:19993</span><br><span class="line">repl_backlog_active:1</span><br><span class="line">repl_backlog_size:1048576</span><br><span class="line">repl_backlog_first_byte_offset:2</span><br><span class="line">repl_backlog_histlen:19992</span><br><span class="line"></span><br><span class="line">master创建数据 </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">redis-cli -h 10.0.0.20 -p 6379</span></span><br><span class="line">10.0.0.20:6379&gt; auth 123123</span><br><span class="line">OK</span><br><span class="line">10.0.0.20:6379&gt; set test test</span><br><span class="line">OK</span><br><span class="line">slave查看是否同步</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">redis-cli -h 10.0.0.21 -p 6379</span></span><br><span class="line">10.0.0.21:6379&gt; auth 123123</span><br><span class="line">OK</span><br><span class="line">10.0.0.21:6379&gt; get test</span><br><span class="line">&quot;test&quot;</span><br><span class="line">10.0.0.21:6379&gt; set ceshi ceshi</span><br><span class="line">(error) READONLY You can&#x27;t write against a read only slave.   #slave端只容许读</span><br></pre></td></tr></table></figure>

<h2 id="部署哨兵（Sentinel）"><a href="#部署哨兵（Sentinel）" class="headerlink" title="部署哨兵（Sentinel）"></a>部署哨兵（Sentinel）</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cd</span> /server/tools/redis-3.2.9/</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cp</span> sentinel.conf /application/redis/etc/</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cd</span> /application/redis/etc/</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mkdir</span> -p /application/redis/logs/</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim sentinel.conf</span></span><br><span class="line">daemonize yes</span><br><span class="line">bind 0.0.0.0</span><br><span class="line">port 26379</span><br><span class="line">dir &quot;/application/redis/etc&quot;</span><br><span class="line">loglevel notice</span><br><span class="line">logfile &quot;/application/redis/logs/sentinel.log&quot;</span><br><span class="line">sentinel monitor mymaster 10.0.0.20 6379 2            #监听masert，2代表2个sentinel认为master死了，就master不可用了</span><br><span class="line">sentinel auth-pass mymaster 123123                       #有登录密码，必配</span><br><span class="line">sentinel down-after-milliseconds mymaster 5000    #毫秒 判断master断线的时间</span><br><span class="line">sentinel config-epoch mymaster  1</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">redis-server /application/redis/etc/sentinel.conf  --sentinel    <span class="comment">#运行哨兵插件</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ps -ef|grep redis</span></span><br><span class="line">root       5103      1  0 07:20 ?        00:00:35 redis-server 10.0.0.20:6379</span><br><span class="line">root       6492      1  0 14:19 ?        00:00:00 redis-server 0.0.0.0:26379 [sentinel]</span><br><span class="line">在日志中可以看见一个master服务，两个slave服务</span><br></pre></td></tr></table></figure>

<p><img src="/image/15429530561.png"></p>
<p>kill杀死master，发现master漂移到22ip上了</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">kill</span> -9 5103</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">redis-cli -h 10.0.0.21 -p 6379 -a 123123 info replication</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Replication</span></span><br><span class="line">role:slave</span><br><span class="line">master_host:10.0.0.22</span><br><span class="line">master_port:6379</span><br><span class="line">master_link_status:up</span><br><span class="line">master_last_io_seconds_ago:0</span><br><span class="line">master_sync_in_progress:0</span><br><span class="line">slave_repl_offset:12211</span><br><span class="line">slave_priority:100</span><br><span class="line">slave_read_only:1</span><br><span class="line">connected_slaves:0</span><br><span class="line">master_repl_offset:0</span><br><span class="line">repl_backlog_active:0</span><br><span class="line">repl_backlog_size:1048576</span><br><span class="line">repl_backlog_first_byte_offset:0</span><br><span class="line">repl_backlog_histlen:0</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">redis-cli -h 10.0.0.22 -p 6379 -a 123123 info replication</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Replication</span></span><br><span class="line">role:master</span><br><span class="line">connected_slaves:1</span><br><span class="line">slave0:ip=10.0.0.21,port=6379,state=online,offset=13408,lag=0</span><br><span class="line">master_repl_offset:13541</span><br><span class="line">repl_backlog_active:1</span><br><span class="line">repl_backlog_size:1048576</span><br><span class="line">repl_backlog_first_byte_offset:2</span><br><span class="line">repl_backlog_histlen:13540</span><br></pre></td></tr></table></figure>

<p>不小心把哨兵给kill了，需要重新编辑配置文件，集群重新启动 </p>
]]></content>
      <categories>
        <category>redis</category>
      </categories>
      <tags>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>rsync备份服务</title>
    <url>/2018/12/23/rsync%E5%A4%87%E4%BB%BD%E6%9C%8D%E5%8A%A1/</url>
    <content><![CDATA[<h2 id="rsync简介"><a href="#rsync简介" class="headerlink" title="rsync简介"></a><strong>rsync简介</strong></h2><p>Rsync是一款开源的，快速的，多功能的，可实现全量及增量的本地或远程数据同步备份的优秀工具</p>
<p>全量复制：是将所有备份数据都同步一遍</p>
<p>增量复制：只将变化的新增的数据，进行备份同步</p>
<p>Rsync通过其独特的“quick check”算法，它仅同步大小或者最后修改时间发生变化的文件或目录，当然也可根据权限，属主等属性的变化同步</p>
 <span id="more"></span>

<h2 id="rsync命令具有的功能"><a href="#rsync命令具有的功能" class="headerlink" title="rsync命令具有的功能"></a><strong>rsync命令具有的功能</strong></h2><ul>
<li>cp功能</li>
</ul>
<p>本地文件备份</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rsync /etc/hosts /tmp/</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ll /tmp/hosts</span></span><br><span class="line">-rw-r--r-- 1 root root 218 Dec 23 14:59 /tmp/hosts</span><br></pre></td></tr></table></figure>


<p>本地目录备份</p>
<p>环境：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mkdir</span> data</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">touch</span> data/&#123;a..c&#125;.txt</span></span><br><span class="line">[root@test ~]total 0</span><br><span class="line">-rw-r--r-- 1 root root 0 Dec 23 15:05 a.txt</span><br><span class="line">-rw-r--r-- 1 root root 0 Dec 23 15:05 b.txt</span><br><span class="line">-rw-r--r-- 1 root root 0 Dec 23 15:05 c.txt</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rsync -r data/ /tmp/</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ll /tmp/data/</span></span><br><span class="line">ls: cannot access /tmp/data/: No such file or directory</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rsync -r data /tmp/</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ll /tmp/data/</span></span><br><span class="line">total 0</span><br><span class="line">-rw-r--r-- 1 root root 0 Dec 23 15:06 a.txt</span><br><span class="line">-rw-r--r-- 1 root root 0 Dec 23 15:06 b.txt</span><br><span class="line">-rw-r--r-- 1 root root 0 Dec 23 15:06 c.txt</span><br></pre></td></tr></table></figure>


<p>说明：利用rsync命令在备份数据目录时</p>
<p>备份的数据目录后面有    &#x2F;  类似这样形式data&#x2F;，表示只将data目录下面的内容进行复制</p>
<p>备份的数据目录后面没有  &#x2F;  类似这样形式data,  表示将data目录下面的内容以及目录本身进行复制</p>
<ul>
<li>scp远程传送功能</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">本地</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rsync data/a.txt root@172.17.252.102:/tmp</span></span><br><span class="line">root@172.17.252.102&#x27;s password:</span><br><span class="line">远程</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ll /tmp/a.txt</span></span><br><span class="line">-rw-r--r-- 1 root root 0 Dec 23 15:13 /tmp/a.txt</span><br></pre></td></tr></table></figure>

<ul>
<li>rm功能</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mkdir</span> backu</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">rm</span> -rf backu</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mkdir</span> backup</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ll backup</span></span><br><span class="line">total 0</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rsync -rv --delete backup/ data/</span></span><br><span class="line">sending incremental file list</span><br><span class="line">deleting c.txt</span><br><span class="line">deleting b.txt</span><br><span class="line">deleting a.txt</span><br><span class="line">sent 38 bytes  received 39 bytes  154.00 bytes/sec</span><br><span class="line">total size is 0  speedup is 0.00</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ll data/</span></span><br><span class="line">total 0</span><br></pre></td></tr></table></figure>
<h2 id="rsync命令格式"><a href="#rsync命令格式" class="headerlink" title="rsync命令格式"></a><strong>rsync命令格式</strong></h2><ul>
<li>本地数据备份</li>
</ul>
<p>Local:  rsync [OPTION…] SRC… [DEST]</p>
<p>Rsync           —数据备份命令</p>
<p>[OPTION…]      —命令相关参数</p>
<p>SRC…           —要进行本地备份的数据信息</p>
<p>[DEST]          —把数据备份到本地的什么位置</p>
<ul>
<li>远程数据备份</li>
</ul>
<p><strong>拉取</strong></p>
<p>Pull: rsync [OPTION…] [USER@]HOST:SRC… [DEST]</p>
<p>rsync         —数据备份命令</p>
<p>[OPTION…]   —命令相关参数</p>
<p>[USER@]     —以什么用户身份进行数据信息拉取</p>
<p>HOST:        —远程主机地址信息，或者可以写为远程主机名称信息</p>
<p>SRC…        —要进行远程传输备份的远程数据信息</p>
<p>[DEST]        —把远程数据备份到本地什么位置</p>
<p><strong>推送</strong></p>
<p>Push: rsync [OPTION…] SRC… [USER@]HOST:DEST</p>
<p>rsync         —数据备份命令</p>
<p>[OPTION…]    —命令相关参数</p>
<p>[USER@]      —以什么用户身份进行数据信息推送</p>
<p>HOST:         —远程主机地址信息，或者可以写为远程主机名称信息</p>
<p>SRC…        —要进行远程传输备份的本地数据信息</p>
<p>[DEST]        —把本地数据备份到远程什么位置）</p>
<h2 id="rsync命令参数"><a href="#rsync命令参数" class="headerlink" title="rsync命令参数"></a><strong>rsync命令参数</strong></h2><p>-v   详细模式输出</p>
<p>-p   保持文件的权限属性</p>
<p>-P   显示同步过程，比-v更加详细</p>
<p>-q   精简输出模式</p>
<p>-a   归档模式，表示以递归方式传输文件，并保持所有文件属性</p>
<p>-l    保留软链接</p>
<p>-L   同步软链接时会把源文件给同步</p>
<p>-H  保留硬链接</p>
<p>-n   仅测试传输，而不实际传输，常和“-vvvv”配合使用查看rsync是如何使用的</p>
<p>-z    传输时进行压缩提高效率</p>
<p>-t    保持文件的时间属性</p>
<p>–exclude         过滤指定文件，如–exclude “logs”会把文件名包含logs的文件或者目录过滤</p>
<p>–delete            以SRC为主，对DEST进行同步。多则删之，少则补之。注意”–delete”是在接收端执行的，所以它是在exclude&#x2F;include规则生效之后才执行的</p>
<p>-b –backup      对目标上已存在的文件做一个备份，备份的文件名后默认使用”~”做后缀</p>
<p>–backup-dir     指定备份文件的保存路径。不指定时默认和待备份文件保存在同一目录下</p>
<p>–password-file daemon模式时的密码文件，可以从中读取密码实现非交互式</p>
<h2 id="rsync部署"><a href="#rsync部署" class="headerlink" title="rsync部署"></a><strong>rsync部署</strong></h2><h3 id="服务端部署"><a href="#服务端部署" class="headerlink" title="服务端部署"></a>服务端部署</h3><p>检查软件服务是否存在</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rpm -qa |grep rsync</span></span><br><span class="line">rsync-3.1.2-4.el7.x86_64</span><br></pre></td></tr></table></figure>


<p>创建rsync配置文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /etc/rsyncd.conf</span></span><br><span class="line">uid = rsync</span><br><span class="line">gid = rsync</span><br><span class="line">port = 873</span><br><span class="line">use chroot = on</span><br><span class="line">max connections = 200</span><br><span class="line">timeout = 120</span><br><span class="line">pid file = /var/run/rsyncd.pid</span><br><span class="line">lock file = /var/run/rsyncd.lock</span><br><span class="line">log file = /var/log/rsyncd.log</span><br><span class="line"> </span><br><span class="line">[jar]</span><br><span class="line">path = /tmp/target</span><br><span class="line">read only = false</span><br><span class="line">list = false</span><br><span class="line">hosts allow = 172.17.252.1/20</span><br><span class="line">hosts deny = 0.0.0.0/32</span><br><span class="line">auth users = rsync_jar</span><br><span class="line">secrets file = /etc/rsyncd.password</span><br></pre></td></tr></table></figure>


<p>创建rsync备份目录管理用户</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">useradd rsync -s /sbin/nologin -M</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">id</span> rsync</span></span><br><span class="line">uid=1011(rsync) gid=1012(rsync) groups=1012(rsync)</span><br></pre></td></tr></table></figure>


<p>创建rsync备份数据目录并授权</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mkdir</span> -p /tmp/target</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">chown</span> -R rsync.rsync /tmp/target</span></span><br></pre></td></tr></table></figure>


<p>创建用户认证文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">echo</span> <span class="string">&#x27;rsync_jar:123456&#x27;</span> &gt;/etc/rsyncd.password</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">chmod</span> 600 /etc/rsyncd.password</span></span><br></pre></td></tr></table></figure>


<p>启动守护进程</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rsync --daemon</span></span><br></pre></td></tr></table></figure>


<h3 id="客户端部署"><a href="#客户端部署" class="headerlink" title="客户端部署"></a>客户端部署</h3><p>创建密码文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">echo</span> <span class="string">&#x27;123456&#x27;</span> &gt;/etc/rsyncd.password123456</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">chmod</span> 600 /etc/rsyncd.password</span></span><br></pre></td></tr></table></figure>


<p>测试拉取</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rsync -av /etc/hosts rsync_jar@172.17.252.104::jar --password-file=/etc/rsyncd.password</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ll /tmp/target/hosts</span></span><br><span class="line">-rw------- 1 rsync rsync 240 Dec 23 15:36 /tmp/target/hosts</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rsync -av rsync_jar@172.17.252.104::jar/hosts ./ --password-file=/etc/rsyncd.password</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ll hosts</span></span><br><span class="line">-rw------- 1 1011 1012 240 Dec 23 15:36 hosts</span><br></pre></td></tr></table></figure>


<p>rsync配置文件详解（盗图）</p>
<p><img src="/image/1545557196-1545557186.png"></p>
<h2 id="rsync优缺点"><a href="#rsync优缺点" class="headerlink" title="rsync优缺点"></a><strong>rsync优缺点</strong></h2><p>优点</p>
<p>增量备份，支持socket（daemon），集中备份（支持推拉，都是以客户端为参照物）。</p>
<p>远程SHELl通道模式还可以加密（SSH）传输</p>
<p>socket（daemon）需要加密传输，可以利用vpn服务或ipsec服务</p>
<p>缺点</p>
<p>大量小文件时候同步的时候，比对时间较长，有的时候，同步过程中，rsync进程可能会停止，僵死</p>
<p>同步大文件，10G这样的大文件有时也会有问题，中断。未完整同步前，是隐藏文件，可以通过续传（–partial）等参数实现传输</p>
<p>一次性远程拷贝可以用ecp，大量小文件要打成一个包再拷贝 </p>
]]></content>
      <categories>
        <category>linux基础</category>
      </categories>
      <tags>
        <tag>linux基础</tag>
      </tags>
  </entry>
  <entry>
    <title>sentinel限流规则策略</title>
    <url>/2019/04/06/sentinel%E9%99%90%E6%B5%81%E8%A7%84%E5%88%99%E7%AD%96%E7%95%A5/</url>
    <content><![CDATA[<p>Sentinel 的所有规则都可以在内存态中动态地查询及修改，修改之后立即生效。同时 Sentinel 也提供相关 API，供您来定制自己的规则策略。</p>
<p>Sentinel 支持以下几种规则：流量控制规则、熔断降级规则、系统保护规则、来源访问控制规则 和 热点参数规则。</p>
 <span id="more"></span>

<h3 id="流量控制规则"><a href="#流量控制规则" class="headerlink" title="流量控制规则"></a>流量控制规则</h3><p>流量控制（flow control），其原理是监控应用流量的 QPS 或并发线程数等指标，当达到指定的阈值时对流量进行控制，以避免被瞬时的流量高峰冲垮，从而保障应用的高可用性。</p>
<table>
<thead>
<tr>
<th>Field</th>
<th>说明</th>
<th>默认值</th>
</tr>
</thead>
<tbody><tr>
<td>resource</td>
<td>资源名，资源名是限流规则的作用对象</td>
<td></td>
</tr>
<tr>
<td>count</td>
<td>限流阈值</td>
<td></td>
</tr>
<tr>
<td>grade</td>
<td>限流阈值类型，QPS 或线程数模式</td>
<td>QPS 模式</td>
</tr>
<tr>
<td>limitApp</td>
<td>流控针对的调用来源</td>
<td>default，代表不区分调用来源</td>
</tr>
<tr>
<td>strategy</td>
<td>判断的根据是资源自身，还是根据其它关联资源 (refResource)，还是根据链路入口</td>
<td>根据资源本身</td>
</tr>
<tr>
<td>controlBehavior</td>
<td>流控效果（直接拒绝 &#x2F; 排队等待 &#x2F; 慢启动模式）</td>
<td>直接拒绝</td>
</tr>
</tbody></table>
<h3 id="熔断降级规则"><a href="#熔断降级规则" class="headerlink" title="熔断降级规则"></a>熔断降级规则</h3><p>Sentinel 熔断降级会在调用链路中某个资源出现不稳定状态时（例如调用超时或异常比例升高），对这个资源的调用进行限制，让请求快速失败，避免影响到其它的资源而导致级联错误。当资源被降级后，在接下来的降级时间窗口之内，对该资源的调用都自动熔断。</p>
<table>
<thead>
<tr>
<th>timeWindow</th>
<th>降级的时间，单位为 s</th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>resource</td>
<td>资源名，即限流规则的作用对象</td>
<td></td>
</tr>
<tr>
<td>count</td>
<td>阈值</td>
<td></td>
</tr>
<tr>
<td>grade</td>
<td>降级模式，根据 RT 降级还是根据异常比例降级</td>
<td>RT</td>
</tr>
<tr>
<td>timeWindow</td>
<td>降级的时间，单位为 s</td>
<td></td>
</tr>
</tbody></table>
<h3 id="系统保护规则"><a href="#系统保护规则" class="headerlink" title="系统保护规则"></a>系统保护规则</h3><p>Sentinel 系统自适应限流从整体维度对应用入口流量进行控制，结合应用的 Load、总体平均 RT、入口 QPS 和线程数等几个维度的监控指标，让系统的入口流量和系统的负载达到一个平衡，让系统尽可能跑在最大吞吐量的同时保证系统整体的稳定性</p>
<table>
<thead>
<tr>
<th>Field</th>
<th>说明</th>
<th>默认值</th>
</tr>
</thead>
<tbody><tr>
<td>highestSystemLoad</td>
<td>最大的 load1，参考值</td>
<td>-1 (不生效)</td>
</tr>
<tr>
<td>avgRt</td>
<td>所有入口流量的平均响应时间</td>
<td>-1 (不生效)</td>
</tr>
<tr>
<td>maxThread</td>
<td>入口流量的最大并发数</td>
<td>-1 (不生效)</td>
</tr>
<tr>
<td>qps</td>
<td>所有入口资源的 QPS</td>
<td>-1 (不生效)</td>
</tr>
</tbody></table>
<h3 id="访问控制规则"><a href="#访问控制规则" class="headerlink" title="访问控制规则"></a>访问控制规则</h3><p>黑白名单根据资源的请求来源（origin）限制资源是否通过，若配置白名单则只有请求来源位于白名单内时才可通过；若配置黑名单则请求来源位于黑名单时不通过，其余的请求通过</p>
<p>* resource：资源名，即限流规则的作用对象</p>
<p>* limitApp：对应的黑名单&#x2F;白名单，不同 origin 用 , 分隔，如 appA,appB</p>
<p>* strategy：限制模式，AUTHORITY_WHITE 为白名单模式，AUTHORITY_BLACK 为黑名单模式，默认为白名单模式</p>
<h3 id="热点限制规则"><a href="#热点限制规则" class="headerlink" title="热点限制规则"></a>热点限制规则</h3><p>何为热点？热点即经常访问的数据。很多时候我们希望统计某个热点数据中访问频次最高的 Top K 数据，并对其访问进行限制。比如：</p>
<ul>
<li><p>商品 ID 为参数，统计一段时间内最常购买的商品 ID 并进行限制</p>
</li>
<li><p>用户 ID 为参数，针对一段时间内频繁访问的用户 ID 进行限制</p>
</li>
</ul>
<p>热点参数限流会统计传入参数中的热点参数，并根据配置的限流阈值与模式，对包含热点参数的资源调用进行限流。热点参数限流可以看做是一种特殊的流量控制，仅对包含热点参数的资源调用生效</p>
<table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>属性</td>
<td>说明</td>
<td>默认值</td>
</tr>
<tr>
<td>resource</td>
<td>资源名，必填</td>
<td></td>
</tr>
<tr>
<td>count</td>
<td>限流阈值，必填</td>
<td></td>
</tr>
<tr>
<td>grade</td>
<td>限流模式</td>
<td>QPS 模式</td>
</tr>
<tr>
<td>durationInSec</td>
<td>统计窗口时间长度（单位为秒），1.6.0 版本开始支持</td>
<td>1s</td>
</tr>
<tr>
<td>controlBehavior</td>
<td>流控效果（支持快速失败和匀速排队模式），1.6.0 版本开始支持</td>
<td>快速失败</td>
</tr>
<tr>
<td>maxQueueingTimeMs</td>
<td>最大排队等待时长（仅在匀速排队模式生效），1.6.0 版本开始支持</td>
<td>0ms</td>
</tr>
<tr>
<td>paramIdx</td>
<td>热点参数的索引，必填，对应 <code>SphU.entry(xxx, args)</code> 中的参数索引位置</td>
<td></td>
</tr>
<tr>
<td>paramFlowItemList</td>
<td>参数例外项，可以针对指定的参数值单独设置限流阈值，不受前面 <code>count</code> 阈值的限制。<strong>仅支持基本类型和字符串类型</strong></td>
<td></td>
</tr>
<tr>
<td>clusterMode</td>
<td>是否是集群参数流控规则</td>
<td><code>false</code></td>
</tr>
<tr>
<td>clusterConfig</td>
<td>集群流控相关配置</td>
<td></td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>sentinel</category>
      </categories>
      <tags>
        <tag>sentinel</tag>
      </tags>
  </entry>
  <entry>
    <title>sersync配合rsync实时同步</title>
    <url>/2018/12/23/sersync%E9%85%8D%E5%90%88rsync%E5%AE%9E%E6%97%B6%E5%90%8C%E6%AD%A5/</url>
    <content><![CDATA[<h2 id="sersync简介"><a href="#sersync简介" class="headerlink" title="sersync简介"></a><strong>sersync简介</strong></h2><p>sersync是基于Inotify开发的，类似于Inotify-tools的工具；</p>
<p>sersync可以记录下被监听目录中发生变化的（包括增加、删除、修改）具体某一个文件或某一个目录的名字</p>
<p>rsync在同步的时候，只同步发生变化的这个文件或者这个目录（每次发生变化的数据相对整个同步目录数据来说是很小的，rsync在遍历查找比对文件时，速度很快），因此，效率很高</p>
 <span id="more"></span>

<h2 id="sersync部署"><a href="#sersync部署" class="headerlink" title="sersync部署"></a><strong>sersync部署</strong></h2><p>rsync部署：略</p>
<p>在rsync客户端安装</p>
<p>链接：<a href="https://pan.baidu.com/s/1BFTBldx2H_sxi_hDq5jjbA">https://pan.baidu.com/s/1BFTBldx2H_sxi_hDq5jjbA</a></p>
<p>提取码：sv92</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">tar xf sersync.tar.gz -C /opt</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /opt/sersync/conf/confxml.xml</span></span><br></pre></td></tr></table></figure>

<p><img src="/image/1545557489-Image.png"></p>
<p>配置监控目录与rsync服务端</p>
<p>配置rsync传送用户与密码文件</p>
<p>配置日志路径</p>
<p>启动服务</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">ln</span> -s /opt/sersync/bin/sersync /usr/bin/</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"> sersync -dro /opt/sersync/conf/confxml.xml</span></span><br></pre></td></tr></table></figure>

<p>参数</p>
<p>-o  指定配置文件</p>
<p>-d  启用守护进程模式，后台运行</p>
<p>-n  指定开启守护线程的数据，默认为10</p>
<p>-r   在监控前，将监控目录与远程主机用rsync命令推送一遍 </p>
]]></content>
      <categories>
        <category>linux基础</category>
      </categories>
      <tags>
        <tag>linux基础</tag>
      </tags>
  </entry>
  <entry>
    <title>smb服务部署</title>
    <url>/2019/03/15/smb%E6%9C%8D%E5%8A%A1%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<h3 id="安装smb"><a href="#安装smb" class="headerlink" title="安装smb"></a>安装smb</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rpm -qa|grep <span class="string">&#x27;samba&#x27;</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum install -y samba samba-common</span></span><br></pre></td></tr></table></figure>
 <span id="more"></span>
<h3 id="conf文件粗解"><a href="#conf文件粗解" class="headerlink" title="conf文件粗解"></a>conf文件粗解</h3> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">    [共享名]</span><br><span class="line">    </span><br><span class="line">    comment = 任意字符串</span><br><span class="line">    说明：comment是对该共享的描述，可以是任意字符串。</span><br><span class="line"></span><br><span class="line">    path = 共享目录路径</span><br><span class="line">    说 明：path用来指定共享目录的路径。可以用%u、%m这样的宏来代替路径里的unix用户和客户机的Netbios名，用宏表示主要用于[homes] 共享域。例如：如果我们不打算用home段做为客户的共享，而是在/home/share/下为每个Linux用户以他的用户名建个目录，作为他的共享目 录，这样path就可以写成：path = /home/share/%u; 。用户在连接到这共享时具体的路径会被他的用户名代替，要注意这个用户名路径一定要存在，否则，客户机在访问时会找不到网络路径。同样，如果我们不是以用 户来划分目录，而是以客户机来划分目录，为网络上每台可以访问samba的机器都各自建个以它的netbios名的路径，作为不同机器的共享资源，就可以 这样写：path = /home/share/%m 。</span><br><span class="line">    </span><br><span class="line">    browseable = yes/no</span><br><span class="line">    说明：browseable用来指定该共享是否可以浏览。</span><br><span class="line">    </span><br><span class="line">    writable = yes/no</span><br><span class="line">    说明：writable用来指定该共享路径是否可写。</span><br><span class="line">    </span><br><span class="line">    available = yes/no</span><br><span class="line">    说明：available用来指定该共享资源是否可用。</span><br><span class="line">    </span><br><span class="line">    admin users = 该共享的管理者</span><br><span class="line">    说明：admin users用来指定该共享的管理员（对该共享具有完全控制权限）。在samba 3.0中，如果用户验证方式设置成“security=share”时，此项无效。</span><br><span class="line">    例如：admin users =david，sandy（多个用户中间用逗号隔开）。</span><br><span class="line">    </span><br><span class="line">    valid users = 允许访问该共享的用户</span><br><span class="line">    说明：valid users用来指定允许访问该共享资源的用户。</span><br><span class="line">    例如：valid users = david，@dave，@tech（多个用户或者组中间用逗号隔开，如果要加入一个组就用“@组名”表示。）</span><br><span class="line">    </span><br><span class="line">    invalid users = 禁止访问该共享的用户</span><br><span class="line">    说明：invalid users用来指定不允许访问该共享资源的用户。</span><br><span class="line">    例如：invalid users = root，@bob（多个用户或者组中间用逗号隔开。）</span><br><span class="line">    </span><br><span class="line">    write list = 允许写入该共享的用户</span><br><span class="line">    说明：write list用来指定可以在该共享下写入文件的用户。</span><br><span class="line">    例如：write list = david，@dave</span><br><span class="line">    </span><br><span class="line">    public = yes/no</span><br><span class="line">    说明：public用来指定该共享是否允许guest账户访问。</span><br><span class="line">    </span><br><span class="line">    guest ok = yes/no</span><br><span class="line">    说明：意义同“public”。</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">修改配置文件</span><br><span class="line"></span><br><span class="line">第一个目录名是dev，匿名、公开、可写</span><br><span class="line"></span><br><span class="line">第二个目录吗是prd，限定hwq用户访问</span><br><span class="line"></span><br><span class="line">修改samba的主配置文件如下</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /etc/samba/smb.conf</span></span><br><span class="line">[dev]        </span><br><span class="line">comment = Anonymous Shared file #匿名共享文件        </span><br><span class="line">path = /data/dev        </span><br><span class="line">public = yes        </span><br><span class="line">writeable = yes        </span><br><span class="line">create mask = 0644        </span><br><span class="line">directory mask = 0755</span><br><span class="line">[prd]       </span><br><span class="line">comment = Privacy file           #隐私文件       </span><br><span class="line">path = /data/prd       </span><br><span class="line">valid users = hwq       </span><br><span class="line">write list = hwq       </span><br><span class="line">printable = no       </span><br><span class="line">create mask = 0644       </span><br><span class="line">directory mask = 0755</span><br><span class="line">```    </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">## 根据需求命令</span></span></span><br><span class="line">```shell</span><br><span class="line">创建prd组</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">groupadd prd</span></span><br><span class="line">创建prd组的hwq用户</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">useradd hwq -g prd -s /sbin/nologin -M</span></span><br><span class="line">创建共享目录</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mkdir</span> /data/&#123;dev,prd&#125; -p</span></span><br><span class="line">给dev目录匿名用户访问权限</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">chown</span> -R nobody.nobody /data/dev</span></span><br><span class="line">限定hwq用户访问</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">chown</span> hwq:prd /data/prd/</span></span><br><span class="line">给hwq配置smb密码123456</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">smbpasswd -a hwq</span></span><br><span class="line">New SMB password:   </span><br><span class="line">Retype new SMB password:</span><br><span class="line">Added user hwq.    </span><br></pre></td></tr></table></figure>
<h3 id="验证配置文件"><a href="#验证配置文件" class="headerlink" title="验证配置文件"></a>验证配置文件</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">testparmLoad</span> </span><br><span class="line">smb config files from /etc/samba/smb.conf</span><br><span class="line">Processing section &quot;[homes]&quot;</span><br><span class="line">Processing section &quot;[printers]&quot;</span><br><span class="line">Processing section &quot;[print$]&quot;</span><br><span class="line">Processing section &quot;[dev]&quot;</span><br><span class="line">Processing section &quot;[prd]&quot;</span><br><span class="line">Loaded services file OK.</span><br><span class="line">```  </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">## 启动服务</span></span></span><br><span class="line">```shell</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl <span class="built_in">enable</span> smb</span></span><br><span class="line">Created symlink from /etc/systemd/system/multi-user.target.wants/smb.service to /usr/lib/systemd/system/smb.service.</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl start smb</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">netstat -luntp|grep smb</span></span><br><span class="line">tcp        0      0 0.0.0.0:445             0.0.0.0:*               LISTEN      98216/smbd          </span><br><span class="line">tcp        0      0 0.0.0.0:139             0.0.0.0:*               LISTEN      98216/smbd          </span><br><span class="line">tcp6       0      0 :::445                  :::*                    LISTEN      98216/smbd          </span><br><span class="line">tcp6       0      0 :::139                  :::*                    LISTEN      98216/smbd    </span><br></pre></td></tr></table></figure>
<p>安全组开放端口</p>
<h3 id="win访问目录"><a href="#win访问目录" class="headerlink" title="win访问目录"></a>win访问目录</h3><p>文件夹里输入 \\106.12.11.107</p>
<p><img src="/image/smb1.png"></p>
<p><img src="/image/smb2.png"></p>
<p>可以创建一个普通用户去登录，发现只可以进入dev，prd需要重新认证</p>
<h3 id="切换用户"><a href="#切换用户" class="headerlink" title="切换用户"></a>切换用户</h3><p>cmd删除smb的auth，便于用户切换</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">net use * /del /y</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>无聊操作</category>
      </categories>
  </entry>
  <entry>
    <title>spinnaker之deck部署</title>
    <url>/2020/03/25/spinnaker%E4%B9%8Bdeck%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<h3 id="准备镜像"><a href="#准备镜像" class="headerlink" title="准备镜像"></a>准备镜像</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 ~]# docker pull docker.io/armory/deck-armory:d4bf0cf-release-1.8.x-0a33f94</span><br><span class="line">[root@ops-200 ~]# docker images|grep deck</span><br><span class="line">armory/deck-armory                                                     d4bf0cf-release-1.8.x-0a33f94               9a87ba3b319f        20 months ago       518MB</span><br><span class="line">[root@ops-200 ~]# docker tag 9a87ba3b319f harbor.od.com/armory/deck:v1.8.x</span><br><span class="line">[root@ops-200 ~]# docker push harbor.od.com/armory/deck:v1.8.x</span><br></pre></td></tr></table></figure>

<span id="more"></span>  

<h3 id="准备资源配置清单"><a href="#准备资源配置清单" class="headerlink" title="准备资源配置清单"></a>准备资源配置清单</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line">[<span class="string">root@ops-200</span> <span class="string">deck</span>]<span class="comment"># vim deployment.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">armory-deck</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">armory-deck</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">armory</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">revisionHistoryLimit:</span> <span class="number">7</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">armory-deck</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">annotations:</span></span><br><span class="line">        <span class="attr">artifact.spinnaker.io/location:</span> <span class="string">&#x27;&quot;armory&quot;&#x27;</span></span><br><span class="line">        <span class="attr">artifact.spinnaker.io/name:</span> <span class="string">&#x27;&quot;armory-deck&quot;&#x27;</span></span><br><span class="line">        <span class="attr">artifact.spinnaker.io/type:</span> <span class="string">&#x27;&quot;kubernetes/deployment&quot;&#x27;</span></span><br><span class="line">        <span class="attr">moniker.spinnaker.io/application:</span> <span class="string">&#x27;&quot;armory&quot;&#x27;</span></span><br><span class="line">        <span class="attr">moniker.spinnaker.io/cluster:</span> <span class="string">&#x27;&quot;deck&quot;&#x27;</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">armory-deck</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">armory-deck</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">harbor.od.com/armory/deck:v1.8.x</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">        <span class="attr">command:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">bash</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">-c</span></span><br><span class="line">        <span class="attr">args:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">bash</span> <span class="string">/opt/spinnaker/config/default/fetch.sh</span> <span class="string">&amp;&amp;</span> <span class="string">/entrypoint.sh</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">9000</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">        <span class="attr">envFrom:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">configMapRef:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">init-env</span></span><br><span class="line">        <span class="attr">livenessProbe:</span></span><br><span class="line">          <span class="attr">failureThreshold:</span> <span class="number">3</span></span><br><span class="line">          <span class="attr">httpGet:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">            <span class="attr">port:</span> <span class="number">9000</span></span><br><span class="line">            <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">180</span></span><br><span class="line">          <span class="attr">periodSeconds:</span> <span class="number">3</span></span><br><span class="line">          <span class="attr">successThreshold:</span> <span class="number">1</span></span><br><span class="line">          <span class="attr">timeoutSeconds:</span> <span class="number">1</span></span><br><span class="line">        <span class="attr">readinessProbe:</span></span><br><span class="line">          <span class="attr">failureThreshold:</span> <span class="number">5</span></span><br><span class="line">          <span class="attr">httpGet:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">            <span class="attr">port:</span> <span class="number">9000</span></span><br><span class="line">            <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">30</span></span><br><span class="line">          <span class="attr">periodSeconds:</span> <span class="number">3</span></span><br><span class="line">          <span class="attr">successThreshold:</span> <span class="number">5</span></span><br><span class="line">          <span class="attr">timeoutSeconds:</span> <span class="number">1</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/etc/podinfo</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">podinfo</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/opt/spinnaker/config/default</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">default-config</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/opt/spinnaker/config/custom</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">custom-config</span></span><br><span class="line">      <span class="attr">imagePullSecrets:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">harbor</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">configMap:</span></span><br><span class="line">          <span class="attr">defaultMode:</span> <span class="number">420</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">custom-config</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">custom-config</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">configMap:</span></span><br><span class="line">          <span class="attr">defaultMode:</span> <span class="number">420</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">default-config</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">default-config</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">downwardAPI:</span></span><br><span class="line">          <span class="attr">defaultMode:</span> <span class="number">420</span></span><br><span class="line">          <span class="attr">items:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">fieldRef:</span></span><br><span class="line">              <span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line">              <span class="attr">fieldPath:</span> <span class="string">metadata.labels</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">labels</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">fieldRef:</span></span><br><span class="line">              <span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line">              <span class="attr">fieldPath:</span> <span class="string">metadata.annotations</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">annotations</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">podinfo</span></span><br><span class="line"></span><br><span class="line">[<span class="string">root@ops-200</span> <span class="string">deck</span>]<span class="comment"># vim service.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">armory-deck</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">armory</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">9000</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">armory-deck</span></span><br></pre></td></tr></table></figure>

<h3 id="应用资源配置清单"><a href="#应用资源配置清单" class="headerlink" title="应用资源配置清单"></a>应用资源配置清单</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 deck]# kubectl apply -f deployment.yaml </span><br><span class="line">deployment.apps/armory-deck created</span><br><span class="line">[root@ops-200 deck]# kubectl apply -f service.yaml</span><br><span class="line">service/armory-deck created</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
        <tag>spinnaker</tag>
      </tags>
  </entry>
  <entry>
    <title>spinnaker之CloudDriver部署</title>
    <url>/2020/03/23/spinnaker%E4%B9%8BCloudDriver%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<h3 id="准备镜像"><a href="#准备镜像" class="headerlink" title="准备镜像"></a>准备镜像</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 ~]# docker pull armory/spinnaker-clouddriver-slim:release-1.11.x-bee52673a</span><br><span class="line">[root@ops-200 ~]# docker images|grep spinnaker</span><br><span class="line">armory/spinnaker-clouddriver-slim                                      release-1.11.x-bee52673a         f1d52d01e28d        13 months ago       1.05GB</span><br><span class="line">[root@ops-200 ~]# docker tag f1d52d01e28d harbor.od.com/armory/clouddriver:v1.11.x</span><br><span class="line">[root@ops-200 ~]# docker push harbor.od.com/armory/clouddriver:v1.11.x</span><br></pre></td></tr></table></figure>

<span id="more"></span>  

<h3 id="准备minio的secret"><a href="#准备minio的secret" class="headerlink" title="准备minio的secret"></a>准备minio的secret</h3><p>准备配置文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 clouddriver]# vim credentials</span><br><span class="line">[default]</span><br><span class="line">aws_access_key_id=admin</span><br><span class="line">aws_secret_access_key=admin123</span><br></pre></td></tr></table></figure>

<p>创建secret</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@k8s01-21 ~]# wget http://k8s-yaml.od.com/armory/clouddriver/credentials</span><br><span class="line">[root@k8s01-21 ~]# kubectl create secret generic credentials --from-file=./credentials -n armory</span><br><span class="line">secret/credentials created</span><br></pre></td></tr></table></figure>

<h3 id="准备k8s用户配置"><a href="#准备k8s用户配置" class="headerlink" title="准备k8s用户配置"></a>准备k8s用户配置</h3><h4 id="签发证书与私钥"><a href="#签发证书与私钥" class="headerlink" title="签发证书与私钥"></a>签发证书与私钥</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 certs]# vim admin-csr.json</span><br><span class="line">&#123;</span><br><span class="line">    &quot;CN&quot;: &quot;cluster-admin&quot;,</span><br><span class="line">    &quot;hosts&quot;: [</span><br><span class="line">    ],</span><br><span class="line">    &quot;key&quot;: &#123;</span><br><span class="line">        &quot;algo&quot;: &quot;rsa&quot;,</span><br><span class="line">        &quot;size&quot;: 2048</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;names&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;C&quot;: &quot;CN&quot;,</span><br><span class="line">            &quot;ST&quot;: &quot;beijing&quot;,</span><br><span class="line">            &quot;L&quot;: &quot;beijing&quot;,</span><br><span class="line">            &quot;O&quot;: &quot;qianyan&quot;,</span><br><span class="line">            &quot;OU&quot;: &quot;ops&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">[root@ops-200 certs]# cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client admin-csr.json |cfssl-json -bare admin</span><br><span class="line">2020/03/18 15:22:15 [INFO] generate received request</span><br><span class="line">2020/03/18 15:22:15 [INFO] received CSR</span><br><span class="line">2020/03/18 15:22:15 [INFO] generating key: rsa-2048</span><br><span class="line">2020/03/18 15:22:15 [INFO] encoded CSR</span><br><span class="line">2020/03/18 15:22:15 [INFO] signed certificate with serial number 537816242052985621756581152430322606185588653932</span><br><span class="line">2020/03/18 15:22:15 [WARNING] This certificate lacks a &quot;hosts&quot; field. This makes it unsuitable for</span><br><span class="line">websites. For more information see the Baseline Requirements for the Issuance and Management</span><br><span class="line">of Publicly-Trusted Certificates, v.1.1.6, from the CA/Browser Forum (https://cabforum.org);</span><br><span class="line">specifically, section 10.2.3 (&quot;Information Requirements&quot;).</span><br></pre></td></tr></table></figure>

<h4 id="分发证书"><a href="#分发证书" class="headerlink" title="分发证书"></a>分发证书</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 certs]# scp admin.pem root@192.168.1.21:/opt/clouddriver/certs</span><br><span class="line">root@192.168.1.21&#x27;s password: </span><br><span class="line">admin.pem                                   100% 1391     1.6MB/s   00:00    </span><br><span class="line">[root@ops-200 certs]# scp admin-key.pem root@192.168.1.21:/opt/clouddriver/certs</span><br><span class="line">root@192.168.1.21&#x27;s password: </span><br><span class="line">admin-key.pem                               100% 1679     1.8MB/s   00:00    </span><br><span class="line">[root@ops-200 certs]# scp ca.pem root@192.168.1.21:/opt/clouddriver/certs</span><br><span class="line">root@192.168.1.21&#x27;s password: </span><br><span class="line">ca.pem                                      100% 1371     1.3MB/s   00:00  </span><br></pre></td></tr></table></figure>

<h4 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h4><p>set-cluster</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@k8s01-21 certs]# kubectl config set-cluster myk8s --certificate-authority=./ca.pem --embed-certs=true --server=https://192.168.1.10:7443 --kubeconfig=config</span><br><span class="line">Cluster &quot;myk8s&quot; set.</span><br></pre></td></tr></table></figure>

<p>set-credentials</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@k8s01-21 certs]# kubectl config set-credentials cluster-admin --client-certificate=./admin.pem --client-key=./admin-key.pem --embed-certs=true --kubeconfig=config</span><br><span class="line">User &quot;cluster-admin&quot; set.</span><br></pre></td></tr></table></figure>

<p>set-context</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@k8s01-21 certs]# kubectl config set-context myk8s-context --cluster=myk8s --user=cluster-admin --kubeconfig=config</span><br><span class="line">Context &quot;myk8s-context&quot; created.</span><br></pre></td></tr></table></figure>

<p>use-context</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@k8s01-21 certs]# kubectl config use-context myk8s-context --kubeconfig=config</span><br><span class="line">Switched to context &quot;myk8s-context&quot;.</span><br></pre></td></tr></table></figure>

<h4 id="集群角色绑定用户"><a href="#集群角色绑定用户" class="headerlink" title="集群角色绑定用户"></a>集群角色绑定用户</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@k8s01-21 certs]# kubectl create clusterrolebinding myk8s-admin --clusterrole=cluster-admin --user=cluster-admin</span><br><span class="line">clusterrolebinding.rbac.authorization.k8s.io/myk8s-admin created</span><br></pre></td></tr></table></figure>

<h4 id="验证cluster-admin用户"><a href="#验证cluster-admin用户" class="headerlink" title="验证cluster-admin用户"></a>验证cluster-admin用户</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 ~]# mkdir /root/.kube</span><br><span class="line">[root@ops-200 ~]# cd /root/.kube</span><br><span class="line">[root@ops-200 .kube]# scp root@192.168.1.21:/opt/clouddriver/certs/config .</span><br><span class="line">root@192.168.1.21&#x27;s password: </span><br><span class="line">config                                      100% 6280     6.6MB/s   00:00    </span><br><span class="line">[root@ops-200 .kube]# scp root@192.168.1.21:/opt/kubernetes/server/bin/kubectl /usr/bin/kubectl</span><br><span class="line">root@192.168.1.21&#x27;s password: </span><br><span class="line">kubectl                                     100%   41MB 103.1MB/s   00:00    </span><br><span class="line">[root@ops-200 .kube]# kubectl get pod -n armory</span><br><span class="line">NAME                     READY   STATUS    RESTARTS   AGE</span><br><span class="line">minio-5b5dfb4d78-6bt6f   1/1     Running   0          4h21m</span><br><span class="line">redis-7fddd5ccf-xx6ll    1/1     Running   0          3h54m</span><br></pre></td></tr></table></figure>

<h4 id="创建ConfigMap配置"><a href="#创建ConfigMap配置" class="headerlink" title="创建ConfigMap配置"></a>创建ConfigMap配置</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@k8s01-21 certs]# cp config default-kubeconfig</span><br><span class="line">[root@k8s01-21 certs]# kubectl create cm default-kubeconfig --from-file=default-kubeconfig -n armory</span><br><span class="line">configmap/default-kubeconfig created</span><br></pre></td></tr></table></figure>

<h3 id="准备资源配置清单"><a href="#准备资源配置清单" class="headerlink" title="准备资源配置清单"></a>准备资源配置清单</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line">[<span class="string">root@ops-200</span> <span class="string">clouddriver</span>]<span class="comment"># vim init-env.yaml   --环境变量配置文件</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">init-env</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">armory</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">API_HOST:</span> <span class="string">http://spinnaker.od.com/api</span></span><br><span class="line">  <span class="attr">ARMORY_ID:</span> <span class="string">c02f0781-92f5-4e80-86db-0ba8fe7b8544</span></span><br><span class="line">  <span class="attr">ARMORYSPINNAKER_CONF_STORE_BUCKET:</span> <span class="string">armory-platform</span></span><br><span class="line">  <span class="attr">ARMORYSPINNAKER_CONF_STORE_PREFIX:</span> <span class="string">front50</span></span><br><span class="line">  <span class="attr">ARMORYSPINNAKER_GCS_ENABLED:</span> <span class="string">&quot;false&quot;</span></span><br><span class="line">  <span class="attr">ARMORYSPINNAKER_S3_ENABLED:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">  <span class="attr">AUTH_ENABLED:</span> <span class="string">&quot;false&quot;</span></span><br><span class="line">  <span class="attr">AWS_REGION:</span> <span class="string">us-east-1</span></span><br><span class="line">  <span class="attr">BASE_IP:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">  <span class="attr">CLOUDDRIVER_OPTS:</span> <span class="string">-Dspring.profiles.active=armory,configurator,local</span></span><br><span class="line">  <span class="attr">CONFIGURATOR_ENABLED:</span> <span class="string">&quot;false&quot;</span></span><br><span class="line">  <span class="attr">DECK_HOST:</span> <span class="string">http://spinnaker.od.com</span></span><br><span class="line">  <span class="attr">ECHO_OPTS:</span> <span class="string">-Dspring.profiles.active=armory,configurator,local</span></span><br><span class="line">  <span class="attr">GATE_OPTS:</span> <span class="string">-Dspring.profiles.active=armory,configurator,local</span></span><br><span class="line">  <span class="attr">IGOR_OPTS:</span> <span class="string">-Dspring.profiles.active=armory,configurator,local</span></span><br><span class="line">  <span class="attr">PLATFORM_ARCHITECTURE:</span> <span class="string">k8s</span></span><br><span class="line">  <span class="attr">REDIS_HOST:</span> <span class="string">redis://redis:6379</span></span><br><span class="line">  <span class="attr">SERVER_ADDRESS:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line">  <span class="attr">SPINNAKER_AWS_DEFAULT_REGION:</span> <span class="string">us-east-1</span></span><br><span class="line">  <span class="attr">SPINNAKER_AWS_ENABLED:</span> <span class="string">&quot;false&quot;</span></span><br><span class="line">  <span class="attr">SPINNAKER_CONFIG_DIR:</span> <span class="string">/home/spinnaker/config</span></span><br><span class="line">  <span class="attr">SPINNAKER_GOOGLE_PROJECT_CREDENTIALS_PATH:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">SPINNAKER_HOME:</span> <span class="string">/home/spinnaker</span></span><br><span class="line">  <span class="attr">SPRING_PROFILES_ACTIVE:</span> <span class="string">armory,configurator,local</span></span><br><span class="line">  </span><br><span class="line">[<span class="string">root@ops-200</span> <span class="string">clouddriver</span>]<span class="comment"># vim custom-config.yaml   --组件配置</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">custom-config</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">armory</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">clouddriver-local.yml:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    kubernetes:</span></span><br><span class="line"><span class="string">      enabled: true</span></span><br><span class="line"><span class="string">      accounts:</span></span><br><span class="line"><span class="string">        - name: cluster-admin</span></span><br><span class="line"><span class="string">          serviceAccount: false</span></span><br><span class="line"><span class="string">          dockerRegistries:</span></span><br><span class="line"><span class="string">            - accountName: harbor</span></span><br><span class="line"><span class="string">              namespace: []</span></span><br><span class="line"><span class="string">          namespaces:</span></span><br><span class="line"><span class="string">            - test</span></span><br><span class="line"><span class="string">            - prod</span></span><br><span class="line"><span class="string">          kubeconfigFile: /opt/spinnaker/credentials/custom/default-kubeconfig</span></span><br><span class="line"><span class="string">      primaryAccount: cluster-admin</span></span><br><span class="line"><span class="string">    dockerRegistry:</span></span><br><span class="line"><span class="string">      enabled: true</span></span><br><span class="line"><span class="string">      accounts:</span></span><br><span class="line"><span class="string">        - name: harbor</span></span><br><span class="line"><span class="string">          requiredGroupMembership: []</span></span><br><span class="line"><span class="string">          providerVersion: V1</span></span><br><span class="line"><span class="string">          insecureRegistry: true</span></span><br><span class="line"><span class="string">          address: http://harbor.od.com</span></span><br><span class="line"><span class="string">          username: admin</span></span><br><span class="line"><span class="string">          password: Harbor12345</span></span><br><span class="line"><span class="string">      primaryAccount: harbor</span></span><br><span class="line"><span class="string">    artifacts:</span></span><br><span class="line"><span class="string">      s3:</span></span><br><span class="line"><span class="string">        enabled: true</span></span><br><span class="line"><span class="string">        accounts:</span></span><br><span class="line"><span class="string">        - name: armory-config-s3-account</span></span><br><span class="line"><span class="string">          apiEndpoint: http://minio</span></span><br><span class="line"><span class="string">          apiRegion: us-east-1</span></span><br><span class="line"><span class="string">      gcs:</span></span><br><span class="line"><span class="string">        enabled: false</span></span><br><span class="line"><span class="string">        accounts:</span></span><br><span class="line"><span class="string">        - name: armory-config-gcs-account</span></span><br><span class="line"><span class="string"></span>  <span class="attr">custom-config.json:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">echo-configurator.yml:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    diagnostics:</span></span><br><span class="line"><span class="string">      enabled: true</span></span><br><span class="line"><span class="string"></span>  <span class="attr">front50-local.yml:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    spinnaker:</span></span><br><span class="line"><span class="string">      s3:</span></span><br><span class="line"><span class="string">        endpoint: http://minio</span></span><br><span class="line"><span class="string"></span>  <span class="attr">igor-local.yml:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    jenkins:</span></span><br><span class="line"><span class="string">      enabled: true</span></span><br><span class="line"><span class="string">      masters:</span></span><br><span class="line"><span class="string">        - name: jenkins-admin</span></span><br><span class="line"><span class="string">          address: http://jenkins.od.com</span></span><br><span class="line"><span class="string">          username: admin</span></span><br><span class="line"><span class="string">          password: admin123</span></span><br><span class="line"><span class="string">      primaryAccount: jenkins-admin</span></span><br><span class="line"><span class="string"></span>  <span class="attr">nginx.conf:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    gzip on;</span></span><br><span class="line"><span class="string">    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/vnd.ms-fontobject application/x-font-ttf font/opentype image/svg+xml image/x-icon;</span></span><br><span class="line"><span class="string">    server &#123;</span></span><br><span class="line"><span class="string">           listen 80;</span></span><br><span class="line"><span class="string">           location / &#123;</span></span><br><span class="line"><span class="string">                proxy_pass http://armory-deck/;</span></span><br><span class="line"><span class="string">           &#125;</span></span><br><span class="line"><span class="string">           location /api/ &#123;</span></span><br><span class="line"><span class="string">                proxy_pass http://armory-gate:8084/;</span></span><br><span class="line"><span class="string">           &#125;</span></span><br><span class="line"><span class="string">           rewrite ^/login(.*)$ /api/login$1 last;</span></span><br><span class="line"><span class="string">           rewrite ^/auth(.*)$ /api/auth$1 last;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span>  <span class="attr">spinnaker-local.yml:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    services:</span></span><br><span class="line"><span class="string">      igor:</span></span><br><span class="line"><span class="string">        enabled: true</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">[<span class="string">root@ops-200</span> <span class="string">clouddriver</span>]<span class="comment"># vim default-config.yaml</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">default-config</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">armory</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">barometer.yml:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    server:</span></span><br><span class="line"><span class="string">      port: 9092</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="attr">spinnaker:</span></span><br><span class="line">      <span class="attr">redis:</span></span><br><span class="line">        <span class="attr">host:</span> <span class="string">$&#123;services.redis.host&#125;</span></span><br><span class="line">        <span class="attr">port:</span> <span class="string">$&#123;services.redis.port&#125;</span></span><br><span class="line">  <span class="attr">clouddriver-armory.yml:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    aws:</span></span><br><span class="line"><span class="string">      defaultAssumeRole: role/$&#123;SPINNAKER_AWS_DEFAULT_ASSUME_ROLE:SpinnakerManagedProfile&#125;</span></span><br><span class="line"><span class="string">      accounts:</span></span><br><span class="line"><span class="string">        - name: default-aws-account</span></span><br><span class="line"><span class="string">          accountId: $&#123;SPINNAKER_AWS_DEFAULT_ACCOUNT_ID:none&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">      <span class="attr">client:</span></span><br><span class="line">        <span class="attr">maxErrorRetry:</span> <span class="number">20</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">serviceLimits:</span></span><br><span class="line">      <span class="attr">cloudProviderOverrides:</span></span><br><span class="line">        <span class="attr">aws:</span></span><br><span class="line">          <span class="attr">rateLimit:</span> <span class="number">15.0</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">implementationLimits:</span></span><br><span class="line">        <span class="attr">AmazonAutoScaling:</span></span><br><span class="line">          <span class="attr">defaults:</span></span><br><span class="line">            <span class="attr">rateLimit:</span> <span class="number">3.0</span></span><br><span class="line">        <span class="attr">AmazonElasticLoadBalancing:</span></span><br><span class="line">          <span class="attr">defaults:</span></span><br><span class="line">            <span class="attr">rateLimit:</span> <span class="number">5.0</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">security.basic.enabled:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">management.security.enabled:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">clouddriver-dev.yml:</span> <span class="string">|</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">serviceLimits:</span></span><br><span class="line">      <span class="attr">defaults:</span></span><br><span class="line">        <span class="attr">rateLimit:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">clouddriver.yml:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    server:</span></span><br><span class="line"><span class="string">      port: $&#123;services.clouddriver.port:7002&#125;</span></span><br><span class="line"><span class="string">      address: $&#123;services.clouddriver.host:localhost&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="attr">redis:</span></span><br><span class="line">      <span class="attr">connection:</span> <span class="string">$&#123;REDIS_HOST:redis://localhost:6379&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">udf:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="string">$&#123;services.clouddriver.aws.udf.enabled:true&#125;</span></span><br><span class="line">      <span class="attr">udfRoot:</span> <span class="string">/opt/spinnaker/config/udf</span></span><br><span class="line">      <span class="attr">defaultLegacyUdf:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">default:</span></span><br><span class="line">      <span class="attr">account:</span></span><br><span class="line">        <span class="attr">env:</span> <span class="string">$&#123;providers.aws.primaryCredentials.name&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">aws:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="string">$&#123;providers.aws.enabled:false&#125;</span></span><br><span class="line">      <span class="attr">defaults:</span></span><br><span class="line">        <span class="attr">iamRole:</span> <span class="string">$&#123;providers.aws.defaultIAMRole:BaseIAMRole&#125;</span></span><br><span class="line">      <span class="attr">defaultRegions:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">$&#123;providers.aws.defaultRegion:us-east-1&#125;</span></span><br><span class="line">      <span class="attr">defaultFront50Template:</span> <span class="string">$&#123;services.front50.baseUrl&#125;</span></span><br><span class="line">      <span class="attr">defaultKeyPairTemplate:</span> <span class="string">$&#123;providers.aws.defaultKeyPairTemplate&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">azure:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="string">$&#123;providers.azure.enabled:false&#125;</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">accounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">$&#123;providers.azure.primaryCredentials.name&#125;</span></span><br><span class="line">          <span class="attr">clientId:</span> <span class="string">$&#123;providers.azure.primaryCredentials.clientId&#125;</span></span><br><span class="line">          <span class="attr">appKey:</span> <span class="string">$&#123;providers.azure.primaryCredentials.appKey&#125;</span></span><br><span class="line">          <span class="attr">tenantId:</span> <span class="string">$&#123;providers.azure.primaryCredentials.tenantId&#125;</span></span><br><span class="line">          <span class="attr">subscriptionId:</span> <span class="string">$&#123;providers.azure.primaryCredentials.subscriptionId&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">google:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="string">$&#123;providers.google.enabled:false&#125;</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">accounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">$&#123;providers.google.primaryCredentials.name&#125;</span></span><br><span class="line">          <span class="attr">project:</span> <span class="string">$&#123;providers.google.primaryCredentials.project&#125;</span></span><br><span class="line">          <span class="attr">jsonPath:</span> <span class="string">$&#123;providers.google.primaryCredentials.jsonPath&#125;</span></span><br><span class="line">          <span class="attr">consul:</span></span><br><span class="line">            <span class="attr">enabled:</span> <span class="string">$&#123;providers.google.primaryCredentials.consul.enabled:false&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">cf:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="string">$&#123;providers.cf.enabled:false&#125;</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">accounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">$&#123;providers.cf.primaryCredentials.name&#125;</span></span><br><span class="line">          <span class="attr">api:</span> <span class="string">$&#123;providers.cf.primaryCredentials.api&#125;</span></span><br><span class="line">          <span class="attr">console:</span> <span class="string">$&#123;providers.cf.primaryCredentials.console&#125;</span></span><br><span class="line">          <span class="attr">org:</span> <span class="string">$&#123;providers.cf.defaultOrg&#125;</span></span><br><span class="line">          <span class="attr">space:</span> <span class="string">$&#123;providers.cf.defaultSpace&#125;</span></span><br><span class="line">          <span class="attr">username:</span> <span class="string">$&#123;providers.cf.account.name:&#125;</span></span><br><span class="line">          <span class="attr">password:</span> <span class="string">$&#123;providers.cf.account.password:&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">kubernetes:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="string">$&#123;providers.kubernetes.enabled:false&#125;</span></span><br><span class="line">      <span class="attr">accounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">$&#123;providers.kubernetes.primaryCredentials.name&#125;</span></span><br><span class="line">          <span class="attr">dockerRegistries:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">accountName:</span> <span class="string">$&#123;providers.kubernetes.primaryCredentials.dockerRegistryAccount&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">openstack:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="string">$&#123;providers.openstack.enabled:false&#125;</span></span><br><span class="line">      <span class="attr">accounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">$&#123;providers.openstack.primaryCredentials.name&#125;</span></span><br><span class="line">          <span class="attr">authUrl:</span> <span class="string">$&#123;providers.openstack.primaryCredentials.authUrl&#125;</span></span><br><span class="line">          <span class="attr">username:</span> <span class="string">$&#123;providers.openstack.primaryCredentials.username&#125;</span></span><br><span class="line">          <span class="attr">password:</span> <span class="string">$&#123;providers.openstack.primaryCredentials.password&#125;</span></span><br><span class="line">          <span class="attr">projectName:</span> <span class="string">$&#123;providers.openstack.primaryCredentials.projectName&#125;</span></span><br><span class="line">          <span class="attr">domainName:</span> <span class="string">$&#123;providers.openstack.primaryCredentials.domainName:Default&#125;</span></span><br><span class="line">          <span class="attr">regions:</span> <span class="string">$&#123;providers.openstack.primaryCredentials.regions&#125;</span></span><br><span class="line">          <span class="attr">insecure:</span> <span class="string">$&#123;providers.openstack.primaryCredentials.insecure:false&#125;</span></span><br><span class="line">          <span class="attr">userDataFile:</span> <span class="string">$&#123;providers.openstack.primaryCredentials.userDataFile:&#125;</span></span><br><span class="line"></span><br><span class="line">          <span class="attr">lbaas:</span></span><br><span class="line">            <span class="attr">pollTimeout:</span> <span class="number">60</span></span><br><span class="line">            <span class="attr">pollInterval:</span> <span class="number">5</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">dockerRegistry:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="string">$&#123;providers.dockerRegistry.enabled:false&#125;</span></span><br><span class="line">      <span class="attr">accounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">$&#123;providers.dockerRegistry.primaryCredentials.name&#125;</span></span><br><span class="line">          <span class="attr">address:</span> <span class="string">$&#123;providers.dockerRegistry.primaryCredentials.address&#125;</span></span><br><span class="line">          <span class="attr">username:</span> <span class="string">$&#123;providers.dockerRegistry.primaryCredentials.username:&#125;</span></span><br><span class="line">          <span class="attr">passwordFile:</span> <span class="string">$&#123;providers.dockerRegistry.primaryCredentials.passwordFile&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">credentials:</span></span><br><span class="line">      <span class="attr">primaryAccountTypes:</span> <span class="string">$&#123;providers.aws.primaryCredentials.name&#125;,</span> <span class="string">$&#123;providers.google.primaryCredentials.name&#125;,</span> <span class="string">$&#123;providers.cf.primaryCredentials.name&#125;,</span> <span class="string">$&#123;providers.azure.primaryCredentials.name&#125;</span></span><br><span class="line">      <span class="attr">challengeDestructiveActionsEnvironments:</span> <span class="string">$&#123;providers.aws.primaryCredentials.name&#125;,</span> <span class="string">$&#123;providers.google.primaryCredentials.name&#125;,</span> <span class="string">$&#123;providers.cf.primaryCredentials.name&#125;,</span> <span class="string">$&#123;providers.azure.primaryCredentials.name&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">spectator:</span></span><br><span class="line">      <span class="attr">applicationName:</span> <span class="string">$&#123;spring.application.name&#125;</span></span><br><span class="line">      <span class="attr">webEndpoint:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="string">$&#123;services.spectator.webEndpoint.enabled:false&#125;</span></span><br><span class="line">        <span class="attr">prototypeFilter:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">$&#123;services.spectator.webEndpoint.prototypeFilter.path:&#125;</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">stackdriver:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="string">$&#123;services.stackdriver.enabled&#125;</span></span><br><span class="line">        <span class="attr">projectName:</span> <span class="string">$&#123;services.stackdriver.projectName&#125;</span></span><br><span class="line">        <span class="attr">credentialsPath:</span> <span class="string">$&#123;services.stackdriver.credentialsPath&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">stackdriver:</span></span><br><span class="line">      <span class="attr">hints:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">controller.invocations</span></span><br><span class="line">          <span class="attr">labels:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">account</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">region</span></span><br><span class="line">  <span class="attr">dinghy.yml:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">echo-armory.yml:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    diagnostics:</span></span><br><span class="line"><span class="string">      enabled: true</span></span><br><span class="line"><span class="string">      id: $&#123;ARMORY_ID:unknown&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="attr">armorywebhooks:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">forwarding:</span></span><br><span class="line">        <span class="attr">baseUrl:</span> <span class="string">http://armory-dinghy:8081</span></span><br><span class="line">        <span class="attr">endpoint:</span> <span class="string">v1/webhooks</span></span><br><span class="line">  <span class="attr">echo-noncron.yml:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    scheduler:</span></span><br><span class="line"><span class="string">      enabled: false</span></span><br><span class="line"><span class="string"></span>  <span class="attr">echo.yml:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    server:</span></span><br><span class="line"><span class="string">      port: $&#123;services.echo.port:8089&#125;</span></span><br><span class="line"><span class="string">      address: $&#123;services.echo.host:localhost&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="attr">cassandra:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="string">$&#123;services.echo.cassandra.enabled:false&#125;</span></span><br><span class="line">      <span class="attr">embedded:</span> <span class="string">$&#123;services.cassandra.embedded:false&#125;</span></span><br><span class="line">      <span class="attr">host:</span> <span class="string">$&#123;services.cassandra.host:localhost&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">spinnaker:</span></span><br><span class="line">      <span class="attr">baseUrl:</span> <span class="string">$&#123;services.deck.baseUrl&#125;</span></span><br><span class="line">      <span class="attr">cassandra:</span></span><br><span class="line">         <span class="attr">enabled:</span> <span class="string">$&#123;services.echo.cassandra.enabled:false&#125;</span></span><br><span class="line">      <span class="attr">inMemory:</span></span><br><span class="line">         <span class="attr">enabled:</span> <span class="string">$&#123;services.echo.inMemory.enabled:true&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">front50:</span></span><br><span class="line">      <span class="attr">baseUrl:</span> <span class="string">$&#123;services.front50.baseUrl:http://localhost:8080</span> <span class="string">&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">orca:</span></span><br><span class="line">      <span class="attr">baseUrl:</span> <span class="string">$&#123;services.orca.baseUrl:http://localhost:8083</span> <span class="string">&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">endpoints.health.sensitive:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">slack:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="string">$&#123;services.echo.notifications.slack.enabled:false&#125;</span></span><br><span class="line">      <span class="attr">token:</span> <span class="string">$&#123;services.echo.notifications.slack.token&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">spring:</span></span><br><span class="line">      <span class="attr">mail:</span></span><br><span class="line">        <span class="attr">host:</span> <span class="string">$&#123;mail.host&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">mail:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="string">$&#123;services.echo.notifications.mail.enabled:false&#125;</span></span><br><span class="line">      <span class="attr">host:</span> <span class="string">$&#123;services.echo.notifications.mail.host&#125;</span></span><br><span class="line">      <span class="attr">from:</span> <span class="string">$&#123;services.echo.notifications.mail.fromAddress&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">hipchat:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="string">$&#123;services.echo.notifications.hipchat.enabled:false&#125;</span></span><br><span class="line">      <span class="attr">baseUrl:</span> <span class="string">$&#123;services.echo.notifications.hipchat.url&#125;</span></span><br><span class="line">      <span class="attr">token:</span> <span class="string">$&#123;services.echo.notifications.hipchat.token&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">twilio:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="string">$&#123;services.echo.notifications.sms.enabled:false&#125;</span></span><br><span class="line">      <span class="attr">baseUrl:</span> <span class="string">$&#123;services.echo.notifications.sms.url:https://api.twilio.com/</span> <span class="string">&#125;</span></span><br><span class="line">      <span class="attr">account:</span> <span class="string">$&#123;services.echo.notifications.sms.account&#125;</span></span><br><span class="line">      <span class="attr">token:</span> <span class="string">$&#123;services.echo.notifications.sms.token&#125;</span></span><br><span class="line">      <span class="attr">from:</span> <span class="string">$&#123;services.echo.notifications.sms.from&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">scheduler:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="string">$&#123;services.echo.cron.enabled:true&#125;</span></span><br><span class="line">      <span class="attr">threadPoolSize:</span> <span class="number">20</span></span><br><span class="line">      <span class="attr">triggeringEnabled:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">pipelineConfigsPoller:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">pollingIntervalMs:</span> <span class="number">30000</span></span><br><span class="line">      <span class="attr">cron:</span></span><br><span class="line">        <span class="attr">timezone:</span> <span class="string">$&#123;services.echo.cron.timezone&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">spectator:</span></span><br><span class="line">      <span class="attr">applicationName:</span> <span class="string">$&#123;spring.application.name&#125;</span></span><br><span class="line">      <span class="attr">webEndpoint:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="string">$&#123;services.spectator.webEndpoint.enabled:false&#125;</span></span><br><span class="line">        <span class="attr">prototypeFilter:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">$&#123;services.spectator.webEndpoint.prototypeFilter.path:&#125;</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">stackdriver:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="string">$&#123;services.stackdriver.enabled&#125;</span></span><br><span class="line">        <span class="attr">projectName:</span> <span class="string">$&#123;services.stackdriver.projectName&#125;</span></span><br><span class="line">        <span class="attr">credentialsPath:</span> <span class="string">$&#123;services.stackdriver.credentialsPath&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">webhooks:</span></span><br><span class="line">      <span class="attr">artifacts:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">fetch.sh:</span> <span class="string">|+</span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string">    CONFIG_LOCATION=$&#123;SPINNAKER_HOME:-&quot;/opt/spinnaker&quot;&#125;/config</span></span><br><span class="line"><span class="string">    CONTAINER=$1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="string">rm</span> <span class="string">-f</span> <span class="string">/opt/spinnaker/config/*.yml</span></span><br><span class="line"></span><br><span class="line">    <span class="string">mkdir</span> <span class="string">-p</span> <span class="string">$&#123;CONFIG_LOCATION&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">for</span> <span class="string">filename</span> <span class="string">in</span> <span class="string">/opt/spinnaker/config/default/*.yml;</span> <span class="string">do</span></span><br><span class="line">        <span class="string">cp</span> <span class="string">$filename</span> <span class="string">$&#123;CONFIG_LOCATION&#125;</span></span><br><span class="line">    <span class="string">done</span></span><br><span class="line"></span><br><span class="line">    <span class="string">if</span> [ <span class="string">-d</span> <span class="string">/opt/spinnaker/config/custom</span> ]<span class="string">;</span> <span class="string">then</span></span><br><span class="line">        <span class="string">for</span> <span class="string">filename</span> <span class="string">in</span> <span class="string">/opt/spinnaker/config/custom/*;</span> <span class="string">do</span></span><br><span class="line">            <span class="string">cp</span> <span class="string">$filename</span> <span class="string">$&#123;CONFIG_LOCATION&#125;</span></span><br><span class="line">        <span class="string">done</span></span><br><span class="line">    <span class="string">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="string">add_ca_certs()</span> &#123;</span><br><span class="line">      <span class="string">ca_cert_path=&quot;$1&quot;</span></span><br><span class="line">      <span class="string">jks_path=&quot;$2&quot;</span></span><br><span class="line">      <span class="string">alias=&quot;$3&quot;</span></span><br><span class="line"></span><br><span class="line">      <span class="string">if</span> [[ <span class="string">&quot;$(whoami)&quot;</span> <span class="type">!=</span> <span class="string">&quot;root&quot;</span> ]]<span class="string">;</span> <span class="string">then</span></span><br><span class="line">        <span class="string">echo</span> <span class="string">&quot;INFO: I do not have proper permisions to add CA roots&quot;</span></span><br><span class="line">        <span class="string">return</span></span><br><span class="line">      <span class="string">fi</span></span><br><span class="line"></span><br><span class="line">      <span class="string">if</span> [[ <span class="string">!</span> <span class="string">-f</span> <span class="string">$</span>&#123;<span class="string">ca_cert_path</span>&#125; ]]<span class="string">;</span> <span class="string">then</span></span><br><span class="line">        <span class="string">echo</span> <span class="string">&quot;INFO: No CA cert found at $&#123;ca_cert_path&#125;&quot;</span></span><br><span class="line">        <span class="string">return</span></span><br><span class="line">      <span class="string">fi</span></span><br><span class="line">      <span class="string">keytool</span> <span class="string">-importcert</span> <span class="string">\</span></span><br><span class="line">          <span class="string">-file</span> <span class="string">$</span>&#123;<span class="string">ca_cert_path</span>&#125; <span class="string">\</span></span><br><span class="line">          <span class="string">-keystore</span> <span class="string">$</span>&#123;<span class="string">jks_path</span>&#125; <span class="string">\</span></span><br><span class="line">          <span class="string">-alias</span> <span class="string">$</span>&#123;<span class="string">alias</span>&#125; <span class="string">\</span></span><br><span class="line">          <span class="string">-storepass</span> <span class="string">changeit</span> <span class="string">\</span></span><br><span class="line">          <span class="string">-noprompt</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="string">if</span> [ <span class="string">`which</span> <span class="string">keytool`</span> ]<span class="string">;</span> <span class="string">then</span></span><br><span class="line">      <span class="string">echo</span> <span class="string">&quot;INFO: Keytool found adding certs where appropriate&quot;</span></span><br><span class="line">      <span class="string">add_ca_certs</span> <span class="string">&quot;$&#123;CONFIG_LOCATION&#125;/ca.crt&quot;</span> <span class="string">&quot;/etc/ssl/certs/java/cacerts&quot;</span> <span class="string">&quot;custom-ca&quot;</span></span><br><span class="line">    <span class="string">else</span></span><br><span class="line">      <span class="string">echo</span> <span class="string">&quot;INFO: Keytool not found, not adding any certs/private keys&quot;</span></span><br><span class="line">    <span class="string">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="string">saml_pem_path=&quot;/opt/spinnaker/config/custom/saml.pem&quot;</span></span><br><span class="line">    <span class="string">saml_pkcs12_path=&quot;/tmp/saml.pkcs12&quot;</span></span><br><span class="line">    <span class="string">saml_jks_path=&quot;$&#123;CONFIG_LOCATION&#125;/saml.jks&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">x509_ca_cert_path=&quot;/opt/spinnaker/config/custom/x509ca.crt&quot;</span></span><br><span class="line">    <span class="string">x509_client_cert_path=&quot;/opt/spinnaker/config/custom/x509client.crt&quot;</span></span><br><span class="line">    <span class="string">x509_jks_path=&quot;$&#123;CONFIG_LOCATION&#125;/x509.jks&quot;</span></span><br><span class="line">    <span class="string">x509_nginx_cert_path=&quot;/opt/nginx/certs/ssl.crt&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">if</span> [ <span class="string">&quot;$&#123;CONTAINER&#125;&quot;</span> <span class="string">==</span> <span class="string">&quot;gate&quot;</span> ]<span class="string">;</span> <span class="string">then</span></span><br><span class="line">        <span class="string">if</span> [ <span class="string">-f</span> <span class="string">$</span>&#123;<span class="string">saml_pem_path</span>&#125; ]<span class="string">;</span> <span class="string">then</span></span><br><span class="line">            <span class="string">echo</span> <span class="string">&quot;Loading $&#123;saml_pem_path&#125; into $&#123;saml_jks_path&#125;&quot;</span></span><br><span class="line">            <span class="string">openssl</span> <span class="string">pkcs12</span> <span class="string">-export</span> <span class="string">-out</span> <span class="string">$&#123;saml_pkcs12_path&#125;</span> <span class="string">-in</span> <span class="string">$&#123;saml_pem_path&#125;</span> <span class="string">-password</span> <span class="string">pass:changeit</span> <span class="string">-name</span> <span class="string">saml</span></span><br><span class="line">            <span class="string">keytool</span> <span class="string">-genkey</span> <span class="string">-v</span> <span class="string">-keystore</span> <span class="string">$&#123;saml_jks_path&#125;</span> <span class="string">-alias</span> <span class="string">saml</span> <span class="string">\</span></span><br><span class="line">                    <span class="string">-keyalg</span> <span class="string">RSA</span> <span class="string">-keysize</span> <span class="number">2048</span> <span class="string">-validity</span> <span class="number">10000</span> <span class="string">\</span></span><br><span class="line">                    <span class="string">-storepass</span> <span class="string">changeit</span> <span class="string">-keypass</span> <span class="string">changeit</span> <span class="string">-dname</span> <span class="string">&quot;CN=armory&quot;</span></span><br><span class="line">            <span class="string">keytool</span> <span class="string">-importkeystore</span> <span class="string">\</span></span><br><span class="line">                    <span class="string">-srckeystore</span> <span class="string">$&#123;saml_pkcs12_path&#125;</span> <span class="string">\</span></span><br><span class="line">                    <span class="string">-srcstoretype</span> <span class="string">PKCS12</span> <span class="string">\</span></span><br><span class="line">                    <span class="string">-srcstorepass</span> <span class="string">changeit</span> <span class="string">\</span></span><br><span class="line">                    <span class="string">-destkeystore</span> <span class="string">$&#123;saml_jks_path&#125;</span> <span class="string">\</span></span><br><span class="line">                    <span class="string">-deststoretype</span> <span class="string">JKS</span> <span class="string">\</span></span><br><span class="line">                    <span class="string">-storepass</span> <span class="string">changeit</span> <span class="string">\</span></span><br><span class="line">                    <span class="string">-alias</span> <span class="string">saml</span> <span class="string">\</span></span><br><span class="line">                    <span class="string">-destalias</span> <span class="string">saml</span> <span class="string">\</span></span><br><span class="line">                    <span class="string">-noprompt</span></span><br><span class="line">        <span class="string">else</span></span><br><span class="line">            <span class="string">echo</span> <span class="string">&quot;No SAML IDP pemfile found at $&#123;saml_pem_path&#125;&quot;</span></span><br><span class="line">        <span class="string">fi</span></span><br><span class="line">        <span class="string">if</span> [ <span class="string">-f</span> <span class="string">$</span>&#123;<span class="string">x509_ca_cert_path</span>&#125; ]<span class="string">;</span> <span class="string">then</span></span><br><span class="line">            <span class="string">echo</span> <span class="string">&quot;Loading $&#123;x509_ca_cert_path&#125; into $&#123;x509_jks_path&#125;&quot;</span></span><br><span class="line">            <span class="string">add_ca_certs</span> <span class="string">$&#123;x509_ca_cert_path&#125;</span> <span class="string">$&#123;x509_jks_path&#125;</span> <span class="string">&quot;ca&quot;</span></span><br><span class="line">        <span class="string">else</span></span><br><span class="line">            <span class="string">echo</span> <span class="string">&quot;No x509 CA cert found at $&#123;x509_ca_cert_path&#125;&quot;</span></span><br><span class="line">        <span class="string">fi</span></span><br><span class="line">        <span class="string">if</span> [ <span class="string">-f</span> <span class="string">$</span>&#123;<span class="string">x509_client_cert_path</span>&#125; ]<span class="string">;</span> <span class="string">then</span></span><br><span class="line">            <span class="string">echo</span> <span class="string">&quot;Loading $&#123;x509_client_cert_path&#125; into $&#123;x509_jks_path&#125;&quot;</span></span><br><span class="line">            <span class="string">add_ca_certs</span> <span class="string">$&#123;x509_client_cert_path&#125;</span> <span class="string">$&#123;x509_jks_path&#125;</span> <span class="string">&quot;client&quot;</span></span><br><span class="line">        <span class="string">else</span></span><br><span class="line">            <span class="string">echo</span> <span class="string">&quot;No x509 Client cert found at $&#123;x509_client_cert_path&#125;&quot;</span></span><br><span class="line">        <span class="string">fi</span></span><br><span class="line"></span><br><span class="line">        <span class="string">if</span> [ <span class="string">-f</span> <span class="string">$</span>&#123;<span class="string">x509_nginx_cert_path</span>&#125; ]<span class="string">;</span> <span class="string">then</span></span><br><span class="line">            <span class="string">echo</span> <span class="string">&quot;Creating a self-signed CA (EXPIRES IN 360 DAYS) with java keystore: $&#123;x509_jks_path&#125;&quot;</span></span><br><span class="line">            <span class="string">echo</span> <span class="string">-e</span> <span class="string">&quot;\n\n\n\n\n\ny\n&quot;</span> <span class="string">|</span> <span class="string">keytool</span> <span class="string">-genkey</span> <span class="string">-keyalg</span> <span class="string">RSA</span> <span class="string">-alias</span> <span class="string">server</span> <span class="string">-keystore</span> <span class="string">keystore.jks</span> <span class="string">-storepass</span> <span class="string">changeit</span> <span class="string">-validity</span> <span class="number">360</span> <span class="string">-keysize</span> <span class="number">2048</span></span><br><span class="line">            <span class="string">keytool</span> <span class="string">-importkeystore</span> <span class="string">\</span></span><br><span class="line">                    <span class="string">-srckeystore</span> <span class="string">keystore.jks</span> <span class="string">\</span></span><br><span class="line">                    <span class="string">-srcstorepass</span> <span class="string">changeit</span> <span class="string">\</span></span><br><span class="line">                    <span class="string">-destkeystore</span> <span class="string">&quot;$&#123;x509_jks_path&#125;&quot;</span> <span class="string">\</span></span><br><span class="line">                    <span class="string">-storepass</span> <span class="string">changeit</span> <span class="string">\</span></span><br><span class="line">                    <span class="string">-srcalias</span> <span class="string">server</span> <span class="string">\</span></span><br><span class="line">                    <span class="string">-destalias</span> <span class="string">server</span> <span class="string">\</span></span><br><span class="line">                    <span class="string">-noprompt</span></span><br><span class="line">        <span class="string">else</span></span><br><span class="line">            <span class="string">echo</span> <span class="string">&quot;No x509 nginx cert found at $&#123;x509_nginx_cert_path&#125;&quot;</span></span><br><span class="line">        <span class="string">fi</span></span><br><span class="line">    <span class="string">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="string">if</span> [ <span class="string">&quot;$&#123;CONTAINER&#125;&quot;</span> <span class="string">==</span> <span class="string">&quot;nginx&quot;</span> ]<span class="string">;</span> <span class="string">then</span></span><br><span class="line">        <span class="string">nginx_conf_path=&quot;/opt/spinnaker/config/default/nginx.conf&quot;</span></span><br><span class="line">        <span class="string">if</span> [ <span class="string">-f</span> <span class="string">$</span>&#123;<span class="string">nginx_conf_path</span>&#125; ]<span class="string">;</span> <span class="string">then</span></span><br><span class="line">            <span class="string">cp</span> <span class="string">$&#123;nginx_conf_path&#125;</span> <span class="string">/etc/nginx/nginx.conf</span></span><br><span class="line">        <span class="string">fi</span></span><br><span class="line">    <span class="string">fi</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">fiat.yml:</span> <span class="string">|-</span></span><br><span class="line"><span class="string">    server:</span></span><br><span class="line"><span class="string">      port: $&#123;services.fiat.port:7003&#125;</span></span><br><span class="line"><span class="string">      address: $&#123;services.fiat.host:localhost&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="attr">redis:</span></span><br><span class="line">      <span class="attr">connection:</span> <span class="string">$&#123;services.redis.connection:redis://localhost:6379&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">spectator:</span></span><br><span class="line">      <span class="attr">applicationName:</span> <span class="string">$&#123;spring.application.name&#125;</span></span><br><span class="line">      <span class="attr">webEndpoint:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="string">$&#123;services.spectator.webEndpoint.enabled:false&#125;</span></span><br><span class="line">        <span class="attr">prototypeFilter:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">$&#123;services.spectator.webEndpoint.prototypeFilter.path:&#125;</span></span><br><span class="line">      <span class="attr">stackdriver:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="string">$&#123;services.stackdriver.enabled&#125;</span></span><br><span class="line">        <span class="attr">projectName:</span> <span class="string">$&#123;services.stackdriver.projectName&#125;</span></span><br><span class="line">        <span class="attr">credentialsPath:</span> <span class="string">$&#123;services.stackdriver.credentialsPath&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">hystrix:</span></span><br><span class="line">     <span class="attr">command:</span></span><br><span class="line">       <span class="attr">default.execution.isolation.thread.timeoutInMilliseconds:</span> <span class="number">20000</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">logging:</span></span><br><span class="line">      <span class="attr">level:</span></span><br><span class="line">        <span class="attr">com.netflix.spinnaker.fiat:</span> <span class="string">DEBUG</span></span><br><span class="line">  <span class="attr">front50-armory.yml:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    spinnaker:</span></span><br><span class="line"><span class="string">      redis:</span></span><br><span class="line"><span class="string">        enabled: true</span></span><br><span class="line"><span class="string">        host: redis</span></span><br><span class="line"><span class="string"></span>  <span class="attr">front50.yml:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    server:</span></span><br><span class="line"><span class="string">      port: $&#123;services.front50.port:8080&#125;</span></span><br><span class="line"><span class="string">      address: $&#123;services.front50.host:localhost&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="attr">hystrix:</span></span><br><span class="line">      <span class="attr">command:</span></span><br><span class="line">        <span class="attr">default.execution.isolation.thread.timeoutInMilliseconds:</span> <span class="number">15000</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">cassandra:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="string">$&#123;services.front50.cassandra.enabled:false&#125;</span></span><br><span class="line">      <span class="attr">embedded:</span> <span class="string">$&#123;services.cassandra.embedded:false&#125;</span></span><br><span class="line">      <span class="attr">host:</span> <span class="string">$&#123;services.cassandra.host:localhost&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">aws:</span></span><br><span class="line">      <span class="attr">simpleDBEnabled:</span> <span class="string">$&#123;providers.aws.simpleDBEnabled:false&#125;</span></span><br><span class="line">      <span class="attr">defaultSimpleDBDomain:</span> <span class="string">$&#123;providers.aws.defaultSimpleDBDomain&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">spinnaker:</span></span><br><span class="line">      <span class="attr">cassandra:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="string">$&#123;services.front50.cassandra.enabled:false&#125;</span></span><br><span class="line">        <span class="attr">host:</span> <span class="string">$&#123;services.cassandra.host:localhost&#125;</span></span><br><span class="line">        <span class="attr">port:</span> <span class="string">$&#123;services.cassandra.port:9042&#125;</span></span><br><span class="line">        <span class="attr">cluster:</span> <span class="string">$&#123;services.cassandra.cluster:CASS_SPINNAKER&#125;</span></span><br><span class="line">        <span class="attr">keyspace:</span> <span class="string">front50</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">global</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">redis:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="string">$&#123;services.front50.redis.enabled:false&#125;</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">gcs:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="string">$&#123;services.front50.gcs.enabled:false&#125;</span></span><br><span class="line">        <span class="attr">bucket:</span> <span class="string">$&#123;services.front50.storage_bucket:&#125;</span></span><br><span class="line">        <span class="attr">bucketLocation:</span> <span class="string">$&#123;services.front50.bucket_location:&#125;</span></span><br><span class="line">        <span class="attr">rootFolder:</span> <span class="string">$&#123;services.front50.rootFolder:front50&#125;</span></span><br><span class="line">        <span class="attr">project:</span> <span class="string">$&#123;providers.google.primaryCredentials.project&#125;</span></span><br><span class="line">        <span class="attr">jsonPath:</span> <span class="string">$&#123;providers.google.primaryCredentials.jsonPath&#125;</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">s3:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="string">$&#123;services.front50.s3.enabled:false&#125;</span></span><br><span class="line">        <span class="attr">bucket:</span> <span class="string">$&#123;services.front50.storage_bucket:&#125;</span></span><br><span class="line">        <span class="attr">rootFolder:</span> <span class="string">$&#123;services.front50.rootFolder:front50&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">spectator:</span></span><br><span class="line">      <span class="attr">applicationName:</span> <span class="string">$&#123;spring.application.name&#125;</span></span><br><span class="line">      <span class="attr">webEndpoint:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="string">$&#123;services.spectator.webEndpoint.enabled:false&#125;</span></span><br><span class="line">        <span class="attr">prototypeFilter:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">$&#123;services.spectator.webEndpoint.prototypeFilter.path:&#125;</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">stackdriver:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="string">$&#123;services.stackdriver.enabled&#125;</span></span><br><span class="line">        <span class="attr">projectName:</span> <span class="string">$&#123;services.stackdriver.projectName&#125;</span></span><br><span class="line">        <span class="attr">credentialsPath:</span> <span class="string">$&#123;services.stackdriver.credentialsPath&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">stackdriver:</span></span><br><span class="line">      <span class="attr">hints:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">controller.invocations</span></span><br><span class="line">          <span class="attr">labels:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">application</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">cause</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">aws.request.httpRequestTime</span></span><br><span class="line">          <span class="attr">labels:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">status</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">exception</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">AWSErrorCode</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">aws.request.requestSigningTime</span></span><br><span class="line">          <span class="attr">labels:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">exception</span></span><br><span class="line">  <span class="attr">gate-armory.yml:</span> <span class="string">|+</span></span><br><span class="line"><span class="string">    lighthouse:</span></span><br><span class="line"><span class="string">        baseUrl: http://$&#123;DEFAULT_DNS_NAME:lighthouse&#125;:5000</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">  <span class="attr">gate.yml:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    server:</span></span><br><span class="line"><span class="string">      port: $&#123;services.gate.port:8084&#125;</span></span><br><span class="line"><span class="string">      address: $&#123;services.gate.host:localhost&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="attr">redis:</span></span><br><span class="line">      <span class="attr">connection:</span> <span class="string">$&#123;REDIS_HOST:redis://localhost:6379&#125;</span></span><br><span class="line">      <span class="attr">configuration:</span></span><br><span class="line">        <span class="attr">secure:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">spectator:</span></span><br><span class="line">      <span class="attr">applicationName:</span> <span class="string">$&#123;spring.application.name&#125;</span></span><br><span class="line">      <span class="attr">webEndpoint:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="string">$&#123;services.spectator.webEndpoint.enabled:false&#125;</span></span><br><span class="line">        <span class="attr">prototypeFilter:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">$&#123;services.spectator.webEndpoint.prototypeFilter.path:&#125;</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">stackdriver:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="string">$&#123;services.stackdriver.enabled&#125;</span></span><br><span class="line">        <span class="attr">projectName:</span> <span class="string">$&#123;services.stackdriver.projectName&#125;</span></span><br><span class="line">        <span class="attr">credentialsPath:</span> <span class="string">$&#123;services.stackdriver.credentialsPath&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">stackdriver:</span></span><br><span class="line">      <span class="attr">hints:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">EurekaOkClient_Request</span></span><br><span class="line">          <span class="attr">labels:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">cause</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">reason</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">status</span></span><br><span class="line">  <span class="attr">igor-nonpolling.yml:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    jenkins:</span></span><br><span class="line"><span class="string">      polling:</span></span><br><span class="line"><span class="string">        enabled: false</span></span><br><span class="line"><span class="string"></span>  <span class="attr">igor.yml:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    server:</span></span><br><span class="line"><span class="string">      port: $&#123;services.igor.port:8088&#125;</span></span><br><span class="line"><span class="string">      address: $&#123;services.igor.host:localhost&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="attr">jenkins:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="string">$&#123;services.jenkins.enabled:false&#125;</span></span><br><span class="line">      <span class="attr">masters:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">$&#123;services.jenkins.defaultMaster.name&#125;</span></span><br><span class="line">          <span class="attr">address:</span> <span class="string">$&#123;services.jenkins.defaultMaster.baseUrl&#125;</span></span><br><span class="line">          <span class="attr">username:</span> <span class="string">$&#123;services.jenkins.defaultMaster.username&#125;</span></span><br><span class="line">          <span class="attr">password:</span> <span class="string">$&#123;services.jenkins.defaultMaster.password&#125;</span></span><br><span class="line">          <span class="attr">csrf:</span> <span class="string">$&#123;services.jenkins.defaultMaster.csrf:false&#125;</span></span><br><span class="line">          </span><br><span class="line">    <span class="attr">travis:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="string">$&#123;services.travis.enabled:false&#125;</span></span><br><span class="line">      <span class="attr">masters:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">$&#123;services.travis.defaultMaster.name&#125;</span></span><br><span class="line">          <span class="attr">baseUrl:</span> <span class="string">$&#123;services.travis.defaultMaster.baseUrl&#125;</span></span><br><span class="line">          <span class="attr">address:</span> <span class="string">$&#123;services.travis.defaultMaster.address&#125;</span></span><br><span class="line">          <span class="attr">githubToken:</span> <span class="string">$&#123;services.travis.defaultMaster.githubToken&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="attr">dockerRegistry:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="string">$&#123;providers.dockerRegistry.enabled:false&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="attr">redis:</span></span><br><span class="line">      <span class="attr">connection:</span> <span class="string">$&#123;REDIS_HOST:redis://localhost:6379&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">spectator:</span></span><br><span class="line">      <span class="attr">applicationName:</span> <span class="string">$&#123;spring.application.name&#125;</span></span><br><span class="line">      <span class="attr">webEndpoint:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="string">$&#123;services.spectator.webEndpoint.enabled:false&#125;</span></span><br><span class="line">        <span class="attr">prototypeFilter:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">$&#123;services.spectator.webEndpoint.prototypeFilter.path:&#125;</span></span><br><span class="line">      <span class="attr">stackdriver:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="string">$&#123;services.stackdriver.enabled&#125;</span></span><br><span class="line">        <span class="attr">projectName:</span> <span class="string">$&#123;services.stackdriver.projectName&#125;</span></span><br><span class="line">        <span class="attr">credentialsPath:</span> <span class="string">$&#123;services.stackdriver.credentialsPath&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">stackdriver:</span></span><br><span class="line">      <span class="attr">hints:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">controller.invocations</span></span><br><span class="line">          <span class="attr">labels:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">master</span></span><br><span class="line">  <span class="attr">kayenta-armory.yml:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    kayenta:</span></span><br><span class="line"><span class="string">      aws:</span></span><br><span class="line"><span class="string">        enabled: $&#123;ARMORYSPINNAKER_S3_ENABLED:false&#125;</span></span><br><span class="line"><span class="string">        accounts:</span></span><br><span class="line"><span class="string">          - name: aws-s3-storage</span></span><br><span class="line"><span class="string">            bucket: $&#123;ARMORYSPINNAKER_CONF_STORE_BUCKET&#125;</span></span><br><span class="line"><span class="string">            rootFolder: kayenta</span></span><br><span class="line"><span class="string">            supportedTypes:</span></span><br><span class="line"><span class="string">              - OBJECT_STORE</span></span><br><span class="line"><span class="string">              - CONFIGURATION_STORE</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">      <span class="attr">s3:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="string">$&#123;ARMORYSPINNAKER_S3_ENABLED:false&#125;</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">google:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="string">$&#123;ARMORYSPINNAKER_GCS_ENABLED:false&#125;</span></span><br><span class="line">        <span class="attr">accounts:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">cloud-armory</span></span><br><span class="line">            <span class="attr">bucket:</span> <span class="string">$&#123;ARMORYSPINNAKER_CONF_STORE_BUCKET&#125;</span></span><br><span class="line">            <span class="attr">rootFolder:</span> <span class="string">kayenta-prod</span></span><br><span class="line">            <span class="attr">supportedTypes:</span></span><br><span class="line">              <span class="bullet">-</span> <span class="string">METRICS_STORE</span></span><br><span class="line">              <span class="bullet">-</span> <span class="string">OBJECT_STORE</span></span><br><span class="line">              <span class="bullet">-</span> <span class="string">CONFIGURATION_STORE</span></span><br><span class="line">              </span><br><span class="line">      <span class="attr">gcs:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="string">$&#123;ARMORYSPINNAKER_GCS_ENABLED:false&#125;</span></span><br><span class="line">  <span class="attr">kayenta.yml:</span> <span class="string">|2</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">server:</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">8090</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">kayenta:</span></span><br><span class="line">      <span class="attr">atlas:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">google:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">aws:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">datadog:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">prometheus:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">gcs:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">s3:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">stackdriver:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">memory:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">configbin:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">keiko:</span></span><br><span class="line">      <span class="attr">queue:</span></span><br><span class="line">        <span class="attr">redis:</span></span><br><span class="line">          <span class="attr">queueName:</span> <span class="string">kayenta.keiko.queue</span></span><br><span class="line">          <span class="attr">deadLetterQueueName:</span> <span class="string">kayenta.keiko.queue.deadLetters</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">redis:</span></span><br><span class="line">      <span class="attr">connection:</span> <span class="string">$&#123;REDIS_HOST:redis://localhost:6379&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">spectator:</span></span><br><span class="line">      <span class="attr">applicationName:</span> <span class="string">$&#123;spring.application.name&#125;</span></span><br><span class="line">      <span class="attr">webEndpoint:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">swagger:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">title:</span> <span class="string">Kayenta</span> <span class="string">API</span></span><br><span class="line">      <span class="attr">description:</span></span><br><span class="line">      <span class="attr">contact:</span></span><br><span class="line">      <span class="attr">patterns:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">/admin.*</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">/canary.*</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">/canaryConfig.*</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">/canaryJudgeResult.*</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">/credentials.*</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">/fetch.*</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">/health</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">/judges.*</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">/metadata.*</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">/metricSetList.*</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">/metricSetPairList.*</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">/pipeline.*</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">security.basic.enabled:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">management.security.enabled:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">nginx.conf:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    user  nginx;</span></span><br><span class="line"><span class="string">    worker_processes  1;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="string">error_log</span>  <span class="string">/var/log/nginx/error.log</span> <span class="string">warn;</span></span><br><span class="line">    <span class="string">pid</span>        <span class="string">/var/run/nginx.pid;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">events</span> &#123;</span><br><span class="line">        <span class="string">worker_connections</span>  <span class="number">1024</span><span class="string">;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="string">http</span> &#123;</span><br><span class="line">        <span class="string">include</span>       <span class="string">/etc/nginx/mime.types;</span></span><br><span class="line">        <span class="string">default_type</span>  <span class="string">application/octet-stream;</span></span><br><span class="line">        <span class="string">log_format</span>  <span class="string">main</span>  <span class="string">&#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span></span><br><span class="line">                          <span class="string">&#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span></span><br><span class="line">                          <span class="string">&#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;</span><span class="string">;</span></span><br><span class="line">        <span class="string">access_log</span>  <span class="string">/var/log/nginx/access.log</span>  <span class="string">main;</span></span><br><span class="line">        </span><br><span class="line">        <span class="string">sendfile</span>        <span class="string">on;</span></span><br><span class="line">        <span class="string">keepalive_timeout</span>  <span class="number">65</span><span class="string">;</span></span><br><span class="line">        <span class="string">include</span> <span class="string">/etc/nginx/conf.d/*.conf;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="string">stream</span> &#123;</span><br><span class="line">        <span class="string">upstream</span> <span class="string">gate_api</span> &#123;</span><br><span class="line">            <span class="string">server</span> <span class="string">armory-gate:8085;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="string">server</span> &#123;</span><br><span class="line">            <span class="string">listen</span> <span class="number">8085</span><span class="string">;</span></span><br><span class="line">            <span class="string">proxy_pass</span> <span class="string">gate_api;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="attr">nginx.http.conf:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    gzip on;</span></span><br><span class="line"><span class="string">    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/vnd.ms-fontobject application/x-font-ttf font/opentype image/svg+xml image/x-icon;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="string">server</span> &#123;</span><br><span class="line">           <span class="string">listen</span> <span class="number">80</span><span class="string">;</span></span><br><span class="line">           <span class="string">listen</span> [<span class="string">::</span>]<span class="string">:80;</span></span><br><span class="line"></span><br><span class="line">           <span class="string">location</span> <span class="string">/</span> &#123;</span><br><span class="line">                <span class="string">proxy_pass</span> <span class="string">http://armory-deck/;</span></span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           <span class="string">location</span> <span class="string">/api/</span> &#123;</span><br><span class="line">                <span class="string">proxy_pass</span> <span class="string">http://armory-gate:8084/;</span></span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           <span class="string">location</span> <span class="string">/slack/</span> &#123;</span><br><span class="line">               <span class="string">proxy_pass</span> <span class="string">http://armory-platform:10000/;</span></span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           <span class="string">rewrite</span> <span class="string">^/login(.*)$</span> <span class="string">/api/login$1</span> <span class="string">last;</span></span><br><span class="line">           <span class="string">rewrite</span> <span class="string">^/auth(.*)$</span> <span class="string">/api/auth$1</span> <span class="string">last;</span></span><br><span class="line">    &#125;</span><br><span class="line">  <span class="attr">nginx.https.conf:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    gzip on;</span></span><br><span class="line"><span class="string">    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/vnd.ms-fontobject application/x-font-ttf font/opentype image/svg+xml image/x-icon;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="string">server</span> &#123;</span><br><span class="line">        <span class="string">listen</span> <span class="number">80</span><span class="string">;</span></span><br><span class="line">        <span class="string">listen</span> [<span class="string">::</span>]<span class="string">:80;</span></span><br><span class="line">        <span class="string">return</span> <span class="number">301</span> <span class="string">https://$host$request_uri;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="string">server</span> &#123;</span><br><span class="line">        <span class="string">listen</span> <span class="number">443</span> <span class="string">ssl;</span></span><br><span class="line">        <span class="string">listen</span> [<span class="string">::</span>]<span class="string">:443</span> <span class="string">ssl;</span></span><br><span class="line">        <span class="string">ssl</span> <span class="string">on;</span></span><br><span class="line">        <span class="string">ssl_certificate</span> <span class="string">/opt/nginx/certs/ssl.crt;</span></span><br><span class="line">        <span class="string">ssl_certificate_key</span> <span class="string">/opt/nginx/certs/ssl.key;</span></span><br><span class="line"></span><br><span class="line">        <span class="string">location</span> <span class="string">/</span> &#123;</span><br><span class="line">            <span class="string">proxy_pass</span> <span class="string">http://armory-deck/;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="string">location</span> <span class="string">/api/</span> &#123;</span><br><span class="line">            <span class="string">proxy_pass</span> <span class="string">http://armory-gate:8084/;</span></span><br><span class="line">            <span class="string">proxy_set_header</span> <span class="string">Host</span>            <span class="string">$host;</span></span><br><span class="line">            <span class="string">proxy_set_header</span> <span class="string">X-Real-IP</span>       <span class="string">$proxy_protocol_addr;</span></span><br><span class="line">            <span class="string">proxy_set_header</span> <span class="string">X-Forwarded-For</span> <span class="string">$proxy_protocol_addr;</span></span><br><span class="line">            <span class="string">proxy_set_header</span> <span class="string">X-Forwarded-Proto</span> <span class="string">$scheme;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="string">location</span> <span class="string">/slack/</span> &#123;</span><br><span class="line">            <span class="string">proxy_pass</span> <span class="string">http://armory-platform:10000/;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="string">rewrite</span> <span class="string">^/login(.*)$</span> <span class="string">/api/login$1</span> <span class="string">last;</span></span><br><span class="line">        <span class="string">rewrite</span> <span class="string">^/auth(.*)$</span> <span class="string">/api/auth$1</span> <span class="string">last;</span></span><br><span class="line">    &#125;</span><br><span class="line">  <span class="attr">orca-armory.yml:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    mine:</span></span><br><span class="line"><span class="string">      baseUrl: http://$&#123;services.barometer.host&#125;:$&#123;services.barometer.port&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="attr">pipelineTemplate:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="string">$&#123;features.pipelineTemplates.enabled:false&#125;</span></span><br><span class="line">      <span class="attr">jinja:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">kayenta:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="string">$&#123;services.kayenta.enabled:false&#125;</span></span><br><span class="line">      <span class="attr">baseUrl:</span> <span class="string">$&#123;services.kayenta.baseUrl&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">jira:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="string">$&#123;features.jira.enabled:false&#125;</span></span><br><span class="line">      <span class="attr">basicAuth:</span>  <span class="string">&quot;Basic $&#123;features.jira.basicAuthToken&#125;&quot;</span></span><br><span class="line">      <span class="attr">url:</span> <span class="string">$&#123;features.jira.createIssueUrl&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">webhook:</span></span><br><span class="line">      <span class="attr">preconfigured:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">label:</span> <span class="string">Enforce</span> <span class="string">Pipeline</span> <span class="string">Policy</span></span><br><span class="line">          <span class="attr">description:</span> <span class="string">Checks</span> <span class="string">pipeline</span> <span class="string">configuration</span> <span class="string">against</span> <span class="string">policy</span> <span class="string">requirements</span></span><br><span class="line">          <span class="attr">type:</span> <span class="string">enforcePipelinePolicy</span></span><br><span class="line">          <span class="attr">enabled:</span> <span class="string">$&#123;features.certifiedPipelines.enabled:false&#125;</span></span><br><span class="line">          <span class="attr">url:</span> <span class="string">&quot;http://lighthouse:5000/v1/pipelines/$&#123;execution.application&#125;/$&#123;execution.pipelineConfigId&#125;?check_policy=yes&quot;</span></span><br><span class="line">          <span class="attr">headers:</span></span><br><span class="line">            <span class="attr">Accept:</span></span><br><span class="line">              <span class="bullet">-</span> <span class="string">application/json</span></span><br><span class="line">          <span class="attr">method:</span> <span class="string">GET</span></span><br><span class="line">          <span class="attr">waitForCompletion:</span> <span class="literal">true</span></span><br><span class="line">          <span class="attr">statusUrlResolution:</span> <span class="string">getMethod</span></span><br><span class="line">          <span class="attr">statusJsonPath:</span> <span class="string">$.status</span></span><br><span class="line">          <span class="attr">successStatuses:</span> <span class="string">pass</span></span><br><span class="line">          <span class="attr">canceledStatuses:</span></span><br><span class="line">          <span class="attr">terminalStatuses:</span> <span class="string">TERMINAL</span></span><br><span class="line"></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">label:</span> <span class="string">&quot;Jira: Create Issue&quot;</span></span><br><span class="line">          <span class="attr">description:</span>  <span class="string">Enter</span> <span class="string">a</span> <span class="string">Jira</span> <span class="string">ticket</span> <span class="string">when</span> <span class="string">this</span> <span class="string">pipeline</span> <span class="string">runs</span></span><br><span class="line">          <span class="attr">type:</span> <span class="string">createJiraIssue</span></span><br><span class="line">          <span class="attr">enabled:</span> <span class="string">$&#123;jira.enabled&#125;</span></span><br><span class="line">          <span class="attr">url:</span>  <span class="string">$&#123;jira.url&#125;</span></span><br><span class="line">          <span class="attr">customHeaders:</span></span><br><span class="line">            <span class="attr">&quot;Content-Type&quot;:</span> <span class="string">application/json</span></span><br><span class="line">            <span class="attr">Authorization:</span> <span class="string">$&#123;jira.basicAuth&#125;</span></span><br><span class="line">          <span class="attr">method:</span> <span class="string">POST</span></span><br><span class="line">          <span class="attr">parameters:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">summary</span></span><br><span class="line">              <span class="attr">label:</span> <span class="string">Issue</span> <span class="string">Summary</span></span><br><span class="line">              <span class="attr">description:</span> <span class="string">A</span> <span class="string">short</span> <span class="string">summary</span> <span class="string">of</span> <span class="string">your</span> <span class="string">issue.</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">description</span></span><br><span class="line">              <span class="attr">label:</span> <span class="string">Issue</span> <span class="string">Description</span></span><br><span class="line">              <span class="attr">description:</span> <span class="string">A</span> <span class="string">longer</span> <span class="string">description</span> <span class="string">of</span> <span class="string">your</span> <span class="string">issue.</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">projectKey</span></span><br><span class="line">              <span class="attr">label:</span> <span class="string">Project</span> <span class="string">key</span></span><br><span class="line">              <span class="attr">description:</span> <span class="string">The</span> <span class="string">key</span> <span class="string">of</span> <span class="string">your</span> <span class="string">JIRA</span> <span class="string">project.</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">type</span></span><br><span class="line">              <span class="attr">label:</span> <span class="string">Issue</span> <span class="string">Type</span></span><br><span class="line">              <span class="attr">description:</span> <span class="string">The</span> <span class="string">type</span> <span class="string">of</span> <span class="string">your</span> <span class="string">issue,</span> <span class="string">e.g.</span> <span class="string">&quot;Task&quot;</span><span class="string">,</span> <span class="string">&quot;Story&quot;</span><span class="string">,</span> <span class="string">etc.</span></span><br><span class="line">          <span class="attr">payload:</span> <span class="string">|</span></span><br><span class="line"><span class="string">            &#123;</span></span><br><span class="line"><span class="string">              &quot;fields&quot; : &#123;</span></span><br><span class="line"><span class="string">                &quot;description&quot;: &quot;$&#123;parameterValues[&#x27;description&#x27;]&#125;&quot;,</span></span><br><span class="line"><span class="string">                &quot;issuetype&quot;: &#123;</span></span><br><span class="line"><span class="string">                   &quot;name&quot;: &quot;$&#123;parameterValues[&#x27;type&#x27;]&#125;&quot;</span></span><br><span class="line"><span class="string">                &#125;,</span></span><br><span class="line"><span class="string">                &quot;project&quot;: &#123;</span></span><br><span class="line"><span class="string">                   &quot;key&quot;: &quot;$&#123;parameterValues[&#x27;projectKey&#x27;]&#125;&quot;</span></span><br><span class="line"><span class="string">                &#125;,</span></span><br><span class="line"><span class="string">                &quot;summary&quot;:  &quot;$&#123;parameterValues[&#x27;summary&#x27;]&#125;&quot;</span></span><br><span class="line"><span class="string">              &#125;</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string"></span>          <span class="attr">waitForCompletion:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">label:</span> <span class="string">&quot;Jira: Update Issue&quot;</span></span><br><span class="line">          <span class="attr">description:</span>  <span class="string">Update</span> <span class="string">a</span> <span class="string">previously</span> <span class="string">created</span> <span class="string">Jira</span> <span class="string">Issue</span></span><br><span class="line">          <span class="attr">type:</span> <span class="string">updateJiraIssue</span></span><br><span class="line">          <span class="attr">enabled:</span> <span class="string">$&#123;jira.enabled&#125;</span></span><br><span class="line">          <span class="attr">url:</span> <span class="string">&quot;$&#123;execution.stages.?[type == &#x27;createJiraIssue&#x27;][0][&#x27;context&#x27;][&#x27;buildInfo&#x27;][&#x27;self&#x27;]&#125;&quot;</span></span><br><span class="line">          <span class="attr">customHeaders:</span></span><br><span class="line">            <span class="attr">&quot;Content-Type&quot;:</span> <span class="string">application/json</span></span><br><span class="line">            <span class="attr">Authorization:</span> <span class="string">$&#123;jira.basicAuth&#125;</span></span><br><span class="line">          <span class="attr">method:</span> <span class="string">PUT</span></span><br><span class="line">          <span class="attr">parameters:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">summary</span></span><br><span class="line">              <span class="attr">label:</span> <span class="string">Issue</span> <span class="string">Summary</span></span><br><span class="line">              <span class="attr">description:</span> <span class="string">A</span> <span class="string">short</span> <span class="string">summary</span> <span class="string">of</span> <span class="string">your</span> <span class="string">issue.</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">description</span></span><br><span class="line">              <span class="attr">label:</span> <span class="string">Issue</span> <span class="string">Description</span></span><br><span class="line">              <span class="attr">description:</span> <span class="string">A</span> <span class="string">longer</span> <span class="string">description</span> <span class="string">of</span> <span class="string">your</span> <span class="string">issue.</span></span><br><span class="line">          <span class="attr">payload:</span> <span class="string">|</span></span><br><span class="line"><span class="string">            &#123;</span></span><br><span class="line"><span class="string">              &quot;fields&quot; : &#123;</span></span><br><span class="line"><span class="string">                &quot;description&quot;: &quot;$&#123;parameterValues[&#x27;description&#x27;]&#125;&quot;,</span></span><br><span class="line"><span class="string">                &quot;summary&quot;: &quot;$&#123;parameterValues[&#x27;summary&#x27;]&#125;&quot;</span></span><br><span class="line"><span class="string">              &#125;</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string"></span>          <span class="attr">waitForCompletion:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">label:</span> <span class="string">&quot;Jira: Transition Issue&quot;</span></span><br><span class="line">          <span class="attr">description:</span>  <span class="string">Change</span> <span class="string">state</span> <span class="string">of</span> <span class="string">existing</span> <span class="string">Jira</span> <span class="string">Issue</span></span><br><span class="line">          <span class="attr">type:</span> <span class="string">transitionJiraIssue</span></span><br><span class="line">          <span class="attr">enabled:</span> <span class="string">$&#123;jira.enabled&#125;</span></span><br><span class="line">          <span class="attr">url:</span> <span class="string">&quot;$&#123;execution.stages.?[type == &#x27;createJiraIssue&#x27;][0][&#x27;context&#x27;][&#x27;buildInfo&#x27;][&#x27;self&#x27;]&#125;/transitions&quot;</span></span><br><span class="line">          <span class="attr">customHeaders:</span></span><br><span class="line">            <span class="attr">&quot;Content-Type&quot;:</span> <span class="string">application/json</span></span><br><span class="line">            <span class="attr">Authorization:</span> <span class="string">$&#123;jira.basicAuth&#125;</span></span><br><span class="line">          <span class="attr">method:</span> <span class="string">POST</span></span><br><span class="line">          <span class="attr">parameters:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">newStateID</span></span><br><span class="line">              <span class="attr">label:</span> <span class="string">New</span> <span class="string">State</span> <span class="string">ID</span></span><br><span class="line">              <span class="attr">description:</span> <span class="string">The</span> <span class="string">ID</span> <span class="string">of</span> <span class="string">the</span> <span class="string">state</span> <span class="string">you</span> <span class="string">want</span> <span class="string">to</span> <span class="string">transition</span> <span class="string">the</span> <span class="string">issue</span> <span class="string">to.</span></span><br><span class="line">          <span class="attr">payload:</span> <span class="string">|</span></span><br><span class="line"><span class="string">            &#123;</span></span><br><span class="line"><span class="string">              &quot;transition&quot; : &#123;</span></span><br><span class="line"><span class="string">                &quot;id&quot; : &quot;$&#123;parameterValues[&#x27;newStateID&#x27;]&#125;&quot;</span></span><br><span class="line"><span class="string">              &#125;</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string"></span>          <span class="attr">waitForCompletion:</span> <span class="literal">false</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">label:</span> <span class="string">&quot;Jira: Add Comment&quot;</span></span><br><span class="line">          <span class="attr">description:</span>  <span class="string">Add</span> <span class="string">a</span> <span class="string">comment</span> <span class="string">to</span> <span class="string">an</span> <span class="string">existing</span> <span class="string">Jira</span> <span class="string">Issue</span></span><br><span class="line">          <span class="attr">type:</span> <span class="string">commentJiraIssue</span></span><br><span class="line">          <span class="attr">enabled:</span> <span class="string">$&#123;jira.enabled&#125;</span></span><br><span class="line">          <span class="attr">url:</span> <span class="string">&quot;$&#123;execution.stages.?[type == &#x27;createJiraIssue&#x27;][0][&#x27;context&#x27;][&#x27;buildInfo&#x27;][&#x27;self&#x27;]&#125;/comment&quot;</span></span><br><span class="line">          <span class="attr">customHeaders:</span></span><br><span class="line">            <span class="attr">&quot;Content-Type&quot;:</span> <span class="string">application/json</span></span><br><span class="line">            <span class="attr">Authorization:</span> <span class="string">$&#123;jira.basicAuth&#125;</span></span><br><span class="line">          <span class="attr">method:</span> <span class="string">POST</span></span><br><span class="line">          <span class="attr">parameters:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">body</span></span><br><span class="line">              <span class="attr">label:</span> <span class="string">Comment</span> <span class="string">body</span></span><br><span class="line">              <span class="attr">description:</span> <span class="string">The</span> <span class="string">text</span> <span class="string">body</span> <span class="string">of</span> <span class="string">the</span> <span class="string">component.</span></span><br><span class="line">          <span class="attr">payload:</span> <span class="string">|</span></span><br><span class="line"><span class="string">            &#123;</span></span><br><span class="line"><span class="string">              &quot;body&quot; : &quot;$&#123;parameterValues[&#x27;body&#x27;]&#125;&quot;</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string"></span>          <span class="attr">waitForCompletion:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">orca.yml:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    server:</span></span><br><span class="line"><span class="string">        port: $&#123;services.orca.port:8083&#125;</span></span><br><span class="line"><span class="string">        address: $&#123;services.orca.host:localhost&#125;</span></span><br><span class="line"><span class="string">    oort:</span></span><br><span class="line"><span class="string">        baseUrl: $&#123;services.oort.baseUrl:localhost:7002&#125;</span></span><br><span class="line"><span class="string">    front50:</span></span><br><span class="line"><span class="string">        baseUrl: $&#123;services.front50.baseUrl:localhost:8080&#125;</span></span><br><span class="line"><span class="string">    mort:</span></span><br><span class="line"><span class="string">        baseUrl: $&#123;services.mort.baseUrl:localhost:7002&#125;</span></span><br><span class="line"><span class="string">    kato:</span></span><br><span class="line"><span class="string">        baseUrl: $&#123;services.kato.baseUrl:localhost:7002&#125;</span></span><br><span class="line"><span class="string">    bakery:</span></span><br><span class="line"><span class="string">        baseUrl: $&#123;services.bakery.baseUrl:localhost:8087&#125;</span></span><br><span class="line"><span class="string">        extractBuildDetails: $&#123;services.bakery.extractBuildDetails:true&#125;</span></span><br><span class="line"><span class="string">        allowMissingPackageInstallation: $&#123;services.bakery.allowMissingPackageInstallation:true&#125;</span></span><br><span class="line"><span class="string">    echo:</span></span><br><span class="line"><span class="string">        enabled: $&#123;services.echo.enabled:false&#125;</span></span><br><span class="line"><span class="string">        baseUrl: $&#123;services.echo.baseUrl:8089&#125;</span></span><br><span class="line"><span class="string">    igor:</span></span><br><span class="line"><span class="string">        baseUrl: $&#123;services.igor.baseUrl:8088&#125;</span></span><br><span class="line"><span class="string">    flex:</span></span><br><span class="line"><span class="string">      baseUrl: http://not-a-host</span></span><br><span class="line"><span class="string">    default:</span></span><br><span class="line"><span class="string">      bake:</span></span><br><span class="line"><span class="string">        account: $&#123;providers.aws.primaryCredentials.name&#125;</span></span><br><span class="line"><span class="string">      securityGroups:</span></span><br><span class="line"><span class="string">      vpc:</span></span><br><span class="line"><span class="string">        securityGroups:</span></span><br><span class="line"><span class="string">    redis:</span></span><br><span class="line"><span class="string">      connection: $&#123;REDIS_HOST:redis://localhost:6379&#125;</span></span><br><span class="line"><span class="string">    tasks:</span></span><br><span class="line"><span class="string">      executionWindow:</span></span><br><span class="line"><span class="string">        timezone: $&#123;services.orca.timezone&#125;</span></span><br><span class="line"><span class="string">    spectator:</span></span><br><span class="line"><span class="string">      applicationName: $&#123;spring.application.name&#125;</span></span><br><span class="line"><span class="string">      webEndpoint:</span></span><br><span class="line"><span class="string">        enabled: $&#123;services.spectator.webEndpoint.enabled:false&#125;</span></span><br><span class="line"><span class="string">        prototypeFilter:</span></span><br><span class="line"><span class="string">          path: $&#123;services.spectator.webEndpoint.prototypeFilter.path:&#125;        </span></span><br><span class="line"><span class="string">      stackdriver:</span></span><br><span class="line"><span class="string">        enabled: $&#123;services.stackdriver.enabled&#125;</span></span><br><span class="line"><span class="string">        projectName: $&#123;services.stackdriver.projectName&#125;</span></span><br><span class="line"><span class="string">        credentialsPath: $&#123;services.stackdriver.credentialsPath&#125;</span></span><br><span class="line"><span class="string">    stackdriver:</span></span><br><span class="line"><span class="string">      hints:</span></span><br><span class="line"><span class="string">        - name: controller.invocations</span></span><br><span class="line"><span class="string">          labels:</span></span><br><span class="line"><span class="string">          - application</span></span><br><span class="line"><span class="string"></span>  <span class="attr">rosco-armory.yml:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    redis:</span></span><br><span class="line"><span class="string">      timeout: 50000</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="attr">rosco:</span></span><br><span class="line">      <span class="attr">jobs:</span></span><br><span class="line">        <span class="attr">local:</span></span><br><span class="line">          <span class="attr">timeoutMinutes:</span> <span class="number">60</span></span><br><span class="line">  <span class="attr">rosco.yml:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    server:</span></span><br><span class="line"><span class="string">      port: $&#123;services.rosco.port:8087&#125;</span></span><br><span class="line"><span class="string">      address: $&#123;services.rosco.host:localhost&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="attr">redis:</span></span><br><span class="line">      <span class="attr">connection:</span> <span class="string">$&#123;REDIS_HOST:redis://localhost:6379&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">aws:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="string">$&#123;providers.aws.enabled:false&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">docker:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="string">$&#123;services.docker.enabled:false&#125;</span></span><br><span class="line">      <span class="attr">bakeryDefaults:</span></span><br><span class="line">        <span class="attr">targetRepository:</span> <span class="string">$&#123;services.docker.targetRepository&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">google:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="string">$&#123;providers.google.enabled:false&#125;</span></span><br><span class="line">      <span class="attr">accounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">$&#123;providers.google.primaryCredentials.name&#125;</span></span><br><span class="line">          <span class="attr">project:</span> <span class="string">$&#123;providers.google.primaryCredentials.project&#125;</span></span><br><span class="line">          <span class="attr">jsonPath:</span> <span class="string">$&#123;providers.google.primaryCredentials.jsonPath&#125;</span></span><br><span class="line">      <span class="attr">gce:</span></span><br><span class="line">        <span class="attr">bakeryDefaults:</span></span><br><span class="line">          <span class="attr">zone:</span> <span class="string">$&#123;providers.google.defaultZone&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">rosco:</span></span><br><span class="line">      <span class="attr">configDir:</span> <span class="string">$&#123;services.rosco.configDir&#125;</span></span><br><span class="line">      <span class="attr">jobs:</span></span><br><span class="line">        <span class="attr">local:</span></span><br><span class="line">          <span class="attr">timeoutMinutes:</span> <span class="number">30</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">spectator:</span></span><br><span class="line">      <span class="attr">applicationName:</span> <span class="string">$&#123;spring.application.name&#125;</span></span><br><span class="line">      <span class="attr">webEndpoint:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="string">$&#123;services.spectator.webEndpoint.enabled:false&#125;</span></span><br><span class="line">        <span class="attr">prototypeFilter:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">$&#123;services.spectator.webEndpoint.prototypeFilter.path:&#125;</span></span><br><span class="line">      <span class="attr">stackdriver:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="string">$&#123;services.stackdriver.enabled&#125;</span></span><br><span class="line">        <span class="attr">projectName:</span> <span class="string">$&#123;services.stackdriver.projectName&#125;</span></span><br><span class="line">        <span class="attr">credentialsPath:</span> <span class="string">$&#123;services.stackdriver.credentialsPath&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">stackdriver:</span></span><br><span class="line">      <span class="attr">hints:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">bakes</span></span><br><span class="line">          <span class="attr">labels:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">success</span></span><br><span class="line">  <span class="attr">spinnaker-armory.yml:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    armory:</span></span><br><span class="line"><span class="string">      architecture: &#x27;k8s&#x27;</span></span><br><span class="line"><span class="string">      </span></span><br><span class="line"><span class="string">    features:</span></span><br><span class="line"><span class="string">      artifacts:</span></span><br><span class="line"><span class="string">        enabled: true</span></span><br><span class="line"><span class="string">      pipelineTemplates:</span></span><br><span class="line"><span class="string">        enabled: $&#123;PIPELINE_TEMPLATES_ENABLED:false&#125;</span></span><br><span class="line"><span class="string">      infrastructureStages:</span></span><br><span class="line"><span class="string">        enabled: $&#123;INFRA_ENABLED:false&#125;</span></span><br><span class="line"><span class="string">      certifiedPipelines:</span></span><br><span class="line"><span class="string">        enabled: $&#123;CERTIFIED_PIPELINES_ENABLED:false&#125;</span></span><br><span class="line"><span class="string">      configuratorEnabled:</span></span><br><span class="line"><span class="string">        enabled: true</span></span><br><span class="line"><span class="string">      configuratorWizard:</span></span><br><span class="line"><span class="string">        enabled: true</span></span><br><span class="line"><span class="string">      configuratorCerts:</span></span><br><span class="line"><span class="string">        enabled: true</span></span><br><span class="line"><span class="string">      loadtestStage:</span></span><br><span class="line"><span class="string">        enabled: $&#123;LOADTEST_ENABLED:false&#125;</span></span><br><span class="line"><span class="string">      jira:</span></span><br><span class="line"><span class="string">        enabled: $&#123;JIRA_ENABLED:false&#125;</span></span><br><span class="line"><span class="string">        basicAuthToken: $&#123;JIRA_BASIC_AUTH&#125;</span></span><br><span class="line"><span class="string">        url: $&#123;JIRA_URL&#125;</span></span><br><span class="line"><span class="string">        login: $&#123;JIRA_LOGIN&#125;</span></span><br><span class="line"><span class="string">        password: $&#123;JIRA_PASSWORD&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">      <span class="attr">slaEnabled:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="string">$&#123;SLA_ENABLED:false&#125;</span></span><br><span class="line">      <span class="attr">chaosMonkey:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="string">$&#123;CHAOS_ENABLED:false&#125;</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">armoryPlatform:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="string">$&#123;PLATFORM_ENABLED:false&#125;</span></span><br><span class="line">        <span class="attr">uiEnabled:</span> <span class="string">$&#123;PLATFORM_UI_ENABLED:false&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">services:</span></span><br><span class="line">      <span class="attr">default:</span></span><br><span class="line">        <span class="attr">host:</span> <span class="string">$&#123;DEFAULT_DNS_NAME:localhost&#125;</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">clouddriver:</span></span><br><span class="line">        <span class="attr">host:</span> <span class="string">$&#123;DEFAULT_DNS_NAME:armory-clouddriver&#125;</span></span><br><span class="line">        <span class="attr">entityTags:</span></span><br><span class="line">          <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">configurator:</span></span><br><span class="line">        <span class="attr">baseUrl:</span> <span class="string">http://$&#123;CONFIGURATOR_HOST:armory-configurator&#125;:8069</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">echo:</span></span><br><span class="line">        <span class="attr">host:</span> <span class="string">$&#123;DEFAULT_DNS_NAME:armory-echo&#125;</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">deck:</span></span><br><span class="line">        <span class="attr">gateUrl:</span> <span class="string">$&#123;API_HOST:service.default.host&#125;</span></span><br><span class="line">        <span class="attr">baseUrl:</span> <span class="string">$&#123;DECK_HOST:armory-deck&#125;</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">dinghy:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="string">$&#123;DINGHY_ENABLED:false&#125;</span></span><br><span class="line">        <span class="attr">host:</span> <span class="string">$&#123;DEFAULT_DNS_NAME:armory-dinghy&#125;</span></span><br><span class="line">        <span class="attr">baseUrl:</span> <span class="string">$&#123;services.default.protocol&#125;://$&#123;services.dinghy.host&#125;:$&#123;services.dinghy.port&#125;</span></span><br><span class="line">        <span class="attr">port:</span> <span class="number">8081</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">front50:</span></span><br><span class="line">        <span class="attr">host:</span> <span class="string">$&#123;DEFAULT_DNS_NAME:armory-front50&#125;</span></span><br><span class="line">        <span class="attr">cassandra:</span></span><br><span class="line">          <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">        <span class="attr">redis:</span></span><br><span class="line">          <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">gcs:</span></span><br><span class="line">          <span class="attr">enabled:</span> <span class="string">$&#123;ARMORYSPINNAKER_GCS_ENABLED:false&#125;</span></span><br><span class="line">        <span class="attr">s3:</span></span><br><span class="line">          <span class="attr">enabled:</span> <span class="string">$&#123;ARMORYSPINNAKER_S3_ENABLED:false&#125;</span></span><br><span class="line">        <span class="attr">storage_bucket:</span> <span class="string">$&#123;ARMORYSPINNAKER_CONF_STORE_BUCKET&#125;</span></span><br><span class="line">        <span class="attr">rootFolder:</span> <span class="string">$&#123;ARMORYSPINNAKER_CONF_STORE_PREFIX:front50&#125;</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">gate:</span></span><br><span class="line">        <span class="attr">host:</span> <span class="string">$&#123;DEFAULT_DNS_NAME:armory-gate&#125;</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">igor:</span></span><br><span class="line">        <span class="attr">host:</span> <span class="string">$&#123;DEFAULT_DNS_NAME:armory-igor&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      <span class="attr">kayenta:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">host:</span> <span class="string">$&#123;DEFAULT_DNS_NAME:armory-kayenta&#125;</span></span><br><span class="line">        <span class="attr">canaryConfigStore:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">port:</span> <span class="number">8090</span></span><br><span class="line">        <span class="attr">baseUrl:</span> <span class="string">$&#123;services.default.protocol&#125;://$&#123;services.kayenta.host&#125;:$&#123;services.kayenta.port&#125;</span></span><br><span class="line">        <span class="attr">metricsStore:</span> <span class="string">$&#123;METRICS_STORE:stackdriver&#125;</span></span><br><span class="line">        <span class="attr">metricsAccountName:</span> <span class="string">$&#123;METRICS_ACCOUNT_NAME&#125;</span></span><br><span class="line">        <span class="attr">storageAccountName:</span> <span class="string">$&#123;STORAGE_ACCOUNT_NAME&#125;</span></span><br><span class="line">        <span class="attr">atlasWebComponentsUrl:</span> <span class="string">$&#123;ATLAS_COMPONENTS_URL:&#125;</span></span><br><span class="line">        </span><br><span class="line">      <span class="attr">lighthouse:</span></span><br><span class="line">        <span class="attr">host:</span> <span class="string">$&#123;DEFAULT_DNS_NAME:armory-lighthouse&#125;</span></span><br><span class="line">        <span class="attr">port:</span> <span class="number">5000</span></span><br><span class="line">        <span class="attr">baseUrl:</span> <span class="string">$&#123;services.default.protocol&#125;://$&#123;services.lighthouse.host&#125;:$&#123;services.lighthouse.port&#125;</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">orca:</span></span><br><span class="line">        <span class="attr">host:</span> <span class="string">$&#123;DEFAULT_DNS_NAME:armory-orca&#125;</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">platform:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="string">$&#123;PLATFORM_ENABLED:false&#125;</span></span><br><span class="line">        <span class="attr">host:</span> <span class="string">$&#123;DEFAULT_DNS_NAME:armory-platform&#125;</span></span><br><span class="line">        <span class="attr">baseUrl:</span> <span class="string">$&#123;services.default.protocol&#125;://$&#123;services.platform.host&#125;:$&#123;services.platform.port&#125;</span></span><br><span class="line">        <span class="attr">port:</span> <span class="number">5001</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">rosco:</span></span><br><span class="line">        <span class="attr">host:</span> <span class="string">$&#123;DEFAULT_DNS_NAME:armory-rosco&#125;</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">configDir:</span> <span class="string">/opt/spinnaker/config/packer</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">bakery:</span></span><br><span class="line">        <span class="attr">allowMissingPackageInstallation:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">barometer:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="string">$&#123;BAROMETER_ENABLED:false&#125;</span></span><br><span class="line">        <span class="attr">host:</span> <span class="string">$&#123;DEFAULT_DNS_NAME:armory-barometer&#125;</span></span><br><span class="line">        <span class="attr">baseUrl:</span> <span class="string">$&#123;services.default.protocol&#125;://$&#123;services.barometer.host&#125;:$&#123;services.barometer.port&#125;</span></span><br><span class="line">        <span class="attr">port:</span> <span class="number">9092</span></span><br><span class="line">        <span class="attr">newRelicEnabled:</span> <span class="string">$&#123;NEW_RELIC_ENABLED:false&#125;</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">redis:</span></span><br><span class="line">        <span class="attr">host:</span> <span class="string">redis</span></span><br><span class="line">        <span class="attr">port:</span> <span class="number">6379</span></span><br><span class="line">        <span class="attr">connection:</span> <span class="string">$&#123;REDIS_HOST:redis://localhost:6379&#125;</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">fiat:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="string">$&#123;FIAT_ENABLED:false&#125;</span></span><br><span class="line">        <span class="attr">host:</span> <span class="string">$&#123;DEFAULT_DNS_NAME:armory-fiat&#125;</span></span><br><span class="line">        <span class="attr">port:</span> <span class="number">7003</span></span><br><span class="line">        <span class="attr">baseUrl:</span> <span class="string">$&#123;services.default.protocol&#125;://$&#123;services.fiat.host&#125;:$&#123;services.fiat.port&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">providers:</span></span><br><span class="line">      <span class="attr">aws:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="string">$&#123;SPINNAKER_AWS_ENABLED:true&#125;</span></span><br><span class="line">        <span class="attr">defaultRegion:</span> <span class="string">$&#123;SPINNAKER_AWS_DEFAULT_REGION:us-west-2&#125;</span></span><br><span class="line">        <span class="attr">defaultIAMRole:</span> <span class="string">$&#123;SPINNAKER_AWS_DEFAULT_IAM_ROLE:SpinnakerInstanceProfile&#125;</span></span><br><span class="line">        <span class="attr">defaultAssumeRole:</span> <span class="string">$&#123;SPINNAKER_AWS_DEFAULT_ASSUME_ROLE:SpinnakerManagedProfile&#125;</span></span><br><span class="line">        <span class="attr">primaryCredentials:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">$&#123;SPINNAKER_AWS_DEFAULT_ACCOUNT:default-aws-account&#125;</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">kubernetes:</span></span><br><span class="line">        <span class="attr">proxy:</span> <span class="string">localhost:8001</span></span><br><span class="line">        <span class="attr">apiPrefix:</span> <span class="string">api/v1/proxy/namespaces/kube-system/services/kubernetes-dashboard/#</span></span><br><span class="line">  <span class="attr">spinnaker.yml:</span> <span class="string">|2</span></span><br><span class="line">    <span class="attr">global:</span></span><br><span class="line">      <span class="attr">spinnaker:</span></span><br><span class="line">        <span class="attr">timezone:</span> <span class="string">&#x27;America/Los_Angeles&#x27;</span></span><br><span class="line">        <span class="attr">architecture:</span> <span class="string">$&#123;PLATFORM_ARCHITECTURE&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">services:</span></span><br><span class="line">      <span class="attr">default:</span></span><br><span class="line">        <span class="attr">host:</span> <span class="string">localhost</span></span><br><span class="line">        <span class="attr">protocol:</span> <span class="string">http</span></span><br><span class="line">      <span class="attr">clouddriver:</span></span><br><span class="line">        <span class="attr">host:</span> <span class="string">$&#123;services.default.host&#125;</span></span><br><span class="line">        <span class="attr">port:</span> <span class="number">7002</span></span><br><span class="line">        <span class="attr">baseUrl:</span> <span class="string">$&#123;services.default.protocol&#125;://$&#123;services.clouddriver.host&#125;:$&#123;services.clouddriver.port&#125;</span></span><br><span class="line">        <span class="attr">aws:</span></span><br><span class="line">          <span class="attr">udf:</span></span><br><span class="line">            <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">echo:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">host:</span> <span class="string">$&#123;services.default.host&#125;</span></span><br><span class="line">        <span class="attr">port:</span> <span class="number">8089</span></span><br><span class="line">        <span class="attr">baseUrl:</span> <span class="string">$&#123;services.default.protocol&#125;://$&#123;services.echo.host&#125;:$&#123;services.echo.port&#125;</span></span><br><span class="line">        <span class="attr">cassandra:</span></span><br><span class="line">          <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">        <span class="attr">inMemory:</span></span><br><span class="line">          <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">cron:</span></span><br><span class="line">          <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">          <span class="attr">timezone:</span> <span class="string">$&#123;global.spinnaker.timezone&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">notifications:</span></span><br><span class="line">          <span class="attr">mail:</span></span><br><span class="line">            <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">            <span class="attr">host:</span> <span class="comment"># the smtp host</span></span><br><span class="line">            <span class="attr">fromAddress:</span> <span class="comment"># the address for which emails are sent from</span></span><br><span class="line">          <span class="attr">hipchat:</span></span><br><span class="line">            <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">            <span class="attr">url:</span> <span class="comment"># the hipchat server to connect to</span></span><br><span class="line">            <span class="attr">token:</span> <span class="comment"># the hipchat auth token</span></span><br><span class="line">            <span class="attr">botName:</span> <span class="comment"># the username of the bot</span></span><br><span class="line">          <span class="attr">sms:</span></span><br><span class="line">            <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">            <span class="attr">account:</span> <span class="comment"># twilio account id</span></span><br><span class="line">            <span class="attr">token:</span> <span class="comment"># twilio auth token</span></span><br><span class="line">            <span class="attr">from:</span> <span class="comment"># phone number by which sms messages are sent</span></span><br><span class="line">          <span class="attr">slack:</span></span><br><span class="line">            <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">            <span class="attr">token:</span> <span class="comment"># the API token for the bot</span></span><br><span class="line">            <span class="attr">botName:</span> <span class="comment"># the username of the bot</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">deck:</span></span><br><span class="line">        <span class="attr">host:</span> <span class="string">$&#123;services.default.host&#125;</span></span><br><span class="line">        <span class="attr">port:</span> <span class="number">9000</span></span><br><span class="line">        <span class="attr">baseUrl:</span> <span class="string">$&#123;services.default.protocol&#125;://$&#123;services.deck.host&#125;:$&#123;services.deck.port&#125;</span></span><br><span class="line">        <span class="attr">gateUrl:</span> <span class="string">$&#123;API_HOST:services.gate.baseUrl&#125;</span></span><br><span class="line">        <span class="attr">bakeryUrl:</span> <span class="string">$&#123;services.bakery.baseUrl&#125;</span></span><br><span class="line">        <span class="attr">timezone:</span> <span class="string">$&#123;global.spinnaker.timezone&#125;</span></span><br><span class="line">        <span class="attr">auth:</span></span><br><span class="line">          <span class="attr">enabled:</span> <span class="string">$&#123;AUTH_ENABLED:false&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      <span class="attr">fiat:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">        <span class="attr">host:</span> <span class="string">$&#123;services.default.host&#125;</span></span><br><span class="line">        <span class="attr">port:</span> <span class="number">7003</span></span><br><span class="line">        <span class="attr">baseUrl:</span> <span class="string">$&#123;services.default.protocol&#125;://$&#123;services.fiat.host&#125;:$&#123;services.fiat.port&#125;</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">front50:</span></span><br><span class="line">        <span class="attr">host:</span> <span class="string">$&#123;services.default.host&#125;</span></span><br><span class="line">        <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">        <span class="attr">baseUrl:</span> <span class="string">$&#123;services.default.protocol&#125;://$&#123;services.front50.host&#125;:$&#123;services.front50.port&#125;</span></span><br><span class="line">        <span class="attr">storage_bucket:</span> <span class="string">$&#123;SPINNAKER_DEFAULT_STORAGE_BUCKET:&#125;</span></span><br><span class="line">        <span class="attr">bucket_location:</span></span><br><span class="line">        <span class="attr">bucket_root:</span> <span class="string">front50</span></span><br><span class="line">        <span class="attr">cassandra:</span></span><br><span class="line">          <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">        <span class="attr">redis:</span></span><br><span class="line">          <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">        <span class="attr">gcs:</span></span><br><span class="line">          <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">        <span class="attr">s3:</span></span><br><span class="line">          <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">gate:</span></span><br><span class="line">        <span class="attr">host:</span> <span class="string">$&#123;services.default.host&#125;</span></span><br><span class="line">        <span class="attr">port:</span> <span class="number">8084</span></span><br><span class="line">        <span class="attr">baseUrl:</span> <span class="string">$&#123;services.default.protocol&#125;://$&#123;services.gate.host&#125;:$&#123;services.gate.port&#125;</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">igor:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">        <span class="attr">host:</span> <span class="string">$&#123;services.default.host&#125;</span></span><br><span class="line">        <span class="attr">port:</span> <span class="number">8088</span></span><br><span class="line">        <span class="attr">baseUrl:</span> <span class="string">$&#123;services.default.protocol&#125;://$&#123;services.igor.host&#125;:$&#123;services.igor.port&#125;</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">kato:</span></span><br><span class="line">        <span class="attr">host:</span> <span class="string">$&#123;services.clouddriver.host&#125;</span></span><br><span class="line">        <span class="attr">port:</span> <span class="string">$&#123;services.clouddriver.port&#125;</span></span><br><span class="line">        <span class="attr">baseUrl:</span> <span class="string">$&#123;services.clouddriver.baseUrl&#125;</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">mort:</span></span><br><span class="line">        <span class="attr">host:</span> <span class="string">$&#123;services.clouddriver.host&#125;</span></span><br><span class="line">        <span class="attr">port:</span> <span class="string">$&#123;services.clouddriver.port&#125;</span></span><br><span class="line">        <span class="attr">baseUrl:</span> <span class="string">$&#123;services.clouddriver.baseUrl&#125;</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">orca:</span></span><br><span class="line">        <span class="attr">host:</span> <span class="string">$&#123;services.default.host&#125;</span></span><br><span class="line">        <span class="attr">port:</span> <span class="number">8083</span></span><br><span class="line">        <span class="attr">baseUrl:</span> <span class="string">$&#123;services.default.protocol&#125;://$&#123;services.orca.host&#125;:$&#123;services.orca.port&#125;</span></span><br><span class="line">        <span class="attr">timezone:</span> <span class="string">$&#123;global.spinnaker.timezone&#125;</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">oort:</span></span><br><span class="line">        <span class="attr">host:</span> <span class="string">$&#123;services.clouddriver.host&#125;</span></span><br><span class="line">        <span class="attr">port:</span> <span class="string">$&#123;services.clouddriver.port&#125;</span></span><br><span class="line">        <span class="attr">baseUrl:</span> <span class="string">$&#123;services.clouddriver.baseUrl&#125;</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">rosco:</span></span><br><span class="line">        <span class="attr">host:</span> <span class="string">$&#123;services.default.host&#125;</span></span><br><span class="line">        <span class="attr">port:</span> <span class="number">8087</span></span><br><span class="line">        <span class="attr">baseUrl:</span> <span class="string">$&#123;services.default.protocol&#125;://$&#123;services.rosco.host&#125;:$&#123;services.rosco.port&#125;</span></span><br><span class="line">        <span class="attr">configDir:</span> <span class="string">/opt/rosco/config/packer</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">bakery:</span></span><br><span class="line">        <span class="attr">host:</span> <span class="string">$&#123;services.rosco.host&#125;</span></span><br><span class="line">        <span class="attr">port:</span> <span class="string">$&#123;services.rosco.port&#125;</span></span><br><span class="line">        <span class="attr">baseUrl:</span> <span class="string">$&#123;services.rosco.baseUrl&#125;</span></span><br><span class="line">        <span class="attr">extractBuildDetails:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">allowMissingPackageInstallation:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">docker:</span></span><br><span class="line">        <span class="attr">targetRepository:</span> <span class="comment"># Optional, but expected in spinnaker-local.yml if specified.</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">jenkins:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="string">$&#123;services.igor.enabled:false&#125;</span></span><br><span class="line">        <span class="attr">defaultMaster:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">Jenkins</span></span><br><span class="line">          <span class="attr">baseUrl:</span>   <span class="comment"># Expected in spinnaker-local.yml</span></span><br><span class="line">          <span class="attr">username:</span>  <span class="comment"># Expected in spinnaker-local.yml</span></span><br><span class="line">          <span class="attr">password:</span>  <span class="comment"># Expected in spinnaker-local.yml</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">redis:</span></span><br><span class="line">        <span class="attr">host:</span> <span class="string">redis</span></span><br><span class="line">        <span class="attr">port:</span> <span class="number">6379</span></span><br><span class="line">        <span class="attr">connection:</span> <span class="string">$&#123;REDIS_HOST:redis://localhost:6379&#125;</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">cassandra:</span></span><br><span class="line">        <span class="attr">host:</span> <span class="string">$&#123;services.default.host&#125;</span></span><br><span class="line">        <span class="attr">port:</span> <span class="number">9042</span></span><br><span class="line">        <span class="attr">embedded:</span> <span class="literal">false</span></span><br><span class="line">        <span class="attr">cluster:</span> <span class="string">CASS_SPINNAKER</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">travis:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">        <span class="attr">defaultMaster:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">ci</span> <span class="comment"># The display name for this server. Gets prefixed with &quot;travis-&quot;</span></span><br><span class="line">          <span class="attr">baseUrl:</span> <span class="string">https://travis-ci.com</span></span><br><span class="line">          <span class="attr">address:</span> <span class="string">https://api.travis-ci.org</span></span><br><span class="line">          <span class="attr">githubToken:</span> <span class="comment"># GitHub scopes currently required by Travis is required.</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">spectator:</span></span><br><span class="line">        <span class="attr">webEndpoint:</span></span><br><span class="line">          <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">stackdriver:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="string">$&#123;SPINNAKER_STACKDRIVER_ENABLED:false&#125;</span></span><br><span class="line">        <span class="attr">projectName:</span> <span class="string">$&#123;SPINNAKER_STACKDRIVER_PROJECT_NAME:$&#123;providers.google.primaryCredentials.project&#125;&#125;</span></span><br><span class="line">        <span class="attr">credentialsPath:</span> <span class="string">$&#123;SPINNAKER_STACKDRIVER_CREDENTIALS_PATH:$&#123;providers.google.primaryCredentials.jsonPath&#125;&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="attr">providers:</span></span><br><span class="line">      <span class="attr">aws:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="string">$&#123;SPINNAKER_AWS_ENABLED:false&#125;</span></span><br><span class="line">        <span class="attr">simpleDBEnabled:</span> <span class="literal">false</span></span><br><span class="line">        <span class="attr">defaultRegion:</span> <span class="string">$&#123;SPINNAKER_AWS_DEFAULT_REGION:us-west-2&#125;</span></span><br><span class="line">        <span class="attr">defaultIAMRole:</span> <span class="string">BaseIAMRole</span></span><br><span class="line">        <span class="attr">defaultSimpleDBDomain:</span> <span class="string">CLOUD_APPLICATIONS</span></span><br><span class="line">        <span class="attr">primaryCredentials:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">default</span></span><br><span class="line">        <span class="attr">defaultKeyPairTemplate:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;name&#125;&#125;</span>-keypair&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      <span class="attr">google:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="string">$&#123;SPINNAKER_GOOGLE_ENABLED:false&#125;</span></span><br><span class="line">        <span class="attr">defaultRegion:</span> <span class="string">$&#123;SPINNAKER_GOOGLE_DEFAULT_REGION:us-central1&#125;</span></span><br><span class="line">        <span class="attr">defaultZone:</span> <span class="string">$&#123;SPINNAKER_GOOGLE_DEFAULT_ZONE:us-central1-f&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="attr">primaryCredentials:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">my-account-name</span></span><br><span class="line">          <span class="attr">project:</span> <span class="string">$&#123;SPINNAKER_GOOGLE_PROJECT_ID:&#125;</span></span><br><span class="line">          <span class="attr">jsonPath:</span> <span class="string">$&#123;SPINNAKER_GOOGLE_PROJECT_CREDENTIALS_PATH:&#125;</span></span><br><span class="line">          <span class="attr">consul:</span></span><br><span class="line">            <span class="attr">enabled:</span> <span class="string">$&#123;SPINNAKER_GOOGLE_CONSUL_ENABLED:false&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      <span class="attr">cf:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">        <span class="attr">defaultOrg:</span> <span class="string">spinnaker-cf-org</span></span><br><span class="line">        <span class="attr">defaultSpace:</span> <span class="string">spinnaker-cf-space</span></span><br><span class="line">        <span class="attr">primaryCredentials:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">my-cf-account</span></span><br><span class="line">          <span class="attr">api:</span> <span class="string">my-cf-api-uri</span></span><br><span class="line">          <span class="attr">console:</span> <span class="string">my-cf-console-base-url</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">azure:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="string">$&#123;SPINNAKER_AZURE_ENABLED:false&#125;</span></span><br><span class="line">        <span class="attr">defaultRegion:</span> <span class="string">$&#123;SPINNAKER_AZURE_DEFAULT_REGION:westus&#125;</span></span><br><span class="line">        <span class="attr">primaryCredentials:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">my-azure-account</span></span><br><span class="line"></span><br><span class="line">          <span class="attr">clientId:</span></span><br><span class="line">          <span class="attr">appKey:</span></span><br><span class="line">          <span class="attr">tenantId:</span></span><br><span class="line">          <span class="attr">subscriptionId:</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">titan:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">        <span class="attr">defaultRegion:</span> <span class="string">us-east-1</span></span><br><span class="line">        <span class="attr">primaryCredentials:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">my-titan-account</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">kubernetes:</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">enabled:</span> <span class="string">$&#123;SPINNAKER_KUBERNETES_ENABLED:false&#125;</span></span><br><span class="line">        <span class="attr">primaryCredentials:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">my-kubernetes-account</span></span><br><span class="line">          <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line">          <span class="attr">dockerRegistryAccount:</span> <span class="string">$&#123;providers.dockerRegistry.primaryCredentials.name&#125;</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">dockerRegistry:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="string">$&#123;SPINNAKER_KUBERNETES_ENABLED:false&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">primaryCredentials:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">my-docker-registry-account</span></span><br><span class="line">          <span class="attr">address:</span> <span class="string">$&#123;SPINNAKER_DOCKER_REGISTRY:https://index.docker.io/</span> <span class="string">&#125;</span></span><br><span class="line">          <span class="attr">repository:</span> <span class="string">$&#123;SPINNAKER_DOCKER_REPOSITORY:&#125;</span></span><br><span class="line">          <span class="attr">username:</span> <span class="string">$&#123;SPINNAKER_DOCKER_USERNAME:&#125;</span></span><br><span class="line">          <span class="attr">passwordFile:</span> <span class="string">$&#123;SPINNAKER_DOCKER_PASSWORD_FILE:&#125;</span></span><br><span class="line">          </span><br><span class="line">      <span class="attr">openstack:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">        <span class="attr">defaultRegion:</span> <span class="string">$&#123;SPINNAKER_OPENSTACK_DEFAULT_REGION:RegionOne&#125;</span></span><br><span class="line">        <span class="attr">primaryCredentials:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">my-openstack-account</span></span><br><span class="line">          <span class="attr">authUrl:</span> <span class="string">$&#123;OS_AUTH_URL&#125;</span></span><br><span class="line">          <span class="attr">username:</span> <span class="string">$&#123;OS_USERNAME&#125;</span></span><br><span class="line">          <span class="attr">password:</span> <span class="string">$&#123;OS_PASSWORD&#125;</span></span><br><span class="line">          <span class="attr">projectName:</span> <span class="string">$&#123;OS_PROJECT_NAME&#125;</span></span><br><span class="line">          <span class="attr">domainName:</span> <span class="string">$&#123;OS_USER_DOMAIN_NAME:Default&#125;</span></span><br><span class="line">          <span class="attr">regions:</span> <span class="string">$&#123;OS_REGION_NAME:RegionOne&#125;</span></span><br><span class="line">          <span class="attr">insecure:</span> <span class="literal">false</span></span><br><span class="line">  </span><br><span class="line">[<span class="string">root@ops-200</span> <span class="string">clouddriver</span>]<span class="comment"># vim deployemnt.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">armory-clouddriver</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">armory-clouddriver</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">armory</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">revisionHistoryLimit:</span> <span class="number">7</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">armory-clouddriver</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">annotations:</span></span><br><span class="line">        <span class="attr">artifact.spinnaker.io/location:</span> <span class="string">&#x27;&quot;armory&quot;&#x27;</span></span><br><span class="line">        <span class="attr">artifact.spinnaker.io/name:</span> <span class="string">&#x27;&quot;armory-clouddriver&quot;&#x27;</span></span><br><span class="line">        <span class="attr">artifact.spinnaker.io/type:</span> <span class="string">&#x27;&quot;kubernetes/deployment&quot;&#x27;</span></span><br><span class="line">        <span class="attr">moniker.spinnaker.io/application:</span> <span class="string">&#x27;&quot;armory&quot;&#x27;</span></span><br><span class="line">        <span class="attr">moniker.spinnaker.io/cluster:</span> <span class="string">&#x27;&quot;clouddriver&quot;&#x27;</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">armory-clouddriver</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">armory-clouddriver</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">harbor.od.com/armory/clouddriver:v1.11.x</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">        <span class="attr">command:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">bash</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">-c</span></span><br><span class="line">        <span class="attr">args:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">bash</span> <span class="string">/opt/spinnaker/config/default/fetch.sh</span> <span class="string">&amp;&amp;</span> <span class="string">cd</span> <span class="string">/home/spinnaker/config</span></span><br><span class="line">          <span class="string">&amp;&amp;</span> <span class="string">/opt/clouddriver/bin/clouddriver</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">7002</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">JAVA_OPTS</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">-Xmx2048M</span></span><br><span class="line">        <span class="attr">envFrom:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">configMapRef:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">init-env</span></span><br><span class="line">        <span class="attr">livenessProbe:</span></span><br><span class="line">          <span class="attr">failureThreshold:</span> <span class="number">5</span></span><br><span class="line">          <span class="attr">httpGet:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/health</span></span><br><span class="line">            <span class="attr">port:</span> <span class="number">7002</span></span><br><span class="line">            <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">600</span></span><br><span class="line">          <span class="attr">periodSeconds:</span> <span class="number">3</span></span><br><span class="line">          <span class="attr">successThreshold:</span> <span class="number">1</span></span><br><span class="line">          <span class="attr">timeoutSeconds:</span> <span class="number">1</span></span><br><span class="line">        <span class="attr">readinessProbe:</span></span><br><span class="line">          <span class="attr">failureThreshold:</span> <span class="number">5</span></span><br><span class="line">          <span class="attr">httpGet:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/health</span></span><br><span class="line">            <span class="attr">port:</span> <span class="number">7002</span></span><br><span class="line">            <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">180</span></span><br><span class="line">          <span class="attr">periodSeconds:</span> <span class="number">3</span></span><br><span class="line">          <span class="attr">successThreshold:</span> <span class="number">5</span></span><br><span class="line">          <span class="attr">timeoutSeconds:</span> <span class="number">1</span></span><br><span class="line">        <span class="attr">securityContext:</span></span><br><span class="line">          <span class="attr">runAsUser:</span> <span class="number">0</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/etc/podinfo</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">podinfo</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/home/spinnaker/.aws</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">credentials</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/opt/spinnaker/credentials/custom</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">default-kubeconfig</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/opt/spinnaker/config/default</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">default-config</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/opt/spinnaker/config/custom</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">custom-config</span></span><br><span class="line">      <span class="attr">imagePullSecrets:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">harbor</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">configMap:</span></span><br><span class="line">          <span class="attr">defaultMode:</span> <span class="number">420</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">default-kubeconfig</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">default-kubeconfig</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">configMap:</span></span><br><span class="line">          <span class="attr">defaultMode:</span> <span class="number">420</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">custom-config</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">custom-config</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">configMap:</span></span><br><span class="line">          <span class="attr">defaultMode:</span> <span class="number">420</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">default-config</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">default-config</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">credentials</span></span><br><span class="line">        <span class="attr">secret:</span></span><br><span class="line">          <span class="attr">defaultMode:</span> <span class="number">420</span></span><br><span class="line">          <span class="attr">secretName:</span> <span class="string">credentials</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">downwardAPI:</span></span><br><span class="line">          <span class="attr">defaultMode:</span> <span class="number">420</span></span><br><span class="line">          <span class="attr">items:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">fieldRef:</span></span><br><span class="line">              <span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line">              <span class="attr">fieldPath:</span> <span class="string">metadata.labels</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">labels</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">fieldRef:</span></span><br><span class="line">              <span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line">              <span class="attr">fieldPath:</span> <span class="string">metadata.annotations</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">annotations</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">podinfo</span></span><br><span class="line">  </span><br><span class="line">[<span class="string">root@ops-200</span> <span class="string">clouddriver</span>]<span class="comment"># vim service.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">armory-clouddriver</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">armory</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">7002</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">7002</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">armory-clouddriver</span>                </span><br></pre></td></tr></table></figure>

<h3 id="应用资源配置清单"><a href="#应用资源配置清单" class="headerlink" title="应用资源配置清单"></a>应用资源配置清单</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 clouddriver]# kubectl apply -f ./init-env.yaml</span><br><span class="line">configmap/init-env created</span><br><span class="line">[root@ops-200 clouddriver]# kubectl apply -f ./default-config.yaml </span><br><span class="line">configmap/default-config created</span><br><span class="line">[root@ops-200 clouddriver]# kubectl apply -f ./custom-config.yaml </span><br><span class="line">configmap/custom-config created</span><br><span class="line">[root@ops-200 clouddriver]# kubectl apply -f ./deployemnt.yaml </span><br><span class="line">deployment.apps/armory-clouddriver created</span><br><span class="line">[root@ops-200 clouddriver]# kubectl apply -f ./service.yaml </span><br><span class="line">service/armory-clouddriver created</span><br></pre></td></tr></table></figure>

<h3 id="检查"><a href="#检查" class="headerlink" title="检查"></a>检查</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@k8s03-23 ~]# docker ps -a|grep minio</span><br><span class="line">b71a5af3c57e        533fee13ab07                                &quot;/usr/bin/docker-ent…&quot;   6 hours ago         Up 6 hours                              k8s_minio_minio-5b5dfb4d78-6bt6f_armory_7a73fb23-bc50-4635-98e3-e9d9933503ab_0</span><br><span class="line">d5edcbc1e477        harbor.od.com/public/pause:latest           &quot;/pause&quot;                 6 hours ago         Up 6 hours                              k8s_POD_minio-5b5dfb4d78-6bt6f_armory_7a73fb23-bc50-4635-98e3-e9d9933503ab_0</span><br><span class="line">[root@k8s03-23 ~]# docker exec -it b71a5af3c57e sh</span><br><span class="line">/ # curl armory-clouddriver:7002/health</span><br><span class="line">&#123;&quot;status&quot;:&quot;UP&quot;,&quot;kubernetes&quot;:&#123;&quot;status&quot;:&quot;UP&quot;&#125;,&quot;dockerRegistry&quot;:&#123;&quot;status&quot;:&quot;UP&quot;&#125;,&quot;redisHealth&quot;:&#123;&quot;status&quot;:&quot;UP&quot;,&quot;maxIdle&quot;:100,&quot;minIdle&quot;:25,&quot;numActive&quot;:0,&quot;numIdle&quot;:5,&quot;numWaiters&quot;:0&#125;,&quot;diskSpace&quot;:&#123;&quot;status&quot;:&quot;UP&quot;,&quot;total&quot;:21250441216,&quot;free&quot;:15657390080,&quot;threshold&quot;:10485760&#125;&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
        <tag>spinnaker</tag>
      </tags>
  </entry>
  <entry>
    <title>spinnaker之echo部署</title>
    <url>/2020/03/25/spinnaker%E4%B9%8Becho%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<h3 id="准备镜像"><a href="#准备镜像" class="headerlink" title="准备镜像"></a>准备镜像</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 ~]# docker pull docker.io/armory/echo-armory:c36d576-release-1.8.x-617c567</span><br><span class="line">[root@ops-200 ~]# docker images|grep echo</span><br><span class="line">armory/echo-armory                                                     c36d576-release-1.8.x-617c567    415efd46f474        20 months ago       287MB</span><br><span class="line">[root@ops-200 ~]# docker tag 415efd46f474 harbor.od.com/armory/echo:v1.8.x</span><br><span class="line">[root@ops-200 ~]# docker push harbor.od.com/armory/echo:v1.8.x</span><br></pre></td></tr></table></figure>

<span id="more"></span>  

<h3 id="准备资源配置清单"><a href="#准备资源配置清单" class="headerlink" title="准备资源配置清单"></a>准备资源配置清单</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line">[<span class="string">root@ops-200</span> <span class="string">echo</span>]<span class="comment"># vim deployment.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">armory-echo</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">armory-echo</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">armory</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">revisionHistoryLimit:</span> <span class="number">7</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">armory-echo</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">annotations:</span></span><br><span class="line">        <span class="attr">artifact.spinnaker.io/location:</span> <span class="string">&#x27;&quot;armory&quot;&#x27;</span></span><br><span class="line">        <span class="attr">artifact.spinnaker.io/name:</span> <span class="string">&#x27;&quot;armory-echo&quot;&#x27;</span></span><br><span class="line">        <span class="attr">artifact.spinnaker.io/type:</span> <span class="string">&#x27;&quot;kubernetes/deployment&quot;&#x27;</span></span><br><span class="line">        <span class="attr">moniker.spinnaker.io/application:</span> <span class="string">&#x27;&quot;armory&quot;&#x27;</span></span><br><span class="line">        <span class="attr">moniker.spinnaker.io/cluster:</span> <span class="string">&#x27;&quot;echo&quot;&#x27;</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">armory-echo</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">armory-echo</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">harbor.od.com/armory/echo:v1.8.x</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">        <span class="attr">command:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">bash</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">-c</span></span><br><span class="line">        <span class="attr">args:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">bash</span> <span class="string">/opt/spinnaker/config/default/fetch.sh</span> <span class="string">&amp;&amp;</span> <span class="string">cd</span> <span class="string">/home/spinnaker/config</span></span><br><span class="line">          <span class="string">&amp;&amp;</span> <span class="string">/opt/echo/bin/echo</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8089</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">JAVA_OPTS</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">-javaagent:/opt/echo/lib/jamm-0.2.5.jar</span> <span class="string">-Xmx1000M</span></span><br><span class="line">        <span class="attr">envFrom:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">configMapRef:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">init-env</span></span><br><span class="line">        <span class="attr">livenessProbe:</span></span><br><span class="line">          <span class="attr">failureThreshold:</span> <span class="number">3</span></span><br><span class="line">          <span class="attr">httpGet:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/health</span></span><br><span class="line">            <span class="attr">port:</span> <span class="number">8089</span></span><br><span class="line">            <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">600</span></span><br><span class="line">          <span class="attr">periodSeconds:</span> <span class="number">3</span></span><br><span class="line">          <span class="attr">successThreshold:</span> <span class="number">1</span></span><br><span class="line">          <span class="attr">timeoutSeconds:</span> <span class="number">1</span></span><br><span class="line">        <span class="attr">readinessProbe:</span></span><br><span class="line">          <span class="attr">failureThreshold:</span> <span class="number">3</span></span><br><span class="line">          <span class="attr">httpGet:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/health</span></span><br><span class="line">            <span class="attr">port:</span> <span class="number">8089</span></span><br><span class="line">            <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">180</span></span><br><span class="line">          <span class="attr">periodSeconds:</span> <span class="number">3</span></span><br><span class="line">          <span class="attr">successThreshold:</span> <span class="number">5</span></span><br><span class="line">          <span class="attr">timeoutSeconds:</span> <span class="number">1</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/etc/podinfo</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">podinfo</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/opt/spinnaker/config/default</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">default-config</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/opt/spinnaker/config/custom</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">custom-config</span></span><br><span class="line">      <span class="attr">imagePullSecrets:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">harbor</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">configMap:</span></span><br><span class="line">          <span class="attr">defaultMode:</span> <span class="number">420</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">custom-config</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">custom-config</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">configMap:</span></span><br><span class="line">          <span class="attr">defaultMode:</span> <span class="number">420</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">default-config</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">default-config</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">downwardAPI:</span></span><br><span class="line">          <span class="attr">defaultMode:</span> <span class="number">420</span></span><br><span class="line">          <span class="attr">items:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">fieldRef:</span></span><br><span class="line">              <span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line">              <span class="attr">fieldPath:</span> <span class="string">metadata.labels</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">labels</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">fieldRef:</span></span><br><span class="line">              <span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line">              <span class="attr">fieldPath:</span> <span class="string">metadata.annotations</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">annotations</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">podinfo</span></span><br><span class="line"></span><br><span class="line">[<span class="string">root@ops-200</span> <span class="string">echo</span>]<span class="comment"># vim service.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">armory-echo</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">armory</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">8089</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">8089</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">armory-echo</span></span><br></pre></td></tr></table></figure>

<h3 id="应用资源配置清单"><a href="#应用资源配置清单" class="headerlink" title="应用资源配置清单"></a>应用资源配置清单</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 echo]# kubectl apply -f deployment.yaml </span><br><span class="line">deployment.apps/armory-echo created</span><br><span class="line">[root@ops-200 echo]# kubectl apply -f service.yaml </span><br><span class="line">service/armory-echo created</span><br></pre></td></tr></table></figure>

<h3 id="检查"><a href="#检查" class="headerlink" title="检查"></a>检查</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@k8s03-23 ~]# docker exec -it b71a5af3c57e sh</span><br><span class="line">/ # curl armory-echo:8089/health</span><br><span class="line">&#123;&quot;status&quot;:&quot;UP&quot;&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
        <tag>spinnaker</tag>
      </tags>
  </entry>
  <entry>
    <title>spinnaker之front50部署</title>
    <url>/2020/03/25/spinnaker%E4%B9%8Bfront50%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<h3 id="准备镜像"><a href="#准备镜像" class="headerlink" title="准备镜像"></a>准备镜像</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 ~]# docker pull armory/spinnaker-front50-slim:release-1.8.x-93febf2</span><br><span class="line">[root@ops-200 ~]# docker images|grep front</span><br><span class="line">armory/spinnaker-front50-slim                                          release-1.8.x-93febf2            0d353788f4f2        18 months ago       273MB</span><br><span class="line">[root@ops-200 ~]# docker tag 0d353788f4f2 harbor.od.com/armory/front50:v1.8.x</span><br><span class="line">[root@ops-200 ~]# docker push harbor.od.com/armory/front50:v1.8.x</span><br></pre></td></tr></table></figure>

<span id="more"></span>  

<h3 id="准备资源配置清单"><a href="#准备资源配置清单" class="headerlink" title="准备资源配置清单"></a>准备资源配置清单</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line">[<span class="string">root@ops-200</span> <span class="string">front50</span>]<span class="comment"># vim deployment.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">armory-front50</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">armory-front50</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">armory</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">revisionHistoryLimit:</span> <span class="number">7</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">armory-front50</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">annotations:</span></span><br><span class="line">        <span class="attr">artifact.spinnaker.io/location:</span> <span class="string">&#x27;&quot;armory&quot;&#x27;</span></span><br><span class="line">        <span class="attr">artifact.spinnaker.io/name:</span> <span class="string">&#x27;&quot;armory-front50&quot;&#x27;</span></span><br><span class="line">        <span class="attr">artifact.spinnaker.io/type:</span> <span class="string">&#x27;&quot;kubernetes/deployment&quot;&#x27;</span></span><br><span class="line">        <span class="attr">moniker.spinnaker.io/application:</span> <span class="string">&#x27;&quot;armory&quot;&#x27;</span></span><br><span class="line">        <span class="attr">moniker.spinnaker.io/cluster:</span> <span class="string">&#x27;&quot;front50&quot;&#x27;</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">armory-front50</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">armory-front50</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">harbor.od.com/armory/front50:v1.8.x</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">        <span class="attr">command:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">bash</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">-c</span></span><br><span class="line">        <span class="attr">args:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">bash</span> <span class="string">/opt/spinnaker/config/default/fetch.sh</span> <span class="string">&amp;&amp;</span> <span class="string">cd</span> <span class="string">/home/spinnaker/config</span></span><br><span class="line">          <span class="string">&amp;&amp;</span> <span class="string">/opt/front50/bin/front50</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8080</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">JAVA_OPTS</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">-javaagent:/opt/front50/lib/jamm-0.2.5.jar</span> <span class="string">-Xmx1000M</span></span><br><span class="line">        <span class="attr">envFrom:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">configMapRef:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">init-env</span></span><br><span class="line">        <span class="attr">livenessProbe:</span></span><br><span class="line">          <span class="attr">failureThreshold:</span> <span class="number">3</span></span><br><span class="line">          <span class="attr">httpGet:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/health</span></span><br><span class="line">            <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">            <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">600</span></span><br><span class="line">          <span class="attr">periodSeconds:</span> <span class="number">3</span></span><br><span class="line">          <span class="attr">successThreshold:</span> <span class="number">1</span></span><br><span class="line">          <span class="attr">timeoutSeconds:</span> <span class="number">1</span></span><br><span class="line">        <span class="attr">readinessProbe:</span></span><br><span class="line">          <span class="attr">failureThreshold:</span> <span class="number">3</span></span><br><span class="line">          <span class="attr">httpGet:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/health</span></span><br><span class="line">            <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">            <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">180</span></span><br><span class="line">          <span class="attr">periodSeconds:</span> <span class="number">5</span></span><br><span class="line">          <span class="attr">successThreshold:</span> <span class="number">8</span></span><br><span class="line">          <span class="attr">timeoutSeconds:</span> <span class="number">1</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/etc/podinfo</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">podinfo</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/home/spinnaker/.aws</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">credentials</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/opt/spinnaker/config/default</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">default-config</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/opt/spinnaker/config/custom</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">custom-config</span></span><br><span class="line">      <span class="attr">imagePullSecrets:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">harbor</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">configMap:</span></span><br><span class="line">          <span class="attr">defaultMode:</span> <span class="number">420</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">custom-config</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">custom-config</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">configMap:</span></span><br><span class="line">          <span class="attr">defaultMode:</span> <span class="number">420</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">default-config</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">default-config</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">credentials</span></span><br><span class="line">        <span class="attr">secret:</span></span><br><span class="line">          <span class="attr">defaultMode:</span> <span class="number">420</span></span><br><span class="line">          <span class="attr">secretName:</span> <span class="string">credentials</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">downwardAPI:</span></span><br><span class="line">          <span class="attr">defaultMode:</span> <span class="number">420</span></span><br><span class="line">          <span class="attr">items:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">fieldRef:</span></span><br><span class="line">              <span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line">              <span class="attr">fieldPath:</span> <span class="string">metadata.labels</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">labels</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">fieldRef:</span></span><br><span class="line">              <span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line">              <span class="attr">fieldPath:</span> <span class="string">metadata.annotations</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">annotations</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">podinfo</span></span><br><span class="line"> </span><br><span class="line">[<span class="string">root@ops-200</span> <span class="string">front50</span>]<span class="comment"># vim service.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">armory-front50</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">armory</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">8080</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">armory-front50</span></span><br></pre></td></tr></table></figure>

<h3 id="应用资源配置清单"><a href="#应用资源配置清单" class="headerlink" title="应用资源配置清单"></a>应用资源配置清单</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 front50]# kubectl apply -f deployment.yaml </span><br><span class="line">deployment.apps/armory-front50 created</span><br><span class="line">[root@ops-200 front50]# kubectl apply -f service.yaml </span><br><span class="line">service/armory-front50 create</span><br></pre></td></tr></table></figure>

<h3 id="检查"><a href="#检查" class="headerlink" title="检查"></a>检查</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@k8s03-23 ~]# docker ps -a|grep minio</span><br><span class="line">b71a5af3c57e        533fee13ab07                                &quot;/usr/bin/docker-ent…&quot;   23 hours ago        Up 23 hours                                     k8s_minio_minio-5b5dfb4d78-6bt6f_armory_7a73fb23-bc50-4635-98e3-e9d9933503ab_0</span><br><span class="line">d5edcbc1e477        harbor.od.com/public/pause:latest           &quot;/pause&quot;                 23 hours ago        Up 23 hours                                     k8s_POD_minio-5b5dfb4d78-6bt6f_armory_7a73fb23-bc50-4635-98e3-e9d9933503ab_0</span><br><span class="line">[root@k8s03-23 ~]# docker exec -it b71a5af3c57e sh</span><br><span class="line">/ # curl armory-front50:8080/health</span><br><span class="line">&#123;&quot;status&quot;:&quot;UP&quot;&#125;</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
        <tag>spinnaker</tag>
      </tags>
  </entry>
  <entry>
    <title>kubernetes安装部署sonarqube</title>
    <url>/2021/08/09/sonarqube%E9%83%A8%E7%BD%B2%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h2 id="sonarqube部署安装"><a href="#sonarqube部署安装" class="headerlink" title="sonarqube部署安装"></a>sonarqube部署安装</h2><h3 id="镜像准备"><a href="#镜像准备" class="headerlink" title="镜像准备"></a>镜像准备</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">postgres:11.6</span><br><span class="line">sonarqube:9.0.0-community</span><br><span class="line">busybox:1.27.1</span><br></pre></td></tr></table></figure>

<h3 id="安装postgres"><a href="#安装postgres" class="headerlink" title="安装postgres"></a>安装postgres</h3><p>sonarqube7.9及以上使用postgres为数据库使用</p>
<div class="tabs" id="postgres"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#postgres-1">PVC</button></li><li class="tab"><button type="button" data-href="#postgres-2">Deployment</button></li><li class="tab"><button type="button" data-href="#postgres-3">Service</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="postgres-1"><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolumeClaim</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">sonar-mysql</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">demo</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">accessModes:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">ReadWriteMany</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">    <span class="attr">requests:</span></span><br><span class="line">      <span class="attr">storage:</span> <span class="string">1Gi</span></span><br><span class="line">  <span class="attr">storageClassName:</span> <span class="string">nfs</span></span><br><span class="line">  <span class="attr">volumeMode:</span> <span class="string">Filesystem</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="postgres-2"><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">sonar-db</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">demo</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">sonar-db</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">sonar-db</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">sonar-db</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">sonar-db</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">sonar-db</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">sonar-db</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">sonar-mysql</span></span><br><span class="line">          <span class="attr">persistentVolumeClaim:</span></span><br><span class="line">            <span class="attr">claimName:</span> <span class="string">sonar-mysql</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">postgres</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">&#x27;postgres:11.6&#x27;</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">5432</span></span><br><span class="line">              <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POSTGRES_DB</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">sonardb</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POSTGRES_USER</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">sonar</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POSTGRES_PASSWORD</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">sonar</span></span><br><span class="line">          <span class="attr">resources:</span></span><br><span class="line">            <span class="attr">limits:</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="string">&#x27;1&#x27;</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">2Gi</span></span><br><span class="line">            <span class="attr">requests:</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="string">800m</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">2Gi</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">sonar-mysql</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/var/lib/postgresql/data</span></span><br><span class="line">          <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">      <span class="attr">restartPolicy:</span> <span class="string">Always</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="postgres-3"><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">sonar-db</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">demo</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">sonar-db</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">tcp-port-0</span></span><br><span class="line">      <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">5432</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">5432</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">sonar-db</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ClusterIP</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>

<h3 id="安装sonarqube"><a href="#安装sonarqube" class="headerlink" title="安装sonarqube"></a>安装sonarqube</h3><div class="tabs" id="sonarqube"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#sonarqube-1">PVC</button></li><li class="tab"><button type="button" data-href="#sonarqube-2">Deployment</button></li><li class="tab"><button type="button" data-href="#sonarqube-3">Service</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="sonarqube-1"><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolumeClaim</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">sonar-data</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">demo</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">accessModes:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">ReadWriteMany</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">    <span class="attr">requests:</span></span><br><span class="line">      <span class="attr">storage:</span> <span class="string">1Gi</span></span><br><span class="line">  <span class="attr">storageClassName:</span> <span class="string">nfs</span></span><br><span class="line">  <span class="attr">volumeMode:</span> <span class="string">Filesystem</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolumeClaim</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">sonar-extensions</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">demo</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">accessModes:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">ReadWriteMany</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">    <span class="attr">requests:</span></span><br><span class="line">      <span class="attr">storage:</span> <span class="string">1Gi</span></span><br><span class="line">  <span class="attr">storageClassName:</span> <span class="string">nfs</span></span><br><span class="line">  <span class="attr">volumeMode:</span> <span class="string">Filesystem</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="sonarqube-2"><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">sonarqube</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">demo</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">sonarqube</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">sonarqube</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">sonarqube</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">sonarqube</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">sonarqube</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">sonarqube</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">sonar-extensions</span></span><br><span class="line">          <span class="attr">persistentVolumeClaim:</span></span><br><span class="line">            <span class="attr">claimName:</span> <span class="string">sonar-extensions</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">sonar-data</span></span><br><span class="line">          <span class="attr">persistentVolumeClaim:</span></span><br><span class="line">            <span class="attr">claimName:</span> <span class="string">sonar-data</span></span><br><span class="line">      <span class="attr">initContainers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">init-sysctl</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">&#x27;busybox:1.27.1&#x27;</span></span><br><span class="line">          <span class="attr">command:</span>   <span class="comment"># elasticsearch用户拥有的内存权限太小，es启动会报错，此命令保证es正常启动</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">sysctl</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;-w&#x27;</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">vm.max_map_count=262144</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">              <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">          <span class="attr">resources:</span></span><br><span class="line">            <span class="attr">limits:</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="string">&#x27;1&#x27;</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">2Gi</span></span><br><span class="line">            <span class="attr">requests:</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="string">800m</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">2Gi</span></span><br><span class="line">          <span class="attr">terminationMessagePath:</span> <span class="string">/dev/termination-log</span></span><br><span class="line">          <span class="attr">terminationMessagePolicy:</span> <span class="string">File</span></span><br><span class="line">          <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">          <span class="attr">securityContext:</span>   <span class="comment"># 配置特权</span></span><br><span class="line">            <span class="attr">privileged:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">sonarqube</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">&#x27;sonarqube:9.0.0-community&#x27;</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">9000</span></span><br><span class="line">              <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">SONARQUBE_JDBC_USERNAME</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">sonar</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">SONARQUBE_JDBC_PASSWORD</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">sonar</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">SONARQUBE_JDBC_URL</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">&#x27;jdbc:postgresql://sonar-db.demo:5432/sonardb&#x27;</span></span><br><span class="line">          <span class="attr">resources:</span></span><br><span class="line">            <span class="attr">limits:</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="string">&#x27;1&#x27;</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">4Gi</span></span><br><span class="line">            <span class="attr">requests:</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="string">800m</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">2Gi</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">sonar-extensions</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/opt/sonarqube/extensions</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">sonar-data</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/opt/sonarqube/data</span></span><br><span class="line">          <span class="attr">readinessProbe:</span></span><br><span class="line">            <span class="attr">httpGet:</span></span><br><span class="line">              <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">              <span class="attr">port:</span> <span class="number">9000</span></span><br><span class="line">              <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">            <span class="attr">initialDelaySeconds:</span> <span class="number">240</span></span><br><span class="line">            <span class="attr">timeoutSeconds:</span> <span class="number">5</span></span><br><span class="line">            <span class="attr">periodSeconds:</span> <span class="number">5</span></span><br><span class="line">            <span class="attr">successThreshold:</span> <span class="number">1</span></span><br><span class="line">            <span class="attr">failureThreshold:</span> <span class="number">3</span></span><br><span class="line">          <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">          <span class="attr">securityContext:</span></span><br><span class="line">            <span class="attr">privileged:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">restartPolicy:</span> <span class="string">Always</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="sonarqube-3"><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">sonarqube</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">demo</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">sonarqube</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">tcp-port-0</span></span><br><span class="line">      <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">9000</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">9000</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">sonarqube</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ClusterIP|NodePort</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>

<p><img src="/image/sonar/image-20210809163313805.png" alt="image-20210809163313805"></p>
]]></content>
      <categories>
        <category>Kubernetes</category>
        <category>jenkins</category>
      </categories>
      <tags>
        <tag>jenkins</tag>
        <tag>kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>spinnaker之gate部署</title>
    <url>/2020/03/23/spinnaker%E4%B9%8Bgate%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<h3 id="准备镜像"><a href="#准备镜像" class="headerlink" title="准备镜像"></a>准备镜像</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 ~]# docker pull docker.io/armory/gate-armory:dfafe73-release-1.8.x-5d505ca</span><br><span class="line">[root@ops-200 ~]# docker images|grep gate</span><br><span class="line">armory/gate-armory                                                     dfafe73-release-1.8.x-5d505ca               b092d4665301        20 months ago       179MB</span><br><span class="line">[root@ops-200 ~]# docker tag b092d4665301 harbor.od.com/armory/gate:v1.8.x</span><br><span class="line">[root@ops-200 ~]# docker push harbor.od.com/armory/gate:v1.8.x</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h3 id="准备资源配置清单"><a href="#准备资源配置清单" class="headerlink" title="准备资源配置清单"></a>准备资源配置清单</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line">[<span class="string">root@ops-200</span> <span class="string">gate</span>]<span class="comment"># vim deployment.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">armory-gate</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">armory-gate</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">armory</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">revisionHistoryLimit:</span> <span class="number">7</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">armory-gate</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">annotations:</span></span><br><span class="line">        <span class="attr">artifact.spinnaker.io/location:</span> <span class="string">&#x27;&quot;armory&quot;&#x27;</span></span><br><span class="line">        <span class="attr">artifact.spinnaker.io/name:</span> <span class="string">&#x27;&quot;armory-gate&quot;&#x27;</span></span><br><span class="line">        <span class="attr">artifact.spinnaker.io/type:</span> <span class="string">&#x27;&quot;kubernetes/deployment&quot;&#x27;</span></span><br><span class="line">        <span class="attr">moniker.spinnaker.io/application:</span> <span class="string">&#x27;&quot;armory&quot;&#x27;</span></span><br><span class="line">        <span class="attr">moniker.spinnaker.io/cluster:</span> <span class="string">&#x27;&quot;gate&quot;&#x27;</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">armory-gate</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">armory-gate</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">harbor.od.com/armory/gate:v1.8.x</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">        <span class="attr">command:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">bash</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">-c</span></span><br><span class="line">        <span class="attr">args:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">bash</span> <span class="string">/opt/spinnaker/config/default/fetch.sh</span> <span class="string">gate</span> <span class="string">&amp;&amp;</span> <span class="string">cd</span> <span class="string">/home/spinnaker/config</span></span><br><span class="line">          <span class="string">&amp;&amp;</span> <span class="string">/opt/gate/bin/gate</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8084</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">gate-port</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8085</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">gate-api-port</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">GATE_PORT_MAPPING</span></span><br><span class="line">          <span class="attr">value:</span> <span class="number">-8084</span><span class="string">:8084</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">GATE_API_PORT_MAPPING</span></span><br><span class="line">          <span class="attr">value:</span> <span class="number">-8085</span><span class="string">:8085</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">JAVA_OPTS</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">-Xmx1000M</span></span><br><span class="line">        <span class="attr">envFrom:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">configMapRef:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">init-env</span></span><br><span class="line">        <span class="attr">livenessProbe:</span></span><br><span class="line">          <span class="attr">exec:</span></span><br><span class="line">            <span class="attr">command:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">/bin/bash</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">-c</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">wget</span> <span class="string">-O</span> <span class="bullet">-</span> <span class="string">http://localhost:8084/health</span> <span class="string">||</span> <span class="string">wget</span> <span class="string">-O</span> <span class="bullet">-</span> <span class="string">https://localhost:8084/health</span></span><br><span class="line">          <span class="attr">failureThreshold:</span> <span class="number">5</span></span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">600</span></span><br><span class="line">          <span class="attr">periodSeconds:</span> <span class="number">5</span></span><br><span class="line">          <span class="attr">successThreshold:</span> <span class="number">1</span></span><br><span class="line">          <span class="attr">timeoutSeconds:</span> <span class="number">1</span></span><br><span class="line">        <span class="attr">readinessProbe:</span></span><br><span class="line">          <span class="attr">exec:</span></span><br><span class="line">            <span class="attr">command:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">/bin/bash</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">-c</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">wget</span> <span class="string">-O</span> <span class="bullet">-</span> <span class="string">http://localhost:8084/health?checkDownstreamServices=true&amp;downstreamServices=true</span></span><br><span class="line">              <span class="string">||</span> <span class="string">wget</span> <span class="string">-O</span> <span class="bullet">-</span> <span class="string">https://localhost:8084/health?checkDownstreamServices=true&amp;downstreamServices=true</span></span><br><span class="line">          <span class="attr">failureThreshold:</span> <span class="number">3</span></span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">180</span></span><br><span class="line">          <span class="attr">periodSeconds:</span> <span class="number">5</span></span><br><span class="line">          <span class="attr">successThreshold:</span> <span class="number">10</span></span><br><span class="line">          <span class="attr">timeoutSeconds:</span> <span class="number">1</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/etc/podinfo</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">podinfo</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/opt/spinnaker/config/default</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">default-config</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/opt/spinnaker/config/custom</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">custom-config</span></span><br><span class="line">      <span class="attr">imagePullSecrets:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">harbor</span></span><br><span class="line">      <span class="attr">securityContext:</span></span><br><span class="line">        <span class="attr">runAsUser:</span> <span class="number">0</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">configMap:</span></span><br><span class="line">          <span class="attr">defaultMode:</span> <span class="number">420</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">custom-config</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">custom-config</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">configMap:</span></span><br><span class="line">          <span class="attr">defaultMode:</span> <span class="number">420</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">default-config</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">default-config</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">downwardAPI:</span></span><br><span class="line">          <span class="attr">defaultMode:</span> <span class="number">420</span></span><br><span class="line">          <span class="attr">items:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">fieldRef:</span></span><br><span class="line">              <span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line">              <span class="attr">fieldPath:</span> <span class="string">metadata.labels</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">labels</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">fieldRef:</span></span><br><span class="line">              <span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line">              <span class="attr">fieldPath:</span> <span class="string">metadata.annotations</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">annotations</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">podinfo</span></span><br><span class="line"></span><br><span class="line">[<span class="string">root@ops-200</span> <span class="string">gate</span>]<span class="comment"># vim service.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">armory-gate</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">armory</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">gate-port</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">8084</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">8084</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">gate-api-port</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">8085</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">8085</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">armory-gate</span></span><br></pre></td></tr></table></figure>

<h3 id="应用资源配置清单"><a href="#应用资源配置清单" class="headerlink" title="应用资源配置清单"></a>应用资源配置清单</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 gate]# kubectl apply -f deployment.yaml </span><br><span class="line">deployment.apps/armory-gate created</span><br><span class="line">[root@ops-200 gate]# kubectl apply -f service.yaml </span><br><span class="line">service/armory-gate created</span><br></pre></td></tr></table></figure>

<h3 id="检查"><a href="#检查" class="headerlink" title="检查"></a>检查</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@k8s03-23 bin]# docker exec -it b71a5af3c57e sh</span><br><span class="line">/ # curl armory-gate:8084/health</span><br><span class="line">&#123;&quot;status&quot;:&quot;UP&quot;&#125;</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
        <tag>spinnaker</tag>
      </tags>
  </entry>
  <entry>
    <title>spinnaker之igor部署</title>
    <url>/2020/03/25/spinnaker%E4%B9%8Bigor%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<h3 id="镜像准备"><a href="#镜像准备" class="headerlink" title="镜像准备"></a>镜像准备</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 ~]#  docker pull docker.io/armory/spinnaker-igor-slim:release-1.8-x-new-install-healthy-ae2b329</span><br><span class="line">[root@ops-200 ~]# docker images|grep igor</span><br><span class="line">armory/spinnaker-igor-slim                                             release-1.8-x-new-install-healthy-ae2b329   23984f5b43f6        20 months ago       135MB</span><br><span class="line">[root@ops-200 ~]# docker tag 23984f5b43f6 harbor.od.com/armory/igor:v1.8.x</span><br><span class="line">[root@ops-200 ~]# docker push harbor.od.com/armory/igor:v1.8.x</span><br></pre></td></tr></table></figure>

<span id="more"></span>  

<h3 id="准备资源配置清单"><a href="#准备资源配置清单" class="headerlink" title="准备资源配置清单"></a>准备资源配置清单</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line">[<span class="string">root@ops-200</span> <span class="string">igor</span>]<span class="comment"># vim deployment.yaml</span></span><br><span class="line">[<span class="string">root@ops-200</span> <span class="string">igor</span>]<span class="comment"># cat deployment.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">armory-igor</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">armory-igor</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">armory</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">revisionHistoryLimit:</span> <span class="number">7</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">armory-igor</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">annotations:</span></span><br><span class="line">        <span class="attr">artifact.spinnaker.io/location:</span> <span class="string">&#x27;&quot;armory&quot;&#x27;</span></span><br><span class="line">        <span class="attr">artifact.spinnaker.io/name:</span> <span class="string">&#x27;&quot;armory-igor&quot;&#x27;</span></span><br><span class="line">        <span class="attr">artifact.spinnaker.io/type:</span> <span class="string">&#x27;&quot;kubernetes/deployment&quot;&#x27;</span></span><br><span class="line">        <span class="attr">moniker.spinnaker.io/application:</span> <span class="string">&#x27;&quot;armory&quot;&#x27;</span></span><br><span class="line">        <span class="attr">moniker.spinnaker.io/cluster:</span> <span class="string">&#x27;&quot;igor&quot;&#x27;</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">armory-igor</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">armory-igor</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">harbor.od.com/armory/igor:v1.8.x</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">        <span class="attr">command:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">bash</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">-c</span></span><br><span class="line">        <span class="attr">args:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">bash</span> <span class="string">/opt/spinnaker/config/default/fetch.sh</span> <span class="string">&amp;&amp;</span> <span class="string">cd</span> <span class="string">/home/spinnaker/config</span></span><br><span class="line">          <span class="string">&amp;&amp;</span> <span class="string">/opt/igor/bin/igor</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8088</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">IGOR_PORT_MAPPING</span></span><br><span class="line">          <span class="attr">value:</span> <span class="number">-8088</span><span class="string">:8088</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">JAVA_OPTS</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">-Xmx1000M</span></span><br><span class="line">        <span class="attr">envFrom:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">configMapRef:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">init-env</span></span><br><span class="line">        <span class="attr">livenessProbe:</span></span><br><span class="line">          <span class="attr">failureThreshold:</span> <span class="number">3</span></span><br><span class="line">          <span class="attr">httpGet:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/health</span></span><br><span class="line">            <span class="attr">port:</span> <span class="number">8088</span></span><br><span class="line">            <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">600</span></span><br><span class="line">          <span class="attr">periodSeconds:</span> <span class="number">3</span></span><br><span class="line">          <span class="attr">successThreshold:</span> <span class="number">1</span></span><br><span class="line">          <span class="attr">timeoutSeconds:</span> <span class="number">1</span></span><br><span class="line">        <span class="attr">readinessProbe:</span></span><br><span class="line">          <span class="attr">failureThreshold:</span> <span class="number">3</span></span><br><span class="line">          <span class="attr">httpGet:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/health</span></span><br><span class="line">            <span class="attr">port:</span> <span class="number">8088</span></span><br><span class="line">            <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">180</span></span><br><span class="line">          <span class="attr">periodSeconds:</span> <span class="number">5</span></span><br><span class="line">          <span class="attr">successThreshold:</span> <span class="number">5</span></span><br><span class="line">          <span class="attr">timeoutSeconds:</span> <span class="number">1</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/etc/podinfo</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">podinfo</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/opt/spinnaker/config/default</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">default-config</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/opt/spinnaker/config/custom</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">custom-config</span></span><br><span class="line">      <span class="attr">imagePullSecrets:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">harbor</span></span><br><span class="line">      <span class="attr">securityContext:</span></span><br><span class="line">        <span class="attr">runAsUser:</span> <span class="number">0</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">configMap:</span></span><br><span class="line">          <span class="attr">defaultMode:</span> <span class="number">420</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">custom-config</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">custom-config</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">configMap:</span></span><br><span class="line">          <span class="attr">defaultMode:</span> <span class="number">420</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">default-config</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">default-config</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">downwardAPI:</span></span><br><span class="line">          <span class="attr">defaultMode:</span> <span class="number">420</span></span><br><span class="line">          <span class="attr">items:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">fieldRef:</span></span><br><span class="line">              <span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line">              <span class="attr">fieldPath:</span> <span class="string">metadata.labels</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">labels</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">fieldRef:</span></span><br><span class="line">              <span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line">              <span class="attr">fieldPath:</span> <span class="string">metadata.annotations</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">annotations</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">podinfo</span></span><br><span class="line">        </span><br><span class="line">[<span class="string">root@ops-200</span> <span class="string">igor</span>]<span class="comment"># vim service.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">armory-igor</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">armory</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">8088</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">8088</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">armory-igor</span></span><br></pre></td></tr></table></figure>

<h3 id="应用资源配置清单"><a href="#应用资源配置清单" class="headerlink" title="应用资源配置清单"></a>应用资源配置清单</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 igor]# kubectl apply -f deployment.yaml </span><br><span class="line">deployment.apps/armory-igor created</span><br><span class="line">[root@ops-200 igor]# kubectl apply -f service.yaml </span><br><span class="line">service/armory-igor created</span><br></pre></td></tr></table></figure>

<h3 id="检查"><a href="#检查" class="headerlink" title="检查"></a>检查</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@k8s03-23 ~]# docker exec -it b71a5af3c57e sh</span><br><span class="line">/ # curl armory-igor:8088/health</span><br><span class="line">&#123;&quot;status&quot;:&quot;UP&quot;&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
        <tag>spinnaker</tag>
      </tags>
  </entry>
  <entry>
    <title>spinnaker之minio部署</title>
    <url>/2020/03/23/spinnaker%E4%B9%8Bminio%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<h3 id="准备镜像"><a href="#准备镜像" class="headerlink" title="准备镜像"></a>准备镜像</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 ~]# docker pull minio/minio:latest</span><br><span class="line">[root@ops-200 ~]# docker images|grep minio</span><br><span class="line">minio/minio                                                            latest                           533fee13ab07        3 days ago          55.4MB</span><br><span class="line">[root@ops-200 ~]# docker tag 533fee13ab07 harbor.od.com/armory/minio:latest</span><br><span class="line">[root@ops-200 ~]# docker push harbor.od.com/armory/minio:latest</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<span id="more"></span>

<h3 id="准备资源配置清单"><a href="#准备资源配置清单" class="headerlink" title="准备资源配置清单"></a>准备资源配置清单</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line">[<span class="string">root@ops-200</span> <span class="string">minio</span>]<span class="comment"># vim deployment.yaml</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">minio</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">minio</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">armory</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">progressDeadlineSeconds:</span> <span class="number">600</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">revisionHistoryLimit:</span> <span class="number">7</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">minio</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">minio</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">minio</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">minio</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">harbor.od.com/armory/minio:latest</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">9000</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">        <span class="attr">args:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">server</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">/data</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MINIO_ACCESS_KEY</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">admin</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MINIO_SECRET_KEY</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">admin123</span></span><br><span class="line">        <span class="attr">readinessProbe:</span></span><br><span class="line">          <span class="attr">failureThreshold:</span> <span class="number">3</span></span><br><span class="line">          <span class="attr">httpGet:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/minio/health/ready</span></span><br><span class="line">            <span class="attr">port:</span> <span class="number">9000</span></span><br><span class="line">            <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">10</span></span><br><span class="line">          <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">          <span class="attr">successThreshold:</span> <span class="number">1</span></span><br><span class="line">          <span class="attr">timeoutSeconds:</span> <span class="number">5</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/data</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">data</span></span><br><span class="line">      <span class="attr">imagePullSecrets:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">harbor</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">nfs:</span></span><br><span class="line">          <span class="attr">server:</span> <span class="string">ops-200.host.com</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">/data/nfs-volume/minio</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">data</span> </span><br><span class="line">        </span><br><span class="line">[<span class="string">root@ops-200</span> <span class="string">minio</span>]<span class="comment"># vim service.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">minio</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">armory</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">9000</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">minio</span></span><br><span class="line">    </span><br><span class="line">[<span class="string">root@ops-200</span> <span class="string">minio</span>]<span class="comment"># vim ingress.yaml </span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">traefik.containo.us/v1alpha1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">IngressRoute</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">monio-route</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">armory</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">entryPoints:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">web</span></span><br><span class="line">  <span class="attr">routes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">match:</span> <span class="string">Host(`minio.od.com`)</span></span><br><span class="line">      <span class="attr">kind:</span> <span class="string">Rule</span></span><br><span class="line">      <span class="attr">services:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">monio</span></span><br><span class="line">          <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>


<h3 id="应用资源配置清单"><a href="#应用资源配置清单" class="headerlink" title="应用资源配置清单"></a>应用资源配置清单</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 minio]# mkdir -p /data/nfs-volume/minio</span><br><span class="line"></span><br><span class="line">[root@k8s01-21 ~]# kubectl apply -f http://k8s-yaml.od.com/armory/minio/deployment.yaml</span><br><span class="line">namespace/armory created</span><br><span class="line">deployment.apps/minio created</span><br><span class="line">[root@k8s01-21 ~]# kubectl create secret docker-registry harbor --docker-server=harbor.od.com --docker-username=admin --docker-password=Harbor12345 -n armory</span><br><span class="line">secret/harbor created</span><br><span class="line">[root@k8s01-21 ~]# kubectl apply -f http://k8s-yaml.od.com/armory/minio/service.yaml </span><br><span class="line">service/minio created</span><br><span class="line">[root@k8s01-21 ~]# kubectl apply -f http://k8s-yaml.od.com/armory/minio/ingress.yaml </span><br><span class="line">ingressroute.traefik.containo.us/monio-route created</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="web"><a href="#web" class="headerlink" title="web"></a>web</h3><p>用户名密码：admin admin123 (yaml里环境变量)</p>
<p><img src="/image/image-20200318114113023.png" alt="image-20200318114113023"></p>
]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
        <tag>spinnaker</tag>
      </tags>
  </entry>
  <entry>
    <title>spinnaker之nginx部署</title>
    <url>/2020/03/25/spinnaker%E4%B9%8Bnginx%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<h3 id="准备镜像"><a href="#准备镜像" class="headerlink" title="准备镜像"></a>准备镜像</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 ~]# docker pull nginx:1.12.2</span><br><span class="line">[root@ops-200 ~]# docker images|grep nginx</span><br><span class="line">nginx                                                                  1.12.2                                      4037a5562b03        22 months ago       108MB</span><br><span class="line">[root@ops-200 ~]# docker tag 4037a5562b03 harbor.od.com/armory/nginx:v1.12.2</span><br><span class="line">[root@ops-200 ~]# docker push harbor.od.com/armory/nginx:v1.12.2</span><br></pre></td></tr></table></figure>
<span id="more"></span>  

<h3 id="准备资源配置清单"><a href="#准备资源配置清单" class="headerlink" title="准备资源配置清单"></a>准备资源配置清单</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line">[<span class="string">root@ops-200</span> <span class="string">nginx</span>]<span class="comment"># vim deployment.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">armory-nginx</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">armory-nginx</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">armory</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">revisionHistoryLimit:</span> <span class="number">7</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">armory-nginx</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">annotations:</span></span><br><span class="line">        <span class="attr">artifact.spinnaker.io/location:</span> <span class="string">&#x27;&quot;armory&quot;&#x27;</span></span><br><span class="line">        <span class="attr">artifact.spinnaker.io/name:</span> <span class="string">&#x27;&quot;armory-nginx&quot;&#x27;</span></span><br><span class="line">        <span class="attr">artifact.spinnaker.io/type:</span> <span class="string">&#x27;&quot;kubernetes/deployment&quot;&#x27;</span></span><br><span class="line">        <span class="attr">moniker.spinnaker.io/application:</span> <span class="string">&#x27;&quot;armory&quot;&#x27;</span></span><br><span class="line">        <span class="attr">moniker.spinnaker.io/cluster:</span> <span class="string">&#x27;&quot;nginx&quot;&#x27;</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">armory-nginx</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">armory-nginx</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">harbor.od.com/armory/nginx:v1.12.2</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">Always</span></span><br><span class="line">        <span class="attr">command:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">bash</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">-c</span></span><br><span class="line">        <span class="attr">args:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">bash</span> <span class="string">/opt/spinnaker/config/default/fetch.sh</span> <span class="string">nginx</span> <span class="string">&amp;&amp;</span> <span class="string">nginx</span> <span class="string">-g</span> <span class="string">&#x27;daemon off;&#x27;</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">443</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">https</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8085</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">api</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">        <span class="attr">livenessProbe:</span></span><br><span class="line">          <span class="attr">failureThreshold:</span> <span class="number">3</span></span><br><span class="line">          <span class="attr">httpGet:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">            <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">            <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">180</span></span><br><span class="line">          <span class="attr">periodSeconds:</span> <span class="number">3</span></span><br><span class="line">          <span class="attr">successThreshold:</span> <span class="number">1</span></span><br><span class="line">          <span class="attr">timeoutSeconds:</span> <span class="number">1</span></span><br><span class="line">        <span class="attr">readinessProbe:</span></span><br><span class="line">          <span class="attr">failureThreshold:</span> <span class="number">3</span></span><br><span class="line">          <span class="attr">httpGet:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">            <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">            <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">30</span></span><br><span class="line">          <span class="attr">periodSeconds:</span> <span class="number">3</span></span><br><span class="line">          <span class="attr">successThreshold:</span> <span class="number">5</span></span><br><span class="line">          <span class="attr">timeoutSeconds:</span> <span class="number">1</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/opt/spinnaker/config/default</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">default-config</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/etc/nginx/conf.d</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">custom-config</span></span><br><span class="line">      <span class="attr">imagePullSecrets:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">harbor</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">configMap:</span></span><br><span class="line">          <span class="attr">defaultMode:</span> <span class="number">420</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">custom-config</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">custom-config</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">configMap:</span></span><br><span class="line">          <span class="attr">defaultMode:</span> <span class="number">420</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">default-config</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">default-config</span></span><br><span class="line"></span><br><span class="line">[<span class="string">root@ops-200</span> <span class="string">nginx</span>]<span class="comment"># vim service.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">armory-nginx</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">armory</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">80</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">https</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">443</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">443</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">api</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">8085</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">8085</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">armory-nginx</span></span><br><span class="line"></span><br><span class="line">[<span class="string">root@ops-200</span> <span class="string">nginx</span>]<span class="comment"># vim ingress.yaml </span></span><br><span class="line"></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">traefik.containo.us/v1alpha1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">IngressRoute</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">spinnaker</span></span><br><span class="line">    <span class="attr">web:</span> <span class="string">spinnaker.od.com</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">spinnaker-route</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">armory</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">entryPoints:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">web</span></span><br><span class="line">  <span class="attr">routes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">match:</span> <span class="string">Host(`spinnaker.od.com`)</span></span><br><span class="line">      <span class="attr">kind:</span> <span class="string">Rule</span></span><br><span class="line">      <span class="attr">services:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">armory-nginx</span></span><br><span class="line">          <span class="attr">port:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure>

<h3 id="应用资源配置清单"><a href="#应用资源配置清单" class="headerlink" title="应用资源配置清单"></a>应用资源配置清单</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 nginx]# kubectl apply -f deployment.yaml </span><br><span class="line">deployment.apps/armory-nginx created</span><br><span class="line">[root@ops-200 nginx]# kubectl apply -f service.yaml </span><br><span class="line">service/armory-nginx created</span><br><span class="line">[root@ops-200 nginx]# kubectl apply -f ingress.yaml </span><br><span class="line">ingressroute.traefik.containo.us/spinnaker-route created</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
        <tag>spinnaker</tag>
      </tags>
  </entry>
  <entry>
    <title>spinnaker之orca部署</title>
    <url>/2020/03/25/spinnaker%E4%B9%8Borca%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<h3 id="准备镜像"><a href="#准备镜像" class="headerlink" title="准备镜像"></a>准备镜像</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 ~]# docker pull docker.io/armory/spinnaker-orca-slim:release-1.8.x-de4ab55</span><br><span class="line">[root@ops-200 ~]# docker images|grep orca</span><br><span class="line">armory/spinnaker-orca-slim                                             release-1.8.x-de4ab55            5103b1f73e04        18 months ago       141MB</span><br><span class="line">[root@ops-200 ~]# docker tag 5103b1f73e04 harbor.od.com/armory/orca:v1.8.x</span><br><span class="line">[root@ops-200 ~]# docker push harbor.od.com/armory/orca:v1.8.x</span><br></pre></td></tr></table></figure>

<span id="more"></span> 

<h3 id="准备资源配置清单"><a href="#准备资源配置清单" class="headerlink" title="准备资源配置清单"></a>准备资源配置清单</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line">[<span class="string">root@ops-200</span> <span class="string">orca</span>]<span class="comment"># vim deployment.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">armory-orca</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">armory-orca</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">armory</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">revisionHistoryLimit:</span> <span class="number">7</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">armory-orca</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">annotations:</span></span><br><span class="line">        <span class="attr">artifact.spinnaker.io/location:</span> <span class="string">&#x27;&quot;armory&quot;&#x27;</span></span><br><span class="line">        <span class="attr">artifact.spinnaker.io/name:</span> <span class="string">&#x27;&quot;armory-orca&quot;&#x27;</span></span><br><span class="line">        <span class="attr">artifact.spinnaker.io/type:</span> <span class="string">&#x27;&quot;kubernetes/deployment&quot;&#x27;</span></span><br><span class="line">        <span class="attr">moniker.spinnaker.io/application:</span> <span class="string">&#x27;&quot;armory&quot;&#x27;</span></span><br><span class="line">        <span class="attr">moniker.spinnaker.io/cluster:</span> <span class="string">&#x27;&quot;orca&quot;&#x27;</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">armory-orca</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">armory-orca</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">harbor.od.com/armory/orca:v1.8.x</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">        <span class="attr">command:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">bash</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">-c</span></span><br><span class="line">        <span class="attr">args:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">bash</span> <span class="string">/opt/spinnaker/config/default/fetch.sh</span> <span class="string">&amp;&amp;</span> <span class="string">cd</span> <span class="string">/home/spinnaker/config</span></span><br><span class="line">          <span class="string">&amp;&amp;</span> <span class="string">/opt/orca/bin/orca</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8083</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">JAVA_OPTS</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">-Xmx1000M</span></span><br><span class="line">        <span class="attr">envFrom:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">configMapRef:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">init-env</span></span><br><span class="line">        <span class="attr">livenessProbe:</span></span><br><span class="line">          <span class="attr">failureThreshold:</span> <span class="number">5</span></span><br><span class="line">          <span class="attr">httpGet:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/health</span></span><br><span class="line">            <span class="attr">port:</span> <span class="number">8083</span></span><br><span class="line">            <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">600</span></span><br><span class="line">          <span class="attr">periodSeconds:</span> <span class="number">5</span></span><br><span class="line">          <span class="attr">successThreshold:</span> <span class="number">1</span></span><br><span class="line">          <span class="attr">timeoutSeconds:</span> <span class="number">1</span></span><br><span class="line">        <span class="attr">readinessProbe:</span></span><br><span class="line">          <span class="attr">failureThreshold:</span> <span class="number">3</span></span><br><span class="line">          <span class="attr">httpGet:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/health</span></span><br><span class="line">            <span class="attr">port:</span> <span class="number">8083</span></span><br><span class="line">            <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">180</span></span><br><span class="line">          <span class="attr">periodSeconds:</span> <span class="number">3</span></span><br><span class="line">          <span class="attr">successThreshold:</span> <span class="number">5</span></span><br><span class="line">          <span class="attr">timeoutSeconds:</span> <span class="number">1</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/etc/podinfo</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">podinfo</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/opt/spinnaker/config/default</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">default-config</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/opt/spinnaker/config/custom</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">custom-config</span></span><br><span class="line">      <span class="attr">imagePullSecrets:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">harbor</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">configMap:</span></span><br><span class="line">          <span class="attr">defaultMode:</span> <span class="number">420</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">custom-config</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">custom-config</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">configMap:</span></span><br><span class="line">          <span class="attr">defaultMode:</span> <span class="number">420</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">default-config</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">default-config</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">downwardAPI:</span></span><br><span class="line">          <span class="attr">defaultMode:</span> <span class="number">420</span></span><br><span class="line">          <span class="attr">items:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">fieldRef:</span></span><br><span class="line">              <span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line">              <span class="attr">fieldPath:</span> <span class="string">metadata.labels</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">labels</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">fieldRef:</span></span><br><span class="line">              <span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line">              <span class="attr">fieldPath:</span> <span class="string">metadata.annotations</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">annotations</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">podinfo</span></span><br><span class="line"></span><br><span class="line">[<span class="string">root@ops-200</span> <span class="string">orca</span>]<span class="comment"># vim service.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">armory-orca</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">armory</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">8083</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">8083</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">armory-orca</span></span><br></pre></td></tr></table></figure>

<h3 id="应用资源配置清单"><a href="#应用资源配置清单" class="headerlink" title="应用资源配置清单"></a>应用资源配置清单</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 orca]# kubectl apply -f deployment.yaml </span><br><span class="line">deployment.apps/armory-orca created</span><br><span class="line">[root@ops-200 orca]# kubectl apply -f service.yaml </span><br><span class="line">service/armory-orca created</span><br></pre></td></tr></table></figure>

<h3 id="检查"><a href="#检查" class="headerlink" title="检查"></a>检查</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@k8s03-23 ~]# docker exec -it b71a5af3c57e sh</span><br><span class="line">/ # curl armory-orca:8083/health</span><br><span class="line">&#123;&quot;status&quot;:&quot;UP&quot;&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
        <tag>spinnaker</tag>
      </tags>
  </entry>
  <entry>
    <title>spinnaker之redis部署</title>
    <url>/2020/03/23/spinnaker%E4%B9%8Bredis%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<h3 id="准备镜像"><a href="#准备镜像" class="headerlink" title="准备镜像"></a>准备镜像</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 ~]# docker pull redis:4.0.14</span><br><span class="line">[root@ops-200 ~]# docker images|grep redis</span><br><span class="line">redis                                                                  4.0.14                           6e221e67453d        2 weeks ago         89.2MB</span><br><span class="line">goharbor/redis-photon                                                  v1.10.1                          550a58b0a311        5 weeks ago         111MB</span><br><span class="line">[root@ops-200 ~]# docker tag 6e221e67453d harbor.od.com/armory/redis:v4.0.14</span><br><span class="line">[root@ops-200 ~]# docker push harbor.od.com/armory/redis:v4.0.14</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<h3 id="准备资源配置清单"><a href="#准备资源配置清单" class="headerlink" title="准备资源配置清单"></a>准备资源配置清单</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line">[<span class="string">root@ops-200</span> <span class="string">redis</span>]<span class="comment"># vim deployment.yaml</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps:v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">redis</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">redis</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">armory</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">revisionHistoryLimit:</span> <span class="number">7</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">redis</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">redis</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">redis</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">redis</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">harbor.od.com/armory/redis:v4.0.14</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">6379</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">      <span class="attr">imagePullSecrets:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">harbor</span></span><br><span class="line"></span><br><span class="line">[<span class="string">root@ops-200</span> <span class="string">redis</span>]<span class="comment"># vim service.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">redis</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">armory</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">6379</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">6379</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">redis</span></span><br></pre></td></tr></table></figure>

<h3 id="应用资源配置清单"><a href="#应用资源配置清单" class="headerlink" title="应用资源配置清单"></a>应用资源配置清单</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@k8s01-21 ~]# kubectl apply -f http://k8s-yaml.od.com/armory/redis/deployment.yaml</span><br><span class="line">deployment.apps/redis created</span><br><span class="line">[root@k8s01-21 ~]# kubectl apply -f http://k8s-yaml.od.com/armory/redis/service.yaml</span><br><span class="line">service/redis created</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
        <tag>spinnaker</tag>
      </tags>
  </entry>
  <entry>
    <title>spring club基于git2consul配置中心</title>
    <url>/2019/01/24/spring%20club%E5%9F%BA%E4%BA%8Egit2consul%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83/</url>
    <content><![CDATA[<p><strong>安装git2consul</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">npm install -g git2consul</span></span><br></pre></td></tr></table></figure>
<span id="more"></span>
<p><strong>初始化脚本</strong></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"># mkdir -p /opt/git2conul/<span class="punctuation">&#123;</span>conf<span class="punctuation">,</span>data<span class="punctuation">,</span>logs<span class="punctuation">&#125;</span> -p</span><br><span class="line"># cd /opt/consul/conf</span><br><span class="line">#vim git2consul.json</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;local_store&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/opt/git2consul/data&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;logger&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;git2consul&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;streams&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;level&quot;</span><span class="punctuation">:</span> <span class="string">&quot;trace&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;rotating-file&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/opt/git2consul/logs/git2consul.log&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;repos&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;目录名&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;远程仓库地址&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;include_branch_name&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;branches&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;stg&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;prd&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;dev&quot;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;hooks&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;polling&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;interval&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>


<p><strong>启动服务</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">nohup</span> /opt/node/bin/git2consul --config-file git2consul.json -e localhost -p 8500 -t token &amp;</span>  </span><br><span class="line">token是consul配置acl的需求，不然会权限拒绝</span><br></pre></td></tr></table></figure>


<p>注：</p>
<p>如果还是权限拒绝，可以试试配置git免密码</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vi /root/.git-credentials</span></span><br><span class="line">http&#x27;s&#x27;://&#123;username&#125;:&#123;password&#125;@github.com</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">git config --global credential.helper store</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cat</span> .gitconfig</span> </span><br><span class="line">[credential]</span><br><span class="line">    helper = store</span><br></pre></td></tr></table></figure>


<p>gitlab必须先创建好分支与目录</p>
]]></content>
      <categories>
        <category>微服务</category>
      </categories>
      <tags>
        <tag>配置中心</tag>
      </tags>
  </entry>
  <entry>
    <title>tomcat基础优化</title>
    <url>/2018/11/22/tomcat%E5%9F%BA%E7%A1%80%E4%BC%98%E5%8C%96/</url>
    <content><![CDATA[<p>对于tomcat的优化，主要是从2个方面入手，一是，tomcat自身的配置，另一个是tomcat所运行的jvm虚拟机的调优。</p>
<h2 id="配置优化"><a href="#配置优化" class="headerlink" title="配置优化"></a>配置优化</h2><h3 id="禁用AJP链接"><a href="#禁用AJP链接" class="headerlink" title="禁用AJP链接"></a>禁用AJP链接</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;!-- &lt;Connector port=&quot;8009&quot; protocol=&quot;AJP/1.3&quot; redirectPort=&quot;8443&quot; /&gt; --&gt;</span><br></pre></td></tr></table></figure>

<p>该端口作用就是apache负载均衡多台tomcat时使用，一般是使用Nginx+tomcat的架构，所以用不着AJP协议，所以把AJP连接器禁用</p>
 <span id="more"></span>

<h3 id="线程池"><a href="#线程池" class="headerlink" title="线程池"></a>线程池</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">&quot;8080&quot;</span> <span class="attr">protocol</span>=<span class="string">&quot;org.apache.coyote.http11.Http11AprProtocol&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">maxThreads</span>=<span class="string">&quot;1000&quot;</span>     </span></span><br><span class="line"><span class="tag">              <span class="attr">minProcessors</span>=<span class="string">&quot;100&quot;</span>    </span></span><br><span class="line"><span class="tag">              <span class="attr">maxProcessors</span>=<span class="string">&quot;1000&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">prestartminSpareThreads</span>=<span class="string">&quot;true&quot;</span>  </span></span><br><span class="line"><span class="tag">              <span class="attr">maxQueueSize</span>=<span class="string">&quot;200&quot;</span>        </span></span><br><span class="line"><span class="tag">              <span class="attr">minSpareThreads</span>=<span class="string">&quot;100&quot;</span>   </span></span><br><span class="line"><span class="tag">              <span class="attr">maxSpareThreads</span>=<span class="string">&quot;1000&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">acceptCount</span>=<span class="string">&quot;1000&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">enableLookups</span>=<span class="string">&quot;false&quot;</span>              </span></span><br><span class="line"><span class="tag">              <span class="attr">URIEncoding</span>=<span class="string">&quot;utf-8&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">connectionTimeout</span>=<span class="string">&quot;30000&quot;</span>   </span></span><br><span class="line"><span class="tag">              <span class="attr">disableUploadTimeout</span>=<span class="string">&quot;ture&quot;</span>  </span></span><br><span class="line"><span class="tag">              <span class="attr">redirectPort</span>=<span class="string">&quot;8443&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>


<p>maxThreads               客户请求最大线程数，一般建议在 500 ~ 1000，根据硬件设施和业务来判断</p>
<p>minSpareThreads       Tomcat初始化时创建的 socket 线程数</p>
<p>maxSpareThreads      Tomcat连接器的最大空闲 socket 线程数</p>
<p>minProcessors            最小空闲连接线程数，用于提高系统处理性能，默认值为 10 </p>
<p>maxProcessors           最大连接线程数，即：并发处理的最大请求数，默认值为 75</p>
<p>acceptCount               允许的最大连接数，应大于等于 maxProcessors ，默认值为 100</p>
<p>enableLookups            是否反查域名，取值为： true 或 false 。为了提高处理能力，应设置为 false</p>
<p>connectionTimeout      网络连接超时，单位：毫秒。设置为 0 表示永不超时，这样设置有隐患的。通常可设置为 30000 毫秒</p>
<p>其中和最大连接数相关的参数为maxProcessors 和 acceptCount 。如果要加大并发连接数，应同时加大这两个参数</p>
<p>maxQueueSize             最大的等待队列数，超过则拒绝请求</p>
<p>prestartminSpareThreads   在 Tomcat 初始化的时候就初始化 minSpareThreads 的参数值，如果不等于 true，minSpareThreads 的值就没啥效果了</p>
<p>redirectPort                       在需要基于安全通道的场合，把客户请求转发到基于SSL 的 redirectPort 端口</p>
<p>acceptAccount                 监听端口队列最大数，满了之后客户请求会被拒绝（不能小于maxSpareThreads  ）</p>
<p>URIEncoding                    URL统一编码</p>
<p>disableUploadTimeout     这个标志允许servlet在一个servlet执行的时候，使用一个不同的，更长的连接超时。最终的结果是给servlet更长的时间以便完成其执行，或者在数据上载的时候更长的超时时间。如果没有指定，设为false</p>
<h3 id="内存优化"><a href="#内存优化" class="headerlink" title="内存优化"></a>内存优化</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim catalina.sh</span></span><br><span class="line">export JAVA_HOME=/application/jdk/</span><br><span class="line">export JRE_HOME=/application/jdk/jre</span><br><span class="line">JAVA_OPTS=&#x27;-Xms2048m -Xmx2048m -XX:PermSize=128m -Xmn=512m -XX:MaxNewSize=512m -XX:MaxPermSize=512m -XX:ParallelGCThreads=20 -XX:+UseConcMarkSweepGC&#x27;</span><br></pre></td></tr></table></figure>


<p>-Xms                       java虚拟机初始化时的最小内存,默认是物理内存的1&#x2F;64 </p>
<p>-Xmx                       java虚拟机可使用的最大内存；#-Xms与-Xmx设成一样的值，避免JVM因为频繁的GC导致性能大起大落，堆的最大值设置为物理可用内存1&#x2F;4</p>
<p>-XX:PermSize         设置非堆内存初始值,默认是物理内存的1&#x2F;64</p>
<p>-XX:MaxPermSize   Perm（俗称方法区）占整个堆内存的最大值，也称内存最大永久保留区域</p>
<p>-XX:newSize        表示新生代初始内存的大小</p>
<p>-XX:MaxNewSize      JVM堆区域新生代内存的最大可分配大小(PermSize不属于堆区), 生产环境建议设为800M-1024M</p>
<p>-Xmn               这个参数则是对 -XX:newSize、-XX:MaxnewSize两个参数的同时配置，也就是说如果通过-Xmn来配置新生代的内存大小，那么-XX:newSize &#x3D; -XX:MaxnewSize　&#x3D;　-Xmn，虽然会很方便，但需要注意的是这个参数是在JDK1.4版本以后才使用的                  </p>
<p>-XX:+UseConcMarkSweepGC    设置年老代为并发收集</p>
<p>-XX:ParallelGCThreads&#x3D;20        设置年轻代为并行收集，可与CMS收集同时使用</p>
<h3 id="tomcat启动加速"><a href="#tomcat启动加速" class="headerlink" title="tomcat启动加速"></a>tomcat启动加速</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim <span class="variable">$JRE_HOME</span>/lib/security/java.security</span></span><br><span class="line">117 securerandom.source=file:/dev/urandom</span><br></pre></td></tr></table></figure>


<h2 id="修改tomcat运行模式"><a href="#修改tomcat运行模式" class="headerlink" title="修改tomcat运行模式"></a>修改tomcat运行模式</h2><p>tomcat的运行模式有3种：</p>
<ul>
<li>bio</li>
</ul>
<p>默认的模式,性能非常低下,没有经过任何优化处理和支持.</p>
<ul>
<li>nio</li>
</ul>
<p>nio(new I&#x2F;O)，是Java SE 1.4及后续版本提供的一种新的I&#x2F;O操作方式(即java.nio包及其子包)。Java nio是一个基于缓冲区、并能提供非阻塞I&#x2F;O操作的Java API，因此nio也被看成是non-blocking I&#x2F;O的缩写。它拥有比传统I&#x2F;O操作(bio)更好的并发运行性能。</p>
<ul>
<li>apr</li>
</ul>
<p>安装起来最困难,但是从操作系统级别来解决异步的IO问题,大幅度的提高性能.</p>
<h3 id="开启nio2"><a href="#开启nio2" class="headerlink" title="开启nio2"></a>开启nio2</h3><p>NIO模型是内置的，调用很方便</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">&quot;8080&quot;</span> <span class="attr">protocol</span>=<span class="string">&quot;org.apache.coyote.http11.Http11Nio2Protocol&quot;</span></span></span><br></pre></td></tr></table></figure>


<h3 id="开启arp"><a href="#开启arp" class="headerlink" title="开启arp"></a>开启arp</h3><p>安装依赖</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum install -y apr-devel openssl-devel gcc make</span></span><br></pre></td></tr></table></figure>


<p>安装apr动态库</p>
<p><a href="http://tomcat.apache.org/download-native.cgi">http://tomcat.apache.org/download-native.cgi</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget http://mirrors.hust.edu.cn/apache/tomcat/tomcat-connectors/native/1.2.19/source/tomcat-native-1.2.19-src.tar.gz</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">tar xf tomcat-native-1.2.19-src.tar.gz</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cd</span> tomcat-native-1.2.19-src/native/</span></span><br></pre></td></tr></table></figure>


<p>编译安装</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"> ./configure</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">make &amp;&amp; make install</span></span><br></pre></td></tr></table></figure>


<p>修改配置文件</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"># vim server.xml</span><br><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">&quot;8080&quot;</span> <span class="attr">protocol</span>=<span class="string">&quot;org.apache.coyote.http11.Http11AprProtocol&quot;</span></span></span><br></pre></td></tr></table></figure>


<p>设置环境变量</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /etc/profile</span></span><br><span class="line">export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/apr/lib </span><br><span class="line">export LD_RUN_PATH=$LD_RUN_PATH:/usr/local/apr/lib</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">source</span> /etc/profile</span></span><br></pre></td></tr></table></figure>


<h2 id="配置tomcat管理用户"><a href="#配置tomcat管理用户" class="headerlink" title="配置tomcat管理用户"></a>配置tomcat管理用户</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"># vim ../conf/tomcat-users.xml</span><br><span class="line">  <span class="tag">&lt;<span class="name">role</span> <span class="attr">rolename</span>=<span class="string">&quot;manager-gui&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">role</span> <span class="attr">rolename</span>=<span class="string">&quot;manager-status&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">user</span> <span class="attr">username</span>=<span class="string">&quot;tomcat&quot;</span> <span class="attr">password</span>=<span class="string">&quot;tomcat&quot;</span> <span class="attr">roles</span>=<span class="string">&quot;manager-gui,manager-status”/&gt;</span></span></span><br></pre></td></tr></table></figure>


<p>tomcat8：注释下列一行，不然访问会403</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"># vim ../webapps/manager/META-INF/context.xml</span><br><span class="line"><span class="tag">&lt;<span class="name">Context</span> <span class="attr">antiResourceLocking</span>=<span class="string">&quot;false&quot;</span> <span class="attr">privileged</span>=<span class="string">&quot;true&quot;</span> &gt;</span></span><br><span class="line">  <span class="comment">&lt;!--&lt;Valve className=&quot;org.apache.catalina.valves.RemoteAddrValve&quot;</span></span><br><span class="line"><span class="comment">         allow=&quot;127\.\d+\.\d+\.\d+|::1|0:0:0:0:0:0:0:1&quot; /&gt; --&gt;</span></span><br></pre></td></tr></table></figure>


<p><img src="/image/1571733952-1571733940384.jpg"></p>
<h2 id="日志切割"><a href="#日志切割" class="headerlink" title="日志切割"></a>日志切割</h2><p>安装cronolog</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum install -y cronolog</span></span><br></pre></td></tr></table></figure>


<p>修改catalina.sh 447-476</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim catalina.sh</span></span><br><span class="line">shift</span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash"><span class="built_in">touch</span> <span class="string">&quot;<span class="variable">$CATALINA_OUT</span>&quot;</span></span></span><br><span class="line">  if [ &quot;$1&quot; = &quot;-security&quot; ] ; then</span><br><span class="line">    if [ $have_tty -eq 1 ]; then</span><br><span class="line">      echo &quot;Using Security Manager&quot;</span><br><span class="line">    fi</span><br><span class="line">    shift</span><br><span class="line">    &quot;$_RUNJAVA&quot; &quot;$LOGGING_CONFIG&quot; $LOGGING_MANAGER $JAVA_OPTS $CATALINA_OPTS \</span><br><span class="line">      -Djava.endorsed.dirs=&quot;$JAVA_ENDORSED_DIRS&quot; -classpath &quot;$CLASSPATH&quot; \</span><br><span class="line">      -Djava.security.manager \</span><br><span class="line">      -Djava.security.policy==&quot;$CATALINA_BASE&quot;/conf/catalina.policy \</span><br><span class="line">      -Dcatalina.base=&quot;$CATALINA_BASE&quot; \</span><br><span class="line">      -Dcatalina.home=&quot;$CATALINA_HOME&quot; \</span><br><span class="line">      -Djava.io.tmpdir=&quot;$CATALINA_TMPDIR&quot; \</span><br><span class="line">      org.apache.catalina.startup.Bootstrap &quot;$@&quot; start  2&gt;&amp;1 \</span><br><span class="line">        | /usr/sbin/cronolog &quot;$CATALINA_BASE&quot;/logs/catalina.%Y-%m-%d_%H.out &gt;&gt; /dev/null &amp;</span><br><span class="line"></span><br><span class="line">  else</span><br><span class="line">    &quot;$_RUNJAVA&quot; &quot;$LOGGING_CONFIG&quot; $LOGGING_MANAGER $JAVA_OPTS $CATALINA_OPTS \</span><br><span class="line">      -Djava.endorsed.dirs=&quot;$JAVA_ENDORSED_DIRS&quot; -classpath &quot;$CLASSPATH&quot; \</span><br><span class="line">      -Dcatalina.base=&quot;$CATALINA_BASE&quot; \</span><br><span class="line">      -Dcatalina.home=&quot;$CATALINA_HOME&quot; \</span><br><span class="line">      -Djava.io.tmpdir=&quot;$CATALINA_TMPDIR&quot; \</span><br><span class="line">      org.apache.catalina.startup.Bootstrap &quot;$@&quot; start  2&gt;&amp;1 \</span><br><span class="line">        | /usr/sbin/cronolog &quot;$CATALINA_BASE&quot;/logs/catalina.%Y-%m-%d_%H.out &gt;&gt; /dev/null &amp;</span><br><span class="line"></span><br><span class="line">  fi</span><br></pre></td></tr></table></figure>

<p>删除日志脚本</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">find ./tomcat/logs -regex <span class="string">&quot;.*\(\.out\|\.log\|\.txt\)$&quot;</span> -mtime +15 -<span class="built_in">exec</span> <span class="built_in">rm</span> -rf &#123;&#125; \;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>tomcat</category>
      </categories>
      <tags>
        <tag>tomcat</tag>
      </tags>
  </entry>
  <entry>
    <title>Traefik 2.x版本</title>
    <url>/2021/02/24/traefik-2.x/</url>
    <content><![CDATA[<h2 id="资源配置清单"><a href="#资源配置清单" class="headerlink" title="资源配置清单"></a>资源配置清单</h2><div class="tabs" id="treafik"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#treafik-1">CRD</button></li><li class="tab"><button type="button" data-href="#treafik-2">RBAC</button></li><li class="tab"><button type="button" data-href="#treafik-3">ConfigMap</button></li><li class="tab"><button type="button" data-href="#treafik-4">DaemonSet</button></li><li class="tab"><button type="button" data-href="#treafik-5">Middleware</button></li><li class="tab"><button type="button" data-href="#treafik-6">Service</button></li><li class="tab"><button type="button" data-href="#treafik-7">Ingress</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="treafik-1"><p>CRD 自定义资源二次开发能力来扩展 Kubernetes API，通过 CRD 我们可以向 Kubernetes API 中增加新资源类型，而不需要修改 Kubernetes 源码来创建自定义的 API server，该功能大大提高了 Kubernetes 的扩展能力</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apiextensions.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">CustomResourceDefinition</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ingressroutes.traefik.containo.us</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">group:</span> <span class="string">traefik.containo.us</span></span><br><span class="line">  <span class="attr">version:</span> <span class="string">v1alpha1</span></span><br><span class="line">  <span class="attr">names:</span></span><br><span class="line">    <span class="attr">kind:</span> <span class="string">IngressRoute</span></span><br><span class="line">    <span class="attr">plural:</span> <span class="string">ingressroutes</span></span><br><span class="line">    <span class="attr">singular:</span> <span class="string">ingressroute</span></span><br><span class="line">  <span class="attr">scope:</span> <span class="string">Namespaced</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apiextensions.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">CustomResourceDefinition</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">middlewares.traefik.containo.us</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">group:</span> <span class="string">traefik.containo.us</span></span><br><span class="line">  <span class="attr">version:</span> <span class="string">v1alpha1</span></span><br><span class="line">  <span class="attr">names:</span></span><br><span class="line">    <span class="attr">kind:</span> <span class="string">Middleware</span></span><br><span class="line">    <span class="attr">plural:</span> <span class="string">middlewares</span></span><br><span class="line">    <span class="attr">singular:</span> <span class="string">middleware</span></span><br><span class="line">  <span class="attr">scope:</span> <span class="string">Namespaced</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVer  sion:</span> <span class="string">apiextensions.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">CustomResourceDefinition</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ingressroutetcps.traefik.containo.us</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">group:</span> <span class="string">traefik.containo.us</span></span><br><span class="line">  <span class="attr">version:</span> <span class="string">v1alpha1</span></span><br><span class="line">  <span class="attr">names:</span></span><br><span class="line">    <span class="attr">kind:</span> <span class="string">IngressRouteTCP</span></span><br><span class="line">    <span class="attr">plural:</span> <span class="string">ingressroutetcps</span></span><br><span class="line">    <span class="attr">singular:</span> <span class="string">ingressroutetcp</span></span><br><span class="line">  <span class="attr">scope:</span> <span class="string">Namespaced</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apiextensions.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">CustomResourceDefinition</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ingressrouteudps.traefik.containo.us</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">group:</span> <span class="string">traefik.containo.us</span></span><br><span class="line">  <span class="attr">version:</span> <span class="string">v1alpha1</span></span><br><span class="line">  <span class="attr">names:</span></span><br><span class="line">    <span class="attr">kind:</span> <span class="string">IngressRouteUDP</span></span><br><span class="line">    <span class="attr">plural:</span> <span class="string">ingressrouteudps</span></span><br><span class="line">    <span class="attr">singular:</span> <span class="string">ingressrouteudp</span></span><br><span class="line">  <span class="attr">scope:</span> <span class="string">Namespaced</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apiextensions.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">CustomResourceDefinition</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">tlsoptions.traefik.containo.us</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">group:</span> <span class="string">traefik.containo.us</span></span><br><span class="line">  <span class="attr">version:</span> <span class="string">v1alpha1</span></span><br><span class="line">  <span class="attr">names:</span></span><br><span class="line">    <span class="attr">kind:</span> <span class="string">TLSOption</span></span><br><span class="line">    <span class="attr">plural:</span> <span class="string">tlsoptions</span></span><br><span class="line">    <span class="attr">singular:</span> <span class="string">tlsoption</span></span><br><span class="line">  <span class="attr">scope:</span> <span class="string">Namespaced</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apiextensions.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">CustomResourceDefinition</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">tlsstores.traefik.containo.us</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">group:</span> <span class="string">traefik.containo.us</span></span><br><span class="line">  <span class="attr">version:</span> <span class="string">v1alpha1</span></span><br><span class="line">  <span class="attr">names:</span></span><br><span class="line">    <span class="attr">kind:</span> <span class="string">TLSStore</span></span><br><span class="line">    <span class="attr">plural:</span> <span class="string">tlsstores</span></span><br><span class="line">    <span class="attr">singular:</span> <span class="string">tlsstore</span></span><br><span class="line">  <span class="attr">scope:</span> <span class="string">Namespaced</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apiextensions.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">CustomResourceDefinition</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">traefikservices.traefik.containo.us</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">group:</span> <span class="string">traefik.containo.us</span></span><br><span class="line">  <span class="attr">version:</span> <span class="string">v1alpha1</span></span><br><span class="line">  <span class="attr">names:</span></span><br><span class="line">    <span class="attr">kind:</span> <span class="string">TraefikService</span></span><br><span class="line">    <span class="attr">plural:</span> <span class="string">traefikservices</span></span><br><span class="line">    <span class="attr">singular:</span> <span class="string">traefikservice</span></span><br><span class="line">  <span class="attr">scope:</span> <span class="string">Namespaced</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apiextensions.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">CustomResourceDefinition</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">serverstransports.traefik.containo.us</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">group:</span> <span class="string">traefik.containo.us</span></span><br><span class="line">  <span class="attr">version:</span> <span class="string">v1alpha1</span></span><br><span class="line">  <span class="attr">names:</span></span><br><span class="line">    <span class="attr">kind:</span> <span class="string">ServersTransport</span></span><br><span class="line">    <span class="attr">plural:</span> <span class="string">serverstransports</span></span><br><span class="line">    <span class="attr">singular:</span> <span class="string">serverstransport</span></span><br><span class="line">  <span class="attr">scope:</span> <span class="string">Namespaced</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="treafik-2"><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">traefik-ingress-controller</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">traefik-ingress-controller</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">services</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">endpoints</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">secrets</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">list</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">watch</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">extensions</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">networking.k8s.io</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ingresses</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ingressclasses</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">list</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">watch</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">extensions</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ingresses/status</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">update</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">traefik.containo.us</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">middlewares</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ingressroutes</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">traefikservices</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ingressroutetcps</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ingressrouteudps</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">tlsoptions</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">tlsstores</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">serverstransports</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">list</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">watch</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">traefik-ingress-controller</span></span><br><span class="line"></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">traefik-ingress-controller</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">traefik-ingress-controller</span></span><br><span class="line">    <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="treafik-3"><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">traefik-config</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">traefik.yaml:</span> <span class="string">|-</span></span><br><span class="line"><span class="string">    ping: &quot;&quot;                    # 启用 Ping          </span></span><br><span class="line"><span class="string">    serversTransport:    </span></span><br><span class="line"><span class="string">      insecureSkipVerify: true  # Traefik 忽略验证代理服务的 TLS 证书</span></span><br><span class="line"><span class="string">    api:</span></span><br><span class="line"><span class="string">      insecure: true            # 允许 HTTP 方式访问 API</span></span><br><span class="line"><span class="string">      dashboard: true           # 启用 Dashboard</span></span><br><span class="line"><span class="string">      debug: false              # 启用 Debug 调试模式</span></span><br><span class="line"><span class="string">    metrics:</span></span><br><span class="line"><span class="string">      prometheus: &quot;&quot;            # 配置 Prometheus 监控指标数据，并使用默认配置</span></span><br><span class="line"><span class="string">    entryPoints:</span></span><br><span class="line"><span class="string">      web:</span></span><br><span class="line"><span class="string">        address: &quot;:80&quot;          # 配置 80 端口，并设置入口名称为 web</span></span><br><span class="line"><span class="string">      websecure:</span></span><br><span class="line"><span class="string">        address: &quot;:443&quot;         # 配置 443 端口，并设置入口名称为 websecure</span></span><br><span class="line"><span class="string">    certificatesResolvers:      # 配置证书解析器</span></span><br><span class="line"><span class="string">      myresolver:               # 解析器名称</span></span><br><span class="line"><span class="string">        acme:                   # 启用acme，acme可以自动创建证书</span></span><br><span class="line"><span class="string">          email: weiqun_h@163.com  # 用于注册的电子邮件地址</span></span><br><span class="line"><span class="string">          storage: acme.json       # 用于证书存储的文件或密钥</span></span><br><span class="line"><span class="string">          httpChallenge:           # 通过在HTTP-01众所周知的URI下配置HTTP资源，使用质询来生成和更新ACME证书</span></span><br><span class="line"><span class="string">            entryPoint: web</span></span><br><span class="line"><span class="string">    providers:</span></span><br><span class="line"><span class="string">      kubernetesCRD: &quot;&quot;         # 启用 Kubernetes CRD 方式来配置路由规则</span></span><br><span class="line"><span class="string">      kubernetesIngress: &quot;&quot;     # 启动 Kubernetes Ingress 方式来配置路由规则</span></span><br><span class="line"><span class="string">    log:</span></span><br><span class="line"><span class="string">      filePath: &quot;&quot;              # 设置调试日志文件存储路径，如果为空则输出到控制台</span></span><br><span class="line"><span class="string">      level: error              # 设置调试日志级别</span></span><br><span class="line"><span class="string">      format: json              # 设置调试日志格式</span></span><br><span class="line"><span class="string">    accessLog:</span></span><br><span class="line"><span class="string">      filePath: &quot;&quot;              # 设置访问日志文件存储路径，如果为空则输出到控制台</span></span><br><span class="line"><span class="string">      format: json              </span></span><br><span class="line"><span class="string">      bufferingSize: 0          # 设置访问日志缓存行数</span></span><br><span class="line"><span class="string">      filters:</span></span><br><span class="line"><span class="string">        retryAttempts: true     # 设置代理访问重试失败时，保留访问日志</span></span><br><span class="line"><span class="string">        minDuration: 20         </span></span><br><span class="line"><span class="string">      fields:                   # 设置访问日志中的字段是否保留（keep 保留、drop 不保留）</span></span><br><span class="line"><span class="string">        defaultMode: keep       </span></span><br><span class="line"><span class="string">        names:                  # 针对访问日志特别字段特别配置保留模式</span></span><br><span class="line"><span class="string">          ClientUsername: drop  </span></span><br><span class="line"><span class="string">        headers:                # 设置 Header 中字段是否保留</span></span><br><span class="line"><span class="string">          defaultMode: keep     </span></span><br><span class="line"><span class="string">          names:                </span></span><br><span class="line"><span class="string">            User-Agent: redact</span></span><br><span class="line"><span class="string">            Authorization: drop</span></span><br><span class="line"><span class="string">            Content-Type: keep</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="treafik-4"><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">DaemonSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">traefik-ingress-controller</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">traefik</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">traefik</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">traefik</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">traefik</span></span><br><span class="line">      <span class="attr">annotations:</span></span><br><span class="line">        <span class="attr">prometheus_io_scheme:</span> <span class="string">&quot;traefik&quot;</span></span><br><span class="line">        <span class="attr">prometheus_io_path:</span> <span class="string">&quot;/metrics&quot;</span></span><br><span class="line">        <span class="attr">prometheus_io_port:</span> <span class="string">&quot;8080&quot;</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">serviceAccountName:</span> <span class="string">traefik-ingress-controller</span></span><br><span class="line">      <span class="attr">terminationGracePeriodSeconds:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">traefik:v2.4.0</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">traefik-ingress-lb</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">web</span></span><br><span class="line">              <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">              <span class="attr">hostPort:</span> <span class="number">80</span>         <span class="comment"># 将容器端口绑定所在服务器的 80 端口</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">websecure</span></span><br><span class="line">              <span class="attr">containerPort:</span> <span class="number">443</span></span><br><span class="line">              <span class="attr">hostPort:</span> <span class="number">443</span>        <span class="comment"># 将容器端口绑定所在服务器的 443 端口</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">admin</span></span><br><span class="line">              <span class="attr">containerPort:</span> <span class="number">8080</span>  <span class="comment"># Traefik Dashboard 端口</span></span><br><span class="line">          <span class="attr">resources:</span></span><br><span class="line">            <span class="attr">limits:</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="string">2000m</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">1024Mi</span></span><br><span class="line">            <span class="attr">requests:</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="string">1000m</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">1024Mi</span></span><br><span class="line">          <span class="attr">securityContext:</span></span><br><span class="line">            <span class="attr">capabilities:</span></span><br><span class="line">              <span class="attr">drop:</span></span><br><span class="line">                <span class="bullet">-</span> <span class="string">ALL</span></span><br><span class="line">              <span class="attr">add:</span></span><br><span class="line">                <span class="bullet">-</span> <span class="string">NET_BIND_SERVICE</span></span><br><span class="line">          <span class="attr">args:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--configfile=/config/traefik.yaml</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">&quot;/config&quot;</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">&quot;config&quot;</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">config</span></span><br><span class="line">          <span class="attr">configMap:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">traefik-config</span></span><br><span class="line">      <span class="attr">tolerations:</span>              </span><br><span class="line">        <span class="bullet">-</span> <span class="attr">operator:</span> <span class="string">&quot;Exists&quot;</span>           <span class="comment"># 设置容忍所有污点，防止节点被设置污点</span></span><br><span class="line">      <span class="attr">nodeSelector:</span>            </span><br><span class="line">        <span class="attr">IngressProxy:</span> <span class="string">&quot;true&quot;</span>           <span class="comment"># 设置node筛选器，在特定label的节点上启动</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="treafik-5"><p>这里配置的声明了一个名为redirectSchemea的中间件，该中间件可以将我们的请求跳转到另外的 scheme 请求，然后将该中间件配置到 HTTP 请求的服务上面</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">traefik.containo.us/v1alpha1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Middleware</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">redirect-https</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">redirectScheme:</span>   <span class="comment"># 重定向中间件</span></span><br><span class="line">    <span class="attr">scheme:</span> <span class="string">https</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="treafik-6"><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">traefik</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">web</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">80</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">websecure</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">443</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">443</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">admin</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8080</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">traefik</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="treafik-7"><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">traefik.containo.us/v1alpha1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">IngressRoute</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">traefik-ui-http</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">entryPoints:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">web</span></span><br><span class="line">  <span class="attr">routes:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">match:</span> <span class="string">Host(`traefik.shisu.com`)</span></span><br><span class="line">    <span class="attr">kind:</span> <span class="string">Rule</span></span><br><span class="line">    <span class="attr">services:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">traefik</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">    <span class="attr">middlewares:</span>      <span class="comment"># 重定向中间件</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">redirect-https</span>      </span><br><span class="line"><span class="meta">---    </span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">traefik.containo.us/v1alpha1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">IngressRoute</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">traefik-ui-https</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">entryPoints:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">websecure</span>     <span class="comment"># 注意这里是websecure这个entryPoint，监控443端口</span></span><br><span class="line">  <span class="attr">routes:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">match:</span> <span class="string">Host(`traefik.shisu.com`)</span></span><br><span class="line">    <span class="attr">kind:</span> <span class="string">Rule</span></span><br><span class="line">    <span class="attr">services:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">traefik</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">  <span class="attr">tls:</span>           <span class="comment"># 使用配置文件里定义的解析器</span></span><br><span class="line">    <span class="attr">certResolver:</span> <span class="string">myresolver</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>

<h2 id="应用资源配置清单"><a href="#应用资源配置清单" class="headerlink" title="应用资源配置清单"></a>应用资源配置清单</h2><p>配置主机标签</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># kubectl label nodes k8s-node01 IngressProxy=true</span></span><br></pre></td></tr></table></figure>

<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># kubectl apply -f crd.yaml</span></span><br><span class="line"><span class="attr">Warning:</span> <span class="string">apiextensions.k8s.io/v1beta1</span> <span class="string">CustomResourceDefinition</span> <span class="string">is</span> <span class="string">deprecated</span> <span class="string">in</span> <span class="string">v1.16+,</span> <span class="string">unavailable</span> <span class="string">in</span> <span class="string">v1.22+;</span> <span class="string">use</span> <span class="string">apiextensions.k8s.io/v1</span> <span class="string">CustomResourceDefinition</span></span><br><span class="line"><span class="string">customresourcedefinition.apiextensions.k8s.io/ingressroutes.traefik.containo.us</span> <span class="string">created</span></span><br><span class="line"><span class="string">customresourcedefinition.apiextensions.k8s.io/middlewares.traefik.containo.us</span> <span class="string">created</span></span><br><span class="line"><span class="string">customresourcedefinition.apiextensions.k8s.io/ingressroutetcps.traefik.containo.us</span> <span class="string">created</span></span><br><span class="line"><span class="string">customresourcedefinition.apiextensions.k8s.io/ingressrouteudps.traefik.containo.us</span> <span class="string">created</span></span><br><span class="line"><span class="string">customresourcedefinition.apiextensions.k8s.io/tlsoptions.traefik.containo.us</span> <span class="string">created</span></span><br><span class="line"><span class="string">customresourcedefinition.apiextensions.k8s.io/tlsstores.traefik.containo.us</span> <span class="string">created</span></span><br><span class="line"><span class="string">customresourcedefinition.apiextensions.k8s.io/traefikservices.traefik.containo.us</span> <span class="string">created</span></span><br><span class="line"><span class="string">customresourcedefinition.apiextensions.k8s.io/serverstransports.traefik.containo.us</span> <span class="string">created</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl apply -f rbac.yaml</span></span><br><span class="line"><span class="string">serviceaccount/traefik-ingress-controller</span> <span class="string">unchanged</span></span><br><span class="line"><span class="attr">Warning:</span> <span class="string">rbac.authorization.k8s.io/v1beta1</span> <span class="string">ClusterRole</span> <span class="string">is</span> <span class="string">deprecated</span> <span class="string">in</span> <span class="string">v1.17+,</span> <span class="string">unavailable</span> <span class="string">in</span> <span class="string">v1.22+;</span> <span class="string">use</span> <span class="string">rbac.authorization.k8s.io/v1</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="string">clusterrole.rbac.authorization.k8s.io/traefik-ingress-controller</span> <span class="string">created</span></span><br><span class="line"><span class="attr">Warning:</span> <span class="string">rbac.authorization.k8s.io/v1beta1</span> <span class="string">ClusterRoleBinding</span> <span class="string">is</span> <span class="string">deprecated</span> <span class="string">in</span> <span class="string">v1.17+,</span> <span class="string">unavailable</span> <span class="string">in</span> <span class="string">v1.22+;</span> <span class="string">use</span> <span class="string">rbac.authorization.k8s.io/v1</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="string">clusterrolebinding.rbac.authorization.k8s.io/traefik-ingress-controller</span> <span class="string">created</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl apply -f config.yaml</span></span><br><span class="line"><span class="string">configmap/traefik-config</span> <span class="string">created</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl apply -f middleware.yaml</span></span><br><span class="line"><span class="string">middleware.traefik.containo.us/redirect-https</span> <span class="string">created</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl apply -f daemonset.yaml</span></span><br><span class="line"><span class="string">daemonset.apps/traefik-ingress-controller</span> <span class="string">created</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl apply -f svc.yaml</span></span><br><span class="line"><span class="string">service/traefik</span> <span class="string">created</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl apply -f ingress-http.yaml</span></span><br><span class="line"><span class="string">ingressroute.traefik.containo.us/traefik-ui-http</span> <span class="string">created</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl apply -f ingress-https.yaml</span></span><br><span class="line"><span class="string">ingressroute.traefik.containo.us/traefik-ui-https</span> <span class="string">created</span></span><br></pre></td></tr></table></figure>

<p><img src="/image/traefik/k8s-traefik.png"></p>
]]></content>
      <categories>
        <category>Kubernetes</category>
        <category>traefik</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
        <tag>traefik</tag>
      </tags>
  </entry>
  <entry>
    <title>traefik配置dashboard https访问</title>
    <url>/2019/09/28/traefik%E9%85%8D%E7%BD%AEdashboard%20https%E8%AE%BF%E9%97%AE/</url>
    <content><![CDATA[<p>创建证书</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout k8s.key -out k8s.crt -subj <span class="string">&quot;/CN=k8s.ui.com&quot;</span></span></span><br></pre></td></tr></table></figure>

 <span id="more"></span>

<p>创建secret，保存https证书</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl create secret generic k8s-cert  --from-file=k8s.key --from-file=k8s.crt -n kube-system</span></span><br><span class="line">secret/k8s-cert created</span><br></pre></td></tr></table></figure>


<p>创建 configmap，保存traefix配置</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim k8s_conf.yml</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span>  <span class="string">traefik.toml</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">traefik.toml:</span> <span class="string">|</span></span><br><span class="line">    <span class="string">insecureSkipVerify</span> <span class="string">=</span> <span class="literal">true</span>     <span class="comment"># 访问https后端的时候可以忽略TLS证书验证错误</span></span><br><span class="line">    <span class="string">defaultEntryPoints</span> <span class="string">=</span> [<span class="string">&quot;http&quot;</span>,<span class="string">&quot;https&quot;</span>]  <span class="comment"># 同时支持http与https</span></span><br><span class="line">    [<span class="string">entryPoints</span>]</span><br><span class="line">      [<span class="string">entryPoints.http</span>]</span><br><span class="line">      <span class="string">address</span> <span class="string">=</span> <span class="string">&quot;:80&quot;</span></span><br><span class="line">        [<span class="string">entryPoints.http.redirect</span>]        </span><br><span class="line">        <span class="string">regex</span> <span class="string">=</span> <span class="string">&quot;^http://k8s.ui.com/(.*)&quot;</span>   <span class="comment"># 匹配dashboard域名</span></span><br><span class="line">        <span class="string">replacement</span> <span class="string">=</span> <span class="string">&quot;https://k8s.ui.com/$1&quot;</span>  <span class="comment"># 强制跳转https</span></span><br><span class="line">      [<span class="string">entryPoints.https</span>]</span><br><span class="line">      <span class="string">address</span> <span class="string">=</span> <span class="string">&quot;:443&quot;</span></span><br><span class="line">        [<span class="string">entryPoints.https.tls</span>]</span><br><span class="line">          [[<span class="string">entryPoints.https.tls.certificates</span>]]</span><br><span class="line">          <span class="string">CertFile</span> <span class="string">=</span> <span class="string">&quot;/ssl/k8s.crt&quot;</span>      <span class="comment"># pod证书位置</span></span><br><span class="line">          <span class="string">KeyFile</span> <span class="string">=</span> <span class="string">&quot;/ssl/k8s.key&quot;</span></span><br><span class="line"><span class="comment"># kubectl apply  -f k8s_conf.yml </span></span><br><span class="line"><span class="string">configmap/traefik.toml</span> <span class="string">created</span></span><br></pre></td></tr></table></figure>


<p>编写traefik_https.yml文件</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">traefik-ingress-controller</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">services</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">endpoints</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">secrets</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">list</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">watch</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">extensions</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ingresses</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">list</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">watch</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">traefik-ingress-controller</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">traefik-ingress-controller</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">traefik-ingress-controller</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">traefik-ingress-controller</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">DaemonSet</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">traefik-ingress-controller</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">traefik-ingress-lb</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">k8s-app:</span> <span class="string">traefik-ingress-lb</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">traefik-ingress-lb</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">serviceAccountName:</span> <span class="string">traefik-ingress-controller</span></span><br><span class="line">      <span class="attr">tolerations:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">node-role.kubernetes.io/master</span></span><br><span class="line">        <span class="attr">effect:</span> <span class="string">NoSchedule</span></span><br><span class="line">      <span class="attr">terminationGracePeriodSeconds:</span> <span class="number">60</span></span><br><span class="line">      <span class="attr">hostNetwork:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">ssl</span></span><br><span class="line">        <span class="attr">secret:</span></span><br><span class="line">          <span class="attr">secretName:</span> <span class="string">k8s-cert</span>   <span class="comment"># 证书</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">config</span></span><br><span class="line">        <span class="attr">configMap:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">traefik.toml</span>     <span class="comment"># configmap</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">traefik:1.7.9</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">traefik-ingress-lb</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">          <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">          <span class="attr">hostPort:</span> <span class="number">80</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">admin</span></span><br><span class="line">          <span class="attr">containerPort:</span> <span class="number">8080</span></span><br><span class="line">        <span class="attr">securityContext:</span></span><br><span class="line">          <span class="attr">privileged:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">args:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--configfile=/config/traefik.toml</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">-d</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--web</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--kubernetes</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">&quot;/ssl&quot;</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">&quot;ssl&quot;</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">&quot;/config&quot;</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">&quot;config&quot;</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">traefik-ingress-service</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">traefik-ingress-lb</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">web</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">admin</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">443</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">https</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">traefik-web-ui</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">traefik-ingress-lb</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">8080</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">traefik-web-ui</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">kubernetes.io/ingress.class:</span> <span class="string">traefik</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">traefik.ui.com</span></span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">serviceName:</span> <span class="string">traefik-web-ui</span></span><br><span class="line">          <span class="attr">servicePort:</span> <span class="number">80</span></span><br><span class="line"><span class="comment"># kubectl apply -f traefik_https.yml </span></span><br><span class="line"><span class="string">clusterrole.rbac.authorization.k8s.io/traefik-ingress-controller</span> <span class="string">created</span></span><br><span class="line"><span class="string">serviceaccount/traefik-ingress-controller</span> <span class="string">created</span></span><br><span class="line"><span class="string">clusterrolebinding.rbac.authorization.k8s.io/traefik-ingress-controller</span> <span class="string">created</span></span><br><span class="line"><span class="string">daemonset.extensions/traefik-ingress-controller</span> <span class="string">created</span></span><br><span class="line"><span class="string">service/traefik-web-ui</span> <span class="string">created</span></span><br><span class="line"><span class="string">ingress.extensions/traefik-web-ui</span> <span class="string">created</span></span><br></pre></td></tr></table></figure>


<p><strong>此处的坑是&#x2F;config&#x2F;traefik.toml是容器内地址，不是宿主机的路径，不要手贱去修改！</strong></p>
<p>创建ingress</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim k8s_ui.yml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">dashboard</span></span><br><span class="line"><span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">annotations:</span></span><br><span class="line">   <span class="attr">kubernetes.io/ingress.class:</span> <span class="string">traefik</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">host:</span> <span class="string">k8s.ui.com</span></span><br><span class="line">   <span class="attr">http:</span></span><br><span class="line">     <span class="attr">paths:</span></span><br><span class="line">     <span class="bullet">-</span> <span class="attr">backend:</span></span><br><span class="line">       <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">         <span class="attr">serviceName:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">         <span class="attr">servicePort:</span> <span class="number">443</span></span><br><span class="line"><span class="comment"># kubectl create -f k8s_ui.yml </span></span><br><span class="line"><span class="string">ingress.extensions/dashboard</span> <span class="string">created</span></span><br></pre></td></tr></table></figure>


<p><img src="/image/1569639930-15696399251.png"></p>
<p><img src="/image/1569639985-Image.png"></p>
]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu20.04 lts 部署k8s集群</title>
    <url>/2022/12/30/ubuntu20.04-lts%E9%83%A8%E7%BD%B2k8s%E9%9B%86%E7%BE%A4/</url>
    <content><![CDATA[<p><strong>关闭防火墙</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ufw <span class="built_in">disable</span> &amp;&amp; sudo ufw stop</span></span><br></pre></td></tr></table></figure>

<p><strong>关闭swap</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">swapoff -a</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sed -i <span class="string">&#x27;/ swap / s/^\(.*\)$/#\1/g&#x27;</span> /etc/fstab</span></span><br></pre></td></tr></table></figure>

<p><strong>关闭selinux</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">setenforce 0</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sed -i <span class="string">&quot;s/SELINUX=enforcing/SELINUX=disabled/g&quot;</span> /etc/selinux/config</span></span><br></pre></td></tr></table></figure>

<p><strong>调整内核参数</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cat</span> &gt; /etc/sysctl.d/kubernetes.conf &lt;&lt;<span class="string">EOF</span></span></span><br><span class="line">vm.swappiness=0         # 禁止使用 swap 空间，只有当系统 OOM 时才允许使用它</span><br><span class="line">vm.overcommit_memory=1  # 表示内核允许分配所有的物理内存，而不管当前的内存状态如何</span><br><span class="line">vm.panic_on_oom=0       # 表示当内存耗尽时，内核会触发OOM killer杀掉最耗内存的进程</span><br><span class="line">vm.max_map_count=262144  </span><br><span class="line">net.bridge.bridge-nf-call-iptables=1</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables=1</span><br><span class="line">net.ipv4.ip_forward=1</span><br><span class="line">net.ipv4.tcp_tw_recycle=0</span><br><span class="line">net.ipv4.tcp_wmem=4096 12582912 16777216</span><br><span class="line">net.ipv4.tcp_rmem=4096 12582912 16777216</span><br><span class="line">net.ipv4.tcp_max_syn_backlog=8096</span><br><span class="line">net.ipv4.tcp_slow_start_after_idle=0</span><br><span class="line">net.ipv4.tcp_tw_reuse=1</span><br><span class="line">net.core.somaxconn=32768</span><br><span class="line">net.core.wmem_max=26214400</span><br><span class="line">net.core.rmem_max=26214400</span><br><span class="line">net.core.rmem_default=26214400</span><br><span class="line">net.core.netdev_max_backlog=16384</span><br><span class="line">net.ipv4.ip_forward=1</span><br><span class="line">net.ipv4.neigh.default.gc_thresh1=8000</span><br><span class="line">net.ipv4.neigh.default.gc_thresh2=9000</span><br><span class="line">net.ipv4.neigh.default.gc_thresh3=10000</span><br><span class="line">net.ipv4.conf.default.promote_secondaries=1</span><br><span class="line">net.ipv6.conf.all.disable_ipv6=1</span><br><span class="line">net.netfilter.nf_conntrack_max=2310720</span><br><span class="line">fs.inotify.max_user_watches=1048576</span><br><span class="line">fs.inotify.max_user_instances=8192</span><br><span class="line">fs.inotify.max_queued_events=16384</span><br><span class="line">fs.file-max=52706963</span><br><span class="line">fs.nr_open=52706963</span><br><span class="line">kernel.pid_max=196608</span><br><span class="line">EOF</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="string">sysctl -p /etc/sysctl.d/kubernetes.conf</span></span></span><br></pre></td></tr></table></figure>




<p><strong>安装ipset和ipvsadm</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">apt install -y ipset ipvsadm</span></span><br></pre></td></tr></table></figure>

<p><strong>配置加载模块</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cat</span> &gt; /etc/modules-load.d/ipvs.conf &lt;&lt; <span class="string">EOF</span></span></span><br><span class="line">modprobe -- ip_vs</span><br><span class="line">modprobe -- ip_vs_rr</span><br><span class="line">modprobe -- ip_vs_wrr</span><br><span class="line">modprobe -- ip_vs_sh</span><br><span class="line">modprobe -- nf_conntrack</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<p><strong>临时加载</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">modprobe -- ip_vs</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">modprobe -- ip_vs_rr</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">modprobe -- ip_vs_wrr</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">modprobe -- ip_vs_sh</span></span><br></pre></td></tr></table></figure>

<p><strong>开机加载配置，将ipvs相关模块加入配置文件中</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cat</span> &gt;&gt; /etc/modules &lt;&lt;<span class="string">EOF</span></span></span><br><span class="line">ip_vs_sh</span><br><span class="line">ip_vs_wrr</span><br><span class="line">ip_vs_rr</span><br><span class="line">ip_vs</span><br><span class="line">nf_conntrack</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<p><strong>安装docker-ce</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">apt-get install docker.io</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker version</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">systemcd <span class="built_in">enable</span> docker</span></span><br></pre></td></tr></table></figure>

<p><strong>生成默认docker配置</strong></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"> <span class="attr">&quot;insecure-registries&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">&quot;192.168.0.200&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span>  <span class="comment">// 私有仓库</span></span><br><span class="line"> <span class="attr">&quot;registry-mirrors&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;https://djbk5ums.mirror.aliyuncs.com&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="comment">//国内加速镜像</span></span><br><span class="line"> <span class="attr">&quot;log-driver&quot;</span><span class="punctuation">:</span> <span class="string">&quot;json-file&quot;</span><span class="punctuation">,</span></span><br><span class="line"> <span class="attr">&quot;log-opts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"> <span class="attr">&quot;max-size&quot;</span><span class="punctuation">:</span> <span class="string">&quot;20m&quot;</span><span class="punctuation">,</span></span><br><span class="line"> <span class="attr">&quot;max-file&quot;</span><span class="punctuation">:</span> <span class="string">&quot;10&quot;</span></span><br><span class="line"> <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"> <span class="attr">&quot;exec-opts&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;native.cgroupdriver=systemd&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"> <span class="attr">&quot;live-restore&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p><strong>配置阿里云镜像站点</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">curl https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg | apt-key add -</span> </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt;/etc/apt/sources.list.d/kubernetes.list</span></span></span><br><span class="line">deb https://mirrors.aliyun.com/kubernetes/apt/ kubernetes-xenial main</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<p><strong>安装kubeadm、kubelet、kubectl</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">apt-get install -y kubelet=1.22.10-00 kubeadm=1.22.10-00 kubectl=1.22.10-00</span><br></pre></td></tr></table></figure>

<p><strong>使用国内阿里云镜像站点，查看所需镜像</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">kubeadm config images list \</span></span><br><span class="line"><span class="language-bash">--image-repository registry.aliyuncs.com/google_containers \</span></span><br><span class="line"><span class="language-bash">--kubernetes-version=v1.22.10</span></span><br></pre></td></tr></table></figure>

<p><strong>指定版本下载</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">kubeadm config images pull \</span></span><br><span class="line"><span class="language-bash">--kubernetes-version=v1.22.10 \</span></span><br><span class="line"><span class="language-bash">--image-repository registry.aliyuncs.com/google_containers</span></span><br></pre></td></tr></table></figure>

<p><strong>初始化配置文件</strong></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">kubeadm</span> <span class="string">config</span> <span class="string">print</span> <span class="string">init-defaults</span> <span class="string">&gt;</span> <span class="string">kubeadm-config.yaml</span></span><br><span class="line"><span class="string">$</span> <span class="string">vi</span> <span class="string">kubeadm-config.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">kubeadm.k8s.io/v1beta3</span></span><br><span class="line"><span class="attr">bootstrapTokens:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">groups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">system:bootstrappers:kubeadm:default-node-token</span></span><br><span class="line">  <span class="attr">token:</span> <span class="string">abcdef.0123456789abcdef</span></span><br><span class="line">  <span class="attr">ttl:</span> <span class="string">24h0m0s</span></span><br><span class="line">  <span class="attr">usages:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">signing</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">authentication</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">InitConfiguration</span></span><br><span class="line"><span class="attr">localAPIEndpoint:</span></span><br><span class="line">  <span class="attr">advertiseAddress:</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.201</span>    <span class="comment"># 配置初始化master节点ip</span></span><br><span class="line">  <span class="attr">bindPort:</span> <span class="number">6443</span></span><br><span class="line"><span class="attr">nodeRegistration:</span></span><br><span class="line">  <span class="attr">criSocket:</span> <span class="string">/var/run/dockershim.sock</span></span><br><span class="line">  <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">master</span>                       <span class="comment"># 配置初始化master节点主机名</span></span><br><span class="line">  <span class="attr">taints:</span> <span class="literal">null</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiServer:</span></span><br><span class="line">  <span class="attr">timeoutForControlPlane:</span> <span class="string">4m0s</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">kubeadm.k8s.io/v1beta3</span></span><br><span class="line"><span class="attr">certificatesDir:</span> <span class="string">/etc/kubernetes/pki</span></span><br><span class="line"><span class="attr">clusterName:</span> <span class="string">kubernetes</span></span><br><span class="line"><span class="attr">controllerManager:</span> &#123;&#125;</span><br><span class="line"><span class="attr">dns:</span> &#123;&#125;</span><br><span class="line"><span class="attr">etcd:</span></span><br><span class="line">  <span class="attr">local:</span></span><br><span class="line">    <span class="attr">dataDir:</span> <span class="string">/var/lib/etcd</span></span><br><span class="line"><span class="attr">imageRepository:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/google_containers</span> <span class="comment"># 指定国内源</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterConfiguration</span></span><br><span class="line"><span class="attr">kubernetesVersion:</span> <span class="number">1.22</span><span class="number">.10</span>           <span class="comment"># 指定版本</span></span><br><span class="line"><span class="attr">networking:</span></span><br><span class="line">  <span class="attr">dnsDomain:</span> <span class="string">cluster.local</span></span><br><span class="line">  <span class="attr">serviceSubnet:</span> <span class="number">10.96</span><span class="number">.0</span><span class="number">.0</span><span class="string">/12</span></span><br><span class="line">  <span class="attr">podSubnet:</span> <span class="number">172.31</span><span class="number">.0</span><span class="number">.0</span><span class="string">/16</span></span><br><span class="line"><span class="attr">scheduler:</span> &#123;&#125;</span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># 使用ipvs</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">kubeproxy.config.k8s.io/v1alpha1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">KubeProxyConfiguration</span></span><br><span class="line"><span class="attr">mode:</span> <span class="string">ipvs</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># 指定cgroup</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">kubelet.config.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">KubeletConfiguration</span></span><br><span class="line"><span class="attr">cgroupDriver:</span> <span class="string">systemd</span></span><br></pre></td></tr></table></figure>

<p><strong>初始化master节点</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">kubeadm init --config=kubeadm-config.yaml --upload-certs| <span class="built_in">tee</span> kubeadm-init.log</span></span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
      <tags>
        <tag>Kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>win使用curl命令</title>
    <url>/2019/03/19/win%E4%BD%BF%E7%94%A8curl%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h3 id="下载软件"><a href="#下载软件" class="headerlink" title="下载软件"></a>下载软件</h3><p><a href="https://skanthak.homepage.t-online.de/download/curl-7.62.0.cab">https://skanthak.homepage.t-online.de/download/curl-7.62.0.cab</a></p>
<p>把curl包解压放进C:\Program Files目录</p>
<h3 id="配置系统变量"><a href="#配置系统变量" class="headerlink" title="配置系统变量"></a>配置系统变量</h3> <span id="more"></span>
<p>win10显示我的电脑</p>
<p><a href="https://jingyan.baidu.com/article/4b52d702e1b064fc5c774bac.html">https://jingyan.baidu.com/article/4b52d702e1b064fc5c774bac.html</a></p>
<p>我的电脑 &#x3D;&gt; 属性 &#x3D;&gt; 高级系统设置 &#x3D;&gt; 环境变量</p>
<p>添加curl目录</p>
<p>CURL_HOME C:\Program Files\curl-7.62.0</p>
<p><img src="/image/1552986357-Image.png"></p>
<p>添加到全局变量里</p>
<p>%CURL_HOME%\I386</p>
<p><img src="/image/1552986391-Image.png"></p>
<h3 id="测试环境是否生效"><a href="#测试环境是否生效" class="headerlink" title="测试环境是否生效"></a>测试环境是否生效</h3><p><img src="/image/1552986446-CMYIOR3XION7Y1VL8KTBL-1024x535.png"> </p>
]]></content>
      <categories>
        <category>无聊操作</category>
      </categories>
  </entry>
  <entry>
    <title>wordpress部署安装</title>
    <url>/2018/11/22/wordpress%E9%83%A8%E7%BD%B2%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h2 id="二进制安装mysql8-0"><a href="#二进制安装mysql8-0" class="headerlink" title="二进制安装mysql8.0"></a>二进制安装mysql8.0</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget https://dev.mysql.com/get/Downloads/MySQL-8.0/mysql-8.0.12-linux-glibc2.12-x86_64.tar</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">tar xf mysql-8.0.12-linux-glibc2.12-x86_64.tar</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum install -y libaio gcc-c++ lrzsz</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">useradd -s /sbin/nologin -M mysql</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">tar -xf mysql-8.0.12-linux-glibc2.12-x86_64.tar.xz -C /application/</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cd</span> /application/</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mv</span> mysql-8.0.12-linux-glibc2.12-x86_64/ mysql</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mkdir</span> /application/mysql/data</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">chown</span> mysql.mysql /application/mysql/data</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cd</span> mysql</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">./bin/mysqld --initialize --user=mysql --basedir=/application/mysql --datadir=/application/mysql/data/</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cp</span> /application/mysql/support-files/mysql.server /etc/init.d/mysqld</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /etc/init.d/mysqld</span></span><br><span class="line">basedir=/application/mysql</span><br><span class="line">datadir=/application/mysql/data</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">ln</span> -s /application/mysql/bin/mysql /usr/bin/mysql</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /etc/my.cnf</span></span><br><span class="line">[mysqld]</span><br><span class="line">datadir = /application/mysql</span><br><span class="line">datadir = /application/mysql/data</span><br><span class="line">socket = /tmp/mysql.sock</span><br><span class="line">port = 3306</span><br><span class="line">pid-file = /application/mysql/data/mysqld.pid</span><br><span class="line">log-error = /var/log/mysqld.log</span><br><span class="line">bind-address = 0.0.0.0</span><br><span class="line">default_authentication_plugin=mysql_native_password  #远程连接</span><br><span class="line">server-id = 1</span><br><span class="line">log-bin = binlog</span><br><span class="line">log-bin-index = binlog.index</span><br><span class="line">expire_logs_days = 7</span><br><span class="line">max_connections = 400</span><br><span class="line">max_connect_errors = 1000</span><br><span class="line">interactive_timeout = 1800</span><br><span class="line">wait_timeout = 1800</span><br><span class="line">tmp_table_size = 134217728</span><br><span class="line">max_heap_table_size = 134217728</span><br><span class="line">[mysql]</span><br><span class="line">default-character-set = utf8</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">/etc/init.d/mysqld start</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">mysql -uroot -ppxRqK&gt;FBi3:e</span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">alter user <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> identified with mysql_native_password BY <span class="string">&#x27;password&#x27;</span>;</span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">flush privileges;</span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">use mysql</span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash"><span class="keyword">select</span> host,user,authentication_string,plugin from user;</span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">update user <span class="built_in">set</span> host=<span class="string">&#x27;%&#x27;</span> <span class="built_in">where</span> user=<span class="string">&#x27;root&#x27;</span>;</span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">create database wordpress;</span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">create user <span class="string">&#x27;wordpress&#x27;</span>@<span class="string">&#x27;IP&#x27;</span> identified by <span class="string">&#x27;password&#x27;</span>;</span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">grant all privileges on wordpress.* to <span class="string">&#x27;wordpress&#x27;</span>@<span class="string">&#x27;IP&#x27;</span>;</span></span><br></pre></td></tr></table></figure>
 <span id="more"></span>
<h2 id="yum安装php7-0"><a href="#yum安装php7-0" class="headerlink" title="yum安装php7.0"></a>yum安装php7.0</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum -y install php72w php72w-cli php72w-common php72w-devel php72w-embedded php72w-fpm php72w-gd php72w-mbstring php72w-mysql php72w-opcache php72w-pdo php72w-xml</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl start php-fpm</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl <span class="built_in">enable</span> php-fpm</span></span><br></pre></td></tr></table></figure>
<h2 id="编译安装nginx"><a href="#编译安装nginx" class="headerlink" title="编译安装nginx"></a>编译安装nginx</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget -c http://nginx.org/download/nginx-1.15.2.tar.gz</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">tar xf nginx-1.15.2.tar.gz</span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cd</span> nginx-1.15.2/</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">useradd -M -s /sbin/nologin www</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum install -y pcre-devel openssl-devel</span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">./configure --prefix=/application/nginx --user=www --group=www --with-http_stub_status_module --with-http_ssl_module</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">make &amp;&amp; make install</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /etc/profile</span></span><br><span class="line">export PATH=$PATH:/application/nginx/sbin:$PATH</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">source</span> /etc/profile</span></span><br></pre></td></tr></table></figure>
<h2 id="安装wordpress"><a href="#安装wordpress" class="headerlink" title="安装wordpress"></a>安装wordpress</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">  listen 80; </span><br><span class="line">  server_name localhost;</span><br><span class="line">  root  html/wordpress;</span><br><span class="line">  index index.php index.html;</span><br><span class="line">   if (-f $request_filename/index.html)&#123;</span><br><span class="line">     rewrite (.*) $1/index.html break;</span><br><span class="line">   &#125;</span><br><span class="line">   if (-f $request_filename/index.php)&#123;</span><br><span class="line">     rewrite (.*) $1/index.php;</span><br><span class="line">   &#125;</span><br><span class="line">   if (!-f $request_filename)&#123;</span><br><span class="line">     rewrite (.*) /index.php;</span><br><span class="line">   &#125;</span><br><span class="line">   set $skip_cache 0;</span><br><span class="line">  # post访问不缓存 </span><br><span class="line">   if ($request_method = POST) &#123;</span><br><span class="line">        set $skip_cache 1;</span><br><span class="line">   &#125;   </span><br><span class="line">  # 动态查询不缓存</span><br><span class="line">   if ($query_string != &quot;&quot;) &#123;</span><br><span class="line">        set $skip_cache 1;</span><br><span class="line">   &#125;   </span><br><span class="line">  # 后台等特定页面不缓存（其他需求请自行添加即可） </span><br><span class="line">   if ($request_uri ~* &quot;/wp-admin/|/xmlrpc.php|wp-.*.php|/feed/|index.php|sitemap(_index)?.xml&quot;) &#123;</span><br><span class="line">        set $skip_cache 1;</span><br><span class="line">   &#125;   </span><br><span class="line">  # 对登录用户、评论过的用户不展示缓存 </span><br><span class="line">   if ($http_cookie ~* &quot;comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in&quot;) &#123;</span><br><span class="line">        set $skip_cache 1;</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   location / &#123;</span><br><span class="line">        try_files $uri $uri/ /index.php?$args;</span><br><span class="line">        rewrite /wp-admin$ $scheme://$host$uri/ permanent;</span><br><span class="line">   &#125;    </span><br><span class="line">   location ~ \.php$ &#123;</span><br><span class="line">    try_files $uri =404; </span><br><span class="line">    include fastcgi_params;</span><br><span class="line">    root   html/wordpress;</span><br><span class="line">    fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">    fastcgi_index  index.php;</span><br><span class="line">    fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;</span><br><span class="line">    include        fastcgi_params;</span><br><span class="line">    fastcgi_cache_bypass $skip_cache;</span><br><span class="line">    fastcgi_no_cache $skip_cache;</span><br><span class="line">    add_header X-Cache &quot;$upstream_cache_status From $host&quot;;</span><br><span class="line">  &#125;</span><br><span class="line">  location ~* \.(ico|jpe?g|gif|png|bmp|swf|flv)$ &#123;</span><br><span class="line">    expires 30d;</span><br><span class="line">    access_log off;</span><br><span class="line">  &#125;</span><br><span class="line">  location ~* \.(js|css)$ &#123;</span><br><span class="line">    expires 1d; </span><br><span class="line">    log_not_found off;</span><br><span class="line">    access_log off;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>安装过程。。。。略</p>
<h2 id="wordpress安装插件需要ftp问题"><a href="#wordpress安装插件需要ftp问题" class="headerlink" title="wordpress安装插件需要ftp问题"></a>wordpress安装插件需要ftp问题</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="built_in">chown</span> -R www.www wordpress/</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">vim wp-config.php</span></span><br><span class="line">define(&quot;FS_METHOD&quot;,&quot;direct&quot;);</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">vim  /etc/php-fpm.d/www.conf</span></span><br><span class="line">user = www</span><br><span class="line">group = www</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">systemctl restart php-fpm</span></span><br></pre></td></tr></table></figure>
<h2 id="php-memcached插件"><a href="#php-memcached插件" class="headerlink" title="php-memcached插件"></a>php-memcached插件</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">php-memcached插件</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">wget https://github.com/php-memcached-dev/php-memcached/archive/php7.zip</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">unzip php7.zip</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="built_in">cd</span> php-memcached-php7/</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">phpize</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">./configure --with-php-config=/usr/bin/php-config</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">make &amp;&amp; make install</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">vim /etc/php.ini</span></span><br><span class="line">[memcache]</span><br><span class="line">extension_dir = &quot;/usr/lib64/php/modules&quot;</span><br><span class="line">extension = &quot;memcached.so&quot;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">systemctl restart php-fpm</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>linux基础</category>
      </categories>
  </entry>
  <entry>
    <title>Xshell6</title>
    <url>/2019/12/23/xshell6/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Xshell 是一个功能强大的终端模拟器，支持 SSH、SFTP、telnet，rlogin 和串行。它支持各种安全功能，如 SSH1 &#x2F; SSH2 协议，密码和 DSA 和 RSA 公开密钥的用户认证方法，并加密所有流量的各种加密算法。Xshell 支持在任何给定的时间中运用多个终端会话，以及与不同主机比较终端输出或者给不同主机发送同一组命令。Xshell 可以将多种语言显示在一个屏幕上，无需切换不同的语言编码。Xshell 还支持标签环境，广泛拆分窗口，同步输入和会话管理。</p>
 <span id="more"></span>

<p>官网下载：<a href="https://www.netsarang.com/">https://www.netsarang.com/</a></p>
<p>注意：</p>
<ul>
<li>下载文件名如果为：Xshell-6.0.xxxxp.exe ,免费使用但是一个窗口只能开4个终端</li>
<li>下载文件名如果为：Xshell-6.0.xxxxr.exe ,这种的可以使用激活码安装离线激活，一个窗口无限制开多个终端</li>
</ul>
<p><a href="https://pan.wqblogs.com:4443/sharing/JCjZONNmV">下载链接</a> 密码：wqblogs.com</p>
<h2 id="注册机破解"><a href="#注册机破解" class="headerlink" title="注册机破解"></a>注册机破解</h2><p>注册机generate（生成）序列号&#x3D;&gt; copy（复制）序列号</p>
<p><img src="/image/1577081729.png"></p>
<p>Xshell客户信息的序列号粘贴</p>
<p><img src="/image/1577081749.png"></p>
<p>打开xshell激活</p>
<p><img src="/image/1577081766.png"></p>
<p><img src="/image/1577081782.png"></p>
<p>关闭xshell</p>
<p>点击注册机 Fix Host + Register</p>
<p><img src="/image/1577081815.png"></p>
<p>已激活</p>
<p><img src="/image/1577081837.png"> </p>
]]></content>
      <categories>
        <category>无聊操作</category>
      </categories>
  </entry>
  <entry>
    <title>配置yum仓库</title>
    <url>/2021/01/20/yum/</url>
    <content><![CDATA[<h3 id="使用centos镜像作为yum源"><a href="#使用centos镜像作为yum源" class="headerlink" title="使用centos镜像作为yum源"></a>使用centos镜像作为yum源</h3><p>挂载iso镜像至mnt目录</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">mount -o loop /root/CentOS-7-x86_64-Everything-2009.iso /mnt</span></span><br><span class="line">mount: /dev/loop0 is write-protected, mounting read-only</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ll /mnt/</span></span><br><span class="line">total 1668</span><br><span class="line">-rw-r--r--.  1 root root      14 Oct 30 05:14 CentOS_BuildTag</span><br><span class="line">drwxr-xr-x.  3 root root    2048 Oct 27 00:25 EFI</span><br><span class="line">-rw-rw-r--. 17 root root     227 Aug 30  2017 EULA</span><br><span class="line">-rw-rw-r--. 17 root root   18009 Dec 10  2015 GPL</span><br><span class="line">drwxr-xr-x.  3 root root    2048 Oct 27 00:26 images</span><br><span class="line">drwxr-xr-x.  2 root root    2048 Oct 27 00:25 isolinux</span><br><span class="line">drwxr-xr-x.  2 root root    2048 Oct 27 00:25 LiveOS</span><br><span class="line">drwxr-xr-x.  2 root root 1669120 Oct 29 22:39 Packages</span><br><span class="line">drwxr-xr-x.  2 root root    4096 Oct 30 04:03 repodata</span><br><span class="line">-rw-rw-r--. 17 root root    1690 Dec 10  2015 RPM-GPG-KEY-CentOS-7</span><br><span class="line">-rw-rw-r--. 15 root root    1690 Dec 10  2015 RPM-GPG-KEY-CentOS-Testing-7</span><br><span class="line">-r--r--r--.  1 root root    2883 Nov  2 23:15 TRANS.TBL</span><br></pre></td></tr></table></figure>

<p>备份现有镜像repo源</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mkdir</span> /etc/yum.repos.d/bak -p &amp;&amp; <span class="built_in">mv</span> /etc/yum.repos.d/*.repo /etc/yum.repos.d/bak/</span></span><br></pre></td></tr></table></figure>

<p>创建yum源repo文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /etc/yum.repos.d/local.repo</span></span><br><span class="line">[Centos-7.9]</span><br><span class="line">name=local-repo</span><br><span class="line">baseurl=file:///mnt</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum clean all</span></span><br><span class="line">Loaded plugins: fastestmirror</span><br><span class="line">Cleaning repos: Centos-7.9</span><br></pre></td></tr></table></figure>

<h3 id="ftp配置yum源"><a href="#ftp配置yum源" class="headerlink" title="ftp配置yum源"></a>ftp配置yum源</h3><p>安装ftp</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum install -y vsftpd</span></span><br></pre></td></tr></table></figure>

<p>挂载iso镜像至ftp共享目录</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mkdir</span> /var/ftp/centos7.9</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cp</span> -rf /mnt/* /var/ftp/centos7.9/</span></span><br></pre></td></tr></table></figure>

<p>启动ftp</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl <span class="built_in">enable</span> vsftpd</span></span><br><span class="line">Created symlink from /etc/systemd/system/multi-user.target.wants/vsftpd.service to /usr/lib/systemd/system/vsftpd.service.</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl start vsftpd</span></span><br></pre></td></tr></table></figure>

<p>卸载mnt目录</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">umount /mnt</span></span><br></pre></td></tr></table></figure>
<p>配置yum源repo文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[Centos-7.9]</span><br><span class="line">name=local-repo</span><br><span class="line">baseurl=ftp://192.168.1.100/centos7.9</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=ftp://192.168.1.100/centos7.9/RPM-GPG-KEY-CentOS-7</span><br></pre></td></tr></table></figure>

<p>验证yum源</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum repolist</span></span><br><span class="line">Loaded plugins: fastestmirror</span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line">Centos-7.9                                                                                                 | 3.6 kB  00:00:00     </span><br><span class="line">(1/2): Centos-7.9/group_gz                                                                                 | 153 kB  00:00:00     </span><br><span class="line">(2/2): Centos-7.9/primary_db                                                                               | 6.1 MB  00:00:00     </span><br><span class="line">repo id                                                       repo name                                                     status</span><br><span class="line">Centos-7.9                                                    local-repo                                                    10,072</span><br><span class="line">repolist: 10,072</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux基础</category>
      </categories>
  </entry>
  <entry>
    <title>yum的使用</title>
    <url>/2019/03/27/yum%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p>yum（ Yellow dog Updater, Modified）是一个在Fedora和RedHat以及SUSE中的Shell前端软件包管理器。 基於RPM包管理，能够从指定的服务器自动下载RPM包并且安装，可以自动处理依赖性关系，并且一次安装所有依赖的软体包，无须繁琐地一次次下载、安装</p>
<h3 id="yum语法"><a href="#yum语法" class="headerlink" title="yum语法"></a>yum语法</h3> <span id="more"></span>
<p>yum [options] [command] [package …] </p>
<p>options：可选，选项包括-h（帮助），-y（当安装过程提示选择全部为”yes”），-q（不显示安装的过程）等等 </p>
<p>command：要进行的操作</p>
<p>package：操作的对象</p>
<h3 id="yum常用命令"><a href="#yum常用命令" class="headerlink" title="yum常用命令"></a>yum常用命令</h3><ul>
<li>列出所有可更新的软件清单命令：yum check-update</li>
<li>更新所有软件命令：yum update</li>
<li>仅安装指定的软件命令：yum install <package_name></li>
<li>仅更新指定的软件命令：yum update <package_name></li>
<li>列出所有可安裝的软件清单命令：yum list</li>
<li>删除软件包命令：yum remove <package_name></li>
<li>查找软件包 命令：yum search <keyword></li>
<li>清除缓存命令:</li>
</ul>
<p>yum clean packages:   清除缓存目录下的软件包</p>
<p>yum clean headers:    清除缓存目录下的 headers</p>
<p>yum clean oldheaders: 清除缓存目录下旧的 headers</p>
<p>yum clean, yum clean all (&#x3D; yum clean packages; yum clean oldheaders) :         清除缓存目录下的软件包及旧的headers</p>
<ul>
<li>查看命令的来源<br>yum provides [绝对路径] 例：yum provides &#x2F;usr&#x2F;bin&#x2F;rz</li>
</ul>
<h3 id="yum缓存的使用"><a href="#yum缓存的使用" class="headerlink" title="yum缓存的使用"></a>yum缓存的使用</h3><p>内网环境无法上网，使用内网yum仓库，发现依赖找不到，就可以使用缓存功能来达到目的（使用本地虚拟机完成所有配置，将cachedir指定的目录直接拷贝到其它待安装的远程服务器） 虚拟机开启缓存</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /etc/yum.conf</span></span><br><span class="line">[main]</span><br><span class="line">cachedir=/var/cache/yum/$basearch/$releasever</span><br><span class="line">keepcache=0 =&gt; 1</span><br></pre></td></tr></table></figure>
<p>内网机器</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum -C update 更新缓存内的软件</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum -C install [软件名]</span></span><br></pre></td></tr></table></figure>
<p>-C参数表示使用系统缓存 </p>
]]></content>
      <categories>
        <category>linux基础</category>
      </categories>
      <tags>
        <tag>linux基础</tag>
      </tags>
  </entry>
  <entry>
    <title>二进制部署高可用集群</title>
    <url>/2019/11/17/%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%83%A8%E7%BD%B2%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4/</url>
    <content><![CDATA[<p>本文档将介绍如何使用二进制部署Kubernetes v1.15集群的所有部署，而不是使用自动化部署(kubeadm)集群。在部署过程中，将详细列出各个组件启动参数，以及相关配置说明。在学习完本文档后，将理解k8s各个组件的交互原理，并且可以快速解决实际问题。</p>
<ul>
<li><a href="https://www.wqblogs.com:4443/2019/11/17/%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%9B%86%E7%BE%A4%E8%A7%84%E5%88%92/">二进制集群规划</a></li>
<li><a href="https://www.wqblogs.com:4443/2019/11/17/%E6%90%AD%E5%BB%BAdns%E6%9C%8D%E5%8A%A1%E5%99%A8/">搭建dns服务器</a></li>
<li><a href="https://www.wqblogs.com:4443/2019/11/17/docker%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2/">docker环境部署</a></li>
<li><a href="https://www.wqblogs.com:4443/2019/11/17/%E9%83%A8%E7%BD%B2%E7%AD%BE%E5%8F%91%E8%AF%81%E4%B9%A6%E7%8E%AF%E5%A2%83/">部署签发证书环境</a></li>
<li><a href="https://www.wqblogs.com:4443/2019/11/17/%E9%83%A8%E7%BD%B2Master%E8%8A%82%E7%82%B9etcd%E6%9C%8D%E5%8A%A1/">部署Master节点etcd服务</a></li>
<li><a href="https://www.wqblogs.com:4443/2019/11/17/%E9%83%A8%E7%BD%B2Master%E8%8A%82%E7%82%B9apiserver%E6%9C%8D%E5%8A%A1/">部署Master节点apiserver服务</a></li>
<li><a href="https://www.wqblogs.com:4443/2019/11/17/%E9%83%A8%E7%BD%B2Matser%E8%8A%82%E7%82%B9controller-manager%E6%9C%8D%E5%8A%A1/">部署Matser节点controller-manager服务</a></li>
<li><a href="https://www.wqblogs.com:4443/2019/11/17/%E9%83%A8%E7%BD%B2Matser%E8%8A%82%E7%82%B9kube-scheduler%E6%9C%8D%E5%8A%A1/">部署Matser节点kube-scheduler服务</a></li>
<li><a href="https://www.wqblogs.com:4443/2019/11/17/%E9%83%A8%E7%BD%B2Node%E8%8A%82%E7%82%B9kubelet%E6%9C%8D%E5%8A%A1/">部署Node节点kubelet服务</a></li>
<li><a href="https://www.wqblogs.com:4443/2019/11/17/%E9%83%A8%E7%BD%B2Node%E8%8A%82%E7%82%B9kube-proxy%E6%9C%8D%E5%8A%A1/">部署Node节点kube-proxy服务</a></li>
<li><a href="https://www.wqblogs.com:4443/2019/12/05/k8s%E9%9B%86%E7%BE%A4%E5%AE%B9%E5%99%A8%E6%97%B6%E5%8C%BA%E8%87%AA%E5%8A%A8%E9%85%8D%E7%BD%AE/">k8s集群容器时区自动配置</a></li>
<li><a href="https://www.wqblogs.com:4443/2019/11/29/Flannel%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/">部署Flannel网络</a></li>
<li><a href="https://www.wqblogs.com:4443/2019/11/29/flannel%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/">flannel工作原理</a></li>
<li><a href="https://www.wqblogs.com:4443/2019/12/02/%E9%83%A8%E7%BD%B2coredns%E8%87%AA%E5%8A%A8%E5%8F%91%E7%8E%B0/">部署coredns自动发现</a></li>
<li><a href="https://www.wqblogs.com:4443/2019/12/02/k8s%E6%9A%B4%E9%9C%B2%E6%9C%8D%E5%8A%A1traefik/">k8s暴露服务traefik</a></li>
<li><a href="https://www.wqblogs.com:4443/2019/12/04/%E9%83%A8%E7%BD%B2dashboard/">部署dashboard</a></li>
<li><a href="https://www.wqblogs.com:4443/2019/12/04/%E9%83%A8%E7%BD%B2heapster/">部署heapster</a></li>
<li><a href="https://www.wqblogs.com:4443/2019/12/04/%E9%83%A8%E7%BD%B2metrics-server">部署metrics-server</a></li>
<li><a href="https://www.wqblogs.com:4443/2019/12/04/%E5%B9%B3%E6%BB%91%E5%8D%87%E7%BA%A7kubernetes/">平滑升级kubernetes</a></li>
<li>已完结</li>
</ul>
]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
  </entry>
  <entry>
    <title>zabbix监控内网windows服务器</title>
    <url>/2019/02/19/zabbix%E7%9B%91%E6%8E%A7%E5%86%85%E7%BD%91windows%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    <content><![CDATA[<h2 id="win配置"><a href="#win配置" class="headerlink" title="win配置"></a>win配置</h2><h3 id="下载zabbix-agent"><a href="#下载zabbix-agent" class="headerlink" title="下载zabbix-agent"></a>下载zabbix-agent</h3><p><a href="https://www.zabbix.com/downloads/4.0.4/zabbix_agents-4.0.4-win-amd64.zip">https://www.zabbix.com/downloads/4.0.4/zabbix_agents-4.0.4-win-amd64.zip</a></p>
<p>放入C盘</p>
<p>重命名文件zabbix</p>
 <span id="more"></span>

<h3 id="编写conf文件"><a href="#编写conf文件" class="headerlink" title="编写conf文件"></a>编写conf文件</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">LogFile=c:\\zabbix\\zabbix_agentd.log</span><br><span class="line">Server=106.12.11.107             # 服务端</span><br><span class="line">ListenPort=10050</span><br><span class="line">ServerActive=106.12.11.107:10051 # 主要是该配置，启用主动模式</span><br><span class="line">Hostname=WIN-7P4HF9RA6AF         # win主机名</span><br></pre></td></tr></table></figure>

<h3 id="安装zabbix-agent"><a href="#安装zabbix-agent" class="headerlink" title="安装zabbix-agent"></a>安装zabbix-agent</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#cd C:\zabbix\bin</span></span><br><span class="line"><span class="comment">#zabbix_agentd.exe -c C:\zabbix\conf\zabbix_agentd.win.conf --install</span></span><br></pre></td></tr></table></figure>

<p><img src="/image/15505632041.png"></p>
<h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#zabbix_agentd.exe --start</span></span><br></pre></td></tr></table></figure>

<p><img src="/image/15505632411.png"></p>
<p>检测zabbix-agent服务是否正常</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#netstat -ano|findstr 10050</span></span><br></pre></td></tr></table></figure>

<p><img src="/image/15505632581.png"></p>
<h2 id="zabbix-server配置"><a href="#zabbix-server配置" class="headerlink" title="zabbix-server配置"></a>zabbix-server配置</h2><h3 id="配置主动模板"><a href="#配置主动模板" class="headerlink" title="配置主动模板"></a>配置主动模板</h3><p><img src="/image/15505637871.png"></p>
<p>重命名</p>
<p><img src="/image/15505638251.png"></p>
<p>选择监控项</p>
<p><img src="/image/15505638621.png"></p>
<p>选择主动式，然后更新</p>
<p><img src="/image/15505639481.png"></p>
<h3 id="配置主机"><a href="#配置主机" class="headerlink" title="配置主机"></a>配置主机</h3><p><img src="/image/1550563988-Image.png"></p>
<p>链接模板</p>
<p><img src="/image/15505642211.png"></p>
<p>查看监控</p>
<p><img src="/image/15505640171.png"> </p>
]]></content>
      <categories>
        <category>zabbix</category>
      </categories>
      <tags>
        <tag>zabbix</tag>
      </tags>
  </entry>
  <entry>
    <title>二进制集群规划</title>
    <url>/2019/11/17/%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%9B%86%E7%BE%A4%E8%A7%84%E5%88%92/</url>
    <content><![CDATA[<h2 id="k8s逻辑架构图"><a href="#k8s逻辑架构图" class="headerlink" title="k8s逻辑架构图"></a>k8s逻辑架构图</h2><h2 id="三条网络"><a href="#三条网络" class="headerlink" title=" 三条网络"></a><img src="/image/1573976421-Image.png"><br> <span id="more"></span><br>三条网络</h2><p><img src="/image/1573976459-Image.png"></p>
<p>网络规划</p>
<p>节点网络：10.4.7.0&#x2F;24</p>
<p>docker的ip地址范围：172.7.21.1&#x2F;24，172.7.22.1&#x2F;24，172.7.200.1&#x2F;24</p>
<p>pod的ip地址范围：172.7.0.0&#x2F;16</p>
<p>service的虚拟IP地址范围：192.168.0.0&#x2F;16</p>
<h2 id="二进制部署架构"><a href="#二进制部署架构" class="headerlink" title="二进制部署架构"></a>二进制部署架构</h2><p><img src="/image/1573976563-Image.png"></p>
<h2 id="主机名"><a href="#主机名" class="headerlink" title="主机名"></a>主机名</h2><table>
<thead>
<tr>
<th>主机名</th>
<th>角色</th>
<th>ip</th>
</tr>
</thead>
<tbody><tr>
<td><a href="http://hdss7-11.host.com/">HDSS7-11.host.com</a></td>
<td>k8s代理节点1</td>
<td>10.4.7.11</td>
</tr>
<tr>
<td><a href="http://hdss7-12.host.com/">HDSS7-12.host.com</a></td>
<td>k8s代理节点2</td>
<td>10.4.7.12</td>
</tr>
<tr>
<td><a href="http://hdss7-21.host.com/">HDSS7-21.host.com</a></td>
<td>k8s运算节点1</td>
<td>10.4.7.21</td>
</tr>
<tr>
<td><a href="http://hdss7-22.host.com/">HDSS7-22.host.com</a></td>
<td>k8s运算节点2</td>
<td>10.4.7.22</td>
</tr>
<tr>
<td><a href="http://hdss7-200.host.com/">HDSS7-200.host.com</a></td>
<td>k8s运维节点(docker仓库)</td>
<td>10.4.7.200</td>
</tr>
</tbody></table>
<h2 id="硬件环境"><a href="#硬件环境" class="headerlink" title="硬件环境"></a>硬件环境</h2><ul>
<li>5台vm，每台至少2c2g</li>
<li>CentOS Linux release 7.6.1810</li>
<li>3.10.0-957.21.3.el7.x86_64</li>
</ul>
]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>使用nexus配置docker仓库</title>
    <url>/2018/12/05/%E4%BD%BF%E7%94%A8nexus%E9%85%8D%E7%BD%AEdocker%E4%BB%93%E5%BA%93/</url>
    <content><![CDATA[<h2 id="部署jdk"><a href="#部署jdk" class="headerlink" title="部署jdk"></a><strong>部署jdk</strong></h2><h2 id="https-pan-baidu-com-s-1wxwDLjsRpT0G793cHBkkuA-部署nexus"><a href="#https-pan-baidu-com-s-1wxwDLjsRpT0G793cHBkkuA-部署nexus" class="headerlink" title="https://pan.baidu.com/s/1wxwDLjsRpT0G793cHBkkuA 部署nexus"></a><a href="https://pan.baidu.com/s/1wxwDLjsRpT0G793cHBkkuA">https://pan.baidu.com/s/1wxwDLjsRpT0G793cHBkkuA</a><br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">tar xf jdk-8u60-linux-x64.tar.gz -C /opt</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">ln</span> -s /opt/jdk1.8.0_60 /opt/jdk</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /etc/profile</span></span><br><span class="line">export JAVA_HOME=/opt/jdk</span><br><span class="line">export JRE_HOME=/opt/jdk/jre</span><br><span class="line">export PATH=$JAVA_HOME/bin:$JAVA_HOME/jre/bin:$PATH</span><br><span class="line">export CLASSPATH=.$CLASSPATH:$JAVA_HOME/lib:$JAVA_HOME/jre/lib:$JAVA_HOME/lib/tools.jar</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">source</span> /etc/profile</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">java -version</span></span><br><span class="line">java version &quot;1.8.0_60&quot;</span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_60-b27)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.60-b23, mixed mode)</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">ln</span> -s /opt/jdk/bin/java /usr/bin/java</span>    </span><br></pre></td></tr></table></figure><br> <span id="more"></span><br>部署nexus</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget https://sonatype-download.global.ssl.fastly.net/nexus/3/nexus-3.14.0-04-unix.tar.gz</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">tar xf nexus-3.14.0-04-unix.tar.gz</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mv</span> nexus-3.14.0-04 /opt/nexus</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cd</span> /opt/nexus</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim etc/nexus-default.properties  <span class="comment">#修改默认端口8081</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">ln</span> -s /opt/nexus/bin/nexus /usr/bin/nexus</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">nexus start</span>    </span><br></pre></td></tr></table></figure>
<p><img src="/image/15439974881.png"></p>
<p>默认账户密码 admin admin123</p>
<h3 id="配置docker仓库"><a href="#配置docker仓库" class="headerlink" title="配置docker仓库"></a><strong>配置docker仓库</strong></h3><p>创建docker镜像仓库</p>
<p><img src="/image/15439974711.png"></p>
<p>激活 Docker Bearer Token Reamlm</p>
<p><img src="/image/15439974461.png"></p>
<p>容许匿名访问</p>
<p><img src="/image/15439973951.png"></p>
<p>由于使用的是http协议，需要配置docker</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /etc/docker/daemon.json</span></span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https://registry.docker-cn.com&quot;],</span><br><span class="line">  &quot;insecure-registries&quot;: [&quot;IP:8088&quot;],</span><br><span class="line">   &quot;disable-legacy-registry&quot;: true</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl daemon-reload</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl restart docker</span>    </span><br></pre></td></tr></table></figure>
<h3 id="仓库测试"><a href="#仓库测试" class="headerlink" title="仓库测试"></a>仓库测试</h3><p>登录认证</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker login -u admin -p admin123 IP:8088</span></span><br><span class="line">Login Succeeded    </span><br></pre></td></tr></table></figure>
<p>给镜像打tag</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker tag docker.io/java:8 IP:8088/java:8</span>    </span><br></pre></td></tr></table></figure>
<p>推送镜像</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker push IP:8088/java:8</span>    </span><br></pre></td></tr></table></figure>
<p>拉取镜像</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker pull IP:8088/java:8</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker images</span></span><br><span class="line">IP:8088/java       8                   d23bdf5b1b1b        22 months ago       643 MB</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>nexus</category>
      </categories>
      <tags>
        <tag>nexus</tag>
      </tags>
  </entry>
  <entry>
    <title>初识kubernetes</title>
    <url>/2019/07/03/%E5%88%9D%E8%AF%86kubernetes/</url>
    <content><![CDATA[<p>Kubernetes是谷歌严格保密十几年的秘密武器—Borg的开源版本。Borg是谷歌的一个内部使用的大规模集群管理系统，它基于容器技术，目的是实现资源管理的自动化，以及跨多个数据中心的资源利用率的最大化。</p>
<p>Kubernetes是一个完备的分布式系统支撑平台。Kubernetes具有完备的集群管理能力，包括多层次的安全保护和准入机制、多租户应用支撑能力、透明的服务注册和服务发现机制、内置智能负载均衡器、强大的故障发现和自我修复能力、服务滚动升级和在线扩容能力、可扩展的资源自动调度机制，以及多粒度的资源配额管理能力。<br> <span id="more"></span><br><img src="/image/k8s%E7%BB%84%E4%BB%B6.jpg"></p>
<p>上图可以看到如下组件，使用特别的图标表示Service和Label：</p>
<ul>
<li><p>Pod</p>
</li>
<li><p>Container（容器）</p>
</li>
<li><p>Label（标签）</p>
</li>
<li><p>Replication Controller（复制控制器）</p>
</li>
<li><p>Service（服务）</p>
</li>
<li><p>Node（节点）</p>
</li>
<li><p>Kubernetes Master（Kubernetes主节点）</p>
</li>
</ul>
<h3 id="集群组成"><a href="#集群组成" class="headerlink" title="集群组成"></a>集群组成</h3><p>master：  管理节点，冗余</p>
<p>node：     工作节点</p>
<h3 id="master核心组件"><a href="#master核心组件" class="headerlink" title="master核心组件"></a>master核心组件</h3><p>kube-apiserver                       提供资源操作的唯一入口，并提供认证、授权、访问控制、API注册和发现等机制</p>
<p>kube-controller-manager    负责维护集群状态，比如故障检测、自动扩展、滚动更新等</p>
<p>kube-scheduler                      负责资源的调度，按照预定的调度策略将Pod调度到相应的机器上</p>
<p>etcd                                           etcd的官方将它定位成一个可信赖的分布式键值存储服务，它能够为整个分布式集群存储一些关键数据，协助分布式集群的正常运转</p>
<h3 id="node核心组件"><a href="#node核心组件" class="headerlink" title="node核心组件"></a>node核心组件</h3><p>kubelet                                  负责维护容器的生命周期，同时也负责Volume（CVI）和网络（CNI）的管理</p>
<p>kube-proxy                           负责为service提供cluster内部的服务发现和负载均衡</p>
<p>Container runtime              负责镜像管理以及Pod和容器的真正运行（CRI）</p>
<p>pod                                         支持多个容器在一个Pod中共享网络地址和文件系统，可以通过进程间 通信和文件共享这种简单高效的方式组合完成服务</p>
<h3 id="推荐的Add-ons"><a href="#推荐的Add-ons" class="headerlink" title="推荐的Add-ons"></a>推荐的Add-ons</h3><p>kube-dns&#x2F;coredns                               负责为整个集群提供DNS服务</p>
<p>Ingress Controller&#x2F;traefik                 为服务提供外网入口</p>
<p>Heapster                                                提供资源监控</p>
<p>Dashboard                                            提供GUI</p>
<p>Federation                                            提供跨可用区的集群</p>
<p>Fluentd-elasticsearch                         提供集群日志采集、存储与查询</p>
<p><strong><em>这些进程实现了整个集群的资源管理、pod调度、弹性收缩、安全控制、系统监控与纠错等管理功能，并且都是全自动完成的</em></strong> <img src="/image/k8s%E7%BB%84%E4%BB%B6%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE.png"> </p>
]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>初识python</title>
    <url>/2019/05/27/%E5%88%9D%E8%AF%86python/</url>
    <content><![CDATA[<h3 id="python简介"><a href="#python简介" class="headerlink" title="python简介"></a>python简介</h3><p>python 创始人：吉多.范罗苏姆  中国俗称 龟叔   特点：优美，清晰，简单。</p>
<p>Python是一种解释型、面向对象、动态数据类型的高级程序设计语言。</p>
<p>Python由Guido van Rossum于1989年底发明，第一个公开发行版发行于1991年。</p>
<p>像Perl语言一样, Python 源代码同样遵循 GPL(GNU General Public License)协议。<br> <span id="more"></span></p>
<h3 id="⽬目前Python-主要应⽤用领域"><a href="#⽬目前Python-主要应⽤用领域" class="headerlink" title="⽬目前Python****主要应⽤用领域:"></a><strong>⽬目前Python****主要应⽤用领域</strong>:</h3><p><strong>云计算</strong>: 云计算最⽕的语言， 典型应用OpenStack</p>
<p><strong>WEB开发</strong>: 众多优秀的WEB框架，众多大型⽹站均为Python开发，Youtube, Dropbox, ⾖瓣。。。， 典型WEB框架有Django</p>
<p><strong>科学运算、⼈工智能</strong>: 典型库NumPy, SciPy, Matplotlib, Enthought librarys,pandas</p>
<p><strong>系统运维</strong>: 运维⼈员必备语⾔</p>
<p>2019.05开发语言排名<a href="https://hellogithub.com/report/tiobe/">https://hellogithub.com/report/tiobe/</a></p>
<p><img src="/image/1558942187-1558942166004.jpg"></p>
<h3 id="python2与python3宏观上区别"><a href="#python2与python3宏观上区别" class="headerlink" title="python2与python3宏观上区别"></a>python2与python3宏观上区别</h3><p>python2 源码不标准，混乱，重复代码太多</p>
<p>python3 标准，去除重复代码</p>
<p>python2里显示中文 需要标识字符集</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim test.py</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/usr/bin/python</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">-*- coding: utf-8 -*-</span></span><br><span class="line">print &quot;我爱中国&quot;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">python test.py</span></span><br><span class="line">我爱中国</span><br></pre></td></tr></table></figure>
<h3 id="编译型与解释型"><a href="#编译型与解释型" class="headerlink" title="编译型与解释型"></a>编译型与解释型</h3><p>编译器是把源程序的每⼀条语句都编译成机器语言,并保存成⼆进制⽂文件,这样运⾏时计算机可以直接以机器语言来运⾏此程序,速度很快。</p>
<p>而解释器则是只在执⾏程序时,才⼀条⼀条的解释成机器语⾔给计算机来执⾏,所以运⾏速度是不如编译后的程序运行的快。</p>
<p>编译型：一次性将所有程序编译成二进制文件</p>
<p>*    缺点：开发效率低，不能跨平台（win，linux）</p>
<p>*    优点：运行速度快</p>
<p>*   语言：C,C++等等</p>
<p>解释型：当程序执行时，一行一行的解释</p>
<p>*    优点：开发效率高，可以跨平台</p>
<p>*    缺点：运行速度慢</p>
<p>*    语言：python,php等等</p>
<h3 id="Python解释器"><a href="#Python解释器" class="headerlink" title="Python解释器"></a>Python解释器</h3><ul>
<li>CPython</li>
</ul>
<p>当我们从Python官方网站下载并安装好Python 3.7后，我们就直接获得了一个官方版本的解释器：CPython。</p>
<p>这个解释器是用C语言开发的，所以叫CPython。在命令行下运行python就是启动CPython解释器。</p>
<p>CPython是使用最广的Python解释器。教程的所有代码也都在CPython下执行。</p>
<ul>
<li>IPython</li>
</ul>
<p>IPython是基于CPython之上的一个交互式解释器，也就是说，IPython只是在交互方式上有所增强，</p>
<p>但是执行Python代码的功能和CPython是完全一样的。好比很多国产浏览器虽然外观不同，但内核其实都是调用了IE。</p>
<p>CPython用&gt;&gt;&gt;作为提示符，而IPython用In [序号]:作为提示符。</p>
<ul>
<li>PyPy</li>
</ul>
<p>PyPy是另一个Python解释器，它的目标是执行速度。PyPy采用JIT技术，对Python代码进行动态编译（注意不是解释），</p>
<p>所以可以显著提高Python代码的执行速度。绝大部分Python代码都可以在PyPy下运行，</p>
<p>但是PyPy和CPython有一些是不同的，这就导致相同的Python代码在两种解释器下执行可能会有不同的结果。</p>
<p>如果你的代码要放到PyPy下执行，就需要了解PyPy和CPython的不同点。</p>
<ul>
<li>Jython</li>
</ul>
<p>Jython是运行在Java平台上的Python解释器，可以直接把Python代码编译成Java字节码执行。</p>
<ul>
<li>IronPython</li>
</ul>
<p>IronPython和Jython类似，只不过IronPython是运行在微软.Net平台上的Python解释器，可以直接把Python代码编译成.Net的字节码。 </p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>利用nomad注册服务</title>
    <url>/2019/06/03/%E5%88%A9%E7%94%A8nomad%E6%B3%A8%E5%86%8C%E6%9C%8D%E5%8A%A1/</url>
    <content><![CDATA[<p><a href="https://www.consul.io/">Consul</a>是一种用于在基础架构中发现和配置服务的工具。Consul的主要功能包括服务发现，运行状况检查，KV存储以及对多数据中心部署的强大支持。Nomad与Consul的集成支持自动集群，内置服务注册以及配置文件和环境变量的动态呈现。</p>
<p>当已经存在正在运行的Consul群集并且在每个主机上安装和配置Consul代理时，Nomad服务器和客户端将自动通知彼此存在。<br> <span id="more"></span><br>service模块</p>
<p>放置：job -&gt; group -&gt; task -&gt; service</p>
<p>该service节指示Nomad使用服务发现集成将任务注册为服务。</p>
<h3 id="service-参数"><a href="#service-参数" class="headerlink" title="service 参数"></a>service 参数</h3><p>    check：指定与服务关联的运行状况检查。这可以多次指定，以定义服务的多个检查。nomad支持grpc、http、https、脚本、tcp检查等</p>
<p>    name：指定次服务在consul中公布的名称。</p>
<p>    port：指定为此服务开放的端口，port必须匹配network中指定的端口</p>
<p>    tags：指定与此服务关联的标记列表</p>
<p>    canary_tags：当服务是当前为金丝雀分配的一部分时，指定与此服务关联的标记列表。提升金丝雀后，已注册的标签将更新为tags参数中指定的标签。</p>
<h3 id="check-参数"><a href="#check-参数" class="headerlink" title="check 参数"></a>check 参数</h3><p>    name：指定运行状况检查的名称</p>
<p>    type：表示nomad支持的检查类型。nomad支持grpc、http、https、脚本、tcp检查等</p>
<p>    port：指定将在其上执行检查的标签。注意，是端口的标签，而不是端口号。端口标签必须与network中定义的端口标签匹配</p>
<p>    path：指定consul将查询以查询服务健康状况的http端点的路径</p>
<p>    interval：指定consul将执行的运行状况检查的频率。必须大于或等于1s</p>
<p>    timeout：指定consul等待运行状况检查查询成功的时间。必须大于或等于1s</p>
<p>    args：指定参数command。仅适用于基于脚本的运行状况检查。</p>
<p>    command：指定要执行运行状况检查的命令</p>
<h3 id="check-restart-参数"><a href="#check-restart-参数" class="headerlink" title="check_restart 参数"></a>check_restart 参数</h3><p>    limit：运行状况检查失败后，重启之前等待时间（nterval * limit）。触发重启后。任务组的restart模块将获得控制权</p>
<p>    grace：任务启动或重新启动之前等待的持续时间，然后检查其运行状况</p>
<p>    ignore_warnings：默认情况下，检查两者critical 和warning状态都被认为是不健康的。设置ignore_warnings &#x3D; true处理warning状态passing，不会触发重启</p>
<h3 id="例："><a href="#例：" class="headerlink" title="例："></a>例：</h3><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">job <span class="string">&quot;backend_stg&quot;</span> <span class="punctuation">&#123;</span></span><br><span class="line">  group <span class="string">&quot;backend_stg&quot;</span> <span class="punctuation">&#123;</span></span><br><span class="line">    task <span class="string">&quot;backend_stg&quot;</span> <span class="punctuation">&#123;</span></span><br><span class="line">     service <span class="punctuation">&#123;</span></span><br><span class="line">        name = <span class="string">&quot;kyd-backend&quot;</span></span><br><span class="line">        tags = <span class="punctuation">[</span><span class="string">&quot;kyd-business&quot;</span><span class="punctuation">]</span></span><br><span class="line">        port = <span class="string">&quot;lb&quot;</span></span><br><span class="line">        check <span class="punctuation">&#123;</span></span><br><span class="line">          name     = <span class="string">&quot;HTTP Check&quot;</span></span><br><span class="line">          type     = <span class="string">&quot;http&quot;</span></span><br><span class="line">          port     = <span class="string">&quot;lb&quot;</span></span><br><span class="line">          path     = <span class="string">&quot;/health&quot;</span> </span><br><span class="line">          interval = “<span class="number">60</span>s<span class="string">&quot;  </span></span><br><span class="line"><span class="string">          timeout  = &quot;</span><span class="number">5</span>s<span class="string">&quot;</span></span><br><span class="line"><span class="string">          check_restart &#123;</span></span><br><span class="line"><span class="string">            limit = 3</span></span><br><span class="line"><span class="string">            grace = &quot;</span><span class="number">90</span>s<span class="string">&quot;</span></span><br><span class="line"><span class="string">            ignore_warnings = false</span></span><br><span class="line"><span class="string">          &#125;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure>
<p><a href="https://www.nomadproject.io/docs/job-specification/service.html#command">官方文档</a></p>
]]></content>
      <categories>
        <category>nomad</category>
      </categories>
      <tags>
        <tag>nomad</tag>
      </tags>
  </entry>
  <entry>
    <title>制作swap交换空间</title>
    <url>/2019/02/28/%E5%88%B6%E4%BD%9Cswap%E4%BA%A4%E6%8D%A2%E7%A9%BA%E9%97%B4/</url>
    <content><![CDATA[<p><strong>&#x2F;dev&#x2F;null与&#x2F;dev&#x2F;zero区别</strong></p>
<ul>
<li>&#x2F;dev&#x2F;null  ：</li>
</ul>
<p>   在类Unix系统中，&#x2F;dev&#x2F;null，或称空设备，是一个特殊的设备文件，它丢弃一切写入其中的数据（但报告写入操作成功），读取它则会立即得到一个EOF。</p>
<p>   在程序员行话，尤其是Unix行话中，&#x2F;dev&#x2F;null 被称为位桶(bit bucket)或者黑洞(black hole)。空设备通常被用于丢弃不需要的输出流，或作为用于输入流的空文件。这些操作通常由重定向完成。<br>      <span id="more"></span></p>
<ul>
<li>&#x2F;dev&#x2F;zero  ：</li>
</ul>
<p>  在类UNIX 操作系统中, &#x2F;dev&#x2F;zero 是一个特殊的文件，当你读它的时候，它会提供无限的空字符(NULL, ASCII NUL, 0x00)。</p>
<p>  其中的一个典型用法是用它提供的字符流来覆盖信息，另一个常见用法是产生一个特定大小的空白文件。BSD就是通过mmap把&#x2F;dev&#x2F;zero映射到虚地址空间实现共享内存的。可以使用mmap将&#x2F;dev&#x2F;zero映射到一个虚拟的内存空间，这个操作的效果等同于使用一段匿名的内存（没有和任何文件相关）</p>
<p><strong>dd命令解释</strong></p>
<p>dd：用指定大小的块拷贝一个文件，并在拷贝的同时进行指定的转换</p>
<p>注意：指定数字的地方若以下列字符结尾，则乘以相应的数字：b&#x3D;512；c&#x3D;1；k&#x3D;1024；w&#x3D;2</p>
<ol>
<li>if&#x3D;文件名：输入文件名，缺省为标准输入。即指定源文件。&lt; if&#x3D;input file &gt;</li>
<li>of&#x3D;文件名：输出文件名，缺省为标准输出。即指定目的文件。&lt; of&#x3D;output file &gt;</li>
<li>ibs&#x3D;bytes：一次读入bytes个字节，即指定一个块大小为bytes个字节。<br>obs&#x3D;bytes：一次输出bytes个字节，即指定一个块大小为bytes个字节。<br>bs&#x3D;bytes：同时设置读入&#x2F;输出的块大小为bytes个字节</li>
<li>count&#x3D;blocks：仅拷贝blocks个块，块大小等于ibs指定的字节数。</li>
</ol>
<p><strong>dd制作swap</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mkdir</span> /swap</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cd</span> /swap</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/zero of=swapfile bs=1M count=4k</span></span><br><span class="line">4096+0 records in</span><br><span class="line">4096+0 records out</span><br><span class="line">4294967296 bytes (4.3 GB) copied, 3.10682 s, 1.4 GB/s</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">mkswap swapfile</span></span><br><span class="line">Setting up swapspace version 1, size = 4194300 KiB</span><br><span class="line">no label, UUID=eb070124-90c8-4449-a1a9-c4abddbedc8e</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">swapon swapfile</span></span><br><span class="line">swapon: /swap/swapfile: insecure permissions 0644, 0600 suggested.</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>linux基础</category>
      </categories>
      <tags>
        <tag>linux基础</tag>
      </tags>
  </entry>
  <entry>
    <title>如何编写golang代码</title>
    <url>/2022/11/23/%E5%A6%82%E4%BD%95%E7%BC%96%E5%86%99golang%E4%BB%A3%E7%A0%81/</url>
    <content><![CDATA[<h2 id="如何编写golang代码"><a href="#如何编写golang代码" class="headerlink" title="如何编写golang代码"></a>如何编写golang代码</h2><h3 id="代码组织"><a href="#代码组织" class="headerlink" title="代码组织"></a>代码组织</h3><p>go应用使用包和模块来组织代码，包对应到文件系统就是文件夹，模块就是**.go的go源文件。一个包会有多个模块，或者多个子包。</p>
<h3 id="go-项目管理工具"><a href="#go-项目管理工具" class="headerlink" title="go 项目管理工具"></a>go 项目管理工具</h3><p>早期的go项目使用gopath来管理项目，不方便而且容易出错，从golang 1.11开始使用gomod管理项目，当然还有第三方模块例如govendor，这里介绍gomod的使用</p>
<h3 id="创建程序步骤"><a href="#创建程序步骤" class="headerlink" title="创建程序步骤"></a>创建程序步骤</h3><ul>
<li><p>创建项目</p>
</li>
<li><p>初始化项目</p>
</li>
<li><p>创建包</p>
</li>
<li><p>创建模块</p>
</li>
<li><p>相互调用</p>
</li>
</ul>
<h3 id="golang标识符、关键字、命名规则"><a href="#golang标识符、关键字、命名规则" class="headerlink" title="golang标识符、关键字、命名规则"></a>golang标识符、关键字、命名规则</h3><h4 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h4><p>标识符：通俗来说，就是给变量、常量、函数、方法、结构体、数组、切片、接口起名字</p>
<p>标识符的组成</p>
<ol>
<li><p>标识符由数字、字母和下划线组成。123 abc _</p>
</li>
<li><p>只能以字母和下划线开头。abc123 _abc</p>
</li>
<li><p>标识符区分大小写</p>
</li>
<li><p>go语言关键字，不能用于定义名字</p>
</li>
</ol>
<table>
<thead>
<tr>
<th>append</th>
<th>default</th>
<th>func</th>
<th>interface</th>
<th>select</th>
</tr>
</thead>
<tbody><tr>
<td>case</td>
<td>defer</td>
<td>go</td>
<td>map</td>
<td>struct</td>
</tr>
<tr>
<td>chan</td>
<td>else</td>
<td>goto</td>
<td>package</td>
<td>switch</td>
</tr>
<tr>
<td>const</td>
<td>fallthrough</td>
<td>if</td>
<td>range</td>
<td>type</td>
</tr>
<tr>
<td>continue</td>
<td>for</td>
<td>import</td>
<td>return</td>
<td>var</td>
</tr>
</tbody></table>
<p>除了以上构建字，Go语言还有30多个标识符，其中包含了基本类型的名称和内置函数</p>
<p>常量:</p>
<p>    true false iota nil<br>内置基本类型:<br>    int int8 int16 int32 int64<br>    uint uint8 uint16 uint32 uint64 uintptr<br>    float32 float64 complex128 complex64<br>    bool byte rune string error<br>内置函数:<br>    make len cap new append copy close delete<br>    complex real imag<br>    panic recover print println</p>
<h4 id="Go中的命名规范"><a href="#Go中的命名规范" class="headerlink" title="Go中的命名规范"></a>Go中的命名规范</h4><p><strong>Go语言是一门区分大小写的语言</strong></p>
<p>命名规则涉及变量、常量、全局函数、结构、接口、方法等的命名。Go语言从语法从面进行了一下限定：任何需要对外暴露的名字必须一大写字母开头，不需要对外暴露的则应该已小写字母开头。</p>
<p>当命名（变量、常量、全局函数、结构、接口、方法等）已一个大写字母开头，如：<code>GetUserName</code>，那么使用这种形式的标识符的对象就<strong>可以被外部包代码所使用</strong>（客户端程序需要先导入这个包），这就称为导出（像面向对象语言中的<code>pubilc</code>）；<strong>命名如果以小写字母开头，则对包是不可见的，但是他们在整个包内部是可见可用的</strong>（像面向对象语言中的<code>private</code>）。</p>
<p><strong>包名称</strong></p>
<p>保持<code>package</code>的名字与目录保持一致，尽量采取有意义的包名，尽量和标准库不要冲突，包名应该为<strong>小写</strong>单词，不要使用下划线或者混合大小写。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> service</span><br></pre></td></tr></table></figure>

<p><strong>文件命名</strong></p>
<p>尽量采取有意义的文件名，应该为<strong>小写</strong>单词，使用<strong>下划线</strong>分隔给个单词。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">web_service.go</span><br></pre></td></tr></table></figure>

<p><strong>结构体命名</strong></p>
<p>采用<strong>驼峰命名法</strong>，首字母根据访问控制大写或者小写</p>
<p>struct 申明和初始化格式采用多行，例如下面：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> CustomerOrder <span class="keyword">struct</span> &#123;</span><br><span class="line">    Name <span class="type">string</span></span><br><span class="line">    Address <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line">oder := CustomerOrder&#123;<span class="string">&quot;tom&quot;</span>, <span class="string">&quot;北京海淀&quot;</span>&#125;</span><br></pre></td></tr></table></figure>

<p><strong>接口命名</strong></p>
<p>命名规则基本和上面的结构体类似</p>
<p>单个函数的结构名以 “er” 作为后缀，例如 Reader , Writer </p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> Reader <span class="keyword">interface</span> &#123;</span><br><span class="line">     Read(p []<span class="type">byte</span>) (n <span class="type">int</span>, err <span class="type">error</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>变量命名</strong></p>
<p>和结构体类似，变量名称一般遵循驼峰法，首字母根据访问控制原则大写或者小写，但遇到特有名词时，需要遵循以下规则：</p>
<p>如果变量为私有，且特有名词为首个单词，则使用小写，如 appService若变量类型为 bool 类型，则名称应以 Has, Is, Can 或 Allow 开头</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> isExist <span class="type">bool</span></span><br><span class="line"><span class="keyword">var</span> hasConflict <span class="type">bool</span></span><br><span class="line"><span class="keyword">var</span> canManage <span class="type">bool</span></span><br><span class="line"><span class="keyword">var</span> allowGitHook <span class="type">bool</span></span><br></pre></td></tr></table></figure>

<p><strong>常量</strong></p>
<p>常量均需使用全部大写字母组成，并使用下划线分词</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> APP_URL = <span class="string">&quot;https://www.baidu.com&quot;</span></span><br></pre></td></tr></table></figure>

<p><strong>错误处理</strong></p>
<p>错误处理的原则就是不能丢弃任何有返回err的调用，不要使用 _ 丢弃，必须全部处理。接收到错误，要么返回err，或者使用log记录下来尽早return：一旦有错误发生，马上返回尽量不要使用panic，除非你知道你在做什么错误描述如果是英文必须为小写，不需要标点结尾采用独立的错误流进行处理</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 错误写法</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    <span class="comment">// error handling</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// normal code</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 正确写法</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    <span class="comment">// error handling</span></span><br><span class="line">    <span class="keyword">return</span> <span class="comment">// or continue, etc.</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// normal code</span></span><br></pre></td></tr></table></figure>

<p><strong>单元测试</strong></p>
<p>单元测试文件名命名规范为 example_test.go 测试用例的函数名称必须以 Test 开头，例如：TestExample 每个重要的函数都要首先编写测试用例，测试用例和正规代码一起提交方便进行回归测试 。</p>
]]></content>
      <categories>
        <category>Go语言</category>
      </categories>
      <tags>
        <tag>Go语言</tag>
      </tags>
  </entry>
  <entry>
    <title>安装harbor</title>
    <url>/2019/09/23/%E5%AE%89%E8%A3%85harbor/</url>
    <content><![CDATA[<h3 id="安装docker-compose"><a href="#安装docker-compose" class="headerlink" title="安装docker-compose"></a>安装docker-compose</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum -y install epel-release</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum install docker-compose docker</span>    </span><br></pre></td></tr></table></figure>
<h3 id="安装harbor"><a href="#安装harbor" class="headerlink" title="安装harbor"></a>安装harbor</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget https://storage.googleapis.com/harbor-releases/release-1.9.0/harbor-offline-installer-v1.9.0.tgz</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">tar xf harbor-offline-installer-v1.9.0.tgz</span></span><br></pre></td></tr></table></figure>
 <span id="more"></span>
<p>修改配置文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cd</span> harbor</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim harbor.yml</span></span><br><span class="line">hostname: 10.0.0.11     # 修改主机</span><br></pre></td></tr></table></figure>
<p>安装harbor</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">./install.sh</span>    </span><br></pre></td></tr></table></figure>
<p>harbor启动，停止，重启命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker-compose start</span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker-comose stop</span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker-compose restart</span>    </span><br></pre></td></tr></table></figure>
<h3 id="访问url"><a href="#访问url" class="headerlink" title="访问url"></a>访问url</h3><p>默认账号密码 admin Harbor12345</p>
<p><img src="/image/1569248292-837F9335-FDDC-4B92-A649-D9C4CFF68310.jpg"></p>
<h3 id="docker配置仓库"><a href="#docker配置仓库" class="headerlink" title="docker配置仓库"></a>docker配置仓库</h3><p>docker默认是https请求的，由于我搭的私有库是 http 的，所以需要修改 docker 配置，得修改 &#x2F;etc&#x2F;docker&#x2F;daemon.json（如果没有这个文件，自己建）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /etc/docker/daemon.json</span></span><br><span class="line">&#123;</span><br><span class="line">  &quot;insecure-registries&quot;: [&quot;10.0.0.11&quot;]</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemcl restart docker</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"> docker login --username=admin --password=Harbor12345 10.0.0.11</span></span><br><span class="line">WARNING! Using --password via the CLI is insecure. Use --password-stdin.</span><br><span class="line">WARNING! Your password will be stored unencrypted in /root/.docker/config.json.</span><br><span class="line">Configure a credential helper to remove this warning. See</span><br><span class="line">https://docs.docker.com/engine/reference/commandline/login/#credentials-store</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Login Succeeded        </span><br></pre></td></tr></table></figure>
<h3 id="上传镜像测试"><a href="#上传镜像测试" class="headerlink" title="上传镜像测试"></a>上传镜像测试</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker tag k8s.gcr.io/coredns:1.3.1 10.0.0.11/library/coredns:1.3.1</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker push 10.0.0.11/library/coredns:1.3.1</span></span><br><span class="line">The push refers to repository [10.0.0.11/library/coredns]</span><br><span class="line">c6a5fc8a3f01: Pushed</span><br><span class="line">fb61a074724d: Pushed</span><br><span class="line">1.3.1: digest: sha256:638adb0319813f2479ba3642bbe37136db8cf363b48fb3eb7dc8db634d8d5a5b size: 739    </span><br></pre></td></tr></table></figure>
<p><img src="/image/1569248439-623ED01F-A5C5-4128-A8B0-5BDDA3D7CDDC.jpg"></p>
<h3 id="harbor配置https"><a href="#harbor配置https" class="headerlink" title="harbor配置https"></a>harbor配置https</h3><h4 id="域名商申请ssl证书"><a href="#域名商申请ssl证书" class="headerlink" title="域名商申请ssl证书"></a>域名商申请ssl证书</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim harbor.yml</span></span><br><span class="line">hostname: harbor.test.com   # 域名</span><br><span class="line">https:</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">  <span class="comment"># https port for harbor, default is 443</span></span></span><br><span class="line">  port: 443</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">  <span class="comment"># The path of cert and key files for nginx</span></span></span><br><span class="line">  certificate: /data/cert/harbor.test.com.cer       #证书存放位置</span><br><span class="line">  private_key: /data/cert/harbor.test.com.key    </span><br></pre></td></tr></table></figure>
<p>重新生成配置文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">./prepare</span>    </span><br></pre></td></tr></table></figure>
<p>停止harbor并删除现有实例</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker-compose down -v</span>    </span><br></pre></td></tr></table></figure>
<p>启动harbor</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker-compose up -d</span>    </span><br></pre></td></tr></table></figure>
<h4 id="自己创建证书"><a href="#自己创建证书" class="headerlink" title="自己创建证书"></a>自己创建证书</h4><p>生成server.key,输入4位数的密码(被强制要求)</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">openssl genrsa -des3 -out server.key 2048</span></span><br><span class="line">Generating RSA private key, 2048 bit long modulus</span><br><span class="line">........................................+++</span><br><span class="line">......................+++</span><br><span class="line">e is 65537 (0x10001)</span><br><span class="line">Enter pass phrase for server.key: 1234</span><br><span class="line">Verifying - Enter pass phrase for server.key: 1234    </span><br></pre></td></tr></table></figure>
<p>生成server-ca.crt,输入国家、省份、城市、组织、域名(要与实际访问保持一致)、email</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">openssl req -new -key server.key -out server.csr</span></span><br><span class="line">Enter pass phrase for server.key:</span><br><span class="line">You are about to be asked to enter information that will be incorporated</span><br><span class="line">into your certificate request.</span><br><span class="line">What you are about to enter is what is called a Distinguished Name or a DN.</span><br><span class="line">There are quite a few fields but you can leave some blank</span><br><span class="line">For some fields there will be a default value,</span><br><span class="line">If you enter &#x27;.&#x27;, the field will be left blank.</span><br><span class="line">-----</span><br><span class="line">Country Name (2 letter code) [XX]:CN  国家</span><br><span class="line">State or Province Name (full name) []:BJ  省</span><br><span class="line">Locality Name (eg, city) [Default City]:BJ  市</span><br><span class="line">Organization Name (eg, company) [Default Company Ltd]:Keyida 公司名称</span><br><span class="line">Organizational Unit Name (eg, section) []:IT  组织</span><br><span class="line">Common Name (eg, your name or your server&#x27;s hostname) []:harbor.ui.com 域名</span><br><span class="line">Email Address []:admin@163.com  邮箱</span><br><span class="line">Please enter the following &#x27;extra&#x27; attributes</span><br><span class="line">to be sent with your certificate request</span><br><span class="line">A challenge password []:  </span><br><span class="line">An optional company name []:</span><br></pre></td></tr></table></figure>
<p>去除输入密码</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cp</span> server.key server.key.org</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">openssl rsa -<span class="keyword">in</span> server.key.org -out server.key</span></span><br><span class="line">Enter pass phrase for server.key.org: 1234</span><br><span class="line">writing RSA key    </span><br></pre></td></tr></table></figure>
<p>生成一年期限的server.crt</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">openssl x509 -req -days 365 -<span class="keyword">in</span> server.csr -signkey server.key -out server.crt</span></span><br><span class="line">Signature ok</span><br><span class="line">subject=/C=CN/ST=BJ/L=BJ/O=Keyida/OU=IT/CN=harbor.ui.com/emailAddress=admin@163.com</span><br><span class="line">Getting Private key    </span><br></pre></td></tr></table></figure>
<p>修改harbor配置文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim harbor.yml</span></span><br><span class="line">hostname: harbor.ui.com</span><br><span class="line">http:</span><br><span class="line">  port: 80</span><br><span class="line">https:</span><br><span class="line">  port: 443</span><br><span class="line">  certificate: /data/cert/server.crt</span><br><span class="line">  private_key: /data/cert/server.key    </span><br></pre></td></tr></table></figure>
<p>初始化并创建</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">./prepare</span>   </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker-compose up -d</span>    </span><br></pre></td></tr></table></figure>
<p>指定镜像仓库地址，因为咱们创建的是不安全证书</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /etc/docker/daemon.json</span></span><br><span class="line">&#123;</span><br><span class="line">  &quot;insecure-registries&quot;: [&quot;https://harbor.ui.com&quot;]</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl restart docker</span></span><br></pre></td></tr></table></figure>
<p>登录harbor</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker login https://harbor.ui.com</span></span><br><span class="line">Username: admin</span><br><span class="line">Password: </span><br><span class="line">WARNING! Your password will be stored unencrypted in /root/.docker/config.json.</span><br><span class="line">Configure a credential helper to remove this warning. See</span><br><span class="line">https://docs.docker.com/engine/reference/commandline/login/#credentials-store</span><br><span class="line"></span><br><span class="line">Login Succeeded</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>harbor</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>安装企业版seafile与在线office</title>
    <url>/2019/12/21/%E5%AE%89%E8%A3%85%E4%BC%81%E4%B8%9A%E7%89%88seafile%E4%B8%8E%E5%9C%A8%E7%BA%BFoffice/</url>
    <content><![CDATA[<h2 id="seafile"><a href="#seafile" class="headerlink" title="seafile"></a>seafile</h2><p>Seafile是一个开源、专业、可靠的云存储平台；解决文件集中存储、共享和跨平台访问等问题，由北京海文互知网络有限公司开发，发布于2012年10月；除了一般网盘所提供的云存储以及共享功能外，Seafile还提供消息通信、群组讨论等辅助功能，帮助更好的围绕文件展开协同工作。<br> <span id="more"></span></p>
<h3 id="安装数据库"><a href="#安装数据库" class="headerlink" title="安装数据库"></a>安装数据库</h3><p>配置镜像源</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /etc/yum.repos.d/MariaDB.repo</span></span><br><span class="line">[mariadb]</span><br><span class="line">name = MariaDB</span><br><span class="line">baseurl = https://mirrors.ustc.edu.cn/mariadb/yum/10.1/centos7-amd64/</span><br><span class="line">gpgkey=https://mirrors.ustc.edu.cn/mariadb/yum/RPM-GPG-KEY-MariaDB</span><br><span class="line">gpgcheck=1</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rpm --import https://mirrors.ustc.edu.cn/mariadb/yum/RPM-GPG-KEY-MariaDB</span></span><br></pre></td></tr></table></figure>
<p>下载maria</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum install MariaDB-server -y</span>    </span><br></pre></td></tr></table></figure>
<p>maria配置</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /etc/my.cnf.d/mysql-clients.cnf</span></span><br><span class="line">[mysql]</span><br><span class="line">default-character-set = utf8mb4</span><br><span class="line">[mysqld]</span><br><span class="line">character_set_server = utf8mb4</span><br><span class="line">collation_server = utf8mb4_general_ci</span><br><span class="line">init_connect = &quot;SET NAMES &#x27;utf8mb4&#x27;&quot;    </span><br></pre></td></tr></table></figure>
<p>启动maria</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl start mariadb</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl <span class="built_in">enable</span>  mariadb</span>    </span><br></pre></td></tr></table></figure>
<p>创建root密码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># mysqladmin -uroot password</span><br><span class="line">New password:</span><br><span class="line">Confirm new password:    </span><br></pre></td></tr></table></figure>
<h3 id="安装seafile"><a href="#安装seafile" class="headerlink" title="安装seafile"></a>安装seafile</h3><p>破解包：<a href="https://pan.wqblogs.com:4443/sharing/ym0l8Os8N">seafile-pro-server_7.0.11_x86-64-Crack.tar.gz</a> 密码: wqblogs.com</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mv</span> seafile-pro-server_7.0.11_x86-64-Crack.tar.gz seafile-pro-server_7.0.11_x86-64.tar.gz</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">tar xf seafile-pro-server_7.0.11_x86-64.tar.gz -C /opt/seafile</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cd</span> /opt/seafile/seafile-pro-server-7.0.11/</span>    </span><br></pre></td></tr></table></figure>
<p>创建数据库</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">./setup-seafile-mysql.sh</span></span><br><span class="line">What is the name of the server? It will be displayed on the client.</span><br><span class="line">3 - 15 letters or digits</span><br><span class="line">[ server name ] DevOps    # 服务名称，随便</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">What is the ip or domain of the server?</span><br><span class="line">For example: www.mycompany.com, 192.168.1.101</span><br><span class="line">[ This server&#x27;s ip or domain ] 域名或IP地址  # 公网ip或域名</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Where do you want to put your seafile data?</span><br><span class="line">Please use a volume with enough free space</span><br><span class="line">[ default &quot;/opt/seafile/seafile-data&quot; ]         # 数据目录，默认即可</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Which port do you want to use for the seafile fileserver?</span><br><span class="line">[ default &quot;8082&quot; ]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-------------------------------------------------------</span><br><span class="line">Please choose a way to initialize seafile databases:</span><br><span class="line">-------------------------------------------------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[1] Create new ccnet/seafile/seahub databases</span><br><span class="line">[2] Use existing ccnet/seafile/seahub databases</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[ 1 or 2 ] 1               # 创建新的数据库</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">What is the host of mysql server?</span><br><span class="line">[ default &quot;localhost&quot; ]    # 默认即可</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">What is the port of mysql server?</span><br><span class="line">[ default &quot;3306&quot; ]         # 默认即可</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">What is the password of the mysql root user?</span><br><span class="line">[ root password ]          # root密码</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">verifying password of user root ...  done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Enter the name for mysql user of seafile. It would be created if not exists.</span><br><span class="line">[ default &quot;seafile&quot; ]     # 默认即可</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Enter the password for mysql user &quot;seafile&quot;:</span><br><span class="line">[ password for seafile ]  # 输入seafile用户密码</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">verifying password of user seafile ...  done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Enter the database name for ccnet-server:</span><br><span class="line">[ default &quot;ccnet-db&quot; ]   # 默认即可</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Enter the database name for seafile-server:</span><br><span class="line">[ default &quot;seafile-db&quot; ]  # 默认即可</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Enter the database name for seahub:</span><br><span class="line">[ default &quot;seahub-db&quot; ]   # 默认即可</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">---------------------------------</span><br><span class="line">This is your configuration</span><br><span class="line">---------------------------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    server name:            DevOps</span><br><span class="line">    server ip/domain:       域名或IP地址</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    seafile data dir:       /opt/seafile/seafile-data</span><br><span class="line">    fileserver port:        8082</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    database:               create new</span><br><span class="line">    ccnet database:         ccnet-db</span><br><span class="line">    seafile database:       seafile-db</span><br><span class="line">    seahub database:        seahub-db</span><br><span class="line">    database user:          seafile</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">---------------------------------</span><br><span class="line">Press ENTER to continue, or Ctrl-C to abort</span><br><span class="line">---------------------------------</span><br></pre></td></tr></table></figure>
<p>创建web登录用户与密码</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">./seafile.sh start</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">** Message: seafile-controller.c(1157): loading seafdav config from /opt/seafile/conf/seafdav.conf</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[12/21/19 11:45:38] ../common/session.c(139): using config file /opt/seafile/conf/ccnet.conf</span><br><span class="line">[12/21/19 11:45:38] ../common/license.c(406): Loading license file /opt/seafile/seafile-license.txt ..</span><br><span class="line">[12/21/19 11:45:38] ../common/license.c(409): License file /opt/seafile/seafile-license.txt does not exist, allow at most 3 trial users</span><br><span class="line">License file /opt/seafile/seafile-license.txt does not exist, allow at most 3 trial users</span><br><span class="line">Starting seafile server, please wait ...</span><br><span class="line">** Message: seafile-controller.c(1157): loading seafdav config from /opt/seafile/conf/seafdav.conf</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Seafile server started</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Done.</span><br><span class="line">[root@JD seafile-pro-server-7.0.11]# ./seahub.sh start</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">LC_ALL is not set in ENV, set to en_US.UTF-8</span><br><span class="line">Starting seahub at port 8000 ...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">----------------------------------------</span><br><span class="line">It&#x27;s the first time you start the seafile server. Now let&#x27;s create the admin account</span><br><span class="line">----------------------------------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">What is the email for the admin account?</span><br><span class="line">[ admin email ] admin@163.com</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">What is the password for the admin account?</span><br><span class="line">[ admin password ]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Enter the password again:</span><br><span class="line">[ admin password again ]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">----------------------------------------</span><br><span class="line">Successfully created seafile admin</span><br><span class="line">----------------------------------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Seahub is started</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Done.</span><br></pre></td></tr></table></figure>
<p>启动seafile</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">./seafile.sh start</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">./seahub.sh start</span>    </span><br></pre></td></tr></table></figure>
<h3 id="nginx配置"><a href="#nginx配置" class="headerlink" title="nginx配置"></a>nginx配置</h3><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">  <span class="attribute">listen</span> <span class="number">443</span>;</span><br><span class="line">  <span class="attribute">server_name</span> 域名或IP地址;</span><br><span class="line">  <span class="attribute">ssl_certificate</span> /opt/nginx/conf/ssl/pan/1_域名或IP地址_bundle.crt;</span><br><span class="line">  <span class="attribute">ssl_certificate_key</span> /opt/nginx/conf/ssl/pan/2_域名或IP地址.key;</span><br><span class="line">  <span class="attribute">ssl_session_timeout</span> <span class="number">5m</span>;</span><br><span class="line">  <span class="attribute">ssl_protocols</span> TLSv1 TLSv1.<span class="number">1</span> TLSv1.<span class="number">2</span>;</span><br><span class="line">  <span class="attribute">ssl_ciphers</span> ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;</span><br><span class="line">  <span class="attribute">ssl_prefer_server_ciphers</span> <span class="literal">on</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$remote_addr</span>;</span><br><span class="line">  <span class="section">location</span> / &#123;</span><br><span class="line">       <span class="attribute">proxy_pass</span>         http://127.0.0.1:8000;</span><br><span class="line">       <span class="attribute">proxy_set_header</span>   Host <span class="variable">$host</span>;</span><br><span class="line">       <span class="attribute">proxy_set_header</span>   X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">       <span class="attribute">proxy_set_header</span>   X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">       <span class="attribute">proxy_set_header</span>   X-Forwarded-Host <span class="variable">$server_name</span>;</span><br><span class="line">       <span class="attribute">proxy_read_timeout</span>  <span class="number">1200s</span>;</span><br><span class="line">       <span class="attribute">client_max_body_size</span> <span class="number">0</span>;</span><br><span class="line">       <span class="attribute">access_log</span>      /opt/nginx/logs/seahub.access.log;</span><br><span class="line">       <span class="attribute">error_log</span>       /opt/nginx/logs/seahub.<span class="literal">error</span>.log;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="section">location</span> /seafhttp &#123;</span><br><span class="line">      <span class="attribute">rewrite</span><span class="regexp"> ^/seafhttp(.*)$</span> <span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">      <span class="attribute">proxy_pass</span> http://127.0.0.1:8082;</span><br><span class="line">      <span class="attribute">client_max_body_size</span> <span class="number">0</span>;</span><br><span class="line">      <span class="attribute">proxy_set_header</span>   X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">      <span class="attribute">proxy_connect_timeout</span>  <span class="number">36000s</span>;</span><br><span class="line">      <span class="attribute">proxy_read_timeout</span>  <span class="number">36000s</span>;</span><br><span class="line">      <span class="attribute">proxy_send_timeout</span>  <span class="number">36000s</span>;</span><br><span class="line">      <span class="attribute">send_timeout</span>  <span class="number">36000s</span>;</span><br><span class="line">      <span class="attribute">proxy_request_buffering</span> <span class="literal">off</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="section">location</span> /media &#123;</span><br><span class="line">      <span class="attribute">root</span> /opt/seafile/seafile-server-latest/seahub;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">  <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">  <span class="attribute">server_name</span> 域名或IP地址;</span><br><span class="line">  <span class="attribute">rewrite</span><span class="regexp"> ^(.*)$</span>  https://<span class="variable">$host</span><span class="variable">$1</span> <span class="literal">permanent</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="/image/1576923795.png"></p>
<h3 id="office配置"><a href="#office配置" class="headerlink" title="office配置"></a>office配置</h3><p>安装docker</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">curl -fsSL https://get.docker.com|bash -s docker --mirror Aliyun</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl start docker</span></span><br></pre></td></tr></table></figure>
<p>拷贝证书</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mkdir</span> /data/onlyoffice/data/certs -p</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cp</span> 1_域名或IP地址_bundle.crt 2_域名或IP地址.key /data/onlyoffice/data/certs</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mv</span> 1_域名或IP地址_bundle.crt  onlyoffice.crt</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mv</span> 2_域名或IP地址.key onlyoffice.key</span></span><br></pre></td></tr></table></figure>
<p>启动</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker run -i -t -d --name=onlyoffice \</span></span><br><span class="line"><span class="language-bash">      --restart=always \</span></span><br><span class="line"><span class="language-bash">      -p 643:443 \</span></span><br><span class="line"><span class="language-bash">      -v  /data/onlyoffice/lib:/var/lib/onlyoffice \</span></span><br><span class="line"><span class="language-bash">      -v /data/onlyoffice/sdkjs-plugins:/var/www/onlyoffice/documentserver/sdkjs-plugins \</span></span><br><span class="line"><span class="language-bash">      -v /data/onlyoffice/logs:/var/log/onlyoffice \</span></span><br><span class="line"><span class="language-bash">      -v /data/onlyoffice/data:/var/www/onlyoffice/Data \</span></span><br><span class="line"><span class="language-bash">      onlyoffice/documentserver</span>    </span><br></pre></td></tr></table></figure>
<p>nginx配置</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">  <span class="attribute">listen</span> <span class="number">443</span>; </span><br><span class="line">  <span class="attribute">server_name</span> 域名或IP;</span><br><span class="line">  <span class="attribute">ssl_certificate</span> /opt/nginx/conf/ssl/onlyoffice/1_域名或IP_bundle.crt;</span><br><span class="line">  <span class="attribute">ssl_certificate_key</span> /opt/nginx/conf/ssl/onlyoffice/2_域名或IP.key;</span><br><span class="line">  <span class="attribute">ssl_session_timeout</span> <span class="number">5m</span>;</span><br><span class="line">  <span class="attribute">ssl_protocols</span> TLSv1 TLSv1.<span class="number">1</span> TLSv1.<span class="number">2</span>; </span><br><span class="line">  <span class="attribute">ssl_ciphers</span> ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;</span><br><span class="line">  <span class="attribute">ssl_prefer_server_ciphers</span> <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$remote_addr</span>;</span><br><span class="line">    <span class="section">location</span> / &#123;</span><br><span class="line">         <span class="attribute">proxy_pass</span>         https://127.0.0.1:643;</span><br><span class="line">         <span class="attribute">proxy_set_header</span>   Host <span class="variable">$host</span>;</span><br><span class="line">         <span class="attribute">proxy_set_header</span>   X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">         <span class="attribute">proxy_set_header</span>   X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">         <span class="attribute">proxy_set_header</span>   X-Forwarded-Host <span class="variable">$server_name</span>;</span><br><span class="line">         <span class="attribute">proxy_read_timeout</span>  <span class="number">1200s</span>;</span><br><span class="line">         <span class="attribute">client_max_body_size</span> <span class="number">0</span>;</span><br><span class="line">         <span class="attribute">access_log</span>      /opt/nginx/logs/onlyoffice.access.log;</span><br><span class="line">         <span class="attribute">error_log</span>       /opt/nginx/logs/onlyoffice.<span class="literal">error</span>.log;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">  <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">  <span class="attribute">server_name</span> 域名或IP;</span><br><span class="line">  <span class="attribute">rewrite</span><span class="regexp"> ^(.*)$</span>  https://<span class="variable">$host</span><span class="variable">$1</span> <span class="literal">permanent</span>;</span><br><span class="line">&#125;</span><br><span class="line">访问https://公网IP或域名/welcom</span><br></pre></td></tr></table></figure>
<p>访问https:&#x2F;&#x2F;公网IP或域名&#x2F;welcome是否正常</p>
<p><img src="/image/1576923677.png"></p>
<h3 id="seafile配置coffice"><a href="#seafile配置coffice" class="headerlink" title="seafile配置coffice"></a>seafile配置coffice</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /opt/seafile/conf/seahub_settings.py</span></span><br><span class="line">ENABLE_ONLYOFFICE = True</span><br><span class="line">VERIFY_ONLYOFFICE_CERTIFICATE = True</span><br><span class="line">ONLYOFFICE_APIJS_URL = &#x27;https://域名或IP地址/web-apps/apps/api/documents/api.js’  # onlyoffice 域名</span><br><span class="line">ONLYOFFICE_FILE_EXTENSION = (&#x27;doc&#x27;, &#x27;docx&#x27;, &#x27;ppt&#x27;, &#x27;pptx&#x27;, &#x27;xls&#x27;, &#x27;xlsx&#x27;, &#x27;odt&#x27;, &#x27;fodt&#x27;, &#x27;odp&#x27;, &#x27;fodp&#x27;, &#x27;ods&#x27;, &#x27;fods&#x27;)</span><br><span class="line">ONLYOFFICE_EDIT_FILE_EXTENSION = (&#x27;docx&#x27;, &#x27;pptx&#x27;, &#x27;xlsx&#x27;,&#x27;doc&#x27;,&#x27;xls&#x27;,&#x27;ppt&#x27;)</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /opt/seafile/conf/ccnet.conf</span></span><br><span class="line">SERVICE_URL =https://域名或IP地址  # seafile域名    </span><br></pre></td></tr></table></figure>
<p>pan_nginx配置文件添加</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /opt/nginx/conf/conf.d/pan.conf</span></span><br><span class="line">map $http_x_forwarded_proto $the_scheme &#123;</span><br><span class="line">default $http_x_forwarded_proto;</span><br><span class="line">&quot;&quot; $scheme;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">map $http_x_forwarded_host $the_host &#123;</span><br><span class="line">default $http_x_forwarded_host;</span><br><span class="line">&quot;&quot; $host;</span><br><span class="line">&#125;</span><br><span class="line">map $http_upgrade $proxy_connection &#123;</span><br><span class="line">default upgrade;</span><br><span class="line">&quot;&quot; close;</span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">location /onlyofficeds/ &#123;</span><br><span class="line">   proxy_pass https://域名或IP地址/;</span><br><span class="line">   proxy_http_version 1.1;</span><br><span class="line">   client_max_body_size 100M; # Limit Document size to 100MB</span><br><span class="line">   proxy_read_timeout 3600s;</span><br><span class="line">   proxy_connect_timeout 3600s;</span><br><span class="line">   proxy_set_header Upgrade $http_upgrade;  </span><br><span class="line">   proxy_set_header Connection $proxy_connection;</span><br><span class="line">   proxy_set_header X-Forwarded-Host $the_host/onlyofficeds;</span><br><span class="line">   proxy_set_header X-Forwarded-Proto $the_scheme;</span><br><span class="line">  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">&#125;    </span><br></pre></td></tr></table></figure>
<p>重启服务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># ./seafile.sh restart</span><br><span class="line"># ./seahub.sh restart</span><br><span class="line"># nginx -s reload</span><br></pre></td></tr></table></figure>
<p><img src="/image/1576923926.png"></p>
<h3 id="配置邮件转发"><a href="#配置邮件转发" class="headerlink" title="配置邮件转发"></a>配置邮件转发</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim seahub_settings.py</span></span><br><span class="line">EMAIL_USE_SSL = True</span><br><span class="line">EMAIL_HOST = &#x27;smtp.qq.com&#x27;</span><br><span class="line">EMAIL_HOST_USER = &#x27;username@domain.com&#x27;</span><br><span class="line">EMAIL_HOST_PASSWORD = &#x27;Auth_Code&#x27;</span><br><span class="line">EMAIL_PORT = &#x27;465&#x27;</span><br><span class="line">DEFAULT_FROM_EMAIL = EMAIL_HOST_USER</span><br><span class="line">SERVER_EMAIL = EMAIL_HOST_USER</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>无聊操作</category>
      </categories>
  </entry>
  <entry>
    <title>安装开源蚂蚁云笔记</title>
    <url>/2019/09/18/%E5%AE%89%E8%A3%85%E5%BC%80%E6%BA%90%E8%9A%82%E8%9A%81%E4%BA%91%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p>安装mongodb</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cat</span> &gt; /etc/yum.repos.d/mongodb-org.repo &lt;&lt;<span class="string">EOF</span></span></span><br><span class="line">[mongodb-org]</span><br><span class="line">name=MongoDB Repository</span><br><span class="line">baseurl=http://mirrors.aliyun.com/mongodb/yum/redhat/7Server/mongodb-org/3.6/x86_64/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line">EOF</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">yum install -y mongodb-org</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">systemctl start mongod.service</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">systemctl enable mongod.service</span></span></span><br></pre></td></tr></table></figure>

 <span id="more"></span>

<p>安装配置leanote</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget http://sourceforge.net/projects/leanote-bin/files/2.6.1/leanote-linux-amd64-v2.6.1.bin.tar.gz</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mkdir</span> -p /opt/leanote</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">tar xf leanote-linux-amd64-v2.6.1.bin.tar.gz -C /opt/leanote</span></span><br></pre></td></tr></table></figure>


<p>初始数据导入mongodb</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">mongorestore -h localhost -d leanote --<span class="built_in">dir</span> /opt/leanote/mongodb_backup/leanote_install_data/</span></span><br></pre></td></tr></table></figure>


<p>启动leanote</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">nohup</span> /bin/bash /opt/leanote/bin/run.sh &gt;&gt; /var/log/leanote.log 2&gt;&amp;1 &amp;</span></span><br></pre></td></tr></table></figure>


<p>url：<a href="http://localhost:9000/">http://localhost:9000</a> 默认管理员账号为admin，密码为abc123</p>
<ul>
<li>ps：</li>
</ul>
<ol>
<li><p>端口冲突修改.&#x2F;leanote&#x2F;conf&#x2F;app.conf </p>
<p>http.port&#x3D; </p>
<p>site.url&#x3D;</p>
</li>
<li><p>客户端登录自建服务报错显示“服务地址错误” </p>
<p>解决：加上http(s):&#x2F;&#x2F;</p>
</li>
</ol>
]]></content>
      <categories>
        <category>ecs</category>
      </categories>
  </entry>
  <entry>
    <title>安装部署zabbix4.0，配置微信报警</title>
    <url>/2018/11/23/%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2zabbix4.0%EF%BC%8C%E9%85%8D%E7%BD%AE%E5%BE%AE%E4%BF%A1%E6%8A%A5%E8%AD%A6/</url>
    <content><![CDATA[<h2 id="安装zabbix4-0-server端"><a href="#安装zabbix4-0-server端" class="headerlink" title="安装zabbix4.0 server端"></a>安装zabbix4.0 server端</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum install -y httpd php php-mysql php-gd libjpeg* php-ldap php-odbc php-pear php-xml php-xmlrpc php-mhash</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /etc/httpd/conf/httpd.conf</span></span><br><span class="line">Listen 3080                                                  #80占用</span><br><span class="line">DirectoryIndex index.html index.php   #添加首页支持格式</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /etc/php.ini</span></span><br><span class="line">date.timezone = PRC                                //PRC为中国时区</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl stop firewalld.service  <span class="comment">#关闭防火墙</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">setenforce 0                                    <span class="comment">#关闭selinux</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl <span class="built_in">enable</span> httpd</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl start httpd</span></span><br></pre></td></tr></table></figure>
 <span id="more"></span>
<p>mysql8.0创建用户与数据库</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">mysql -uroot -ppasswd</span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">create database zabbix character <span class="built_in">set</span> utf8 collate utf8_bin;</span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">create user <span class="string">&#x27;zabbix&#x27;</span>@<span class="string">&#x27;%&#x27;</span> identified by <span class="string">&#x27;zabbix&#x27;</span>;</span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">grant all privileges on zabbix.* to <span class="string">&#x27;zabbix&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">flush privileges;</span></span><br></pre></td></tr></table></figure>

<p>下载zabbix连接数据库依赖</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum install php-bcmath php-mbstring -y</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rpm -ivh http://repo.zabbix.com/zabbix/3.5/rhel/7/x86_64/zabbix-release-3.5-1.el7.noarch.rpm</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum install zabbix-server-mysql zabbix-web-mysql -y</span></span><br></pre></td></tr></table></figure>

<p>数据库导入数据</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">zcat /usr/share/doc/zabbix-server-mysql-4.0.0/create.sql.gz | mysql -uzabbix -pzabbix zabbix</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">grep -n <span class="string">&#x27;^&#x27;</span>[a-Z] /etc/zabbix/zabbix_server.conf</span></span><br><span class="line">38:LogFile=/var/log/zabbix/zabbix_server.log</span><br><span class="line">49:LogFileSize=0</span><br><span class="line">72:PidFile=/var/run/zabbix/zabbix_server.pid</span><br><span class="line">82:SocketDir=/var/run/zabbix</span><br><span class="line">101:DBName=zabbix</span><br><span class="line">117:DBUser=zabbix</span><br><span class="line">125:DBPassword=zabbix</span><br><span class="line">357:SNMPTrapperFile=/var/log/snmptrap/snmptrap.log</span><br><span class="line">475:Timeout=4</span><br><span class="line">518:AlertScriptsPath=/usr/lib/zabbix/alertscripts</span><br><span class="line">529:ExternalScripts=/usr/lib/zabbix/externalscripts</span><br><span class="line">565:LogSlowQueries=3000</span><br></pre></td></tr></table></figure>

<p>中文乱码与时间</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum -y install wqy-microhei-fonts</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">\<span class="built_in">cp</span> /usr/share/fonts/wqy-microhei/wqy-microhei.ttc /usr/share/fonts/dejavu/DejaVuSans.ttf</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /etc/httpd/conf.d/zabbix.conf</span></span><br><span class="line">php_value date.timezone Asia/Shanghai</span><br></pre></td></tr></table></figure>

<p>启动服务</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl <span class="built_in">enable</span> zabbix-server</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl start zabbix-server</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl restart httpd</span></span><br></pre></td></tr></table></figure>

<p>web界面安装</p>
<p><a href="http://ip:3080/zabbix">http://IP:3080/zabbix</a></p>
<h2 id="zabbix-agent端安装"><a href="#zabbix-agent端安装" class="headerlink" title="zabbix agent端安装"></a>zabbix agent端安装</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rpm -ivh http://repo.zabbix.com/zabbix/3.5/rhel/7/x86_64/zabbix-release-3.5-1.el7.noarch.rpm</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum install -y zabbix-agent</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">grep -n <span class="string">&#x27;^&#x27;</span>[a-Z] /etc/zabbix/zabbix_agentd.conf</span></span><br><span class="line">13:PidFile=/var/run/zabbix/zabbix_agentd.pid</span><br><span class="line">32:LogFile=/var/log/zabbix/zabbix_agentd.log</span><br><span class="line">43:LogFileSize=0</span><br><span class="line">98:Server=172.17.252.105               #服务端IP</span><br><span class="line">139:ServerActive=172.17.252.105  #客户端IP</span><br><span class="line">150:Hostname=location</span><br><span class="line">268:Include=/etc/zabbix/zabbix_agentd.d/*.conf</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl <span class="built_in">enable</span> zabbix-agent</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl start zabbix-agent</span></span><br></pre></td></tr></table></figure>

<h2 id="配置微信报警"><a href="#配置微信报警" class="headerlink" title="配置微信报警"></a>配置微信报警</h2><p>企业微信注册：<a href="https://work.weixin.qq.com/wework_admin/register_wx?from=myhome">https://work.weixin.qq.com/wework_admin&#x2F;register_wx?from&#x3D;myhome</a></p>
<p><img src="/image/15430278481.png"></p>
<p>创建部门，添加运维人员</p>
<p><img src="/image/15430279531.png"></p>
<p>创建应用</p>
<p><img src="/image/15430279901.png"></p>
<p><img src="/image/15430280101.png"></p>
<p>企业ID</p>
<p><img src="/image/15430280311.png"></p>
<p>部门ID</p>
<p><img src="/image/15430280501.png"></p>
<p>企业微信api调用：<a href="http://work.weixin.qq.com/api/devtools/devtool.php">http://work.weixin.qq.com/api/devtools/devtool.php</a></p>
<p>测试能否取到AccessToken</p>
<p><img src="/image/15430280711.png"></p>
<p><img src="/image/15430280981.png"></p>
<p>zabbix脚本</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">grep <span class="string">&quot;^[^#]&quot;</span> /etc/zabbix/zabbix_server.conf</span></span><br><span class="line">AlertScriptsPath=/usr/lib/zabbix/alertscripts</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cd</span> /usr/lib/zabbix/alertscripts</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim weixin.sh</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">填写我们的应用CropID</span></span><br><span class="line">CropID=&#x27;****************&#x27;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">应用的Secret，下面的GURL和PURL 地址无需变动</span></span><br><span class="line">Secret=&#x27;uYfQc8HJZ53V0s-7MyqpZwve9Z4kaA48VCha2F5Oqhs&#x27;</span><br><span class="line">GURL=&quot;https://qyapi.weixin.qq.com/cgi-bin/gettoken?corpid=$CropID&amp;corpsecret=$Secret&quot;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Gtoken=$(/usr/bin/curl -s -G <span class="variable">$GURL</span> | awk -F\&quot; <span class="string">&#x27;&#123;print $4&#125;&#x27;</span>)</span></span><br><span class="line">Gtoken=$(/usr/bin/curl -s -G $GURL | awk -F\&quot; &#x27;&#123;print $10&#125;&#x27;)</span><br><span class="line">PURL=&quot;https://qyapi.weixin.qq.com/cgi-bin/message/send?access_token=$Gtoken&quot;</span><br><span class="line"> </span><br><span class="line">function body() &#123;</span><br><span class="line">         local int AppID=1000002     #创建应用的ID</span><br><span class="line">         local UserID=$1                    #接收消息用户，我们在部门里面添加的用户，如果有其他人，用逗号代替部门成员id，zabbix中定义的微信接收者</span><br><span class="line">         local PartyID=2                     #接受消息的部门ID，定义了范围，组内成员都可接收到消息</span><br><span class="line">         local Msg=$(echo &quot;$@&quot; | cut -d&quot; &quot; -f3-)</span><br><span class="line">         printf &#x27;&#123;\n&#x27;</span><br><span class="line">         printf &#x27;\t&quot;touser&quot;: &quot;&#x27;&quot;$UserID&quot;\&quot;&quot;,\n&quot;</span><br><span class="line">         printf &#x27;\t&quot;toparty&quot;: &quot;&#x27;&quot;$PartyID&quot;\&quot;&quot;,\n&quot;</span><br><span class="line">         printf &#x27;\t&quot;msgtype&quot;: &quot;text&quot;,\n&#x27;</span><br><span class="line">         printf &#x27;\t&quot;agentid&quot;: &quot;&#x27;&quot; $AppID &quot;\&quot;&quot;,\n&quot;</span><br><span class="line">         printf &#x27;\t&quot;text&quot;: &#123;\n&#x27;</span><br><span class="line">         printf &#x27;\t\t&quot;content&quot;: &quot;&#x27;&quot;$Msg&quot;\&quot;&quot;\n&quot;</span><br><span class="line">         printf &#x27;\t&#125;,\n&#x27;</span><br><span class="line">         printf &#x27;\t&quot;safe&quot;:&quot;0&quot;\n&#x27;</span><br><span class="line">         printf &#x27;&#125;\n&#x27;</span><br><span class="line">&#125;</span><br><span class="line">/usr/bin/curl --data-ascii &quot;$(body $1 $2 $3)&quot; $PURL</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">chown</span> zabbix.zabbix weixin.sh</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">chmod</span> 744 weixin.sh</span></span><br></pre></td></tr></table></figure>

<p>测试</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">sh weixin.sh ops <span class="built_in">test</span> <span class="built_in">test</span></span></span><br><span class="line">&#123;&quot;errcode&quot;:0,&quot;errmsg&quot;:&quot;ok&quot;,&quot;invaliduser&quot;:&quot;&quot;&#125;</span><br></pre></td></tr></table></figure>

<p><img src="/image/15430281201.png"></p>
<h3 id="zabbix-web界面设置"><a href="#zabbix-web界面设置" class="headerlink" title="zabbix web界面设置"></a>zabbix web界面设置</h3><p>报警媒介</p>
<p><img src="/image/15430281381.png"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&#123;ALERT.SENDTO&#125;</span><br><span class="line">&#123;ALERT.SUBJECT&#125;</span><br><span class="line">&#123;ALERT.MESSAGE&#125;</span><br></pre></td></tr></table></figure>

<p>创建用户</p>
<p><img src="/image/15430281571.png"></p>
<p><img src="/imgae/15430281821.png"></p>
<p><img src="/image/15430281981.png"></p>
<p>配置动作</p>
<p><img src="/image/15430282151.png"></p>
<p><img src="/image/15430282381.png"></p>
<p><img src="/iamge/15430282561.png"></p>
<p><img src="/iamge/15430282821.png"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">服务器:&#123;HOST.NAME&#125;发生: &#123;TRIGGER.NAME&#125;故障!&#123;告警主机:&#123;HOST.NAME&#125;告警地址:服务器:&#123;HOST.NAME&#125;发生: &#123;TRIGGER.NAME&#125;故障!</span><br><span class="line">&#123;</span><br><span class="line">告警主机:&#123;HOST.NAME&#125;</span><br><span class="line">告警地址:&#123;HOST.IP&#125;</span><br><span class="line">监控项目:&#123;ITEM.NAME&#125;</span><br><span class="line">监控取值:&#123;ITEM.LASTVALUE&#125;</span><br><span class="line">告警等级:&#123;TRIGGER.SEVERITY&#125;</span><br><span class="line">当前状态:&#123;TRIGGER.STATUS&#125;</span><br><span class="line">告警信息:&#123;TRIGGER.NAME&#125;</span><br><span class="line">告警时间:&#123;EVENT.DATE&#125; &#123;EVENT.TIME&#125;</span><br><span class="line">事件ID:&#123;EVENT.ID&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">服务器:&#123;HOST.NAME&#125;: &#123;TRIGGER.NAME&#125;已恢复!</span><br><span class="line">&#123;</span><br><span class="line">告警主机:&#123;HOST.NAME&#125;</span><br><span class="line">告警地址:&#123;HOST.IP&#125;</span><br><span class="line">监控项目:&#123;ITEM.NAME&#125;</span><br><span class="line">监控取值:&#123;ITEM.LASTVALUE&#125;</span><br><span class="line">告警等级:&#123;TRIGGER.SEVERITY&#125;</span><br><span class="line">当前状态:&#123;TRIGGER.STATUS&#125;</span><br><span class="line">告警信息:&#123;TRIGGER.NAME&#125;</span><br><span class="line">告警时间:&#123;EVENT.DATE&#125; &#123;EVENT.TIME&#125;</span><br><span class="line">恢复时间:&#123;EVENT.RECOVERY.DATE&#125; &#123;EVENT.RECOVERY.TIME&#125;</span><br><span class="line">持续时间:&#123;EVENT.AGE&#125;</span><br><span class="line">事件ID:&#123;EVENT.ID&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">服务器:&#123;HOST.NAME&#125;: 报警确认</span><br><span class="line">&#123;</span><br><span class="line">确认人:&#123;USER.FULLNAME&#125;</span><br><span class="line">时间:&#123;ACK.DATE&#125; &#123;ACK.TIME&#125;</span><br><span class="line">确认信息如下:</span><br><span class="line">&quot;&#123;ACK.MESSAGE&#125;&quot;</span><br><span class="line">问题服务器IP:&#123;HOSTNAME1&#125;</span><br><span class="line">问题ID:&#123;EVENT.ID&#125;</span><br><span class="line">当前的问题是: &#123;TRIGGER.NAME&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="/image/15430282981.png"> </p>
]]></content>
      <categories>
        <category>zabbix</category>
      </categories>
      <tags>
        <tag>zabbix</tag>
      </tags>
  </entry>
  <entry>
    <title>容器日志收集系统</title>
    <url>/2020/01/08/%E5%AE%B9%E5%99%A8%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>K8s系统里的业务应用是高度“动态化”的，随着容器编排的就行，业务容器在不断的被创建、被摧毁、被漂移、被扩缩容…</p>
<p>面对如此海量的数据，有是分布在各个不同地方，如果我们需要去查找一些重要的信息，难道还是使用传统的方法，去登陆到一台台机器上查看？看来传统的工具与方法已经显得非常笨拙和低效了。于是，一些聪明人就提出了建立一套集中式的方法，把不同来源的数据集中整合到一个地方。</p>
<span id="more"></span>

<p>我们需要这样一套日志收集、分析的系统：</p>
<ol>
<li><p>收集 – 能够采集多种来源的日志数据（流式日志收集器）</p>
</li>
<li><p>传输 – 能够稳定的把日志数据传输到中央系统（消息队列）</p>
</li>
<li><p>存储 – 可以将日志以结构化数据的形式存储起来（搜索引擎）</p>
</li>
<li><p>分析 – 支持方便的分析、检索方法，最好有GUI管理系统（web）</p>
</li>
<li><p>警告 – 能够提供错误报告，监控机制（监控系统）</p>
</li>
</ol>
<p>优秀的社区开源解决方法 – ELK Stack</p>
<ul>
<li><p>E – ElasticSearch</p>
</li>
<li><p>L – LogStash</p>
</li>
</ul>
<ul>
<li>K – Kibana</li>
</ul>
<h4 id="传统ELk模型"><a href="#传统ELk模型" class="headerlink" title="传统ELk模型"></a>传统ELk模型</h4><p><img src="/image/124598765.jpg"></p>
<p>缺点：</p>
<ol>
<li><p>Logstash使用Jruby语言开发，吃资源，大量部署消耗极高</p>
</li>
<li><p>业务程序与logstash耦合过松，不利于业务迁移</p>
</li>
<li><p>日志收集与ES解耦又过紧，易打爆、丢数据</p>
</li>
<li><p>在容器云环境下，传统ELk模型难以完成工作</p>
</li>
</ol>
<h4 id="K8s容器日志收集模型"><a href="#K8s容器日志收集模型" class="headerlink" title="K8s容器日志收集模型"></a>K8s容器日志收集模型</h4><p><img src="/image/k8s%E5%AE%B9%E5%99%A8%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86.png"></p>
]]></content>
      <categories>
        <category>Kubernetes</category>
        <category>ELK</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>容器运行hexo</title>
    <url>/2022/05/12/%E5%AE%B9%E5%99%A8%E8%BF%90%E8%A1%8Chexo/</url>
    <content><![CDATA[<h3 id="hexo运行脚本"><a href="#hexo运行脚本" class="headerlink" title="hexo运行脚本"></a>hexo运行脚本</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker rm -f hexo </span><br><span class="line">docker run -d --name=hexo --restart always -p 80:4000 \</span><br><span class="line">-v /data/hexo/source:/opt/blog/source \</span><br><span class="line">-v /root/.ssh/id_rsa:/root/.ssh/id_rsa \</span><br><span class="line">-v /data/hexo/_config.yml:/opt/blog/_config.yml \</span><br><span class="line">-v /data/hexo/_config.butterfly.yml:/opt/blog/_config.butterfly.yml \</span><br><span class="line">-v /data/hexo/themes/butterfly/source/img:/opt/blog/themes/butterfly/source/img \</span><br><span class="line">heweiqun/hexo:202205121314-node-12.22.7</span><br></pre></td></tr></table></figure>

<p>butterfly主题使用：<a href="https://butterfly.js.org/posts/21cfbf15/">Butterfly 安裝文檔</a></p>
<p>&#x2F;opt&#x2F;blog&#x2F;source                                           本地需要_posts目录才能启动</p>
<p>&#x2F;root&#x2F;.ssh&#x2F;id_rsa                                           挂载密钥方便容器内上传至github，选参</p>
<p>&#x2F;opt&#x2F;blog&#x2F;_config.yml                                   挂载hexo文件方便修改，选参</p>
<p>&#x2F;opt&#x2F;blog&#x2F;_config.butterfly.yml                   挂载hexo主题文件方便修改，选参</p>
<p>&#x2F;opt&#x2F;blog&#x2F;themes&#x2F;butterfly&#x2F;source&#x2F;img    挂载hexo主题文件静态图片，选参</p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>平滑升级kubernetes</title>
    <url>/2019/12/04/%E5%B9%B3%E6%BB%91%E5%8D%87%E7%BA%A7kubernetes/</url>
    <content><![CDATA[<h2 id="1-15-2-x3D-gt-1-15-4准备1-15-4"><a href="#1-15-2-x3D-gt-1-15-4准备1-15-4" class="headerlink" title="1.15.2 &#x3D;&gt; 1.15.4准备1.15.4"></a>1.15.2 &#x3D;&gt; 1.15.4<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 ~]# kubectl get node</span><br><span class="line">NAME                STATUS   ROLES         AGE   VERSION</span><br><span class="line">hdss7-21.host.com   Ready    master,node   16d   v1.15.2</span><br><span class="line">hdss7-22.host.com   Ready    master,node   16d   v1.15.2    </span><br></pre></td></tr></table></figure><br>准备1.15.4</h2> <span id="more"></span>
<p><a href="https://pan.wqblogs.com:4443/sharing/ajOD6Qg8I">v1.15.4下载地址</a> 密码: wqblogs.com</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 ~]# cd /opt/src</span><br><span class="line">[root@hdss7-21 src]# wget https://dl.k8s.io/v1.15.4/kubernetes-server-linux-amd64.tar.gz    # 需要翻墙</span><br><span class="line">[root@hdss7-21 src]# mkdir /opt/kubernetes-v1.15.4</span><br><span class="line">[root@hdss7-21 src]# tar xf kubernetes-server-linux-amd64-v1.15.4.tar.gz -C /opt/kubernetes-v1.15.4</span><br><span class="line">[root@hdss7-21 src]# cd /opt/kubernetes-v1.15.4</span><br><span class="line">[root@hdss7-21 kubernetes-v1.15.4]# mv kubernetes/* ./</span><br><span class="line">[root@hdss7-21 kubernetes-v1.15.4]# rm -rf kubernetes</span><br><span class="line">[root@hdss7-21 kubernetes-v1.15.4]# ll</span><br><span class="line">total 27196</span><br><span class="line">-rw-r--r-- 1 root root  1205293 Sep 18 23:09 LICENSES</span><br><span class="line">drwxr-xr-x 2 root root        6 Sep 18 23:09 addons</span><br><span class="line">-rw-r--r-- 1 root root 26639441 Sep 18 23:09 kubernetes-src.tar.gz</span><br><span class="line">drwxr-xr-x 3 root root       17 Sep 18 23:05 server</span><br><span class="line">[root@hdss7-21 kubernetes-v1.15.4]# rm -rf kubernetes-src.tar.gz</span><br><span class="line">[root@hdss7-21 kubernetes-v1.15.4]# cd server/bin/</span><br><span class="line">[root@hdss7-21 bin]# rm -rf *.tar</span><br><span class="line">[root@hdss7-21 bin]# rm -rf *_tag</span><br></pre></td></tr></table></figure>

<h2 id="拷贝脚本与证书"><a href="#拷贝脚本与证书" class="headerlink" title="拷贝脚本与证书"></a>拷贝脚本与证书</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 cert]# cp /opt/kubernetes/server/bin/cert/* .</span><br><span class="line">[root@hdss7-21 cert]# cd ../conf/</span><br><span class="line">[root@hdss7-21 conf]# cp /opt/kubernetes/server/bin/conf/* .</span><br><span class="line">[root@hdss7-21 conf]# cd ..</span><br><span class="line">[root@hdss7-21 bin]# cp /opt/kubernetes/server/bin/*.sh .    </span><br></pre></td></tr></table></figure>
<h2 id="给节点打上污点"><a href="#给节点打上污点" class="headerlink" title="给节点打上污点"></a>给节点打上污点</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 ~]# kubectl taint nodes hdss7-21.host.com check=hdss7-21.host.com:NoExecute</span><br><span class="line">node/hdss7-21.host.com tainted</span><br><span class="line">[root@hdss7-21 ~]# kubectl get pod -n kube-system -o wide</span><br><span class="line">NAME                                    READY   STATUS    RESTARTS   AGE   IP           NODE                NOMINATED NODE   READINESS GATES</span><br><span class="line">coredns-9bc44c684-42k85                 1/1     Running   0          76s   172.7.22.5   hdss7-22.host.com   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">heapster-b5b9f794-r4kjq                 1/1     Running   0          75s   172.7.22.7   hdss7-22.host.com   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kubernetes-dashboard-7595d686df-jwgvv   1/1     Running   0          42m   172.7.22.4   hdss7-22.host.com   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">traefik-ingress-6srd5                   1/1     Running   0          13h   172.7.22.2   hdss7-22.host.com   &lt;none&gt;           &lt;none&gt;</span><br></pre></td></tr></table></figure>
<h2 id="删除节点"><a href="#删除节点" class="headerlink" title="删除节点"></a>删除节点</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 ~]# kubectl delete node hdss7-21.host.com</span><br><span class="line">node &quot;hdss7-21.host.com&quot; deleted</span><br><span class="line">[root@hdss7-21 ~]# kubectl get nodes</span><br><span class="line">NAME                STATUS   ROLES         AGE   VERSION</span><br><span class="line">hdss7-22.host.com   Ready    master,node   16d   v1.15.2    </span><br></pre></td></tr></table></figure>
<h3 id="重新软连接"><a href="#重新软连接" class="headerlink" title="重新软连接"></a>重新软连接</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 bin]# cd /opt/</span><br><span class="line">[root@hdss7-21 opt]# rm -rf kubernetes</span><br><span class="line">[root@hdss7-21 opt]# ln -s /opt/kubernetes-v1.15.4/ /opt/kubernetes    </span><br></pre></td></tr></table></figure>
<h2 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 opt]# supervisorctl restart kube-apiserver-7-21</span><br><span class="line">kube-apiserver-7-21: stopped</span><br><span class="line">kube-apiserver-7-21: started</span><br><span class="line">[root@hdss7-21 opt]# supervisorctl restart kube-controller-manager-7-21</span><br><span class="line">kube-controller-manager-7-22: stopped</span><br><span class="line">kube-controller-manager-7-22: started</span><br><span class="line">[root@hdss7-21 opt]# supervisorctl restart kube-scheduler-7-21          </span><br><span class="line">kube-scheduler-7-21: stopped</span><br><span class="line">kube-scheduler-7-21: started</span><br><span class="line">[root@hdss7-21 opt]# supervisorctl restart kube-proxy-7-21</span><br><span class="line">kube-proxy-7-21: stopped</span><br><span class="line">kube-proxy-7-21: started</span><br><span class="line">[root@hdss7-21 opt]# supervisorctl restart kube-kubelet-7-21</span><br><span class="line">kube-kubelet-7-21: stopped</span><br><span class="line">kube-kubelet-7-21: started</span><br><span class="line">[root@hdss7-21 opt]# supervisorctl restart flanneld-7-21    </span><br><span class="line">flanneld-7-21: stopped</span><br><span class="line">flanneld-7-21: started</span><br></pre></td></tr></table></figure>
<h2 id="检查"><a href="#检查" class="headerlink" title="检查"></a>检查</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 opt]# kubectl get node</span><br><span class="line">NAME                STATUS   ROLES         AGE     VERSION</span><br><span class="line">hdss7-21.host.com   Ready    &lt;none&gt;        2m51s   v1.15.4</span><br><span class="line">hdss7-22.host.com   Ready    master,node   16d     v1.15.2</span><br></pre></td></tr></table></figure>
<h2 id="node打标签"><a href="#node打标签" class="headerlink" title="node打标签"></a>node打标签</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 opt]# kubectl label node hdss7-21.host.com node-role.kubernetes.io/master=</span><br><span class="line">node/hdss7-21.host.com labeled</span><br><span class="line">[root@hdss7-21 opt]# kubectl label node hdss7-21.host.com node-role.kubernetes.io/node=</span><br><span class="line">node/hdss7-21.host.com labeled</span><br></pre></td></tr></table></figure>

<h2 id="去除污点"><a href="#去除污点" class="headerlink" title="去除污点"></a>去除污点</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 opt]# kubectl taint nodes hdss7-21.host.com check=hdss7-21.host.com:NoExecute-</span><br><span class="line">node/hdss7-21.host.com untainted</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
  </entry>
  <entry>
    <title>底包制作</title>
    <url>/2020/01/08/%E5%BA%95%E5%8C%85%E5%88%B6%E4%BD%9C/</url>
    <content><![CDATA[<h3 id="tomcat"><a href="#tomcat" class="headerlink" title="tomcat"></a>tomcat</h3><h4 id="准备tomcat"><a href="#准备tomcat" class="headerlink" title="准备tomcat"></a>准备tomcat</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-200 ~]# cd /opt/src/</span><br><span class="line">[root@hdss7-200 src]# wget http://mirror.bit.edu.cn/apache/tomcat/tomcat-8/v8.5.50/bin/apache-tomcat-8.5.50.tar.gz</span><br><span class="line">[root@hdss7-200 src]# mkdir /data/dockerfile/tomcat</span><br><span class="line">[root@hdss7-200 src]# tar xf apache-tomcat-8.5.50.tar.gz -C /data/dockerfile/tomcat</span><br><span class="line">[root@hdss7-200 src]# cd /data/dockerfile/tomcat</span><br><span class="line">[root@hdss7-200 tomcat]# rm -rf apache-tomcat-8.5.50/webapps/*</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h4 id="简单配置tomcat"><a href="#简单配置tomcat" class="headerlink" title="简单配置tomcat"></a>简单配置tomcat</h4><p>关闭AJP端口</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">[root@hdss7-200 tomcat]# vim apache-tomcat-8.5.50/conf/server.xml</span><br><span class="line">  <span class="comment">&lt;!-- &lt;Connector port=&quot;8009&quot; protocol=&quot;AJP/1.3&quot; redirectPort=&quot;8443&quot; /&gt; --&gt;</span></span><br></pre></td></tr></table></figure>

<p>配置日志</p>
<p>删除3manager，4host-manager的handlers</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">[root@hdss7-200</span> <span class="string">tomcat]# vim apache-tomcat-8.5.50/conf/logging.properties</span></span><br><span class="line"><span class="attr">handlers</span> = <span class="string">[1catalina.org.apache.juli.AsyncFileHandler](http://1catalina.org.apache.juli.asyncfilehandler/), [2localhost.org.apache.juli.AsyncFileHandler](http://2localhost.org.apache.juli.asyncfilehandler/), java.util.logging.ConsoleHandler</span></span><br></pre></td></tr></table></figure>

<p>日志级别改为INFO</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">1catalina.org.apache.juli.AsyncFileHandler.level = INFO</span><br><span class="line">2localhost.org.apache.juli.AsyncFileHandler.level = INFO</span><br><span class="line">java.util.logging.ConsoleHandler.level = INFO</span><br></pre></td></tr></table></figure>

<p>注释所有关于3manager，4host-manager日志的配置</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">#3manager.org.apache.juli.AsyncFileHandler.level = FINE</span><br><span class="line">#3manager.org.apache.juli.AsyncFileHandler.directory = $&#123;catalina.base&#125;/logs</span><br><span class="line">#3manager.org.apache.juli.AsyncFileHandler.prefix = manager.</span><br><span class="line">#3manager.org.apache.juli.AsyncFileHandler.encoding = UTF-8</span><br><span class="line">#4host-manager.org.apache.juli.AsyncFileHandler.level = FINE</span><br><span class="line">#4host-manager.org.apache.juli.AsyncFileHandler.directory = $&#123;catalina.base&#125;/logs</span><br><span class="line">#4host-manager.org.apache.juli.AsyncFileHandler.prefix = host-manager.</span><br><span class="line">#4host-manager.org.apache.juli.AsyncFileHandler.encoding = UTF-8</span><br></pre></td></tr></table></figure>

<h4 id="准备dockerfile"><a href="#准备dockerfile" class="headerlink" title="准备dockerfile"></a>准备dockerfile</h4><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">[root@hdss7-<span class="number">200</span> tomcat]<span class="comment"># vim Dockerfile</span></span><br><span class="line"><span class="keyword">From</span> harbor.od.com/public/jre:<span class="number">8</span>u112</span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> /bin/cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &amp;&amp;\</span></span><br><span class="line"><span class="language-bash">  <span class="built_in">echo</span> <span class="string">&#x27;Asia/Shanghai&#x27;</span> &gt;/etc/timezone</span></span><br><span class="line"><span class="keyword">ENV</span> CATALINA_HOME /opt/tomcat</span><br><span class="line"><span class="keyword">ENV</span> LANG zh_CN.UTF-<span class="number">8</span></span><br><span class="line"><span class="keyword">ADD</span><span class="language-bash"> apache-tomcat-8.5.50/ /opt/tomcat</span></span><br><span class="line"><span class="keyword">ADD</span><span class="language-bash"> config.yml /opt/prom/config.yml</span></span><br><span class="line"><span class="keyword">ADD</span><span class="language-bash"> jmx_javaagent-0.3.1.jar /opt/prom/jmx_javaagent-0.3.1.jar</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /opt/tomcat</span></span><br><span class="line"><span class="keyword">ADD</span><span class="language-bash"> entrypoint.sh /entrypoint.sh</span></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> [<span class="string">&quot;/entrypoint.sh&quot;</span>]</span></span><br></pre></td></tr></table></figure>

<p>JVM监控jar包</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-200 tomcat]# wget https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/0.3.1/jmx_prometheus_javaagent-0.3.1.jar -O jmx_javaagent-0.3.1.jar</span><br></pre></td></tr></table></figure>

<p>jmx_agent读取的配置文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-200 tomcat]# vim config.yml</span><br><span class="line">---</span><br><span class="line">rules:</span><br><span class="line"> - pattern: &#x27;.*&#x27;</span><br></pre></td></tr></table></figure>

<p>容器启动脚本</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-200 tomcat]# vim entrypoint.sh</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">M_OPTS=&quot;-Duser.timezone=Asia/Shanghai -javaagent:/opt/prom/jmx_javaagent-0.3.1.jar=$(hostname -i):$&#123;M_PORT:-&quot;12346&quot;&#125;:/opt/prom/config.yml&quot; # Pod ip:port 监控规则传给jvm监控客户端</span><br><span class="line">C_OPTS=$&#123;C_OPTS&#125;             # 启动追加参数</span><br><span class="line">MIN_HEAP=$&#123;MIN_HEAP:-&quot;128m&quot;&#125; # java虚拟机初始化时的最小内存</span><br><span class="line">MAX_HEAP=$&#123;MAX_HEAP:-&quot;128m&quot;&#125; # java虚拟机初始化时的最大内存</span><br><span class="line">JAVA_OPTS=$&#123;JAVA_OPTS:-&quot;-Xmn384m -Xss256k -Duser.timezone=GMT+08  -XX:+DisableExplicitGC -XX:+UseConcMarkSweepGC -XX:+UseParNewGC -XX:+CMSParallelRemarkEnabled -XX:+UseCMSCompactAtFullCollection -XX:CMSFullGCsBeforeCompaction=0 -XX:+CMSClassUnloadingEnabled -XX:LargePageSizeInBytes=128m -XX:+UseFastAccessorMethods -XX:+UseCMSInitiatingOccupancyOnly -XX:CMSInitiatingOccupancyFraction=80 -XX:SoftRefLRUPolicyMSPerMB=0 -XX:+PrintClassHistogram  -Dfile.encoding=UTF8 -Dsun.jnu.encoding=UTF8&quot;&#125;     # 年轻代，gc回收</span><br><span class="line">CATALINA_OPTS=&quot;$&#123;CATALINA_OPTS&#125;&quot;</span><br><span class="line">JAVA_OPTS=&quot;$&#123;M_OPTS&#125; $&#123;C_OPTS&#125; -Xms$&#123;MIN_HEAP&#125; -Xmx$&#123;MAX_HEAP&#125; $&#123;JAVA_OPTS&#125;&quot;</span><br><span class="line">sed -i -e &quot;1a\JAVA_OPTS=\&quot;$JAVA_OPTS\&quot;&quot; -e &quot;1a\CATALINA_OPTS=\&quot;$CATALINA_OPTS\&quot;&quot; /opt/tomcat/bin/catalina.sh   </span><br><span class="line">cd /opt/tomcat &amp;&amp; /opt/tomcat/bin/catalina.sh run 2&gt;&amp;1 &gt;&gt; /opt/tomcat/logs/stdout.log # 日志文件</span><br><span class="line">[root@hdss7-200 tomcat]# chmod +x entrypoint.sh</span><br></pre></td></tr></table></figure>

<h4 id="构建docker"><a href="#构建docker" class="headerlink" title="构建docker"></a>构建docker</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-200 tomcat]# docker build . -t harbor.od.com/base/tomcat:v8.5.50</span><br><span class="line">[root@hdss7-200 tomcat]# docker push harbor.od.com/base/tomcat:v8.5.50</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Kubernetes</category>
        <category>ELK</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>微服务架构</title>
    <url>/2019/06/22/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84/</url>
    <content><![CDATA[<p>微服务架构是一种架构模式，它提倡将单一应用程序划分成一组小的服务，服务之间相互协调、互相配合，为用户提供最终价值。每个服务运行在其独立的进程中，服务和服务之间采用轻量级的通信机制相互沟通（通常是基于HTTP的Restful API).每个服务都围绕着具体的业务进行构建，并且能够被独立的部署到生产环境、类生产环境等。<br> <span id="more"></span></p>
<ul>
<li><strong>优点</strong></li>
</ul>
<p>  每个服务可以不同开发团队进行开发；</p>
<p>  每个微服务可以独立部署；</p>
<p>  每个服务的独立扩展；</p>
<p>  微服务是松散耦合的；</p>
<p>  可以用不同编程语言与工具开发；</p>
<ul>
<li><strong>缺点</strong></li>
</ul>
<p>  微服务提高了系统的复杂度；</p>
<p>  开发人员要处理分布式系统的复杂性；</p>
<p>  服务之间的分布式通信问题；</p>
<p>  服务的注册与发现问题；</p>
<p>  服务之间的分布式事务问题；</p>
<p>  数据隔离再来的报表处理问题；</p>
<p>  服务之间的分布式一致性问题；</p>
<p>  服务管理的复杂性，服务的编排；</p>
<p>例：架构框架</p>
<p><img src="/image/1569475640-%E5%BE%AE%E6%9C%8D%E5%8A%A1.png"></p>
<ul>
<li>consul注册中心</li>
</ul>
<p>用于实现分布式系统的服务发现与配置</p>
<ol>
<li><p>各个微服务在启动时，将自己的网络地址等信息注册到注册中心，注册中心存储这些数据；</p>
</li>
<li><p>服务消费者从注册中心查询服务提供者的地址，并通过该地址调用服务提供者的接口；</p>
</li>
<li><p>各个微服务与注册中心使用一定机制（例如心跳）通信。如果注册中心与某微服务长时间无法通信，就会注销该实例；</p>
</li>
<li><p>微服务网络地址发送变化（例如实例增加或IP变动等）时，会重新注册到注册中心。这样，服务消费者就无需人工修改提供者的网络地址了。</p>
</li>
</ol>
<ul>
<li>携程apollo配置中心</li>
</ul>
<p>实现配置的统一管理，实现配置的动态更新发布</p>
<ol>
<li><p>配置是可分离的，可从微服务中抽离出来，任何的配置修改不需要动一行代码；</p>
</li>
<li><p>配置应该是中央的，通过统一的中央配置平台去配置管理不同的微服务；</p>
</li>
<li><p>配置中心必须必须可靠切稳定地提供配置服务；</p>
</li>
<li><p>配置是可追溯的，任何的配置历史都是可追溯，被管理且可用。</p>
</li>
</ol>
<ul>
<li>gateway网关</li>
</ul>
<p>客户端向 Spring Cloud Gateway 发出请求，如果请求与网关程序定义的路由匹配，则将其发送到网关 Web 处理程序，此处理程序运行特定的请求过滤器链。</p>
<ul>
<li>auth鉴权</li>
</ul>
<p>用户认证、用户权限、服务校验。</p>
<ul>
<li>lcn分布式事务</li>
</ul>
<p>协调微服务之间的数据事务，保证一致性。</p>
<p>一致性（C）</p>
<p>  在分布式系统中的所有数据备份，在同一时刻是否同样的值。（等同于所有节点访问同一份最新的数据副本）</p>
<p>可用性（A）</p>
<p>  在集群中一部分节点故障后，集群整体是否还能响应客户端的读写请求。（对数据更新具备高可用性）</p>
<p>分区容错性（P）</p>
<p>  以实际效果而言，分区相当于对通信的时限要求。系统如果不能在时限内达成数据一致性，就意味着发生了分区的情况，必须就当前操作在C和A之间做出选择。</p>
<ul>
<li>spring admin (monitor)</li>
</ul>
<p>获取服务当前处于活跃状态的会话数量、当前应用的并发数、延迟以及其他度量信息。</p>
<ul>
<li>sentiel限流熔断</li>
</ul>
<p>根据对应资源配置的规则来为资源执行相应的流控&#x2F;降级&#x2F;系统保护策略。</p>
<ul>
<li>zipkin链路监控</li>
</ul>
<p>用于跟踪分布式服务之间的应用数据链路，分析处理延时，帮助我们改进系统的性能和定位故障。</p>
<ul>
<li>kubernetes编排工具</li>
</ul>
<p>用于服务，资源编排，分布式高可用。</p>
<ul>
<li>spinnaker持续交付平台</li>
</ul>
<p>Spinnaker是一个开源的多云持续交付平台，提供快速、可靠、稳定的软件变更服务。</p>
]]></content>
      <categories>
        <category>微服务</category>
      </categories>
  </entry>
  <entry>
    <title>搭建dns服务器</title>
    <url>/2019/11/17/%E6%90%AD%E5%BB%BAdns%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    <content><![CDATA[<p>HDSS7-11.host.com上部署</p>
<h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum install -y epel-release</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum install -y wget net-tools telnet tree nmap sysstat lrasa dos2unix bind-utils vim</span></span><br></pre></td></tr></table></figure>
<span id="more"></span>

<h3 id="安装bind"><a href="#安装bind" class="headerlink" title="安装bind"></a>安装bind</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-11 ~]# yum install -y bind</span><br></pre></td></tr></table></figure>


<h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-11 ~]# vim /etc/named.conf</span><br><span class="line">12 options &#123;</span><br><span class="line">13         listen-on port 53 &#123; 10.4.7.11; &#125;;  // 修改为主机ip</span><br><span class="line">14         //listen-on-v6 port 53 &#123; ::1; &#125;;     // 注释ipv6</span><br><span class="line">21         allow-query     &#123; any; &#125;;              // 修改为所有</span><br><span class="line">22         forwarders      &#123; 10.4.7.1; &#125;;       // 增加上级dns，网关地址</span><br><span class="line">36         dnssec-enable no;</span><br><span class="line">37         dnssec-validation no;</span><br><span class="line">[root@hdss7-11 ~]# named-checkconf     # 检查配置是否有误，没有返回任何信息为正确</span><br></pre></td></tr></table></figure>


<h3 id="域配置"><a href="#域配置" class="headerlink" title="域配置"></a>域配置</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-11 ~]# vim /etc/named.rfc1912.zones  # 增加域，追加至文件结尾</span><br><span class="line">zone &quot;host.com&quot; IN &#123;</span><br><span class="line">        type master;</span><br><span class="line">        file &quot;host.com.zone&quot;;    # 主机域</span><br><span class="line">        allow-update &#123; 10.4.7.11; &#125;;</span><br><span class="line">&#125;;</span><br><span class="line">zone &quot;od.com&quot; IN &#123;</span><br><span class="line">        type master;</span><br><span class="line">        file “od.com.zone&quot;;     # 业务域</span><br><span class="line">        allow-update &#123; 10.4.7.11; &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>


<h4 id="主机域配置文件"><a href="#主机域配置文件" class="headerlink" title="主机域配置文件"></a>主机域配置文件</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-11 ~]# vim /var/named/host.com.zone</span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">ORIGIN host.com.</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">TTL 600  ; 10 minutes</span></span><br><span class="line">@ IN SOA dns.host.com. dnsadmin.host.com. (</span><br><span class="line">       2019111401  ; serial</span><br><span class="line">       10800       ; refresh (3 hours)</span><br><span class="line">       900         ; retry (15 minutes)</span><br><span class="line">       604800      ; expire (1 week)</span><br><span class="line">       86400       ; minimum (1 day)</span><br><span class="line">)</span><br><span class="line">       NS dns.host.com.</span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">TTL 60  ; 1 minutes</span></span><br><span class="line">dns       A  10.4.7.11</span><br><span class="line">HDSS7-11  A  10.4.7.11</span><br><span class="line">HDSS7-12  A  10.4.7.12</span><br><span class="line">HDSS7-21  A  10.4.7.21</span><br><span class="line">HDSS7-22  A  10.4.7.22</span><br><span class="line">HDSS7-200 A  10.4.7.200</span><br></pre></td></tr></table></figure>


<h4 id="业务域配置文件"><a href="#业务域配置文件" class="headerlink" title="业务域配置文件"></a>业务域配置文件</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-11 ~]# vim /var/named/od.com.zone</span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">ORIGIN od.com.</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">TTL 600  ; 10 minutes</span></span><br><span class="line">@ IN SOA dns.od.com. dnsadmin.od.com. (</span><br><span class="line">       2019111401 ; serial</span><br><span class="line">       10800      ; refresh (3 hours)</span><br><span class="line">       900        ; retry (15 minutes)</span><br><span class="line">       604800     ; expire (1 week)</span><br><span class="line">       86400      ; minimum (1 day)</span><br><span class="line">)</span><br><span class="line">       NS dns.od.com.</span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">TTL 60  ; 1 minutes</span></span><br><span class="line">dns       A  10.4.7.11</span><br></pre></td></tr></table></figure>


<h3 id="启动bind"><a href="#启动bind" class="headerlink" title="启动bind"></a>启动bind</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-11 ~]# named-checkconf  # 检查配置有无错误</span><br><span class="line">[root@hdss7-11 ~]# systemctl start named</span><br><span class="line">[root@hdss7-11 ~]# systemctl enable named</span><br><span class="line">[root@hdss7-11 ~]# netstat -luntp|grep 53</span><br><span class="line">tcp        0      0 10.4.7.11:53            0.0.0.0:*               LISTEN      8620/named          </span><br><span class="line">tcp        0      0 127.0.0.1:953           0.0.0.0:*               LISTEN      8620/named          </span><br><span class="line">tcp6       0      0 :::53                   :::*                    LISTEN      8620/named          </span><br><span class="line">tcp6       0      0 ::1:953                 :::*                    LISTEN      8620/named          </span><br><span class="line">udp        0      0 10.4.7.11:53            0.0.0.0:*                           8620/named          </span><br><span class="line">udp6       0      0 :::53                   :::*                                8620/named</span><br></pre></td></tr></table></figure>


<h3 id="检查主机是否解析"><a href="#检查主机是否解析" class="headerlink" title="检查主机是否解析"></a>检查主机是否解析</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-11 ~]# dig -t A hdss7-21.host.com @10.4.7.11 +short</span><br><span class="line">10.4.7.21</span><br><span class="line">[root@hdss7-11 ~]# dig -t A hdss7-200.host.com @10.4.7.11 +short</span><br><span class="line">10.4.7.200</span><br><span class="line">修改eth0的dns</span><br><span class="line">[root@hdss7-11 ~]# vim /etc/sysconfig/network-scripts/ifcfg-eth0</span><br><span class="line">DNS1=10.4.7.11 </span><br><span class="line">[root@hdss7-11 ~]# /etc/init.d/network restart</span><br><span class="line">Restarting network (via systemctl):                        [  OK ]</span><br><span class="line">[root@hdss7-11 ~]# ping baidu.com          # 测试可不可以解析外网域名</span><br><span class="line">PING baidu.com (39.156.69.79) 56(84) bytes of data.</span><br><span class="line">64 bytes from baidu.com (39.156.69.79): icmp_seq=1 ttl=49 time=8.76 ms</span><br><span class="line">[root@hdss7-11 ~]# ping hdss7-21.host.com   # 测试可不可以解析内网域名            </span><br><span class="line">PING HDSS7-21.host.com (10.4.7.21) 56(84) bytes of data.</span><br><span class="line">64 bytes from 10.4.7.21 (10.4.7.21): icmp_seq=1 ttl=64 time=13.4 ms</span><br></pre></td></tr></table></figure>


<p>所有客户端添加dns</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-12 ~]# vim /etc/sysconfig/network-scripts/ifcfg-eth0</span><br><span class="line">DNS1=10.4.7.11 </span><br><span class="line">[root@hdss7-12 ~]# /etc/init.d/network restart</span><br><span class="line">Restarting network (via systemctl):                        [  OK ]</span><br><span class="line">[root@hdss7-12 ~]# cat /etc/resolv.conf</span><br><span class="line"> search host.com    # 自动添加</span><br><span class="line">[root@hdss7-22 ~]# ping hdss7-11   # 测试</span><br><span class="line">PING HDSS7-11.host.com (10.4.7.11) 56(84) bytes of data.</span><br><span class="line">64 bytes from 10.4.7.11 (10.4.7.11): icmp_seq=1 ttl=64 time=5.99 ms</span><br></pre></td></tr></table></figure>


<h3 id="win配置"><a href="#win配置" class="headerlink" title="win配置"></a>win配置</h3><p>修改vmware8网卡dns</p>
<p><img src="/image/1573977539-Image.png"></p>
<p><img src="/image/1573977566-Image.png"> </p>
]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
  </entry>
  <entry>
    <title>用户管理之sudo</title>
    <url>/2019/01/07/%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86%E4%B9%8Bsudo/</url>
    <content><![CDATA[<p><strong>sudo</strong></p>
<p>sudo是Linux系统管理指令，是允许系统管理员让普通用户执行一些或者全部root命令的一个工具。Linux系统下，为了安全，一般来说我们操作都是在普通用户下操作，但是有时候普通用户需要使用root权限，比如在安装软件的时候。这个时候如果我们切回root用户下效率就会比较低，所以用sudo命令就会很方便。</p>
 <span id="more"></span>

<p><strong>su与su -</strong></p>
<p>su只是切换了root身份，但Shell环境仍然是普通用户的Shell</p>
<p>su -连用户和Shell环境一起切换成root身份了。只有切换了Shell环境才不会出现PATH环境变量错误，报command not found的错误</p>
<p><strong>基本操作</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">useradd ops</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">passwd ops</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">visudo</span></span><br><span class="line">ops     ALL=(ALL)  /bin/sh,/usr/bin/tail,/bin/cat</span><br><span class="line">但是每次sudo必须输入密码，所以</span><br><span class="line">ops     ALL=(ALL)  NOPASSWD:ALL,/bin/sh,/usr/bin/tail,/bin/cat</span><br><span class="line">查看当前有什么特权</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo -l|<span class="built_in">tail</span> -2</span></span><br><span class="line"> </span><br><span class="line">User ops may run the following commands on keyida:</span><br><span class="line">     （ALL) NOPASSWD: ALL, /bin/sh, /usr/bin/tail, /bin/cat</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>无聊操作</category>
      </categories>
      <tags>
        <tag>linux基础</tag>
      </tags>
  </entry>
  <entry>
    <title>监控rabbitmq</title>
    <url>/2020/04/09/%E7%9B%91%E6%8E%A7rabbitmq/</url>
    <content><![CDATA[<p>RabbitMQ的<a href="https://www.rabbitmq.com/monitoring.html">Monitoring</a>文档中介绍了各种监控RabbitMQ的方式。 其中推荐了第三方的<a href="https://github.com/deadtrickster/prometheus_rabbitmq_exporter">Prometheus Plugin</a>， 这是一个第三方实现RabbitMQ的管理插件，可以作为Prometheus的RabbitMQ Exporter</p>
<h3 id="查看插件目录"><a href="#查看插件目录" class="headerlink" title="查看插件目录"></a>查看插件目录</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl status rabbitmq-server -l</span></span><br><span class="line">-rabbit plugins_dir &quot;/usr/lib/rabbitmq/plugins:/usr/lib/rabbitmq/lib/rabbitmq_server-3.7.10/plugins</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mkdir</span> /usr/lib/rabbitmq/plugins/</span></span><br></pre></td></tr></table></figure>

<h3 id="下载插件"><a href="#下载插件" class="headerlink" title="下载插件"></a>下载插件</h3><p>这里RabbitMQ的版本为3.7.10，Erlang版本为V10.2.1，从<a href="https://github.com/deadtrickster/prometheus_rabbitmq_exporter/releases/tag/v3.7.0.1">Release for latest RabbitMQ 3.7.x versions</a> 里下载插件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget https://github.com/deadtrickster/prometheus_rabbitmq_exporter/releases/download/v3.7.1.1/accept-0.3.3.ez</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget https://github.com/deadtrickster/prometheus_rabbitmq_exporter/releases/download/v3.7.1.1/prometheus-3.4.5.ez</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget https://github.com/deadtrickster/prometheus_rabbitmq_exporter/releases/download/v3.7.0.1/prometheus_httpd-2.1.8.ez</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget https://github.com/deadtrickster/prometheus_rabbitmq_exporter/releases/download/v3.7.1.1/prometheus_process_collector-1.3.1.ez</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget https://github.com/deadtrickster/prometheus_rabbitmq_exporter/releases/download/v3.7.1.1/prometheus_rabbitmq_exporter-v3.7.1.1.ez</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget https://github.com/deadtrickster/prometheus_rabbitmq_exporter/releases/download/v3.7.0.1/prometheus_cowboy-0.1.4.ez</span></span><br></pre></td></tr></table></figure>

<h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rabbitmq-plugins <span class="built_in">enable</span> accept</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rabbitmq-plugins <span class="built_in">enable</span> prometheus</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rabbitmq-plugins <span class="built_in">enable</span> prometheus_httpd</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rabbitmq-plugins <span class="built_in">enable</span> prometheus_rabbitmq_exporter</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rabbitmq-plugins <span class="built_in">enable</span> prometheus_process_collector</span></span><br></pre></td></tr></table></figure>

<h3 id="重启rabbitmq服务"><a href="#重启rabbitmq服务" class="headerlink" title="重启rabbitmq服务"></a>重启rabbitmq服务</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl restart rabbitmq-server.service</span></span><br><span class="line">查看已安装插件</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rabbitmq-plugins list</span></span><br></pre></td></tr></table></figure>

<h3 id="查看是否获取数据"><a href="#查看是否获取数据" class="headerlink" title="查看是否获取数据"></a>查看是否获取数据</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">curl http://127.0.0.1:15672/api/metrics</span></span><br></pre></td></tr></table></figure>

<h3 id="prometheus配置"><a href="#prometheus配置" class="headerlink" title="prometheus配置"></a>prometheus配置</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&#x27;rabbitmq&#x27;</span></span><br><span class="line">  <span class="attr">metrics_path:</span> <span class="string">/api/metrics</span></span><br><span class="line">  <span class="attr">static_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">targets:</span> [<span class="string">&#x27;localhost:15672&#x27;</span>]</span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">instance:</span> <span class="string">location</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">targets:</span> [<span class="string">&#x27;172.17.252.104:15672&#x27;</span>]</span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">instance:</span> <span class="string">test</span></span><br></pre></td></tr></table></figure>

<h3 id="grafana配置"><a href="#grafana配置" class="headerlink" title="grafana配置"></a>grafana配置</h3><p><a href="https://pan.wqblogs.com:4443/sharing/lrFYNTcSx">RabbitMQErlangVM.json</a></p>
<p>将上面的dashboar导入后需要做一些修改，加入host变量，并修改各个图表的PromQL加入host变量作为查询条件，通过下拉列表选择查看不同rabbitmq节点的Dashboard 。   </p>
<p>label_values(rabbitmq_node_up, instance)</p>
<p><img src="/image/8i567345231.jpg" alt="8i567345231"></p>
<p>{instance&#x3D;”$instance”}</p>
<p><img src="/image/86235124g1.jpg" alt="86235124g1"></p>
]]></content>
      <categories>
        <category>prometheus</category>
      </categories>
      <tags>
        <tag>prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>监控redis</title>
    <url>/2020/04/09/%E7%9B%91%E6%8E%A7redis/</url>
    <content><![CDATA[<h3 id="下载exporter"><a href="#下载exporter" class="headerlink" title="下载exporter"></a>下载exporter</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker pull oliver006/redis_exporter</span></span><br></pre></td></tr></table></figure>

<h3 id="运行exporter"><a href="#运行exporter" class="headerlink" title="运行exporter"></a>运行exporter</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker run -d -p 9121:9121 --name redis_exporter oliver006/redis_exporter --redis.password=<span class="string">&quot;passwd&quot;</span></span></span><br></pre></td></tr></table></figure>

<p>–redis.addr：指明一个或多个 Redis 节点的地址，多个节点使用逗号分隔，默认为 redis:&#x2F;&#x2F;localhost:6379<br>–redis.password：验证 Redis 时使用的密码；</p>
<h3 id="prometheus配置"><a href="#prometheus配置" class="headerlink" title="prometheus配置"></a>prometheus配置</h3><p>单机配置</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&#x27;redis&#x27;</span></span><br><span class="line">  <span class="attr">scrape_interval:</span> <span class="string">10s</span></span><br><span class="line">  <span class="attr">static_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span></span><br><span class="line">      <span class="bullet">-</span> [<span class="string">&#x27;localhost:9121&#x27;</span>]</span><br></pre></td></tr></table></figure>

<p>集群配置</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">redis_exporter</span></span><br><span class="line">  <span class="attr">static_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis://172.17.252.102:6379</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis://172.17.252.102:6379</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis://172.17.252.103:6379</span></span><br><span class="line">  <span class="attr">metrics_path:</span> <span class="string">/scrape</span></span><br><span class="line">  <span class="attr">relabel_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__address__</span>]</span><br><span class="line">      <span class="attr">target_label:</span> <span class="string">__param_target</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__param_target</span>]</span><br><span class="line">      <span class="attr">target_label:</span> <span class="string">instance</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">target_label:</span> <span class="string">__address__</span></span><br><span class="line">      <span class="attr">replacement:</span> <span class="string">localhost:9121</span></span><br></pre></td></tr></table></figure>

<h3 id="grafana配置"><a href="#grafana配置" class="headerlink" title="grafana配置"></a>grafana配置</h3><p><a href="https://grafana.com/dashboards/763">https://grafana.com/dashboards/763</a></p>
<p><img src="/image/94532054213.jpg" alt="94532054213"></p>
]]></content>
      <categories>
        <category>prometheus</category>
      </categories>
      <tags>
        <tag>prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>禅道源码安装</title>
    <url>/2019/03/23/%E7%A6%85%E9%81%93%E6%BA%90%E7%A0%81%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<p><strong>安装源码包</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget http://dl.cnezsoft.com/zentao/11.3/ZenTaoPMS.11.3.stable.zip</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">unzip ZenTaoPMS.11.3.stable.zip</span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mv</span> zentaopms/ /usr/share/nginx/html/</span></span><br></pre></td></tr></table></figure>

 <span id="more"></span>

<p><strong>创建数据库</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; create database zentao;</span><br><span class="line">mysql&gt; grant all on zentao.*to &#x27;zentao&#x27;@&#x27;localhost&#x27; identified by &#x27;zentao&#x27;;</span><br><span class="line">mysql&gt; flush privileges;</span><br></pre></td></tr></table></figure>


<p><strong>nginx配置文件</strong> zentao.conf</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">   listen 80;</span><br><span class="line">   server_name localhost;</span><br><span class="line">   root  html/zentaopms/www;</span><br><span class="line">   index index.php index.html;</span><br><span class="line">   location ~ \.php$ &#123;</span><br><span class="line">   root   html/zentaopms/www;</span><br><span class="line">   fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">   fastcgi_index  index.php;</span><br><span class="line">   fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;</span><br><span class="line">   include        fastcgi_params;</span><br><span class="line">   &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>安装报错</strong> 14:12:00 ERROR: 您访问的域名 192.168.1.164:88 没有对应的公司。 in &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html&#x2F;zentaopms&#x2F;module&#x2F;common&#x2F;model.php on line 74, last called by &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html&#x2F;zentaopms&#x2F;module&#x2F;common&#x2F;model.php on line 27 through function setCompany. in &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html&#x2F;zentaopms&#x2F;framework&#x2F;base&#x2F;router.class.php on line 2215 when visiting </p>
<p>解决： </p>
<p>1.配置php.ini文件 修改session.save_path实际路径</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">session.save_path = &quot;/usr/share/nginx/html/zentaopms/tmp&quot;</span><br></pre></td></tr></table></figure>


<p>2.删除my.php</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">rm</span> /usr/share/nginx/html/zentaopms/config/my.php</span></span><br></pre></td></tr></table></figure>


<p>3.清空zentao数据库数据，重新安装 </p>
]]></content>
      <categories>
        <category>禅道</category>
      </categories>
      <tags>
        <tag>禅道</tag>
      </tags>
  </entry>
  <entry>
    <title>禅道迁移与升级</title>
    <url>/2018/11/22/%E7%A6%85%E9%81%93%E8%BF%81%E7%A7%BB%E4%B8%8E%E5%8D%87%E7%BA%A7/</url>
    <content><![CDATA[<h2 id="安装禅道"><a href="#安装禅道" class="headerlink" title="安装禅道"></a>安装禅道</h2><p>linux一体包</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget http://dl.cnezsoft.com/zentao/9.8.2/ZenTaoPMS.9.8.2.zbox_64.tar.gz</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">tar xf ZenTaoPMS.9.8.2.zbox_64.tar.gz -C /opt/</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">/opt/zbox/zbox start -ap 6666 -mp 8306  <span class="comment">#自定义端口 -ap httpd端口 -mp mysql端口</span></span></span><br><span class="line">Start Apache success</span><br><span class="line">Start Mysql success</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">/opt/zbox/auth/adduser.sh     <span class="comment">#web数据库的验证账号</span></span></span><br><span class="line">This tool is used to add user to access adminer</span><br><span class="line">Account: root</span><br><span class="line">Password: Adding password for user root</span><br></pre></td></tr></table></figure>
<span id="more"></span>

<p><a href="http://ip:6666/zentao">http://IP:6666/zentao</a></p>
<p>默认用户，密码 admin 123456</p>
<p><img src="/image/15429531701.png"></p>
<h2 id="备份原有数据"><a href="#备份原有数据" class="headerlink" title="备份原有数据"></a>备份原有数据</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cd</span> /opt/zbox/app/zentao/www/data/upload</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">tar -zcf 1.tar.gz ./1</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">mysqldump -P 8306 -h 127.0.0.1 -uroot -p123456 -F --databases zentao |gzip &gt; /tmp/zentao.sql.gz</span></span><br></pre></td></tr></table></figure>


<h2 id="迁移数据"><a href="#迁移数据" class="headerlink" title="迁移数据"></a>迁移数据</h2><p>停止新的禅道</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">/opt/zbox/zbox stop</span></span><br></pre></td></tr></table></figure>


<p>把备份的名为1和名为zentao的文件分别在新的禅道下的所在目录覆盖掉原文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mv</span> /tmp/1 /opt/zbox/app/zentao/www/data/upload</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">/opt/zbox/bin/mysql --host 127.0.0.1 -uroot -P 8306 -p123456 zentao &lt;/tmp/zentao.sql</span></span><br></pre></td></tr></table></figure>


<h2 id="升级最新版本"><a href="#升级最新版本" class="headerlink" title="升级最新版本"></a>升级最新版本</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget http://dl.cnezsoft.com/zentao/10.5.1/ZenTaoPMS.stable.10.5.1.zip</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cd</span> /opt/zbox/app/zentao</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">tar zcf zentao.tar.gz ./*    <span class="comment">#备份</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">unzip /server/tools/ZenTaoPMS.10.5.1.zip</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">\<span class="built_in">cp</span> -rf /server/tools/zentaopms/* ./</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">/opt/zbox/zbox start</span></span><br></pre></td></tr></table></figure>


<p><a href="http://192.168.1.220:6666/zentao/upgrade.php">http://192.168.1.220:6666/zentao/upgrade.php</a></p>
<p><img src="/image/15429531931.png"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">touch</span> /opt/zbox/app/zentao/www/ok.txt</span></span><br></pre></td></tr></table></figure>


<p><img src="/image/15429532191.png"></p>
<p><img src="/image/1569496573-15694965631.png"></p>
<p><img src="/image/15429532351.png"></p>
<p><img src="/image/15429532541.png"></p>
<p><img src="/image/15429532721.png"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">rm</span> -rf install.php  upgrade.php</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>禅道</category>
      </categories>
      <tags>
        <tag>禅道</tag>
      </tags>
  </entry>
  <entry>
    <title>部署Kafka与Kafka-manager</title>
    <url>/2020/01/08/%E9%83%A8%E7%BD%B2Kafka%E4%B8%8EKafka-manager/</url>
    <content><![CDATA[<p>运维主机HDSS7-11.host.com上：</p>
<p><a href="http://kafka.apache.org/">官网</a></p>
<p><a href="https://github.com/apache/kafka">官方github地址</a></p>
<h2 id="安装Kafka"><a href="#安装Kafka" class="headerlink" title="安装Kafka"></a>安装Kafka</h2><h3 id="单节点安装"><a href="#单节点安装" class="headerlink" title="单节点安装"></a>单节点安装</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-11 src]# wget https://archive.apache.org/dist/kafka/2.2.0/kafka_2.12-2.2.0.tgz</span><br><span class="line">[root@hdss7-11 src]# tar xf kafka_2.12-2.2.0.tgz -C /opt/</span><br><span class="line">[root@hdss7-11 src]# ln -s /opt/kafka_2.12-2.2.0/ /opt/kafka</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-11 src]# cd /opt/kafka</span><br><span class="line">[root@hdss7-11 kafka]# mkdir /data/kafka/logs -p</span><br><span class="line">[root@hdss7-11 kafka]# vim config/server.properties</span><br><span class="line">log.dirs=/data/kafka/logs</span><br><span class="line">zookeeper.connect=localhost:2181    # zk消息队列地址 </span><br><span class="line">log.flush.interval.messages=10000</span><br><span class="line">log.flush.interval.ms=1000</span><br><span class="line">delete.topic.enable=true</span><br><span class="line">host.name=hdss7-11.host.com</span><br></pre></td></tr></table></figure>

<h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-11 kafka]# bin/kafka-server-start.sh -daemon config/server.properties</span><br><span class="line">[root@hdss7-11 kafka]# netstat -luntp|grep 9092</span><br><span class="line">tcp6    0   0 10.4.7.11:9092     :::*          LISTEN   34240/java </span><br></pre></td></tr></table></figure>
<h2 id="部署kafka-manager"><a href="#部署kafka-manager" class="headerlink" title="部署kafka-manager"></a>部署kafka-manager</h2><p><a href="https://github.com/yahoo/kafka-manager">官方github地址</a></p>
<h3 id="准备镜像"><a href="#准备镜像" class="headerlink" title="准备镜像"></a>准备镜像</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-200 ~]# docker pull sheepkiller/kafka-manager:latest</span><br><span class="line">[root@hdss7-200 ~]# docker images|grep kafka-manager</span><br><span class="line">sheepkiller/kafka-manager          latest                 4e4a8c5dabab    21 months ago    463MB</span><br><span class="line">[root@hdss7-200 ~]# docker tag 4e4a8c5dabab [harbor.od.com/infra/kafka-manager:latest](http://harbor.od.com/infra/kafka-manager:latest)</span><br><span class="line">[root@hdss7-200 ~]# docker push harbor.od.com/infra/kafka-manager:latest</span><br></pre></td></tr></table></figure>

<h3 id="准备资源配置清单"><a href="#准备资源配置清单" class="headerlink" title="准备资源配置清单"></a>准备资源配置清单</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line">[<span class="string">root@hdss7-200</span> <span class="string">~</span>]<span class="comment"># mkdir /data/k8s-yaml/kafka-manager</span></span><br><span class="line">[<span class="string">root@hdss7-200</span> <span class="string">~</span>]<span class="comment"># cd /data/k8s-yaml/kafka-manager</span></span><br><span class="line">[<span class="string">root@hdss7-200</span> <span class="string">kafka-manager</span>]<span class="comment"># vim deployment.yaml</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kafka-manager</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">infra</span></span><br><span class="line">  <span class="attr">labels:</span> </span><br><span class="line">    <span class="attr">name:</span> <span class="string">kafka-manager</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span> </span><br><span class="line">      <span class="attr">name:</span> <span class="string">kafka-manager</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span> </span><br><span class="line">        <span class="attr">app:</span> <span class="string">kafka-manager</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">kafka-manager</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">kafka-manager</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">harbor.od.com/infra/kafka-manager:latest</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">9000</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">ZK_HOSTS</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">zk1.od.com:2181</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">APPLICATION_SECRET</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">letmein</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">      <span class="attr">imagePullSecrets:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">harbor</span></span><br><span class="line">      <span class="attr">restartPolicy:</span> <span class="string">Always</span></span><br><span class="line">      <span class="attr">terminationGracePeriodSeconds:</span> <span class="number">30</span></span><br><span class="line">      <span class="attr">securityContext:</span> </span><br><span class="line">        <span class="attr">runAsUser:</span> <span class="number">0</span></span><br><span class="line">      <span class="attr">schedulerName:</span> <span class="string">default-scheduler</span></span><br><span class="line">  <span class="attr">strategy:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">RollingUpdate</span></span><br><span class="line">    <span class="attr">rollingUpdate:</span> </span><br><span class="line">      <span class="attr">maxUnavailable:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">maxSurge:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">revisionHistoryLimit:</span> <span class="number">7</span></span><br><span class="line">  <span class="attr">progressDeadlineSeconds:</span> <span class="number">600</span></span><br><span class="line"></span><br><span class="line">[<span class="string">root@hdss7-200</span> <span class="string">kafka-manager</span>]<span class="comment"># vim service.yaml</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span> </span><br><span class="line">  <span class="attr">name:</span> <span class="string">kafka-manager</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">infra</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">9000</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">9000</span></span><br><span class="line">  <span class="attr">selector:</span> </span><br><span class="line">    <span class="attr">app:</span> <span class="string">kafka-manager</span></span><br><span class="line"></span><br><span class="line">[<span class="string">root@hdss7-200</span> <span class="string">kafka-manager</span>]<span class="comment"># vim ingress.yaml</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">metadata:</span> </span><br><span class="line">  <span class="attr">name:</span> <span class="string">kafka-manager</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">infra</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">km.od.com</span></span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">        <span class="attr">backend:</span> </span><br><span class="line">          <span class="attr">serviceName:</span> <span class="string">kafka-manager</span></span><br><span class="line">          <span class="attr">servicePort:</span> <span class="number">9000</span></span><br></pre></td></tr></table></figure>

<h3 id="应用资源配置清单"><a href="#应用资源配置清单" class="headerlink" title="应用资源配置清单"></a>应用资源配置清单</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 ~]# kubectl apply -f http://k8s-yaml.od.com/kafka-manager/deployment.yaml</span><br><span class="line">deployment.extensions/kafka-manager created</span><br><span class="line">[root@hdss7-21 ~]# kubectl apply -f http://k8s-yaml.od.com/kafka-manager/service.yaml</span><br><span class="line">service/kafka-manager created</span><br><span class="line">[root@hdss7-21 ~]# kubectl apply -f http://k8s-yaml.od.com/kafka-manager/ingress.yaml</span><br><span class="line">ingress.extensions/kafka-manager created</span><br></pre></td></tr></table></figure>

<h3 id="添加A记录"><a href="#添加A记录" class="headerlink" title="添加A记录"></a>添加A记录</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-11 ~]# vim /var/named/od.com.zone</span><br><span class="line">km    A 10.4.7.10</span><br><span class="line">[root@hdss7-11 ~]# systemctl restart named</span><br><span class="line">[root@hdss7-11 ~]# dig -t A km.od.com @10.4.7.11 +short</span><br><span class="line">10.4.7.10</span><br></pre></td></tr></table></figure>

<h3 id="web操作"><a href="#web操作" class="headerlink" title="web操作"></a>web操作</h3><p>添加集群</p>
<p><img src="/image/456789875.png"></p>
<p>查看集群信息</p>
<p><img src="/image/09876543234.png"></p>
]]></content>
      <categories>
        <category>Kubernetes</category>
        <category>ELK</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>部署Master节点apiserver服务</title>
    <url>/2019/11/17/%E9%83%A8%E7%BD%B2Master%E8%8A%82%E7%82%B9apiserver%E6%9C%8D%E5%8A%A1/</url>
    <content><![CDATA[<h3 id="部署主机"><a href="#部署主机" class="headerlink" title="部署主机"></a>部署主机</h3><table>
<thead>
<tr>
<th align="left">主机名</th>
<th align="left">角色</th>
<th align="left">ip</th>
</tr>
</thead>
<tbody><tr>
<td align="left">HDSS7-21.host.com</td>
<td align="left">kube-apiserver</td>
<td align="left">10.4.7.21</td>
</tr>
<tr>
<td align="left">HDSS7-22.host.com</td>
<td align="left">kube-apiserver</td>
<td align="left">10.4.7.22</td>
</tr>
<tr>
<td align="left">HDSS7-11.host.com</td>
<td align="left">4层负载均衡</td>
<td align="left">10.4.7.11</td>
</tr>
<tr>
<td align="left">HDSS7-12.host.com</td>
<td align="left">4层负载均衡</td>
<td align="left">10.4.7.12</td>
</tr>
</tbody></table>
 <span id="more"></span>

<p>注意：这里10.4.7.11和10.4.7.12使用nginx做4层负载均衡器，用keepalived跑一个vip：10.4.7.10，代理两个kube-apiserver，实现高可用</p>
<p>这里部署文档以HDSS7-21.host.com主机为例，另外一台运算节点安装部署方法类似</p>
<h3 id="下载Kubernetes二进制"><a href="#下载Kubernetes二进制" class="headerlink" title="下载Kubernetes二进制"></a>下载Kubernetes二进制</h3><p><a href="https://pan.wqblogs.com:4443/sharing/FTHSITwBO">kubernetes文件链接</a> 密码: wqblogs.com</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 src]# wget https://dl.k8s.io/v1.15.2/kubernetes-server-linux-amd64.tar.gz  # 下载需要翻墙</span><br><span class="line">[root@hdss7-21 src]# tar xf kubernetes-server-linux-amd64-v1.15.2.tar.gz -C /opt</span><br><span class="line">[root@hdss7-21 src]# cd /opt/</span><br><span class="line">[root@hdss7-21 opt]# mv kubernetes/ kubernetes-v1.15.2</span><br><span class="line">[root@hdss7-21 opt]# ln -s /opt/kubernetes-v1.15.2/ /opt/kubernetes</span><br><span class="line">删除无用的文件</span><br><span class="line">[root@hdss7-21 opt]# cd kubernetes</span><br><span class="line">[root@hdss7-21 kubernetes]# rm -rf kubernetes-src.tar.gz</span><br><span class="line">[root@hdss7-21 kubernetes]# cd server/bin/</span><br><span class="line">[root@hdss7-21 bin]# rm -rf *.tar *_tag</span><br></pre></td></tr></table></figure>


<h3 id="签发证书"><a href="#签发证书" class="headerlink" title="签发证书"></a>签发证书</h3><h4 id="签发client证书，apiserver与etcd通信"><a href="#签发client证书，apiserver与etcd通信" class="headerlink" title="签发client证书，apiserver与etcd通信"></a>签发client证书，apiserver与etcd通信</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-200 certs]# vim /opt/certs/client-csr.json</span><br><span class="line">&#123;</span><br><span class="line">    &quot;CN&quot;: &quot;k8s-node&quot;,</span><br><span class="line">    &quot;hosts&quot;: [</span><br><span class="line">    ],</span><br><span class="line">    &quot;key&quot;: &#123;</span><br><span class="line">        &quot;algo&quot;: &quot;rsa&quot;,</span><br><span class="line">        &quot;size&quot;: 2048</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;names&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;C&quot;: &quot;CN&quot;,</span><br><span class="line">            &quot;ST&quot;: &quot;beijing&quot;,</span><br><span class="line">            &quot;L&quot;: &quot;beijing&quot;,</span><br><span class="line">            &quot;O&quot;: &quot;od&quot;,</span><br><span class="line">            &quot;OU&quot;: &quot;ops&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">[root@hdss7-200 certs]# cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client client-csr.json | cfssl-json -bare client</span><br><span class="line">2019/11/16 21:48:26 [INFO] generate received request</span><br><span class="line">2019/11/16 21:48:26 [INFO] received CSR</span><br><span class="line">2019/11/16 21:48:26 [INFO] generating key: rsa-2048</span><br><span class="line">2019/11/16 21:48:27 [INFO] encoded CSR</span><br><span class="line">2019/11/16 21:48:27 [INFO] signed certificate with serial number 271884178687705202555888659350508674745516785213</span><br><span class="line">2019/11/16 21:48:27 [WARNING] This certificate lacks a &quot;hosts&quot; field. This makes it unsuitable for</span><br><span class="line">websites. For more information see the Baseline Requirements for the Issuance and Management</span><br><span class="line">of Publicly-Trusted Certificates, v.1.1.6, from the CA/Browser Forum (https://cabforum.org);</span><br><span class="line">specifically, section 10.2.3 (&quot;Information Requirements&quot;).</span><br></pre></td></tr></table></figure>


<h4 id="签发apiserver证书"><a href="#签发apiserver证书" class="headerlink" title="签发apiserver证书"></a>签发apiserver证书</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-200 certs]# vim apiserver-csr.json</span><br><span class="line">&#123;</span><br><span class="line">    &quot;CN&quot;: &quot;apiserver&quot;,</span><br><span class="line">    &quot;hosts&quot;: [</span><br><span class="line">        &quot;127.0.0.1&quot;,</span><br><span class="line">        &quot;192.168.0.1&quot;,</span><br><span class="line">        &quot;kubernetes.default&quot;,</span><br><span class="line">        &quot;kubernetes.default.svc&quot;,</span><br><span class="line">        &quot;kubernetes.default.svc.cluster&quot;,</span><br><span class="line">        &quot;kubernetes.default.svc.cluster.local&quot;,</span><br><span class="line">        &quot;10.4.7.10&quot;,</span><br><span class="line">        &quot;10.4.7.21&quot;,</span><br><span class="line">        &quot;10.4.7.22&quot;,</span><br><span class="line">        &quot;10.4.7.23&quot;</span><br><span class="line">    ],</span><br><span class="line">    &quot;key&quot;: &#123;</span><br><span class="line">        &quot;algo&quot;: &quot;rsa&quot;,</span><br><span class="line">        &quot;size&quot;: 2048</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;names&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;C&quot;: &quot;CN&quot;,</span><br><span class="line">            &quot;ST&quot;: &quot;beijing&quot;,</span><br><span class="line">            &quot;L&quot;: &quot;beijing&quot;,</span><br><span class="line">            &quot;O&quot;: &quot;od&quot;,</span><br><span class="line">            &quot;OU&quot;: &quot;ops&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">[root@hdss7-200 certs]# cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server apiserver-csr.json | cfssl-json -bare apiserver</span><br><span class="line">2019/11/16 21:52:51 [INFO] generate received request</span><br><span class="line">2019/11/16 21:52:51 [INFO] received CSR</span><br><span class="line">2019/11/16 21:52:51 [INFO] generating key: rsa-2048</span><br><span class="line">2019/11/16 21:52:51 [INFO] encoded CSR</span><br><span class="line">2019/11/16 21:52:51 [INFO] signed certificate with serial number 99569796452580349732633293618642541656287162172</span><br><span class="line">2019/11/16 21:52:51 [WARNING] This certificate lacks a &quot;hosts&quot; field. This makes it unsuitable for</span><br><span class="line">websites. For more information see the Baseline Requirements for the Issuance and Management</span><br><span class="line">of Publicly-Trusted Certificates, v.1.1.6, from the CA/Browser Forum (https://cabforum.org);</span><br><span class="line">specifically, section 10.2.3 (&quot;Information Requirements&quot;).</span><br></pre></td></tr></table></figure>


<h4 id="拷贝证书"><a href="#拷贝证书" class="headerlink" title="拷贝证书"></a>拷贝证书</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 bin]# mkdir cert</span><br><span class="line">[root@hdss7-21 bin]# scp hdss7-200:/opt/certs/ca.pem ./cert/</span><br><span class="line">root@hdss7-200&#x27;s password:</span><br><span class="line">ca.pem                      100% 1354   188.4KB/s   00:00    </span><br><span class="line">[root@hdss7-21 bin]# scp hdss7-200:/opt/certs/ca-key.pem ./cert/</span><br><span class="line">root@hdss7-200&#x27;s password:</span><br><span class="line">ca-key.pem                  100% 1675   320.8KB/s   00:00    </span><br><span class="line">[root@hdss7-21 bin]# scp hdss7-200:/opt/certs/client.pem ./cert/</span><br><span class="line">root@hdss7-200&#x27;s password:</span><br><span class="line">client.pem                  100% 1371   168.7KB/s   00:00    </span><br><span class="line">[root@hdss7-21 bin]# scp hdss7-200:/opt/certs/client-key.pem ./cert/</span><br><span class="line">root@hdss7-200&#x27;s password:</span><br><span class="line">client-key.pem              100% 1675   319.3KB/s   00:00    </span><br><span class="line">[root@hdss7-21 bin]# scp hdss7-200:/opt/certs/apiserver.pem ./cert/</span><br><span class="line">root@hdss7-200&#x27;s password:</span><br><span class="line">apiserver.pem               100% 1598   240.3KB/s   00:00    </span><br><span class="line">[root@hdss7-21 bin]# scp hdss7-200:/opt/certs/apiserver-key.pem ./cert/</span><br><span class="line">root@hdss7-200&#x27;s password:</span><br><span class="line">apiserver-key.pem           100% 1675   246.4KB/s   00:00    </span><br><span class="line">[root@hdss7-21 bin]# ll cert/</span><br><span class="line">total 24</span><br><span class="line">-rw------- 1 root root 1675 Nov 16 21:57 apiserver-key.pem</span><br><span class="line">-rw-r--r-- 1 root root 1598 Nov 16 21:57 apiserver.pem</span><br><span class="line">-rw------- 1 root root 1675 Nov 16 21:57 ca-key.pem</span><br><span class="line">-rw-r--r-- 1 root root 1354 Nov 16 21:57 ca.pem</span><br><span class="line">-rw------- 1 root root 1675 Nov 16 21:57 client-key.pem</span><br><span class="line">-rw-r--r-- 1 root root 1371 Nov 16 21:57 client.pem</span><br></pre></td></tr></table></figure>


<h3 id="创建配置"><a href="#创建配置" class="headerlink" title="创建配置"></a>创建配置</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 bin]# mkdir conf</span><br><span class="line">[root@hdss7-21 conf]# vim audit.yaml     # k8s资源配置清单，专门给k8s做日志审计</span><br><span class="line">apiVersion: audit.k8s.io/v1beta1 # This is required.</span><br><span class="line">kind: Policy</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Don<span class="string">&#x27;t generate audit events for all requests in RequestReceived stage.</span></span></span><br><span class="line">omitStages:</span><br><span class="line">  - &quot;RequestReceived&quot;</span><br><span class="line">rules:</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash"><span class="string">Log pod changes at RequestResponse level</span></span></span><br><span class="line">  - level: RequestResponse</span><br><span class="line">    resources:</span><br><span class="line">    - group: &quot;&quot;</span><br><span class="line">      # Resource &quot;pods&quot; doesn&#x27;t match requests to any subresource of pods,</span><br><span class="line">      # which is consistent with the RBAC policy.</span><br><span class="line">      resources: [&quot;pods&quot;]</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash"><span class="string">Log &quot;pods/log&quot;, &quot;pods/status&quot; at Metadata level</span></span></span><br><span class="line">  - level: Metadata</span><br><span class="line">    resources:</span><br><span class="line">    - group: &quot;&quot;</span><br><span class="line">      resources: [&quot;pods/log&quot;, &quot;pods/status&quot;]</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash"><span class="string">Don&#x27;</span>t <span class="built_in">log</span> requests to a configmap called <span class="string">&quot;controller-leader&quot;</span></span></span><br><span class="line">  - level: None</span><br><span class="line">    resources:</span><br><span class="line">    - group: &quot;&quot;</span><br><span class="line">      resources: [&quot;configmaps&quot;]</span><br><span class="line">      resourceNames: [&quot;controller-leader&quot;]</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">Don<span class="string">&#x27;t log watch requests by the &quot;system:kube-proxy&quot; on endpoints or services</span></span></span><br><span class="line">  - level: None</span><br><span class="line">    users: [&quot;system:kube-proxy&quot;]</span><br><span class="line">    verbs: [&quot;watch&quot;]</span><br><span class="line">    resources:</span><br><span class="line">    - group: &quot;&quot; # core API group</span><br><span class="line">      resources: [&quot;endpoints&quot;, &quot;services&quot;]</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash"><span class="string">Don&#x27;</span>t <span class="built_in">log</span> authenticated requests to certain non-resource URL paths.</span></span><br><span class="line">  - level: None</span><br><span class="line">    userGroups: [&quot;system:authenticated&quot;]</span><br><span class="line">    nonResourceURLs:</span><br><span class="line">    - &quot;/api*&quot; # Wildcard matching.</span><br><span class="line">    - &quot;/version&quot;</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">Log the request body of configmap changes <span class="keyword">in</span> kube-system.</span></span><br><span class="line">  - level: Request</span><br><span class="line">    resources:</span><br><span class="line">    - group: &quot;&quot; # core API group</span><br><span class="line">      resources: [&quot;configmaps&quot;]</span><br><span class="line">    # This rule only applies to resources in the &quot;kube-system&quot; namespace.</span><br><span class="line">    # The empty string &quot;&quot; can be used to select non-namespaced resources.</span><br><span class="line">    namespaces: [&quot;kube-system&quot;]</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">Log configmap and secret changes <span class="keyword">in</span> all other namespaces at the Metadata level.</span></span><br><span class="line">  - level: Metadata</span><br><span class="line">    resources:</span><br><span class="line">    - group: &quot;&quot; # core API group</span><br><span class="line">      resources: [&quot;secrets&quot;, &quot;configmaps&quot;]</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">Log all other resources <span class="keyword">in</span> core and extensions at the Request level.</span></span><br><span class="line">  - level: Request</span><br><span class="line">    resources:</span><br><span class="line">    - group: &quot;&quot; # core API group</span><br><span class="line">    - group: &quot;extensions&quot; # Version of group should NOT be included.</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">A catch-all rule to <span class="built_in">log</span> all other requests at the Metadata level.</span></span><br><span class="line">  - level: Metadata</span><br><span class="line">    # Long-running requests like watches that fall under this rule will not</span><br><span class="line">    # generate an audit event in RequestReceived.</span><br><span class="line">    omitStages:</span><br><span class="line">      - &quot;RequestReceived&quot;</span><br></pre></td></tr></table></figure>


<h3 id="创建启动脚本"><a href="#创建启动脚本" class="headerlink" title="创建启动脚本"></a>创建启动脚本</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 bin]# vim kube-apiserver.sh</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">./kube-apiserver \</span><br><span class="line">  --apiserver-count 2 \</span><br><span class="line">  --audit-log-path /data/logs/kubernetes/kube-apiserver/audit-log \</span><br><span class="line">  --audit-policy-file ./conf/audit.yaml \</span><br><span class="line">  --authorization-mode RBAC \</span><br><span class="line">  --client-ca-file ./cert/ca.pem \</span><br><span class="line">  --requestheader-client-ca-file ./cert/ca.pem \</span><br><span class="line">  --enable-admission-plugins NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota \</span><br><span class="line">  --etcd-cafile ./cert/ca.pem \</span><br><span class="line">  --etcd-certfile ./cert/client.pem \</span><br><span class="line">  --etcd-keyfile ./cert/client-key.pem \</span><br><span class="line">  --etcd-servers https://10.4.7.12:2379,https://10.4.7.21:2379,https://10.4.7.22:2379 \</span><br><span class="line">  --service-account-key-file ./cert/ca-key.pem \</span><br><span class="line">  --service-cluster-ip-range 192.168.0.0/16 \</span><br><span class="line">  --service-node-port-range 3000-29999 \</span><br><span class="line">  --target-ram-mb=1024 \</span><br><span class="line">  --kubelet-client-certificate ./cert/client.pem \</span><br><span class="line">  --kubelet-client-key ./cert/client-key.pem \</span><br><span class="line">  --log-dir  /data/logs/kubernetes/kube-apiserver \</span><br><span class="line">  --tls-cert-file ./cert/apiserver.pem \</span><br><span class="line">  --tls-private-key-file ./cert/apiserver-key.pem \</span><br><span class="line">  --v 2</span><br><span class="line">[root@hdss7-21 bin]# chmod +x kube-apiserver.sh</span><br></pre></td></tr></table></figure>


<h3 id="创建supervisor配置"><a href="#创建supervisor配置" class="headerlink" title="创建supervisor配置"></a>创建supervisor配置</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 bin]# vim /etc/supervisord.d/kube-apiserver.ini</span><br><span class="line">[program:kube-apiserver-7-21]</span><br><span class="line">command=/opt/kubernetes/server/bin/kube-apiserver.sh    ; the program (relative uses PATH, can take args)</span><br><span class="line">numprocs=1                            ; number of processes copies to start (def 1)</span><br><span class="line">directory=/opt/kubernetes/server/bin  ; directory to cwd to before exec (def no cwd)</span><br><span class="line">autostart=true                        ; start at supervisord start (default: true)</span><br><span class="line">autorestart=true                      ; retstart at unexpected quit (default: true)</span><br><span class="line">startsecs=22                          ; number of secs prog must stay running (def. 1)</span><br><span class="line">startretries=3                        ; max # of serial start failures (default 3)</span><br><span class="line">exitcodes=0,2                         ; &#x27;expected&#x27; exit codes for process (default 0,2)</span><br><span class="line">stopsignal=QUIT                       ; signal used to kill process (default TERM)</span><br><span class="line">stopwaitsecs=10                       ; max num secs to wait b4 SIGKILL (default 10)</span><br><span class="line">user=root                             ; setuid to this UNIX account to run the program</span><br><span class="line">redirect_stderr=false                 ; redirect proc stderr to stdout (default false)</span><br><span class="line">stdout_logfile=/data/logs/kubernetes/kube-apiserver/apiserver.stdout.log   ; stdout log path, NONE for none; default AUTO</span><br><span class="line">stdout_logfile_maxbytes=64MB          ; max # logfile bytes b4 rotation (default 50MB)</span><br><span class="line">stdout_logfile_backups=4              ; # of stdout logfile backups (default 10)</span><br><span class="line">stdout_capture_maxbytes=1MB           ; number of bytes in &#x27;capturemode&#x27; (default 0)</span><br><span class="line">stdout_events_enabled=false           ; emit events on stdout writes (default false)</span><br><span class="line">stderr_logfile=/data/logs/kubernetes/kube-apiserver/apiserver.stderr.log   ; stderr log path, NONE for none; default AUTO</span><br><span class="line">stderr_logfile_maxbytes=64MB          ; max # logfile bytes b4 rotation (default 50MB)</span><br><span class="line">stderr_logfile_backups=4              ; # of stderr logfile backups (default 10)</span><br><span class="line">stderr_capture_maxbytes=1MB           ; number of bytes in &#x27;capturemode&#x27; (default 0)</span><br><span class="line">stderr_events_enabled=false           ; emit events on stderr writes (default false)</span><br><span class="line">stopasgroup=true                      ;默认为false,进程被杀死时，是否向这个进程组发送stop信号，包括子进程</span><br><span class="line">killasgroup=true                      ;默认为false，向进程组发送kill信号，包括子进程</span><br></pre></td></tr></table></figure>


<h3 id="启动apiserver"><a href="#启动apiserver" class="headerlink" title="启动apiserver"></a>启动apiserver</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 bin]# supervisorctl update</span><br><span class="line">kube-apiserver-7-21: added process group</span><br><span class="line">[root@hdss7-21 bin]# supervisorctl status</span><br><span class="line">etcd-server-7-21                 RUNNING   pid 13771, uptime 1:48:15</span><br><span class="line">kube-apiserver-7-21           RUNNING   pid 13930, uptime 0:00:34</span><br><span class="line">[root@hdss7-21 bin]# netstat -luntp|grep kube-api      </span><br><span class="line">tcp        0      0 127.0.0.1:8080          0.0.0.0:*               LISTEN      13931/./kube-apiser</span><br><span class="line">tcp6       0      0 :::6443                 :::*                    LISTEN      13931/./kube-apiser</span><br></pre></td></tr></table></figure>


<h3 id="配置4层反向代理"><a href="#配置4层反向代理" class="headerlink" title="配置4层反向代理"></a>配置4层反向代理</h3><h4 id="部署nginx"><a href="#部署nginx" class="headerlink" title="部署nginx"></a>部署nginx</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-11 ~]# yum install -y nginx</span><br><span class="line">[root@hdss7-11 ~]# vim /etc/nginx/nginx.conf</span><br><span class="line">stream &#123;    # 与http同级，追加至最后</span><br><span class="line">    upstream kube-apiserver &#123;</span><br><span class="line">        server 10.4.7.21:6443     max_fails=3 fail_timeout=30s;</span><br><span class="line">        server 10.4.7.22:6443     max_fails=3 fail_timeout=30s;</span><br><span class="line">    &#125;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen 7443;</span><br><span class="line">        proxy_connect_timeout 2s;</span><br><span class="line">        proxy_timeout 900s;</span><br><span class="line">        proxy_pass kube-apiserver;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@hdss7-11 ~]# systemctl start nginx</span><br><span class="line">[root@hdss7-11 ~]# systemctl enable nginx</span><br></pre></td></tr></table></figure>


<h4 id="配置keepalive"><a href="#配置keepalive" class="headerlink" title="配置keepalive"></a>配置keepalive</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-11 ~]# yum install -y keepalived</span><br></pre></td></tr></table></figure>


<h5 id="keepalived-监控端口脚本"><a href="#keepalived-监控端口脚本" class="headerlink" title="keepalived 监控端口脚本"></a>keepalived 监控端口脚本</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-11 ~]# vim /etc/keepalived/check_port.sh</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">使用方法：</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">在keepalived的配置文件中</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">vrrp_script check_port &#123;<span class="comment">#创建一个vrrp_script脚本,检查配置</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">    script <span class="string">&quot;/etc/keepalived/check_port.sh 6379&quot;</span> <span class="comment">#配置监听的端口</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">    interval 2 <span class="comment">#检查脚本的频率,单位（秒）</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">&#125;</span></span><br><span class="line">CHK_PORT=$1</span><br><span class="line">if [ -n &quot;$CHK_PORT&quot; ];then</span><br><span class="line">        PORT_PROCESS=`ss -lnt|grep $CHK_PORT|wc -l`</span><br><span class="line">        if [ $PORT_PROCESS -eq 0 ];then</span><br><span class="line">                echo &quot;Port $CHK_PORT Is Not Used,End.&quot;</span><br><span class="line">                exit 1</span><br><span class="line">        fi</span><br><span class="line">else</span><br><span class="line">        echo &quot;Check Port Cant Be Empty!&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>


<h5 id="keepalived主"><a href="#keepalived主" class="headerlink" title="keepalived主"></a>keepalived主</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-11 ~]# vim /etc/keepalived/keepalived.conf</span><br><span class="line">! Configuration File for keepalived</span><br><span class="line">global_defs &#123;</span><br><span class="line">   router_id 10.4.7.11</span><br><span class="line">&#125;</span><br><span class="line">vrrp_script chk_nginx &#123;</span><br><span class="line">    script &quot;/etc/keepalived/check_port.sh 7443&quot;</span><br><span class="line">    interval 2</span><br><span class="line">    weight -20</span><br><span class="line">&#125;</span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 251</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    mcast_src_ip 10.4.7.11</span><br><span class="line">    nopreempt    # 非抢占机制，重启主备keepalived，vip会回到主</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 11111111</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">         chk_nginx</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.4.7.10</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h5 id="keepalived备"><a href="#keepalived备" class="headerlink" title="keepalived备"></a>keepalived备</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-12 etcd]# vim /etc/keepalived/keepalived.conf</span><br><span class="line">! Configuration File for keepalived</span><br><span class="line">global_defs &#123;</span><br><span class="line">     router_id 10.4.7.12</span><br><span class="line">&#125;</span><br><span class="line">vrrp_script chk_nginx &#123;</span><br><span class="line">script &quot;/etc/keepalived/check_port.sh 7443&quot;</span><br><span class="line">interval 2</span><br><span class="line">  weight -20</span><br><span class="line">&#125;</span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">     state BACKUP</span><br><span class="line">        interface eth0</span><br><span class="line">      virtual_router_id 251</span><br><span class="line">       mcast_src_ip 10.4.7.12</span><br><span class="line">      priority 90</span><br><span class="line">advert_int 1</span><br><span class="line">        authentication &#123;</span><br><span class="line">            auth_type PASS</span><br><span class="line">              auth_pass 11111111</span><br><span class="line">  &#125;</span><br><span class="line">   track_script &#123;</span><br><span class="line">              chk_nginx</span><br><span class="line">   &#125;</span><br><span class="line">   virtual_ipaddress &#123;</span><br><span class="line">         10.4.7.10</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h5 id="启动keepalived"><a href="#启动keepalived" class="headerlink" title="启动keepalived"></a>启动keepalived</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-11 ~]# systemctl start keepalived</span><br><span class="line">[root@hdss7-11 ~]# systemctl enable keepalived</span><br><span class="line">[root@hdss7-11 ~]# nginx -s reload</span><br><span class="line">[root@hdss7-11 ~]# ip add</span><br><span class="line">2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP group default qlen 1000</span><br><span class="line">    link/ether 00:15:5d:32:c5:01 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 10.4.7.11/24 brd 10.4.7.255 scope global noprefixroute eth0</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet 10.4.7.10/32 scope global eth0</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
  </entry>
  <entry>
    <title>部署Master节点etcd服务</title>
    <url>/2019/11/17/%E9%83%A8%E7%BD%B2Master%E8%8A%82%E7%82%B9etcd%E6%9C%8D%E5%8A%A1/</url>
    <content><![CDATA[<h2 id="部署主机"><a href="#部署主机" class="headerlink" title="部署主机"></a>部署主机</h2><table>
<thead>
<tr>
<th align="left">主机名</th>
<th align="left">角色</th>
<th align="left">ip</th>
</tr>
</thead>
<tbody><tr>
<td align="left">HDSS7-12.host.com</td>
<td align="left">etcd lead</td>
<td align="left">10.4.7.12</td>
</tr>
<tr>
<td align="left">HDSS7-21.host.com</td>
<td align="left">etcd follow</td>
<td align="left">10.4.7.21</td>
</tr>
<tr>
<td align="left">HDSS7-22.host.com</td>
<td align="left">etcd follow</td>
<td align="left">10.4.7.22</td>
</tr>
</tbody></table>
<p>注意：这里部署文档以HDSS7-12.host.com主机为例，另外两台主机安装部署方法类似</p>
 <span id="more"></span>

<h2 id="签发证书"><a href="#签发证书" class="headerlink" title="签发证书"></a>签发证书</h2><h3 id="创建CA配置文件"><a href="#创建CA配置文件" class="headerlink" title="创建CA配置文件"></a>创建CA配置文件</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-200 ~]# cd /opt/certs/</span><br><span class="line">[root@hdss7-200 certs]# vim ca-config.json</span><br><span class="line">&#123;</span><br><span class="line">    &quot;signing&quot;: &#123;</span><br><span class="line">        &quot;default&quot;: &#123;</span><br><span class="line">            &quot;expiry&quot;: &quot;175200h&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;profiles&quot;: &#123;</span><br><span class="line">            &quot;server&quot;: &#123;</span><br><span class="line">                &quot;expiry&quot;: &quot;175200h&quot;,</span><br><span class="line">                &quot;usages&quot;: [</span><br><span class="line">                    &quot;signing&quot;,</span><br><span class="line">                    &quot;key encipherment&quot;,</span><br><span class="line">                    &quot;server auth&quot;</span><br><span class="line">                ]</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;client&quot;: &#123;</span><br><span class="line">                &quot;expiry&quot;: &quot;175200h&quot;,</span><br><span class="line">                &quot;usages&quot;: [</span><br><span class="line">                    &quot;signing&quot;,</span><br><span class="line">                    &quot;key encipherment&quot;,</span><br><span class="line">                    &quot;client auth&quot;</span><br><span class="line">                ]</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;peer&quot;: &#123;</span><br><span class="line">                &quot;expiry&quot;: &quot;175200h&quot;,</span><br><span class="line">                &quot;usages&quot;: [</span><br><span class="line">                    &quot;signing&quot;,</span><br><span class="line">                    &quot;key encipherment&quot;,</span><br><span class="line">                    &quot;server auth&quot;,</span><br><span class="line">                    &quot;client auth&quot;</span><br><span class="line">                ]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>证书类型</p>
<p>client certificate： 客户端使用，用于服务端认证客户端,例如etcdctl、etcd proxy、fleetctl、docker客户端</p>
<p>server certificate: 服务端使用，客户端以此验证服务端身份,例如docker服务端、kube-apiserver</p>
<p>peer certificate: 双向证书，用于etcd集群成员间通信</p>
<h3 id="签发etcd证书"><a href="#签发etcd证书" class="headerlink" title="签发etcd证书"></a>签发etcd证书</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-200 certs]# vim etcd-peer-csr.json</span><br><span class="line">&#123;</span><br><span class="line">    &quot;CN&quot;: &quot;k8s-etcd&quot;,</span><br><span class="line">    &quot;hosts&quot;: [</span><br><span class="line">        &quot;10.4.7.11&quot;,</span><br><span class="line">        &quot;10.4.7.12&quot;,</span><br><span class="line">        &quot;10.4.7.21&quot;,</span><br><span class="line">        &quot;10.4.7.22&quot;</span><br><span class="line">    ],</span><br><span class="line">    &quot;key&quot;: &#123;</span><br><span class="line">        &quot;algo&quot;: &quot;rsa&quot;,</span><br><span class="line">        &quot;size&quot;: 2048</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;names&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;C&quot;: &quot;CN&quot;,</span><br><span class="line">            &quot;ST&quot;: &quot;beijing&quot;,</span><br><span class="line">            &quot;L&quot;: &quot;beijing&quot;,</span><br><span class="line">            &quot;O&quot;: &quot;od&quot;,</span><br><span class="line">            &quot;OU&quot;: &quot;ops&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">[root@hdss7-200 certs]# cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=peer etcd-peer-csr.json | cfssl-json -bare etcd-peer</span><br><span class="line">2019/11/15 16:46:10 [INFO] generate received request</span><br><span class="line">2019/11/15 16:46:10 [INFO] received CSR</span><br><span class="line">2019/11/15 16:46:10 [INFO] generating key: rsa-2048</span><br><span class="line">2019/11/15 16:46:11 [INFO] encoded CSR</span><br><span class="line">2019/11/15 16:46:11 [INFO] signed certificate with serial number 463883028620410864020469328012624187756573177871</span><br><span class="line">2019/11/15 16:46:11 [WARNING] This certificate lacks a &quot;hosts&quot; field. This makes it unsuitable for</span><br><span class="line">websites. For more information see the Baseline Requirements for the Issuance and Management</span><br><span class="line">of Publicly-Trusted Certificates, v.1.1.6, from the CA/Browser Forum (https://cabforum.org);</span><br><span class="line">specifically, section 10.2.3 (&quot;Information Requirements&quot;).</span><br><span class="line">[root@hdss7-200 certs]# ll etcd*</span><br><span class="line">-rw-r--r-- 1 root root  363 Nov 15 16:44 etcd-peer-csr.json</span><br><span class="line">-rw------- 1 root root 1675 Nov 15 16:46 etcd-peer-key.pem</span><br><span class="line">-rw-r--r-- 1 root root 1062 Nov 15 16:46 etcd-peer.csr</span><br><span class="line">-rw-r--r-- 1 root root 1432 Nov 15 16:46 etcd-peer.pem</span><br></pre></td></tr></table></figure>

<h2 id="部署etcd"><a href="#部署etcd" class="headerlink" title="部署etcd"></a>部署etcd</h2><h3 id="创建etcd用户"><a href="#创建etcd用户" class="headerlink" title="创建etcd用户"></a>创建etcd用户</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-12 ~]# mkdir /opt/src</span><br><span class="line">[root@hdss7-12 ~]# cd /opt/src</span><br><span class="line">[root@hdss7-12 src]# useradd -s /sbin/nologin -M etcd</span><br></pre></td></tr></table></figure>

<h3 id="安装etcd"><a href="#安装etcd" class="headerlink" title="安装etcd"></a>安装etcd</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-12 src]#  wget https://github.com/etcd-io/etcd/releases/download/v3.1.20/etcd-v3.1.20-linux-amd64.tar.gz</span><br><span class="line">[root@hdss7-12 src]# tar xf etcd-v3.1.20-linux-amd64.tar.gz -C /opt</span><br><span class="line">[root@hdss7-12 src]# cd /opt/</span><br><span class="line">[root@hdss7-12 opt]# mv etcd-v3.1.20-linux-amd64/ etcd-v3.1.20</span><br><span class="line">[root@hdss7-12 opt]# ln -s /opt/etcd-v3.1.20/ /opt/etcd</span><br></pre></td></tr></table></figure>

<h3 id="拷贝证书"><a href="#拷贝证书" class="headerlink" title="拷贝证书"></a>拷贝证书</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-12 opt]# mkdir -p /data/etcd /data/logs/etcd-server /opt/etcd/certs</span><br><span class="line">[root@hdss7-12 opt]# cd /opt/etcd/certs</span><br><span class="line">[root@hdss7-12 certs]# scp hdss7-200:/opt/certs/ca.pem .</span><br><span class="line">root@hdss7-200&#x27;s password:</span><br><span class="line">ca.pem                      100% 1354   293.1KB/s   00:00    </span><br><span class="line">[root@hdss7-12 certs]# scp hdss7-200:/opt/certs/etcd-peer.pem .</span><br><span class="line">root@hdss7-200&#x27;s password:</span><br><span class="line">etcd-peer.pem               100% 1432   160.0KB/s   00:00    </span><br><span class="line">[root@hdss7-12 certs]# scp hdss7-200:/opt/certs/etcd-peer-key.pem .</span><br><span class="line">root@hdss7-200&#x27;s password:</span><br><span class="line">etcd-peer-key.pem           100% 1675    23.3KB/s   00:00</span><br></pre></td></tr></table></figure>

<h3 id="创建etcd服务启动脚本"><a href="#创建etcd服务启动脚本" class="headerlink" title="创建etcd服务启动脚本"></a>创建etcd服务启动脚本</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-12 etcd]# vim etcd-server-startup.sh</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">./etcd --name etcd-server-7-12 \        # 根据主机改变</span><br><span class="line">       --data-dir /data/etcd/etcd-server \</span><br><span class="line">       --listen-peer-urls https://10.4.7.12:2380 \</span><br><span class="line">       --listen-client-urls https://10.4.7.12:2379,http://127.0.0.1:2379 \</span><br><span class="line">       --quota-backend-bytes 8000000000 \</span><br><span class="line">       --initial-advertise-peer-urls https://10.4.7.12:2380 \</span><br><span class="line">       --advertise-client-urls https://10.4.7.12:2379,http://127.0.0.1:2379 \</span><br><span class="line">       --initial-cluster  etcd-server-7-12=https://10.4.7.12:2380,etcd-server-7-21=https://10.4.7.21:2380,etcd-server-7-22=https://10.4.7.22:2380 \</span><br><span class="line">       --ca-file ./certs/ca.pem \</span><br><span class="line">       --cert-file ./certs/etcd-peer.pem \</span><br><span class="line">       --key-file ./certs/etcd-peer-key.pem \</span><br><span class="line">       --client-cert-auth  \</span><br><span class="line">       --trusted-ca-file ./certs/ca.pem \</span><br><span class="line">       --peer-ca-file ./certs/ca.pem \</span><br><span class="line">       --peer-cert-file ./certs/etcd-peer.pem \</span><br><span class="line">       --peer-key-file ./certs/etcd-peer-key.pem \</span><br><span class="line">       --peer-client-cert-auth \</span><br><span class="line">       --peer-trusted-ca-file ./certs/ca.pem \</span><br><span class="line">       --log-output stdout</span><br></pre></td></tr></table></figure>

<h3 id="授权及创建日志目录"><a href="#授权及创建日志目录" class="headerlink" title="授权及创建日志目录"></a>授权及创建日志目录</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-12 etcd]# chmod +x etcd-server-startup.sh</span><br><span class="line">[root@hdss7-12 etcd]# chown -R etcd.etcd /opt/etcd-v3.1.20/</span><br><span class="line">[root@hdss7-12 etcd]# chown -R etcd.etcd /data/etcd /data/logs/etcd-server/</span><br></pre></td></tr></table></figure>

<h3 id="安装supervisor软件"><a href="#安装supervisor软件" class="headerlink" title="安装supervisor软件"></a>安装supervisor软件</h3><p><a href="http://supervisord.org/introduction.html#overview">Supervisor</a>是用Python开发的一个client&#x2F;server服务，是Linux&#x2F;Unix系统下的一个进程管理工具，不支持Windows系统。它可以很方便的监听、启动、停止、重启一个或多个进程。用Supervisor管理的进程，当一个进程意外被杀死，supervisort监听到进程死后，会自动将它重新拉起，很方便的做到进程自动恢复的功能，不再需要自己写shell脚本来控制</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-12 etcd]# yum install -y supervisor</span><br><span class="line">[root@hdss7-12 etcd]# systemctl start supervisord</span><br><span class="line">[root@hdss7-12 etcd]# systemctl enable supervisord</span><br></pre></td></tr></table></figure>

<h3 id="创建etcd-server启动配置"><a href="#创建etcd-server启动配置" class="headerlink" title="创建etcd-server启动配置"></a>创建etcd-server启动配置</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-12 etcd]# vim /etc/supervisord.d/etcd-server.ini</span><br><span class="line">[program:etcd-server-7-12]                  ; 根据主机改变</span><br><span class="line">command=/opt/etcd/etcd-server-startup.sh    ; the program (relative uses PATH, can take args)</span><br><span class="line">numprocs=1                                  ; number of processes copies to start (def 1)</span><br><span class="line">directory=/opt/etcd                         ; directory to cwd to before exec (def no cwd)</span><br><span class="line">autostart=true                              ; start at supervisord start (default: true)</span><br><span class="line">autorestart=true                            ; retstart at unexpected quit (default: true)</span><br><span class="line">startsecs=30                                ; number of secs prog must stay running (def. 1)</span><br><span class="line">startretries=3                              ; max # of serial start failures (default 3)</span><br><span class="line">exitcodes=0,2                               ; &#x27;expected&#x27; exit codes for process (default 0,2)</span><br><span class="line">stopsignal=QUIT                             ; signal used to kill process (default TERM)</span><br><span class="line">stopwaitsecs=10                             ; max num secs to wait b4 SIGKILL (default 10)</span><br><span class="line">user=etcd                                   ; setuid to this UNIX account to run the program</span><br><span class="line">redirect_stderr=true                        ; redirect proc stderr to stdout (default false)</span><br><span class="line">stdout_logfile=/data/logs/etcd-server/etcd.stdout.log     ; stdout log path, NONE for none; default AUTO</span><br><span class="line">stdout_logfile_maxbytes=64MB                ; max # logfile bytes b4 rotation (default 50MB)</span><br><span class="line">stdout_logfile_backups=4                    ; # of stdout logfile backups (default 10)</span><br><span class="line">stdout_capture_maxbytes=1MB                 ; number of bytes in &#x27;capturemode&#x27; (default 0)</span><br><span class="line">stdout_events_enabled=false                 ; emit events on stdout writes (default false)</span><br><span class="line">stderr_logfile=/data/logs/etcd-server/etcd.stderr.log      ; stderr log path, NONE for none; default AUTO</span><br><span class="line">stderr_logfile_maxbytes=64MB                ; max # logfile bytes b4 rotation (default 50MB)</span><br><span class="line">stderr_logfile_backups=4                    ; # of stderr logfile backups (default 10)</span><br><span class="line">stderr_capture_maxbytes=1MB                 ; number of bytes in &#x27;capturemode&#x27; (default 0)</span><br><span class="line">stderr_events_enabled=false                 ; emit events on stderr writes (default false）</span><br><span class="line">stopasgroup=true                            ;默认为false,进程被杀死时，是否向这个进程组发送stop信号，包括子进程</span><br><span class="line">killasgroup=true                            ;默认为false，向进程组发送kill信号，包括子进程</span><br></pre></td></tr></table></figure>


<h3 id="启动etcd"><a href="#启动etcd" class="headerlink" title="启动etcd"></a>启动etcd</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-12 etcd]# supervisorctl update   </span><br><span class="line">etcd-server-7-12: added process group</span><br><span class="line">[root@hdss7-12 etcd]# supervisorctl status   </span><br><span class="line">etcd-server-7-12                 RUNNING   pid 11641, uptime 0:00:31</span><br><span class="line">[root@hdss7-12 etcd]# netstat -luntp|grep etcd</span><br><span class="line">tcp        0      0 10.4.7.12:2379          0.0.0.0:*               LISTEN      11642/./etcd        </span><br><span class="line">tcp        0      0 127.0.0.1:2379          0.0.0.0:*               LISTEN      11642/./etcd        </span><br><span class="line">tcp        0      0 10.4.7.12:2380          0.0.0.0:*               LISTEN      11642/./etcd       </span><br></pre></td></tr></table></figure>

<p>注意：etcd集群各主机启动配置略有不同，配置其他节点时注意修改。</p>
<h3 id="检查etcd状态"><a href="#检查etcd状态" class="headerlink" title="检查etcd状态"></a>检查etcd状态</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-12 etcd]# /opt/etcd/etcdctl cluster-health</span><br><span class="line">member 988139385f78284 is healthy: got healthy result from http://127.0.0.1:2379</span><br><span class="line">member 5a0ef2a004fc4349 is healthy: got healthy result from http://127.0.0.1:2379</span><br><span class="line">member f4a0cb0a765574a8 is healthy: got healthy result from http://127.0.0.1:2379</span><br><span class="line">cluster is healthy</span><br><span class="line"></span><br><span class="line">[root@hdss7-12 etcd]# /opt/etcd/etcdctl member list</span><br><span class="line">988139385f78284: name=etcd-server-7-22 peerURLs=https://10.4.7.22:2380 clientURLs=http://127.0.0.1:2379,https://10.4.7.22:2379 isLeader=false</span><br><span class="line">5a0ef2a004fc4349: name=etcd-server-7-21 peerURLs=https://10.4.7.21:2380 clientURLs=http://127.0.0.1:2379,https://10.4.7.21:2379 isLeader=false</span><br><span class="line">f4a0cb0a765574a8: name=etcd-server-7-12 peerURLs=https://10.4.7.12:2380 clientURLs=http://127.0.0.1:2379,https://10.4.7.12:2379 isLeader=true</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
  </entry>
  <entry>
    <title>部署Matser节点controller-manager服务</title>
    <url>/2019/11/17/%E9%83%A8%E7%BD%B2Matser%E8%8A%82%E7%82%B9controller-manager%E6%9C%8D%E5%8A%A1/</url>
    <content><![CDATA[<h3 id="部署主机"><a href="#部署主机" class="headerlink" title="部署主机"></a>部署主机</h3><table>
<thead>
<tr>
<th align="left">主机名</th>
<th align="left">角色</th>
<th align="left">ip</th>
</tr>
</thead>
<tbody><tr>
<td align="left">HDSS7-21.host.com</td>
<td align="left">controller-manager</td>
<td align="left">10.4.7.21</td>
</tr>
<tr>
<td align="left">HDSS7-22.host.com</td>
<td align="left">controller-manager</td>
<td align="left">10.4.7.22</td>
</tr>
</tbody></table>
<p>注意：这里部署文档以HDSS7-21.host.com主机为例，另外一台运算节点安装部署方法类似</p>
 <span id="more"></span>

<h3 id="创建服务启动脚本"><a href="#创建服务启动脚本" class="headerlink" title="创建服务启动脚本"></a>创建服务启动脚本</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 bin]# vim kube-controller-manager.sh</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">./kube-controller-manager \</span><br><span class="line">  --cluster-cidr 172.7.0.0/16 \</span><br><span class="line">  --leader-elect true \</span><br><span class="line">  --log-dir /data/logs/kubernetes/kube-controller-manager \</span><br><span class="line">  --master http://127.0.0.1:8080 \</span><br><span class="line">  --service-account-private-key-file ./cert/ca-key.pem \</span><br><span class="line">  --service-cluster-ip-range 192.168.0.0/16 \</span><br><span class="line">  --root-ca-file ./cert/ca.pem \</span><br><span class="line">  --v 2</span><br></pre></td></tr></table></figure>

<h3 id="授权及创建日志目录"><a href="#授权及创建日志目录" class="headerlink" title="授权及创建日志目录"></a>授权及创建日志目录</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 bin]# mkdir -p /data/logs/kubernetes/kube-controller-manager</span><br><span class="line">[root@hdss7-21 bin]# chmod +x kube-controller-manager.sh</span><br></pre></td></tr></table></figure>

<h3 id="创建supervisor配置"><a href="#创建supervisor配置" class="headerlink" title="创建supervisor配置"></a>创建supervisor配置</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 bin]# vi /etc/supervisord.d/kube-conntroller-manager.ini</span><br><span class="line">[program:kube-controller-manager-7-21]</span><br><span class="line">command=/opt/kubernetes/server/bin/kube-controller-manager.sh   ; the program (relative uses PATH, can take args)</span><br><span class="line">numprocs=1                              ; number of processes copies to start (def 1)</span><br><span class="line">directory=/opt/kubernetes/server/bin    ; directory to cwd to before exec (def no cwd)</span><br><span class="line">autostart=true                          ; start at supervisord start (default: true)</span><br><span class="line">autorestart=true                        ; retstart at unexpected quit (default: true)</span><br><span class="line">startsecs=22                            ; number of secs prog must stay running (def. 1)</span><br><span class="line">startretries=3                          ; max # of serial start failures (default 3)</span><br><span class="line">exitcodes=0,2                           ; &#x27;expected&#x27; exit codes for process (default 0,2)</span><br><span class="line">stopsignal=QUIT                         ; signal used to kill process (default TERM)</span><br><span class="line">stopwaitsecs=10                         ; max num secs to wait b4 SIGKILL (default 10)</span><br><span class="line">user=root                               ; setuid to this UNIX account to run the program</span><br><span class="line">redirect_stderr=false                   ; redirect proc stderr to stdout (default false)</span><br><span class="line">stdout_logfile=/data/logs/kubernetes/kube-controller-manager/controll.stdout.log  ; stdout log path, NONE for none; default AUTO</span><br><span class="line">stdout_logfile_maxbytes=64MB            ; max # logfile bytes b4 rotation (default 50MB)</span><br><span class="line">stdout_logfile_backups=4                ; # of stdout logfile backups (default 10)</span><br><span class="line">stdout_capture_maxbytes=1MB             ; number of bytes in &#x27;capturemode&#x27; (default 0)</span><br><span class="line">stdout_events_enabled=false             ; emit events on stdout writes (default false)</span><br><span class="line">stderr_logfile=/data/logs/kubernetes/kube-controller-manager/controll.stderr.log  ; stderr log path, NONE for none; default AUTO</span><br><span class="line">stderr_logfile_maxbytes=64MB            ; max # logfile bytes b4 rotation (default 50MB)</span><br><span class="line">stderr_logfile_backups=4                ; # of stderr logfile backups (default 10)</span><br><span class="line">stderr_capture_maxbytes=1MB             ; number of bytes in &#x27;capturemode&#x27; (default 0)</span><br><span class="line">stderr_events_enabled=false             ; emit events on stderr writes (default false)</span><br><span class="line">stopasgroup=true                        ;默认为false,进程被杀死时，是否向这个进程组发送stop信号，包括子进程</span><br><span class="line">killasgroup=true                        ;默认为false，向进程组发送kill信号，包括子进程</span><br></pre></td></tr></table></figure>

<h3 id="启动controller-manager"><a href="#启动controller-manager" class="headerlink" title="启动controller-manager"></a>启动controller-manager</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 bin]# supervisorctl update</span><br><span class="line">kube-controller-manager-7-21: added process group</span><br><span class="line">[root@hdss7-21 bin]# supervisorctl status</span><br><span class="line">etcd-server-7-21                 RUNNING   pid 13739, uptime 16:17:10</span><br><span class="line">kube-apiserver-7-21             RUNNING   pid 13888, uptime 14:26:44</span><br><span class="line">kube-controller-manager-7-21     RUNNING   pid 14810, uptime 0:00:29</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
  </entry>
  <entry>
    <title>部署Matser节点kube-scheduler服务</title>
    <url>/2019/11/17/%E9%83%A8%E7%BD%B2Matser%E8%8A%82%E7%82%B9kube-scheduler%E6%9C%8D%E5%8A%A1/</url>
    <content><![CDATA[<h3 id="部署主机"><a href="#部署主机" class="headerlink" title="部署主机"></a>部署主机</h3><table>
<thead>
<tr>
<th align="left">主机名</th>
<th align="left">角色</th>
<th align="left">ip</th>
</tr>
</thead>
<tbody><tr>
<td align="left">HDSS7-21.host.com</td>
<td align="left">kube-scheduler</td>
<td align="left">10.4.7.21</td>
</tr>
<tr>
<td align="left">HDSS7-22.host.com</td>
<td align="left">kube-scheduler</td>
<td align="left">10.4.7.22</td>
</tr>
</tbody></table>
<p>注意：这里部署文档以HDSS7-21.host.com主机为例，另外一台运算节点安装部署方法类似</p>
 <span id="more"></span>

<h3 id="创建启动脚本"><a href="#创建启动脚本" class="headerlink" title="创建启动脚本"></a>创建启动脚本</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 bin]# vim kube-scheduler.sh</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">./kube-scheduler \</span><br><span class="line">  --leader-elect  \</span><br><span class="line">  --log-dir /data/logs/kubernetes/kube-scheduler \</span><br><span class="line">  --master http://127.0.0.1:8080 \</span><br><span class="line">  --v 2</span><br></pre></td></tr></table></figure>

<h3 id="授权及创建日志目录"><a href="#授权及创建日志目录" class="headerlink" title="授权及创建日志目录"></a>授权及创建日志目录</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 bin]# chmod +x kube-scheduler.sh</span><br><span class="line">[root@hdss7-21 bin]# mkdir -p /data/logs/kubernetes/kube-scheduler</span><br></pre></td></tr></table></figure>

<h3 id="创建supervisor配置"><a href="#创建supervisor配置" class="headerlink" title="创建supervisor配置"></a>创建supervisor配置</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 bin]# vim /etc/supervisord.d/kube-scheduler.ini</span><br><span class="line">[program:kube-scheduler-7-21]</span><br><span class="line">command=/opt/kubernetes/server/bin/kube-scheduler.sh                     ; the program (relative uses PATH, can take args)</span><br><span class="line">numprocs=1                                                               ; number of processes copies to start (def 1)</span><br><span class="line">directory=/opt/kubernetes/server/bin                                     ; directory to cwd to before exec (def no cwd)</span><br><span class="line">autostart=true                                                           ; start at supervisord start (default: true)</span><br><span class="line">autorestart=true                                                         ; retstart at unexpected quit (default: true)</span><br><span class="line">startsecs=22                                                             ; number of secs prog must stay running (def. 1)</span><br><span class="line">startretries=3                                                           ; max # of serial start failures (default 3)</span><br><span class="line">exitcodes=0,2                                                            ; &#x27;expected&#x27; exit codes for process (default 0,2)</span><br><span class="line">stopsignal=QUIT                                                          ; signal used to kill process (default TERM)</span><br><span class="line">stopwaitsecs=10                                                          ; max num secs to wait b4 SIGKILL (default 10)</span><br><span class="line">user=root                                                                ; setuid to this UNIX account to run the program</span><br><span class="line">redirect_stderr=false                                                    ; redirect proc stderr to stdout (default false)</span><br><span class="line">stdout_logfile=/data/logs/kubernetes/kube-scheduler/scheduler.stdout.log ; stdout log path, NONE for none; default AUTO</span><br><span class="line">stdout_logfile_maxbytes=64MB                                             ; max # logfile bytes b4 rotation (default 50MB)</span><br><span class="line">stdout_logfile_backups=4                                                 ; # of stdout logfile backups (default 10)</span><br><span class="line">stdout_capture_maxbytes=1MB                                              ; number of bytes in &#x27;capturemode&#x27; (default 0)</span><br><span class="line">stdout_events_enabled=false                                              ; emit events on stdout writes (default false)</span><br><span class="line">stderr_logfile=/data/logs/kubernetes/kube-scheduler/scheduler.stderr.log ; stderr log path, NONE for none; default AUTO</span><br><span class="line">stderr_logfile_maxbytes=64MB                                             ; max # logfile bytes b4 rotation (default 50MB)</span><br><span class="line">stderr_logfile_backups=4                                                 ; # of stderr logfile backups (default 10)</span><br><span class="line">stderr_capture_maxbytes=1MB                                              ; number of bytes in &#x27;capturemode&#x27; (default 0)</span><br><span class="line">stderr_events_enabled=false                                              ; emit events on stderr writes (default false)</span><br><span class="line">stopasgroup=true                                                         ;默认为false,进程被杀死时，是否向这个进程组发送stop信号，包括子进程</span><br><span class="line">killasgroup=true                                                         ;默认为false，向进程组发送kill信号，包括子进程</span><br></pre></td></tr></table></figure>

<h3 id="启动kube-scheduler"><a href="#启动kube-scheduler" class="headerlink" title="启动kube-scheduler"></a>启动kube-scheduler</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 bin]# supervisorctl update</span><br><span class="line">kube-scheduler-7-21: added process group</span><br><span class="line">[root@hdss7-21 bin]# supervisorctl status</span><br><span class="line">etcd-server-7-21                 RUNNING   pid 13739, uptime 16:30:22</span><br><span class="line">kube-apiserver-7-21              RUNNING   pid 13888, uptime 14:39:56</span><br><span class="line">kube-controller-manager-7-21     RUNNING   pid 14810, uptime 0:13:41</span><br><span class="line">kube-scheduler-7-21             STARTING</span><br></pre></td></tr></table></figure>

<h3 id="查看主控节点健康状态"><a href="#查看主控节点健康状态" class="headerlink" title="查看主控节点健康状态"></a>查看主控节点健康状态</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 bin]# kubectl get cs</span><br><span class="line">NAME                 STATUS    MESSAGE              ERROR</span><br><span class="line">controller-manager   Healthy   ok                   </span><br><span class="line">scheduler            Healthy   ok                   </span><br><span class="line">etcd-1               Healthy   &#123;&quot;health&quot;: &quot;true&quot;&#125;   </span><br><span class="line">etcd-0               Healthy   &#123;&quot;health&quot;: &quot;true&quot;&#125;   </span><br><span class="line">etcd-2               Healthy   &#123;&quot;health&quot;: &quot;true&quot;&#125; </span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
  </entry>
  <entry>
    <title>部署Node节点kube-proxy服务</title>
    <url>/2019/11/17/%E9%83%A8%E7%BD%B2Node%E8%8A%82%E7%82%B9kube-proxy%E6%9C%8D%E5%8A%A1/</url>
    <content><![CDATA[<h3 id="部署主机"><a href="#部署主机" class="headerlink" title="部署主机"></a>部署主机</h3><table>
<thead>
<tr>
<th align="left">主机名</th>
<th align="left">角色</th>
<th align="left">ip</th>
</tr>
</thead>
<tbody><tr>
<td align="left">HDSS7-21.host.com</td>
<td align="left">kube-proxy</td>
<td align="left">10.4.7.21</td>
</tr>
<tr>
<td align="left">HDSS7-22.host.com</td>
<td align="left">kube-proxy</td>
<td align="left">10.4.7.22</td>
</tr>
</tbody></table>
<p>注意：这里部署文档以HDSS7-21.host.com主机为例，另外一台运算节点安装部署方法类似</p>
 <span id="more"></span>

<h3 id="签发证书"><a href="#签发证书" class="headerlink" title="签发证书"></a>签发证书</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-200 certs]# vim kube-proxy-csr.json</span><br><span class="line">&#123;</span><br><span class="line">    &quot;CN&quot;: &quot;system:kube-proxy&quot;,</span><br><span class="line">    &quot;key&quot;: &#123;</span><br><span class="line">        &quot;algo&quot;: &quot;rsa&quot;,</span><br><span class="line">        &quot;size&quot;: 2048</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;names&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;C&quot;: &quot;CN&quot;,</span><br><span class="line">            &quot;ST&quot;: &quot;beijing&quot;,</span><br><span class="line">            &quot;L&quot;: &quot;beijing&quot;,</span><br><span class="line">            &quot;O&quot;: &quot;od&quot;,</span><br><span class="line">            &quot;OU&quot;: &quot;ops&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">[root@hdss7-200 certs]# cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client kube-proxy-csr.json | cfssl-json -bare kube-proxy-client</span><br><span class="line">2019/11/17 14:08:07 [INFO] generate received request</span><br><span class="line">2019/11/17 14:08:07 [INFO] received CSR</span><br><span class="line">2019/11/17 14:08:07 [INFO] generating key: rsa-2048</span><br><span class="line">2019/11/17 14:08:08 [INFO] encoded CSR</span><br><span class="line">2019/11/17 14:08:08 [INFO] signed certificate with serial number 279341187308665700948191655234490079643724706187</span><br><span class="line">2019/11/17 14:08:08 [WARNING] This certificate lacks a &quot;hosts&quot; field. This makes it unsuitable for</span><br><span class="line">websites. For more information see the Baseline Requirements for the Issuance and Management</span><br><span class="line">of Publicly-Trusted Certificates, v.1.1.6, from the CA/Browser Forum (https://cabforum.org);</span><br><span class="line">specifically, section 10.2.3 (&quot;Information Requirements&quot;).</span><br><span class="line">[root@hdss7-200 certs]# ll kube-proxy*</span><br><span class="line">-rw------- 1 root root 1675 Nov 17 14:08 kube-proxy-client-key.pem</span><br><span class="line">-rw-r--r-- 1 root root 1005 Nov 17 14:08 kube-proxy-client.csr</span><br><span class="line">-rw-r--r-- 1 root root 1383 Nov 17 14:08 kube-proxy-client.pem</span><br><span class="line">-rw-r--r-- 1 root root  267 Nov 17 14:07 kube-proxy-csr.json</span><br></pre></td></tr></table></figure>

<h4 id="分发证书"><a href="#分发证书" class="headerlink" title="分发证书"></a>分发证书</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 cert]# scp hdss7-200:/opt/certs/kube-proxy-client.pem .</span><br><span class="line">root@hdss7-200&#x27;s password:</span><br><span class="line">kube-proxy-client.pem               100% 1383   283.9KB/s   00:00    </span><br><span class="line">[root@hdss7-21 cert]# scp hdss7-200:/opt/certs/kube-proxy-client-key.pem .</span><br><span class="line">root@hdss7-200&#x27;s password:</span><br><span class="line">kube-proxy-client-key.pem           100% 1675   246.3KB/s   00:00  </span><br></pre></td></tr></table></figure>

<h3 id="创建集群用户"><a href="#创建集群用户" class="headerlink" title="创建集群用户"></a>创建集群用户</h3><h4 id="set-cluster"><a href="#set-cluster" class="headerlink" title="set-cluster"></a>set-cluster</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 cert]# cd ../conf/</span><br><span class="line">[root@hdss7-21 conf]# kubectl config set-cluster myk8s \</span><br><span class="line">   --certificate-authority=/opt/kubernetes/server/bin/cert/ca.pem \</span><br><span class="line">   --embed-certs=true \</span><br><span class="line">   --server=https://10.4.7.10:7443 \</span><br><span class="line">   --kubeconfig=kube-proxy.kubeconfig</span><br><span class="line">Cluster &quot;myk8s&quot; set.</span><br></pre></td></tr></table></figure>

<h4 id="set-credentials"><a href="#set-credentials" class="headerlink" title="set-credentials"></a>set-credentials</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 conf]# kubectl config set-credentials kube-proxy \</span><br><span class="line">   --client-certificate=/opt/kubernetes/server/bin/cert/kube-proxy-client.pem \</span><br><span class="line">   --client-key=/opt/kubernetes/server/bin/cert/kube-proxy-client-key.pem \</span><br><span class="line">   --embed-certs=true \</span><br><span class="line">   --kubeconfig=kube-proxy.kubeconfig</span><br><span class="line">User &quot;kube-proxy&quot; set.</span><br></pre></td></tr></table></figure>

<h4 id="set-context"><a href="#set-context" class="headerlink" title="set-context"></a>set-context</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 conf]# kubectl config set-context myk8s-context \</span><br><span class="line">   --cluster=myk8s \</span><br><span class="line">   --user=kube-proxy \</span><br><span class="line">   --kubeconfig=kube-proxy.kubeconfig</span><br><span class="line">Context &quot;myk8s-context&quot; created.</span><br></pre></td></tr></table></figure>

<h4 id="use-context"><a href="#use-context" class="headerlink" title="use-context"></a>use-context</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 conf]# kubectl config use-context myk8s-context --kubeconfig=kube-proxy.kubeconfig</span><br><span class="line">Switched to context &quot;myk8s-context&quot;.</span><br></pre></td></tr></table></figure>

<h4 id="分发配置"><a href="#分发配置" class="headerlink" title="分发配置"></a>分发配置</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 conf]# scp kube-proxy.kubeconfig root@hdss7-22:/opt/kubernetes/server/bin/conf/</span><br><span class="line">root@hdss7-22&#x27;s password:</span><br><span class="line">kube-proxy.kubeconfig               100% 6235   236.7KB/s   00:00  </span><br></pre></td></tr></table></figure>

<h3 id="配置ipvs转发"><a href="#配置ipvs转发" class="headerlink" title="配置ipvs转发"></a>配置ipvs转发</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 conf]# vim ~/ipvs.sh</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">ipvs_mods_dir=&quot;/usr/lib/modules/$(uname -r)/kernel/net/netfilter/ipvs&quot;</span><br><span class="line">for i in $(ls $ipvs_mods_dir|grep -o &quot;^[^.]*&quot;)</span><br><span class="line">do</span><br><span class="line">  /sbin/modinfo -F filename $i &amp;&gt;/dev/null</span><br><span class="line">  if [ $? -eq 0 ];then</span><br><span class="line">    /sbin/modprobe $i</span><br><span class="line">  fi</span><br><span class="line">done</span><br><span class="line">[root@hdss7-21 conf]# sh ~/ipvs.sh</span><br><span class="line">[root@hdss7-21 conf]# lsmod|grep ip_vs</span><br><span class="line">ip_vs_wrr              12697  0</span><br><span class="line">ip_vs_wlc              12519  0</span><br><span class="line">ip_vs_sh               12688  0</span><br><span class="line">ip_vs_sed              12519  0</span><br><span class="line">ip_vs_rr               12600  0</span><br><span class="line">ip_vs_pe_sip           12740  0</span><br><span class="line">nf_conntrack_sip       33860  1 ip_vs_pe_sip</span><br><span class="line">ip_vs_nq               12516  0</span><br><span class="line">ip_vs_lc               12516  0</span><br><span class="line">ip_vs_lblcr            12922  0</span><br><span class="line">ip_vs_lblc             12819  0</span><br><span class="line">ip_vs_ftp              13079  0</span><br><span class="line">ip_vs_dh               12688  0</span><br><span class="line">ip_vs                 145497  24 ip_vs_dh,ip_vs_lc,ip_vs_nq,ip_vs_rr,ip_vs_sh,ip_vs_ftp,ip_vs_sed,ip_vs_wlc,ip_vs_wrr,ip_vs_pe_sip,ip_vs_lblcr,ip_vs_lblc</span><br><span class="line">nf_nat                 26583  3 ip_vs_ftp,nf_nat_ipv4,nf_nat_masquerade_ipv4</span><br><span class="line">nf_conntrack          137239  8 ip_vs,nf_nat,nf_nat_ipv4,xt_conntrack,nf_nat_masquerade_ipv4,nf_conntrack_netlink,nf_conntrack_sip,nf_conntrack_ipv4</span><br><span class="line">libcrc32c              12644  4 xfs,ip_vs,nf_nat,nf_conntrack</span><br></pre></td></tr></table></figure>

<h3 id="创建启动脚本"><a href="#创建启动脚本" class="headerlink" title="创建启动脚本"></a>创建启动脚本</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 bin]# vim kube-proxy.sh</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">./kube-proxy \</span><br><span class="line">  --cluster-cidr 172.7.0.0/16 \</span><br><span class="line">  --hostname-override hdss7-21.host.com \</span><br><span class="line">  --proxy-mode=ipvs \</span><br><span class="line">  --ipvs-scheduler=nq \</span><br><span class="line">  --kubeconfig ./conf/kube-proxy.kubeconfig</span><br><span class="line">[root@hdss7-21 bin]# chmod +x kube-proxy.sh</span><br><span class="line">[root@hdss7-21 bin]# mkdir -p /data/logs/kubernetes/kube-proxy</span><br></pre></td></tr></table></figure>

<h3 id="创建supervisor配置"><a href="#创建supervisor配置" class="headerlink" title="创建supervisor配置"></a>创建supervisor配置</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 bin]# vim /etc/supervisord.d/kube-proxy.ini</span><br><span class="line">[program:kube-proxy-7-21]</span><br><span class="line">command=/opt/kubernetes/server/bin/kube-proxy.sh                 ; the program (relative uses PATH, can take args)</span><br><span class="line">numprocs=1                                                       ; number of processes copies to start (def 1)</span><br><span class="line">directory=/opt/kubernetes/server/bin                             ; directory to cwd to before exec (def no cwd)</span><br><span class="line">autostart=true                                                   ; start at supervisord start (default: true)</span><br><span class="line">autorestart=true                                                 ; retstart at unexpected quit (default: true)</span><br><span class="line">startsecs=22                                                     ; number of secs prog must stay running (def. 1)</span><br><span class="line">startretries=3                                                   ; max # of serial start failures (default 3)</span><br><span class="line">exitcodes=0,2                                                    ; &#x27;expected&#x27; exit codes for process (default 0,2)</span><br><span class="line">stopsignal=QUIT                                                  ; signal used to kill process (default TERM)</span><br><span class="line">stopwaitsecs=10                                                  ; max num secs to wait b4 SIGKILL (default 10)</span><br><span class="line">user=root                                                        ; setuid to this UNIX account to run the program</span><br><span class="line">redirect_stderr=false                                            ; redirect proc stderr to stdout (default false)</span><br><span class="line">stdout_logfile=/data/logs/kubernetes/kube-proxy/proxy.stdout.log     ; stdout log path, NONE for none; default AUTO</span><br><span class="line">stdout_logfile_maxbytes=64MB                                     ; max # logfile bytes b4 rotation (default 50MB)</span><br><span class="line">stdout_logfile_backups=4                                         ; # of stdout logfile backups (default 10)</span><br><span class="line">stdout_capture_maxbytes=1MB                                      ; number of bytes in &#x27;capturemode&#x27; (default 0)</span><br><span class="line">stdout_events_enabled=false                                      ; emit events on stdout writes (default false)</span><br><span class="line">stderr_logfile=/data/logs/kubernetes/kube-proxy/proxy.stderr.log     ; stderr log path, NONE for none; default AUTO</span><br><span class="line">stderr_logfile_maxbytes=64MB                                     ; max # logfile bytes b4 rotation (default 50MB)</span><br><span class="line">stderr_logfile_backups=4                                         ; # of stderr logfile backups (default 10)</span><br><span class="line">stderr_capture_maxbytes=1MB                                      ; number of bytes in &#x27;capturemode&#x27; (default 0)</span><br><span class="line">stderr_events_enabled=false                                      ; emit events on stderr writes (default false)</span><br><span class="line">stopasgroup=true                                                 ;默认为false,进程被杀死时，是否向这个进程组发送stop信号，包括子进程</span><br><span class="line">killasgroup=true                                                 ;默认为false，向进程组发送kill信号，包括子进程</span><br></pre></td></tr></table></figure>

<h3 id="启动kube-proxy"><a href="#启动kube-proxy" class="headerlink" title="启动kube-proxy"></a>启动kube-proxy</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">启动kube-proxy</span><br><span class="line">[root@hdss7-21 bin]# supervisorctl update</span><br><span class="line">kube-proxy-7-21: added process group</span><br><span class="line">[root@hdss7-21 bin]# supervisorctl status</span><br><span class="line">etcd-server-7-21                 RUNNING   pid 13739, uptime 18:46:12</span><br><span class="line">kube-apiserver-7-21              RUNNING   pid 13888, uptime 16:55:46</span><br><span class="line">kube-controller-manager-7-21     RUNNING   pid 14810, uptime 2:29:31</span><br><span class="line">kube-kubelet-7-21                RUNNING   pid 14992, uptime 1:17:20</span><br><span class="line">kube-proxy-7-21                  RUNNING   pid 33712, uptime 0:01:41</span><br><span class="line">kube-scheduler-7-21              RUNNING   pid 14840, uptime 2:15:55</span><br></pre></td></tr></table></figure>

<h3 id="查看是否ipvs调用"><a href="#查看是否ipvs调用" class="headerlink" title="查看是否ipvs调用"></a>查看是否ipvs调用</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 bin]# yum install -y ipvsadm</span><br><span class="line">[root@hdss7-21 bin]# ipvsadm -Ln</span><br><span class="line">IP Virtual Server version 1.2.1 (size=4096)</span><br><span class="line">Prot LocalAddress:Port Scheduler Flags</span><br><span class="line"><span class="meta prompt_">  -&gt; </span><span class="language-bash">RemoteAddress:Port           Forward Weight ActiveConn InActConn</span></span><br><span class="line">TCP  192.168.0.1:443 nq</span><br><span class="line"><span class="meta prompt_">  -&gt; </span><span class="language-bash">10.4.7.21:6443               Masq    1      0          0</span>         </span><br><span class="line"><span class="meta prompt_">  -&gt; </span><span class="language-bash">10.4.7.22:6443               Masq    1      0          0</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
  </entry>
  <entry>
    <title>部署Node节点kubelet服务</title>
    <url>/2019/11/17/%E9%83%A8%E7%BD%B2Node%E8%8A%82%E7%82%B9kubelet%E6%9C%8D%E5%8A%A1/</url>
    <content><![CDATA[<h3 id="部署主机"><a href="#部署主机" class="headerlink" title="部署主机"></a>部署主机</h3><table>
<thead>
<tr>
<th align="left">主机名</th>
<th align="left">角色</th>
<th align="left">ip</th>
</tr>
</thead>
<tbody><tr>
<td align="left">HDSS7-21.host.com</td>
<td align="left">kubelet</td>
<td align="left">10.4.7.21</td>
</tr>
<tr>
<td align="left">HDSS7-22.host.com</td>
<td align="left">kubelet</td>
<td align="left">10.4.7.22</td>
</tr>
</tbody></table>
<p> 注意：这里部署文档以HDSS7-21.host.com主机为例，另外一台运算节点安装部署方法类似</p>
 <span id="more"></span>

<h3 id="签发证书"><a href="#签发证书" class="headerlink" title="签发证书"></a>签发证书</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-200 certs]# vim kubelet-csr.json</span><br><span class="line">&#123;</span><br><span class="line">    &quot;CN&quot;: &quot;kubelet-node&quot;,</span><br><span class="line">    &quot;hosts&quot;: [</span><br><span class="line">    &quot;127.0.0.1&quot;,</span><br><span class="line">    &quot;10.4.7.10&quot;, </span><br><span class="line">    &quot;10.4.7.21&quot;,  # 尽可能把node节点ip添加上，后期扩容只添加node节点，不更换证书，15+版本扩容可以不用添加节点ip</span><br><span class="line">    &quot;10.4.7.22&quot;,</span><br><span class="line">    &quot;10.4.7.23&quot;,</span><br><span class="line">    &quot;10.4.7.24&quot;,</span><br><span class="line">    &quot;10.4.7.25&quot;,</span><br><span class="line">    &quot;10.4.7.26&quot;,</span><br><span class="line">    &quot;10.4.7.27&quot;,</span><br><span class="line">    &quot;10.4.7.28&quot;</span><br><span class="line">    ],</span><br><span class="line">    &quot;key&quot;: &#123;</span><br><span class="line">        &quot;algo&quot;: &quot;rsa&quot;,</span><br><span class="line">        &quot;size&quot;: 2048</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;names&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;C&quot;: &quot;CN&quot;,</span><br><span class="line">            &quot;ST&quot;: &quot;beijing&quot;,</span><br><span class="line">            &quot;L&quot;: &quot;beijing&quot;,</span><br><span class="line">            &quot;O&quot;: &quot;od&quot;,</span><br><span class="line">            &quot;OU&quot;: &quot;ops&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">[root@hdss7-200 certs]# cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kubelet-csr.json | cfssl-json -bare kubelet</span><br><span class="line">2019/11/17 13:08:14 [INFO] generate received request</span><br><span class="line">2019/11/17 13:08:14 [INFO] received CSR</span><br><span class="line">2019/11/17 13:08:14 [INFO] generating key: rsa-2048</span><br><span class="line">2019/11/17 13:08:15 [INFO] encoded CSR</span><br><span class="line">2019/11/17 13:08:15 [INFO] signed certificate with serial number 459649081017504149066093125616417370382770060814</span><br><span class="line">2019/11/17 13:08:15 [WARNING] This certificate lacks a &quot;hosts&quot; field. This makes it unsuitable for</span><br><span class="line">websites. For more information see the Baseline Requirements for the Issuance and Management</span><br><span class="line">of Publicly-Trusted Certificates, v.1.1.6, from the CA/Browser Forum (https://cabforum.org);</span><br><span class="line">specifically, section 10.2.3 (&quot;Information Requirements&quot;).</span><br><span class="line">[root@hdss7-200 certs]# ll kubelet*</span><br><span class="line">-rw-r--r-- 1 root root  455 Nov 17 13:07 kubelet-csr.json</span><br><span class="line">-rw------- 1 root root 1675 Nov 17 13:08 kubelet-key.pem</span><br><span class="line">-rw-r--r-- 1 root root 1119 Nov 17 13:08 kubelet.csr</span><br><span class="line">-rw-r--r-- 1 root root 1472 Nov 17 13:08 kubelet.pem</span><br></pre></td></tr></table></figure>

<h4 id="分发证书"><a href="#分发证书" class="headerlink" title="分发证书"></a>分发证书</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 bin]# cd cert/</span><br><span class="line">[root@hdss7-21 cert]# scp hdss7-200:/opt/certs/kubelet.pem .</span><br><span class="line">root@hdss7-200&#x27;s password:</span><br><span class="line">kubelet.pem                         100% 1472   136.0KB/s   00:00    </span><br><span class="line">[root@hdss7-21 cert]# scp hdss7-200:/opt/certs/kubelet-key.pem .</span><br><span class="line">root@hdss7-200&#x27;s password:</span><br><span class="line">kubelet-key.pem                     100% 1675   210.7KB/s   00:00</span><br></pre></td></tr></table></figure>

<h3 id="创建集群用户"><a href="#创建集群用户" class="headerlink" title="创建集群用户"></a>创建集群用户</h3><h4 id="给kubectl创建软连接"><a href="#给kubectl创建软连接" class="headerlink" title="给kubectl创建软连接"></a>给kubectl创建软连接</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 bin]# ln -s /opt/kubernetes/server/bin/kubectl /usr/bin/kubectl</span><br><span class="line">[root@hdss7-21 bin]# which kubectl</span><br><span class="line">/usr/bin/kubectl</span><br></pre></td></tr></table></figure>

<h4 id="set-cluster"><a href="#set-cluster" class="headerlink" title="set-cluster"></a>set-cluster</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 cert]# cd ../conf/</span><br><span class="line">[root@hdss7-21 conf]# kubectl config set-cluster myk8s \</span><br><span class="line">   --certificate-authority=/opt/kubernetes/server/bin/cert/ca.pem \</span><br><span class="line">   --embed-certs=true \</span><br><span class="line">   --server=https://10.4.7.10:7443 \</span><br><span class="line">   --kubeconfig=kubelet.kubeconfig</span><br><span class="line">Cluster &quot;myk8s&quot; set.</span><br></pre></td></tr></table></figure>

<h4 id="set-credentials"><a href="#set-credentials" class="headerlink" title="set-credentials"></a>set-credentials</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 conf]# kubectl config set-credentials k8s-node \</span><br><span class="line">   --client-certificate=/opt/kubernetes/server/bin/cert/client.pem \</span><br><span class="line">   --client-key=/opt/kubernetes/server/bin/cert/client-key.pem \</span><br><span class="line">   --embed-certs=true --kubeconfig=kubelet.kubeconfig</span><br><span class="line">User &quot;k8s-node&quot; set.</span><br></pre></td></tr></table></figure>

<h4 id="set-context"><a href="#set-context" class="headerlink" title="set-context"></a>set-context</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 conf]# kubectl config set-context myk8s-context \</span><br><span class="line">   --cluster=myk8s \</span><br><span class="line">   --user=k8s-node \</span><br><span class="line">   --kubeconfig=kubelet.kubeconfig</span><br><span class="line">Context &quot;myk8s-context&quot; created.</span><br></pre></td></tr></table></figure>

<h4 id="use-context"><a href="#use-context" class="headerlink" title="use-context"></a>use-context</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 conf]# kubectl config use-context myk8s-context --kubeconfig=kubelet.kubeconfig</span><br><span class="line">Switched to context &quot;myk8s-context&quot;.</span><br></pre></td></tr></table></figure>

<h4 id="集群角色绑定到用户"><a href="#集群角色绑定到用户" class="headerlink" title="集群角色绑定到用户"></a>集群角色绑定到用户</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 conf]# vim k8s-node.yaml</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  name: k8s-node</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: system:node</span><br><span class="line">subjects:</span><br><span class="line">- apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: User</span><br><span class="line">  name: k8s-node</span><br><span class="line">[root@hdss7-21 conf]# kubectl create -f k8s-node.yaml</span><br><span class="line">clusterrolebinding.rbac.authorization.k8s.io/k8s-node created</span><br><span class="line">[root@hdss7-21 conf]# kubectl get clusterrolebinding k8s-node</span><br><span class="line">NAME       AGE</span><br><span class="line">k8s-node   116s</span><br><span class="line">[root@hdss7-21 conf]# scp kubelet.kubeconfig root@hdss7-22:/opt/kubernetes/server/bin/conf/</span><br><span class="line">root@hdss7-22&#x27;s password:</span><br><span class="line">kubelet.kubeconfig                  100% 6215     1.1MB/s   00:00</span><br></pre></td></tr></table></figure>

<h3 id="配置基础镜像"><a href="#配置基础镜像" class="headerlink" title="配置基础镜像"></a>配置基础镜像</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-200 certs]# docker pull kubernetes/pause                 </span><br><span class="line">Using default tag: latest</span><br><span class="line">latest: Pulling from kubernetes/pause</span><br><span class="line">4f4fb700ef54: Pull complete</span><br><span class="line">b9c8ec465f6b: Pull complete</span><br><span class="line">Digest: sha256:b31bfb4d0213f254d361e0079deaaebefa4f82ba7aa76ef82e90b4935ad5b105</span><br><span class="line">Status: Downloaded newer image for kubernetes/pause:latest</span><br><span class="line">docker.io/kubernetes/pause:latest</span><br><span class="line">[root@hdss7-200 certs]# docker tag kubernetes/pause:latest harbor.od.com/public/pause:latest</span><br><span class="line">[root@hdss7-200 certs]# docker push harbor.od.com/public/pause:latest</span><br><span class="line">The push refers to repository [harbor.od.com/public/pause]</span><br><span class="line">5f70bf18a086: Mounted from public/nginx</span><br><span class="line">e16a89738269: Pushed</span><br><span class="line">latest: digest: sha256:b31bfb4d0213f254d361e0079deaaebefa4f82ba7aa76ef82e90b4935ad5b105 size: 938</span><br></pre></td></tr></table></figure>

<h3 id="配置启动脚本"><a href="#配置启动脚本" class="headerlink" title="配置启动脚本"></a>配置启动脚本</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-22 bin]# vim kubelet.sh</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">./kubelet \</span><br><span class="line">  --anonymous-auth=false \</span><br><span class="line">  --cgroup-driver systemd \</span><br><span class="line">  --cluster-dns 192.168.0.2 \    # 集群内部DNS—IP，用于服务发现</span><br><span class="line">  --cluster-domain cluster.local \</span><br><span class="line">  --runtime-cgroups=/systemd/system.slice \</span><br><span class="line">  --kubelet-cgroups=/systemd/system.slice \</span><br><span class="line">  --fail-swap-on=&quot;false&quot; \</span><br><span class="line">  --client-ca-file ./cert/ca.pem \</span><br><span class="line">  --tls-cert-file ./cert/kubelet.pem \</span><br><span class="line">  --tls-private-key-file ./cert/kubelet-key.pem \</span><br><span class="line">  --hostname-override hdss7-21.host.com \</span><br><span class="line">  --image-gc-high-threshold 20 \</span><br><span class="line">  --image-gc-low-threshold 10 \</span><br><span class="line">  --kubeconfig ./conf/kubelet.kubeconfig \</span><br><span class="line">  --log-dir /data/logs/kubernetes/kube-kubelet \</span><br><span class="line">  --pod-infra-container-image harbor.od.com/public/pause:latest \</span><br><span class="line">  --root-dir /data/kubelet</span><br></pre></td></tr></table></figure>

<h3 id="授权及创建日志文件"><a href="#授权及创建日志文件" class="headerlink" title="授权及创建日志文件"></a>授权及创建日志文件</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-22 bin]# chmod +x kubelet.sh </span><br><span class="line">[root@hdss7-22 bin]# mkdir -p /data/logs/kubernetes/kube-kubelet /data/kubelet</span><br></pre></td></tr></table></figure>

<h3 id="创建supervisor配置"><a href="#创建supervisor配置" class="headerlink" title="创建supervisor配置"></a>创建supervisor配置</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 bin]# vim /etc/supervisord.d/kube-kubelet.ini</span><br><span class="line">[program:kube-kubelet-7-21]</span><br><span class="line">command=/opt/kubernetes/server/bin/kubelet.sh         ; the program (relative uses PATH, can take args)</span><br><span class="line">numprocs=1                                            ; number of processes copies to start (def 1)</span><br><span class="line">directory=/opt/kubernetes/server/bin                  ; directory to cwd to before exec (def no cwd) </span><br><span class="line">autostart=true                                        ; start at supervisord start (default: true)</span><br><span class="line">autorestart=true                                      ; retstart at unexpected quit (default: true)</span><br><span class="line">startsecs=22                                          ; number of secs prog must stay running (def. 1)</span><br><span class="line">startretries=3                                        ; max # of serial start failures (default 3)</span><br><span class="line">exitcodes=0,2                                         ; &#x27;expected&#x27; exit codes for process (default 0,2)</span><br><span class="line">stopsignal=QUIT                                       ; signal used to kill process (default TERM)</span><br><span class="line">stopwaitsecs=10                                       ; max num secs to wait b4 SIGKILL (default 10)</span><br><span class="line">user=root                                             ; setuid to this UNIX account to run the program</span><br><span class="line">redirect_stderr=false                                 ; redirect proc stderr to stdout (default false)</span><br><span class="line">stdout_logfile=/data/logs/kubernetes/kube-kubelet/kubelet.stdout.log       ; stdout log path, NONE for none; default AUTO</span><br><span class="line">stdout_logfile_maxbytes=64MB                          ; max # logfile bytes b4 rotation (default 50MB)</span><br><span class="line">stdout_logfile_backups=4                              ; # of stdout logfile backups (default 10)</span><br><span class="line">stdout_capture_maxbytes=1MB                           ; number of bytes in &#x27;capturemode&#x27; (default 0)</span><br><span class="line">stdout_events_enabled=false                           ; emit events on stdout writes (default false)</span><br><span class="line">stderr_logfile=/data/logs/kubernetes/kube-kubelet/kubelet.stderr.log       ; stderr log path, NONE for none; default AUTO</span><br><span class="line">stderr_logfile_maxbytes=64MB                          ; max # logfile bytes b4 rotation (default 50MB)</span><br><span class="line">stderr_logfile_backups=4                              ; # of stderr logfile backups (default 10)</span><br><span class="line">stderr_capture_maxbytes=1MB                           ; number of bytes in &#x27;capturemode&#x27; (default 0)</span><br><span class="line">stderr_events_enabled=false                           ; emit events on stderr writes (default false)</span><br><span class="line">stopasgroup=true                                      ;默认为false,进程被杀死时，是否向这个进程组发送stop信号，包括子进程</span><br><span class="line">killasgroup=true                                      ;默认为false，向进程组发送kill信号，包括子进程</span><br></pre></td></tr></table></figure>

<h3 id="启动kubelet"><a href="#启动kubelet" class="headerlink" title="启动kubelet"></a>启动kubelet</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 bin]# supervisorctl update</span><br><span class="line">kube-kubelet-7-21: added process group</span><br><span class="line">[root@hdss7-21 bin]# supervisorctl status</span><br><span class="line">etcd-server-7-21                 RUNNING   pid 13739, uptime 17:28:58</span><br><span class="line">kube-apiserver-7-21              RUNNING   pid 13888, uptime 15:38:32</span><br><span class="line">kube-controller-manager-7-21     RUNNING   pid 14810, uptime 1:12:17</span><br><span class="line">kube-kubelet-7-21               STARTING  </span><br><span class="line">kube-scheduler-7-21             RUNNING   pid 14840, uptime 0:58:41</span><br></pre></td></tr></table></figure>

<h3 id="检查运算节点"><a href="#检查运算节点" class="headerlink" title="检查运算节点"></a>检查运算节点</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-22 bin]# kubectl get node</span><br><span class="line">NAME                STATUS   ROLES    AGE   VERSION</span><br><span class="line">hdss7-21.host.com   Ready    &lt;none&gt;   29s   v1.15.2</span><br><span class="line">hdss7-22.host.com   Ready    &lt;none&gt;   51s   v1.15.2</span><br></pre></td></tr></table></figure>

<h3 id="给主机打上角色标签"><a href="#给主机打上角色标签" class="headerlink" title="给主机打上角色标签"></a>给主机打上角色标签</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-22 bin]# kubectl label node hdss7-21.host.com node-role.kubernetes.io/master=</span><br><span class="line">node/hdss7-21.host.com labeled</span><br><span class="line">[root@hdss7-22 bin]# kubectl label node hdss7-21.host.com node-role.kubernetes.io/node=</span><br><span class="line">node/hdss7-21.host.com labeled</span><br><span class="line">[root@hdss7-22 bin]# kubectl get node</span><br><span class="line">NAME                STATUS   ROLES         AGE     VERSION</span><br><span class="line">hdss7-21.host.com   Ready    master,node   2m50s   v1.15.2</span><br><span class="line">hdss7-22.host.com   Ready    &lt;none&gt;        3m12s   v1.15.2</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
  </entry>
  <entry>
    <title>部署coredns自动发现</title>
    <url>/2019/12/02/%E9%83%A8%E7%BD%B2coredns%E8%87%AA%E5%8A%A8%E5%8F%91%E7%8E%B0/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>kube-dns，是 Kubernetes 官方的 DNS 解析组件。从 1.11 版本开始，kubeadm 已经使用第三方的 CoreDNS 替换官方的 kubedns 作为 Kubernetes 集群的内部域名解析组件。</p>
<p>CoreDNS是一个Go语言实现的链式插件DNS服务端，是CNCF成员，是一个高性能、易扩展的DNS服务端。可以很方便的部署在k8s集群中，用来代替kube-dns。</p>
<p>在K8s集群里，POD的IP是不断变化的，如何“以不变应万变”</p>
 <span id="more"></span>

<ul>
<li><p>抽象出了Service资源，通过标签选择器，关联一组Pod</p>
</li>
<li><p>抽象出了集群网络，通过相对固定的“集群IP”，使服务接入点固定</p>
</li>
</ul>
<p>那么如何自动关联Service资源的“名称”和“集群网络IP”，从而达到服务被集群自动发现的目的呢</p>
<ul>
<li>考虑传统的DNS的模型：<a href="http://hdss7-21.host.com/">hdss7-21.host.com</a> &#x3D;&gt; 10.4.7.21</li>
<li>能否在k8s里建立这样的模型：nginx-dp &#x3D;&gt; 192.168.145.225</li>
</ul>
<h2 id="Kubernetes-中的域名是如何解析的"><a href="#Kubernetes-中的域名是如何解析的" class="headerlink" title="Kubernetes 中的域名是如何解析的"></a><strong>Kubernetes 中的域名是如何解析的</strong></h2><p>在 Kubernetes 中，比如服务 a 访问服务 b，对于同一个 Namespace下，可以直接在 pod 中，通过 curl b 来访问。对于跨 Namespace 的情况，服务名后边对应 Namespace即可。</p>
<p>DNS 如何解析，依赖容器内 resolv 文件的配置</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 ~]# kubectl exec -it nginx-ds-wkf9w sh</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cat</span> /etc/resolv.conf</span></span><br><span class="line">nameserver 192.168.0.2</span><br><span class="line">search default.svc.cluster.local svc.cluster.local cluster.local host.com</span><br><span class="line">options ndots:5</span><br></pre></td></tr></table></figure>

<h2 id="部署Coredns"><a href="#部署Coredns" class="headerlink" title="部署Coredns"></a>部署Coredns</h2><h3 id="配置k8s资源配置清单的内网http服务"><a href="#配置k8s资源配置清单的内网http服务" class="headerlink" title="配置k8s资源配置清单的内网http服务"></a>配置k8s资源配置清单的内网http服务</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-200 conf.d]# vim k8s-yaml.conf</span><br><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  k8s-yaml.od.com;</span><br><span class="line">    location / &#123;</span><br><span class="line">        autoindex on;</span><br><span class="line">        default_type text/plain;</span><br><span class="line">        root /data/k8s-yaml;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@hdss7-200 conf.d]# mkdir /data/k8s-yaml</span><br><span class="line">[root@hdss7-200 conf.d]# nginx -s reload</span><br><span class="line">[root@hdss7-200 k8s-yaml]# mkdir coredns</span><br><span class="line">[root@hdss7-200 k8s-yaml]# cd coredns/    </span><br></pre></td></tr></table></figure>

<p>添加A记录</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-11 ~]# vim /var/named/od.com.zone</span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">ORIGIN od.com.</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">TTL 600  ; 10 minutes</span></span><br><span class="line">@ IN SOA dns.od.com. dnsadmin.od.com. (</span><br><span class="line">       2019111403  ; serial     ; 滚动一位数</span><br><span class="line">       10800     ; refresh (3 hours)</span><br><span class="line">       900       ; retry (15 minutes)</span><br><span class="line">       604800    ; expire (1 week)</span><br><span class="line">       86400     ; minimum (1 day)</span><br><span class="line">)</span><br><span class="line">       NS dns.od.com.</span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">TTL 60  ; 1 minutes</span></span><br><span class="line">dns       A  10.4.7.11</span><br><span class="line">harbor    A  10.4.7.200</span><br><span class="line">k8s-yaml  A  10.4.7.200</span><br><span class="line">[root@hdss7-11 ~]# systemctl restart named</span><br><span class="line">[root@hdss7-11 ~]# dig -t A k8s-yaml.od.com @10.4.7.11 +short</span><br><span class="line">10.4.7.200</span><br></pre></td></tr></table></figure>

<h3 id="部署kube-dns-coredns"><a href="#部署kube-dns-coredns" class="headerlink" title="部署kube-dns(coredns)"></a>部署kube-dns(coredns)</h3><p><a href="https://github.com/coredns/coredns">coredns</a></p>
<p><a href="https://hub.docker.com/r/coredns/coredns/tags">coredns仓库</a></p>
<p><a href="https://github.com/kubernetes/kubernetes/tree/master/cluster/addons/dns/coredns">coredns配置清单</a></p>
<p>准备coredns镜像</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-200 coredns]# docker pull coredns/coredns:1.6.5</span><br><span class="line">[root@hdss7-200 coredns]# docker tag coredns/coredns:1.6.5 harbor.od.com/public/coredns:v1.6.5</span><br><span class="line">[root@hdss7-200 coredns]# docker push harbor.od.com/public/coredns:v1.6.5</span><br></pre></td></tr></table></figure>

<p>准备资源配置清单</p>
<p>rbac</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-200 coredns]# vim rbac.yaml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ServiceAccount</span><br><span class="line">metadata:</span><br><span class="line">  name: coredns</span><br><span class="line">  namespace: kube-system</span><br><span class="line">  labels:</span><br><span class="line">      kubernetes.io/cluster-service: &quot;true&quot;</span><br><span class="line">      addonmanager.kubernetes.io/mode: Reconcile</span><br><span class="line">---</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: ClusterRole</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    kubernetes.io/bootstrapping: rbac-defaults</span><br><span class="line">    addonmanager.kubernetes.io/mode: Reconcile</span><br><span class="line">  name: system:coredns</span><br><span class="line">rules:</span><br><span class="line">- apiGroups:</span><br><span class="line">  - &quot;&quot;</span><br><span class="line">  resources:</span><br><span class="line">  - endpoints</span><br><span class="line">  - services</span><br><span class="line">  - pods</span><br><span class="line">  - namespaces</span><br><span class="line">  verbs:</span><br><span class="line">  - list</span><br><span class="line">  - watch</span><br><span class="line">---</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  annotations:</span><br><span class="line">    rbac.authorization.kubernetes.io/autoupdate: &quot;true&quot;</span><br><span class="line">  labels:</span><br><span class="line">    kubernetes.io/bootstrapping: rbac-defaults</span><br><span class="line">    addonmanager.kubernetes.io/mode: EnsureExists</span><br><span class="line">  name: system:coredns</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: system:coredns</span><br><span class="line">subjects:</span><br><span class="line">- kind: ServiceAccount</span><br><span class="line">  name: coredns</span><br><span class="line">  namespace: kube-system</span><br></pre></td></tr></table></figure>

<p>configmap</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-200 coredns]# vim configmap.yaml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  name: coredns</span><br><span class="line">  namespace: kube-system</span><br><span class="line">data:</span><br><span class="line">  Corefile: |</span><br><span class="line">    .:53 &#123;</span><br><span class="line">        errors</span><br><span class="line">        log</span><br><span class="line">        health</span><br><span class="line">        ready</span><br><span class="line">        kubernetes cluster.local 192.168.0.0/16  # service的虚拟IP地址范围</span><br><span class="line">        forward . 10.4.7.11                                   # 指定上级dns</span><br><span class="line">        cache 30</span><br><span class="line">        loop</span><br><span class="line">        reload</span><br><span class="line">        loadbalance</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure>

<p>deployment</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-200 coredns]# vim deployment.yaml</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: coredns</span><br><span class="line">  namespace: kube-system</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: coredns</span><br><span class="line">    kubernetes.io/name: &quot;CoreDNS&quot;</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      k8s-app: coredns</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        k8s-app: coredns</span><br><span class="line">    spec:</span><br><span class="line">      priorityClassName: system-cluster-critical</span><br><span class="line">      serviceAccountName: coredns</span><br><span class="line">      containers:</span><br><span class="line">      - name: coredns</span><br><span class="line">        image: harbor.od.com/public/coredns:v1.6.5</span><br><span class="line">        args:</span><br><span class="line">        - -conf</span><br><span class="line">        - /etc/coredns/Corefile</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: config-volume</span><br><span class="line">          mountPath: /etc/coredns</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 53</span><br><span class="line">          name: dns</span><br><span class="line">          protocol: UDP</span><br><span class="line">        - containerPort: 53</span><br><span class="line">          name: dns-tcp</span><br><span class="line">          protocol: TCP</span><br><span class="line">        - containerPort: 9153</span><br><span class="line">          name: metrics</span><br><span class="line">          protocol: TCP</span><br><span class="line">        livenessProbe:</span><br><span class="line">          httpGet:</span><br><span class="line">            path: /health</span><br><span class="line">            port: 8080</span><br><span class="line">            scheme: HTTP</span><br><span class="line">          initialDelaySeconds: 60</span><br><span class="line">          timeoutSeconds: 5</span><br><span class="line">          successThreshold: 1</span><br><span class="line">          failureThreshold: 5</span><br><span class="line">      dnsPolicy: Default</span><br><span class="line">      volumes:</span><br><span class="line">        - name: config-volume</span><br><span class="line">          configMap:</span><br><span class="line">            name: coredns</span><br><span class="line">            items:</span><br><span class="line">            - key: Corefile</span><br><span class="line">              path: Corefile</span><br></pre></td></tr></table></figure>

<p>service</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-200 coredns]# vim service.yaml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: coredns</span><br><span class="line">  namespace: kube-system</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: coredns</span><br><span class="line">    kubernetes.io/cluster-service: &quot;true&quot;</span><br><span class="line">    kubernetes.io/name: &quot;CoreDNS&quot;</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    k8s-app: coredns</span><br><span class="line">  clusterIP: 192.168.0.2     # dns的</span><br><span class="line">  ports:</span><br><span class="line">  - name: dns</span><br><span class="line">    port: 53</span><br><span class="line">    protocol: UDP</span><br><span class="line">  - name: dns-tcp</span><br><span class="line">    port: 53</span><br><span class="line">  - name: metrics</span><br><span class="line">    port: 9153</span><br><span class="line">    protocol: TCP</span><br></pre></td></tr></table></figure>

<p>创建资源清单</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 ~]# kubectl apply -f http://k8s-yaml.od.com/coredns/rbac.yaml</span><br><span class="line">serviceaccount/coredns created</span><br><span class="line">clusterrole.rbac.authorization.k8s.io/system:coredns created</span><br><span class="line">clusterrolebinding.rbac.authorization.k8s.io/system:coredns created</span><br><span class="line">[root@hdss7-21 ~]# kubectl apply -f http://k8s-yaml.od.com/coredns/configmap.yaml</span><br><span class="line">configmap/coredns created</span><br><span class="line">[root@hdss7-21 ~]# kubectl apply -f http://k8s-yaml.od.com/coredns/deployment.yaml</span><br><span class="line">deployment.apps/coredns created</span><br><span class="line">[root@hdss7-21 ~]# kubectl apply -f http://k8s-yaml.od.com/coredns/service.yaml</span><br><span class="line">service/coredns created</span><br><span class="line">[root@hdss7-21 ~]# kubectl get all -n kube-system</span><br><span class="line">NAME                          READY   STATUS    RESTARTS   AGE</span><br><span class="line">pod/coredns-9bc44c684-wj2nb   1/1     Running   0          2m46s</span><br><span class="line"></span><br><span class="line">NAME              TYPE        CLUSTER-IP    EXTERNAL-IP   PORT(S)                  AGE</span><br><span class="line">service/coredns   ClusterIP   192.168.0.2   &lt;none&gt;        53/UDP,53/TCP,9153/TCP   5m36s</span><br><span class="line"></span><br><span class="line">NAME                      READY   UP-TO-DATE   AVAILABLE   AGE</span><br><span class="line">deployment.apps/coredns   1/1     1            1           5m47s</span><br><span class="line"></span><br><span class="line">NAME                                 DESIRED   CURRENT   READY   AGE</span><br><span class="line">replicaset.apps/coredns-9bc44c684    1         1         1       5m50s</span><br></pre></td></tr></table></figure>

<h3 id="dns检查"><a href="#dns检查" class="headerlink" title="dns检查"></a>dns检查</h3><p>dig解析</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 ~]# kubectl get svc -n kube-public</span><br><span class="line">NAME       TYPE        CLUSTER-IP        EXTERNAL-IP   PORT(S)   AGE</span><br><span class="line">nginx-dp   ClusterIP   192.168.145.225   &lt;none&gt;        80/TCP    3d20h</span><br><span class="line">[root@hdss7-21 ~]# dig -t A nginx-dp.kube-public.svc.cluster.local. @192.168.0.2 +short</span><br><span class="line">192.168.145.225</span><br></pre></td></tr></table></figure>

<p>容器里curl</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 ~]# kubectl get pod</span><br><span class="line">NAME             READY   STATUS    RESTARTS   AGE</span><br><span class="line">nginx-ds-wkf9w   1/1     Running   0          2d19h</span><br><span class="line">nginx-ds-x5lrc   1/1     Running   0          2d19h</span><br><span class="line">[root@hdss7-21 ~]# kubectl exec -it nginx-ds-wkf9w sh</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">curl -I 192.168.145.225</span></span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Server: nginx/1.7.9</span><br><span class="line">Date: Mon, 02 Dec 2019 02:49:34 GMT</span><br><span class="line">Content-Type: text/html</span><br><span class="line">Content-Length: 612</span><br><span class="line">Last-Modified: Tue, 23 Dec 2014 16:25:09 GMT</span><br><span class="line">Connection: keep-alive</span><br><span class="line">ETag: &quot;54999765-264&quot;</span><br><span class="line">Accept-Ranges: bytes</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">curl -I nginx-dp.kube-public.svc.cluster.local. == curl -I nginx-dp.kube-public.</span></span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Server: nginx/1.7.9</span><br><span class="line">Date: Mon, 02 Dec 2019 02:49:49 GMT</span><br><span class="line">Content-Type: text/html</span><br><span class="line">Content-Length: 612</span><br><span class="line">Last-Modified: Tue, 23 Dec 2014 16:25:09 GMT</span><br><span class="line">Connection: keep-alive</span><br><span class="line">ETag: &quot;54999765-264&quot;</span><br><span class="line">Accept-Ranges: bytes</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
  </entry>
  <entry>
    <title>部署dashboard</title>
    <url>/2019/12/04/%E9%83%A8%E7%BD%B2dashboard/</url>
    <content><![CDATA[<h2 id="准备镜像"><a href="#准备镜像" class="headerlink" title="准备镜像"></a>准备镜像</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-200 traefik]# docker pull k8scn/kubernetes-dashboard-amd64:v1.8.3</span><br><span class="line">[root@hdss7-200 traefik]# docker tag k8scn/kubernetes-dashboard-amd64:v1.8.3 harbor.od.com/public/kubernetes-dashboard:v1.8.3</span><br><span class="line">[root@hdss7-200 traefik]# docker push harbor.od.com/public/kubernetes-dashboard:v1.8.3</span><br><span class="line">[root@hdss7-200 traefik]# docker pull hexun/kubernetes-dashboard-amd64:v1.10.1</span><br><span class="line">[root@hdss7-200 traefik]# docker tag hexun/kubernetes-dashboard-amd64:v1.10.1 harbor.od.com/public/kubernetes-dashboard:v1.10.1</span><br><span class="line">[root@hdss7-200 traefik]# docker push harbor.od.com/public/kubernetes-dashboard:v1.10.1</span><br><span class="line">[root@hdss7-200 traefik]# mkdir /data/k8s-yaml/dashboard</span><br><span class="line">[root@hdss7-200 traefik]# cd /data/k8s-yaml/dashboard</span><br></pre></td></tr></table></figure>
 <span id="more"></span>
<h2 id="准备资源清单"><a href="#准备资源清单" class="headerlink" title="准备资源清单"></a>准备资源清单</h2><h2 id="dashboard创建资源清单"><a href="#dashboard创建资源清单" class="headerlink" title="dashboard创建资源清单"></a><a href="https://github.com/kubernetes/kubernetes/tree/master/cluster/addons/dashboard">dashboard</a><br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-200 dashboard]# vim rbac.yaml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ServiceAccount</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">    addonmanager.kubernetes.io/mode: Reconcile</span><br><span class="line">  name: kubernetes-dashboard-admin</span><br><span class="line">  namespace: kube-system</span><br><span class="line">---</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  name: kubernetes-dashboard-admin</span><br><span class="line">  namespace: kube-system</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">    addonmanager.kubernetes.io/mode: Reconcile</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: cluster-admin</span><br><span class="line">subjects:</span><br><span class="line">- kind: ServiceAccount</span><br><span class="line">  name: kubernetes-dashboard-admin</span><br><span class="line">  namespace: kube-system</span><br><span class="line"></span><br><span class="line">[root@hdss7-200 dashboard]# vim deployment.yaml</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: kubernetes-dashboard</span><br><span class="line">  namespace: kube-system</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">    kubernetes.io/cluster-service: &quot;true&quot;</span><br><span class="line">    addonmanager.kubernetes.io/mode: Reconcile</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      k8s-app: kubernetes-dashboard</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        k8s-app: kubernetes-dashboard</span><br><span class="line">      annotations:</span><br><span class="line">        scheduler.alpha.kubernetes.io/critical-pod: &#x27;&#x27;</span><br><span class="line">    spec:</span><br><span class="line">      priorityClassName: system-cluster-critical</span><br><span class="line">      containers:</span><br><span class="line">      - name: kubernetes-dashboard</span><br><span class="line">        image: harbor.od.com/public/kubernetes-dashboard:v1.8.3</span><br><span class="line">        resources:</span><br><span class="line">          limits:</span><br><span class="line">            cpu: 100m</span><br><span class="line">            memory: 300Mi</span><br><span class="line">          requests:</span><br><span class="line">            cpu: 50m</span><br><span class="line">            memory: 100Mi</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 8443</span><br><span class="line">          protocol: TCP</span><br><span class="line">        args:</span><br><span class="line">          # PLATFORM-SPECIFIC ARGS HERE</span><br><span class="line">          - --auto-generate-certificates</span><br><span class="line">          - --token-ttl=43200 </span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: tmp-volume</span><br><span class="line">          mountPath: /tmp</span><br><span class="line">        livenessProbe:</span><br><span class="line">          httpGet:</span><br><span class="line">            scheme: HTTPS</span><br><span class="line">            path: /</span><br><span class="line">            port: 8443</span><br><span class="line">          initialDelaySeconds: 30</span><br><span class="line">          timeoutSeconds: 30</span><br><span class="line">      volumes:</span><br><span class="line">      - name: tmp-volume</span><br><span class="line">        emptyDir: &#123;&#125;</span><br><span class="line">      serviceAccountName: kubernetes-dashboard-admin</span><br><span class="line">      tolerations:</span><br><span class="line">      - key: &quot;CriticalAddonsOnly&quot;</span><br><span class="line">        operator: &quot;Exists&quot;</span><br><span class="line"></span><br><span class="line">[root@hdss7-200 dashboard]# vim service.yaml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: kubernetes-dashboard</span><br><span class="line">  namespace: kube-system</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">    kubernetes.io/cluster-service: &quot;true&quot;</span><br><span class="line">    addonmanager.kubernetes.io/mode: Reconcile</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  ports:</span><br><span class="line">  - port: 443</span><br><span class="line">    targetPort: 8443</span><br><span class="line"></span><br><span class="line">[root@hdss7-200 dashboard]# vim ingress.yaml</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: kubernetes-dashboard</span><br><span class="line">  namespace: kube-system</span><br><span class="line">  annotations:</span><br><span class="line">    kubernetes.io/ingress.class: traefik</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: dashboard.od.com</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - backend:</span><br><span class="line">          serviceName: kubernetes-dashboard</span><br><span class="line">          servicePort: 443</span><br></pre></td></tr></table></figure><br>创建资源清单</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 ~]# kubectl apply -f http://k8s-yaml.od.com/dashboard/rbac.yaml</span><br><span class="line">serviceaccount/kubernetes-dashboard-admin created</span><br><span class="line">clusterrolebinding.rbac.authorization.k8s.io/kubernetes-dashboard-admin created</span><br><span class="line">[root@hdss7-21 ~]#  kubectl apply -f http://k8s-yaml.od.com/dashboard/deployment.yaml</span><br><span class="line">deployment.apps/kubernetes-dashboard created</span><br><span class="line">[root@hdss7-21 ~]#  kubectl apply -f http://k8s-yaml.od.com/dashboard/service.yaml</span><br><span class="line">service/kubernetes-dashboard created</span><br><span class="line">[root@hdss7-21 ~]#  kubectl apply -f http://k8s-yaml.od.com/dashboard/ingress.yaml</span><br><span class="line">ingress.extensions/kubernetes-dashboard created</span><br></pre></td></tr></table></figure>

<h2 id="添加A记录"><a href="#添加A记录" class="headerlink" title="添加A记录"></a>添加A记录</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-11 conf.d]# vim /var/named/od.com.zone</span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">ORIGIN od.com.</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">TTL 600  ; 10 minutes</span></span><br><span class="line">@ IN SOA dns.od.com. dnsadmin.od.com. (</span><br><span class="line">       2019111405  ; serial</span><br><span class="line">       10800     ; refresh (3 hours)</span><br><span class="line">       900       ; retry (15 minutes)</span><br><span class="line">       604800    ; expire (1 week)</span><br><span class="line">       86400     ; minimum (1 day)</span><br><span class="line">)</span><br><span class="line">       NS dns.od.com.</span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">TTL 60  ; 1 minutes</span></span><br><span class="line">dns       A  10.4.7.11</span><br><span class="line">harbor    A  10.4.7.200</span><br><span class="line">k8s-yaml  A  10.4.7.200</span><br><span class="line">traefik   A  10.4.7.10</span><br><span class="line">dashboard   A  10.4.7.10</span><br><span class="line">[root@hdss7-11 conf.d]# systemctl restart named</span><br><span class="line">[root@hdss7-11 conf.d]# dig -t A dashboard.od.com @10.4.7.11 +short</span><br><span class="line">10.4.7.10</span><br><span class="line">[root@hdss7-21 ~]# dig -t A dashboard.od.com @192.168.0.2 +short</span><br><span class="line">10.4.7.10</span><br></pre></td></tr></table></figure>
<h2 id="web访问"><a href="#web访问" class="headerlink" title="web访问"></a>web访问</h2><p>1.8.3可以直接跳过<img src="/image/157542662.png"></p>
<h2 id="使用token需要https协议，因为treafik代理的http，所以要创建证书去https访问dashboard拷贝证书配置nginx-ssl查看admin-token"><a href="#使用token需要https协议，因为treafik代理的http，所以要创建证书去https访问dashboard拷贝证书配置nginx-ssl查看admin-token" class="headerlink" title="使用token需要https协议，因为treafik代理的http，所以要创建证书去https访问dashboard拷贝证书配置nginx ssl查看admin-token"></a>使用token需要https协议，因为treafik代理的http，所以要创建证书去https访问dashboard<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"> [root@hdss7-200 dashboard]# cd /opt/certs/</span><br><span class="line">创建私钥</span><br><span class="line"> [root@hdss7-200 certs]# (umask 077; openssl genrsa -out dashboard.od.com.key 2048)</span><br><span class="line">创建证书签发请求文件</span><br><span class="line"> [root@hdss7-200 certs]# openssl req -new -key dashboard.od.com.key -out dashboard.od.com.csr -subj &quot;/CN=dashboard.od.com/C=CN/ST=BJ/L=Beijing/O=od/OU=ops&quot;</span><br><span class="line">签发证书</span><br><span class="line"> [root@hdss7-200 certs]# openssl x509 -req -in dashboard.od.com.csr -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out dashboard.od.com.crt -days 3650</span><br></pre></td></tr></table></figure><br>拷贝证书<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-11 conf.d]# cd /etc/nginx/</span><br><span class="line">[root@hdss7-11 nginx]# mkdir certs</span><br><span class="line">[root@hdss7-11 nginx]# cd certs/</span><br><span class="line">[root@hdss7-11 certs]# scp hdss7-200:/opt/certs/dashboard.od.com.crt .</span><br><span class="line">root@hdss7-200&#x27;s password:</span><br><span class="line">dashboard.od.com.crt                 100% 1204   153.5KB/s   00:00    </span><br><span class="line">[root@hdss7-11 certs]# scp hdss7-200:/opt/certs/dashboard.od.com.key .</span><br><span class="line">root@hdss7-200&#x27;s password:</span><br><span class="line">dashboard.od.com.key                 100% 1675   141.3KB/s   00:00</span><br></pre></td></tr></table></figure><br>配置nginx ssl<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-11 certs]# cd ../conf.d/</span><br><span class="line">[root@hdss7-11 conf.d]# vim dashboard.conf</span><br><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  dashboard.od.com;</span><br><span class="line">    rewrite ^(.*)$ https://$&#123;server_name&#125;$1 permanent;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">    listen       443 ssl;</span><br><span class="line">    server_name  dashboard.od.com;</span><br><span class="line">    ssl_certificate &quot;certs/dashboard.od.com.crt&quot;;</span><br><span class="line">    ssl_certificate_key &quot;certs/dashboard.od.com.key&quot;;</span><br><span class="line">    ssl_session_cache shared:SSL:1m;</span><br><span class="line">    ssl_session_timeout  10m;</span><br><span class="line">    ssl_ciphers HIGH:!aNULL:!MD5;</span><br><span class="line">    ssl_prefer_server_ciphers on;</span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://default_backend_traefik;</span><br><span class="line">        proxy_set_header Host       $http_host;</span><br><span class="line">        proxy_set_header x-forwarded-for $proxy_add_x_forwarded_for;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@hdss7-11 conf.d]# nginx -t</span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf test is successful</span><br><span class="line">[root@hdss7-11 conf.d]# nginx -s reload</span><br></pre></td></tr></table></figure><br>查看admin-token</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"> [root@hdss7-21 ~]# kubectl get secret -n kube-system</span><br><span class="line">NAME                                     TYPE                                  DATA   AGE</span><br><span class="line">coredns-token-fw7dq                      kubernetes.io/service-account-token   3      30h</span><br><span class="line">default-token-vr4j5                      kubernetes.io/service-account-token   3      16d</span><br><span class="line">kubernetes-dashboard-admin-token-vgc76   kubernetes.io/service-account-token   3      87m</span><br><span class="line">kubernetes-dashboard-key-holder          Opaque                                2      86m</span><br><span class="line">traefik-ingress-controller-token-smwch   kubernetes.io/service-account-token   3      24h</span><br><span class="line">[root@hdss7-21 ~]# kubectl describe secret kubernetes-dashboard-admin-token-vgc76 -n kube-system</span><br><span class="line">Name:         kubernetes-dashboard-admin-token-vgc76</span><br><span class="line">Namespace:    kube-system</span><br><span class="line">Labels:       &lt;none&gt;</span><br><span class="line">Annotations:  kubernetes.io/service-account.name: kubernetes-dashboard-admin</span><br><span class="line">              kubernetes.io/service-account.uid: a363a6a1-28eb-4a36-bc55-993de7e98199</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Type:  kubernetes.io/service-account-token</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Data</span><br><span class="line">====</span><br><span class="line">ca.crt:     1354 bytes</span><br><span class="line">namespace:  11 bytes</span><br><span class="line">token:      </span><br><span class="line">eyJhbGciOiJSUzI1NiIsImtpZCI6IiJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJrdWJlcm5ldGVzLWRhc2hib2FyZC1hZG1pbi10b2tlbi12Z2M3NiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJrdWJlcm5ldGVzLWRhc2hib2FyZC1hZG1pbiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6ImEzNjNhNmExLTI4ZWItNGEzNi1iYzU1LTk5M2RlN2U5ODE5OSIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDprdWJlLXN5c3RlbTprdWJlcm5ldGVzLWRhc2hib2FyZC1hZG1pbiJ9.K50z0P55UumtVkSCoywsVyzUvJ8cEIFwKo5lWMqw2NN6tHaJS4GlCPpLM83GsXCLAMULxU9ZSGEKC1hjhbwxWZLnsiAsUW3Tvwov_Uk5UBfUhxtlHBloXYwSnjqmGJ0t9xpAhtxBL-wVHitnCiPjFatY7GYdLQPiXzNMxN8JwqKQEdivMi0cKFV9VJkioQmtp8TwG1piEEn-bAuZfO9GmouDpI9VjtSSQk6xwQRZH86L7h9oUOUhr8GURA9LRXXuVg8Kuo9acq72gjw2-bQmg4i6RLXAuKWkxNr6MEsREHD87sv3ufI1ZnoU76ZxraV3rtErmHdItrO9aVeweKwzKQ</span><br></pre></td></tr></table></figure>
<p><img src="/image/1575426850.png"></p>
<h2 id="创建开发用户token"><a href="#创建开发用户token" class="headerlink" title="创建开发用户token"></a>创建开发用户token</h2><p>让开发人员可以查看集群内一些基本资源与pod日志</p>
<h3 id="创建rbac"><a href="#创建rbac" class="headerlink" title="创建rbac"></a>创建rbac</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-200 dashboard]# vim rbac_dev.yaml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ServiceAccount</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: dashboard-dev</span><br><span class="line">  name: kubernetes-dashboard-dev</span><br><span class="line">  namespace: kube-system</span><br><span class="line">---</span><br><span class="line">kind: ClusterRole</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">metadata:</span><br><span class="line">  namespace: kube-system</span><br><span class="line">  name: dev-role</span><br><span class="line">rules:</span><br><span class="line">- apiGroups: [&quot;&quot;]</span><br><span class="line">  resources: [&quot;pods&quot;]</span><br><span class="line">  verbs: [&quot;get&quot;, &quot;list&quot;, &quot;watch&quot;]</span><br><span class="line">- apiGroups: [&quot;&quot;]</span><br><span class="line">  resources: [&quot;pods/log&quot;]</span><br><span class="line">  verbs: [&quot;get&quot;, &quot;list&quot;, &quot;watch&quot;]</span><br><span class="line">- apiGroups: [&quot;extensions&quot;, &quot;apps&quot;]</span><br><span class="line">  resources: [&quot;deployments&quot;]</span><br><span class="line">  verbs: [&quot;get&quot;, &quot;list&quot;, &quot;watch&quot;]</span><br><span class="line">- apiGroups: [&quot;&quot;]</span><br><span class="line">  resources: [&quot;namespaces&quot;]</span><br><span class="line">  verbs: [&quot;get&quot;, &quot;watch&quot;, &quot;list&quot;]</span><br><span class="line">- apiGroups: [&quot;&quot;]</span><br><span class="line">  resources: [&quot;events&quot;]</span><br><span class="line">  verbs: [&quot;get&quot;, &quot;watch&quot;, &quot;list&quot;]</span><br><span class="line">- apiGroups: [&quot;apps&quot;, &quot;extensions&quot;]</span><br><span class="line">  resources: [&quot;replicasets&quot;]</span><br><span class="line">  verbs: [&quot;get&quot;, &quot;watch&quot;, &quot;list&quot;]</span><br><span class="line">- apiGroups: [&quot;&quot;]</span><br><span class="line">  resources: [&quot;configmaps&quot;]</span><br><span class="line">  verbs: [&quot;get&quot;, &quot;watch&quot;, &quot;list&quot;]</span><br><span class="line">- apiGroups: [&quot;&quot;]</span><br><span class="line">  resources: [&quot;persistentvolumeclaims&quot;]</span><br><span class="line">  verbs: [&quot;get&quot;, &quot;watch&quot;, &quot;list&quot;]</span><br><span class="line">- apiGroups: [&quot;&quot;]</span><br><span class="line">  resources: [&quot;secrets&quot;]</span><br><span class="line">  verbs: [&quot;get&quot;, &quot;watch&quot;, &quot;list&quot;]</span><br><span class="line">- apiGroups: [&quot;&quot;]</span><br><span class="line">  resources: [&quot;services&quot;]</span><br><span class="line">  verbs: [&quot;get&quot;, &quot;watch&quot;, &quot;list&quot;]</span><br><span class="line">- apiGroups: [&quot;extensions&quot;]</span><br><span class="line">  resources: [&quot;ingresses&quot;]</span><br><span class="line">  verbs: [&quot;get&quot;, &quot;watch&quot;, &quot;list&quot;]</span><br><span class="line">- apiGroups: [&quot;apps&quot;]</span><br><span class="line">  resources: [&quot;daemonsets&quot;]</span><br><span class="line">  verbs: [&quot;get&quot;, &quot;watch&quot;, &quot;list&quot;]</span><br><span class="line">- apiGroups: [&quot;batch&quot;]</span><br><span class="line">  resources: [&quot;jobs&quot;]</span><br><span class="line">  verbs: [&quot;get&quot;, &quot;watch&quot;, &quot;list&quot;]</span><br><span class="line">- apiGroups: [&quot;batch&quot;]</span><br><span class="line">  resources: [&quot;cronjobs&quot;]</span><br><span class="line">  verbs: [&quot;get&quot;, &quot;watch&quot;, &quot;list&quot;]</span><br><span class="line">- apiGroups: [&quot;&quot;]</span><br><span class="line">  resources: [&quot;replicationcontrollers&quot;]</span><br><span class="line">  verbs: [&quot;get&quot;, &quot;watch&quot;, &quot;list&quot;]</span><br><span class="line">- apiGroups: [&quot;apps&quot;]</span><br><span class="line">  resources: [&quot;statefulsets&quot;]</span><br><span class="line">  verbs: [&quot;get&quot;, &quot;watch&quot;, &quot;list&quot;]</span><br><span class="line">- apiGroups: [&quot;&quot;]</span><br><span class="line">  resources: [&quot;endpoints&quot;]</span><br><span class="line">  verbs: [&quot;get&quot;, &quot;watch&quot;, &quot;list&quot;]</span><br><span class="line">---</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  name: kubernetes-dashboard-dev</span><br><span class="line">  namespace: kube-system</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: dashboard-dev</span><br><span class="line">roleRef:</span><br><span class="line"></span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: dev-role</span><br><span class="line">subjects:</span><br><span class="line">- kind: ServiceAccount</span><br><span class="line">  name: kubernetes-dashboard-dev</span><br><span class="line">  namespace: kube-syste</span><br><span class="line">[root@hdss7-21 opt]# kubectl apply -f http://k8s-yaml.od.com/dashboard/rbac_dev.yaml</span><br><span class="line">serviceaccount/kubernetes-dashboard-dev created</span><br><span class="line">role.rbac.authorization.k8s.io/dev-role created</span><br><span class="line">rolebinding.rbac.authorization.k8s.io/kubernetes-dashboard-dev created</span><br></pre></td></tr></table></figure>
<h3 id="查看dev-token"><a href="#查看dev-token" class="headerlink" title="查看dev_token"></a>查看dev_token</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 opt]# kubectl get secret -n kube-system|grep dev</span><br><span class="line">kubernetes-dashboard-dev-token-jqjnz     kubernetes.io/service-account-token   3      38s</span><br><span class="line">[root@hdss7-21 opt]# kubectl describe secret kubernetes-dashboard-dev-token-jqjnz -n kube-system</span><br><span class="line">Data</span><br><span class="line">====</span><br><span class="line">token:      eyJhbGciOiJSUzI1NiIsImtpZCI6IiJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJrdWJlcm5ldGVzLWRhc2hib2FyZC1kZXYtdG9rZW4tanFqbnoiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoia3ViZXJuZXRlcy1kYXNoYm9hcmQtZGV2Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiNjhiNzlkZWMtMzNhZS00ZmY2LWE1OTYtYjZiMjEzZThkMTIxIiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50Omt1YmUtc3lzdGVtOmt1YmVybmV0ZXMtZGFzaGJvYXJkLWRldiJ9.kgpNxy-Uu5DBgkpg-LTE9R6D403HsnEtbenU9DRnODytQgAtxw8TaerJDzSpKOku3JSBb5ei2CIB8sG93T8_IBuHKmYL_7Xq0dErZad8SgbCwyLHS6pPadPBbHpDFcMqLpFx-61qE15mzfpwFZpgFloHu_plEPE4B7wzPzDzk_1Fj7vSOqH3ndkxayW06s4lmvV5C2eGCcFqzQLzzBB0t35NsjdicykrZc88QUQJNDThvavnJCHa1maD7RSR_buLgeu7rVa2SIoE3-xOg0Yid9vfea9POGfgY3PL0tV0B1du37ysLJkkf3SkD_E6p04LYEDcj12RGsh1kGuEDVdjTA</span><br><span class="line">ca.crt:     1354 bytes</span><br><span class="line">namespace:  11 bytes</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
  </entry>
  <entry>
    <title>部署elasticsearch</title>
    <url>/2020/01/08/%E9%83%A8%E7%BD%B2elasticsearch/</url>
    <content><![CDATA[<p>HDSS7-12.host.com上：</p>
<p><a href="https://www.elastic.co/">官网</a></p>
<p><a href="https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.8.6.tar.gz">下载地址</a></p>
<p>单节点安装</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-12 src]# wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.8.6.tar.gz</span><br><span class="line">[root@hdss7-12 src]# tar xf elasticsearch-6.8.6.tar.gz -C /opt/</span><br><span class="line">[root@hdss7-12 src]# ln -s /opt/elasticsearch-6.8.6/ /opt/elasticsearch</span><br></pre></td></tr></table></figure>
<span id="more"></span>

<p>配置文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-12 elasticsearch]# mkdir -p /data/elasticsearch/&#123;data,logs&#125;</span><br><span class="line">[root@hdss7-12 elasticsearch]# vim config/elasticsearch.yml</span><br><span class="line">cluster.name: [es.od.com](http://es.od.com/)</span><br><span class="line">node.name: [hdss7-12.host.com](http://hdss7-12.host.com/)</span><br><span class="line">path.data: /data/elasticsearch/data</span><br><span class="line">path.logs: /data/elasticsearch/logs</span><br><span class="line">bootstrap.memory_lock: true</span><br><span class="line">network.host: 10.4.7.12</span><br><span class="line">http.port: 9200</span><br></pre></td></tr></table></figure>

<p>修改jvm</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-12 elasticsearch]# vim config/jvm.options</span><br><span class="line">-Xms512m     # 根据环境设置，-Xms和-Xmx设置为相同的值，推荐设置为机器内存的一半左右 </span><br><span class="line">-Xmx512m</span><br></pre></td></tr></table></figure>

<p>创建普通用户</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-12 elasticsearch]# useradd -s /bin/bash -M es</span><br><span class="line">[root@hdss7-12 elasticsearch]# chown -R es.es /opt/elasticsearch-6.8.6</span><br><span class="line">[root@hdss7-12 elasticsearch]# chown -R es.es /data/elasticsearch/</span><br></pre></td></tr></table></figure>

<p>文件描述符</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-12 elasticsearch]# vim /etc/security/limits.d/es.conf</span><br><span class="line">es hard nofile 65536</span><br><span class="line">es soft fsize unlimited</span><br><span class="line">es hard memlock unlimited</span><br><span class="line">es soft memlock unlimited</span><br></pre></td></tr></table></figure>

<p>调整内核参数</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-12 elasticsearch]# sysctl -w vm.max_map_count=262144</span><br><span class="line">[root@hdss7-12 elasticsearch]# echo &quot;vm.max_map_count=262144&quot; &gt; /etc/sysctl.conf</span><br><span class="line">[root@hdss7-12 elasticsearch]# sysctl -p</span><br></pre></td></tr></table></figure>

<p>启动es</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-12 elasticsearch]# su -c &quot;/opt/elasticsearch/bin/elasticsearch -d&quot; es</span><br><span class="line">[root@hdss7-12 elasticsearch]# netstat -luntp|grep 9200</span><br><span class="line">tcp6    0   0 10.4.7.12:9200     :::*          LISTEN   16784/java</span><br></pre></td></tr></table></figure>

<p>调整ES日志模板</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-12 elasticsearch]# curl -H &quot;Content-Type:application/json&quot; -XPUT http://10.4.7.12:9200/_template/k8s -d &#x27;&#123;</span><br><span class="line"> &quot;template&quot; : &quot;k8s*&quot;,</span><br><span class="line"> &quot;index_patterns&quot;: [&quot;k8s*&quot;], </span><br><span class="line"> &quot;settings&quot;: &#123;</span><br><span class="line">  &quot;number_of_shards&quot;: 5,</span><br><span class="line">  &quot;number_of_replicas&quot;: 0    # 生产为3份副本集，本es为单节点，不能配置副本集</span><br><span class="line"> &#125;</span><br><span class="line">&#125;&#x27;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Kubernetes</category>
        <category>ELK</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>部署filebeat</title>
    <url>/2020/01/08/%E9%83%A8%E7%BD%B2filebeat/</url>
    <content><![CDATA[<p>运维主机HDSS7-200.host.com上：</p>
<p><a href="https://www.elastic.co/downloads/beats/filebeat">官方下载地址</a></p>
<h3 id="准备镜像"><a href="#准备镜像" class="headerlink" title="准备镜像"></a>准备镜像</h3><p>Dockerfile</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">[root@hdss7-<span class="number">200</span> ~]<span class="comment"># mkdir /data/dockerfile/filebeat</span></span><br><span class="line">[root@hdss7-<span class="number">200</span> ~]<span class="comment"># cd /data/dockerfile/filebeat  </span></span><br><span class="line">[root@hdss7-<span class="number">200</span> filebeat]<span class="comment"># vim Dockerfile</span></span><br><span class="line"><span class="keyword">FROM</span> debian:jessie</span><br><span class="line"><span class="keyword">ENV</span> FILEBEAT_VERSION=<span class="number">7.5</span>.<span class="number">1</span> \ FILEBEAT_SHA1=daf1a5e905c415daf68a8192a069f913a1d48e2c79e270da118385ba12a93aaa91bda4953c3402a6f0abf1c177f7bcc916a70bcac41977f69a6566565a8fae9c  <span class="comment"># 在官网下载同版本LINUX64-BIT的sha替换</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">set</span> -x &amp;&amp; \</span></span><br><span class="line"><span class="language-bash"> apt-get update &amp;&amp; \</span></span><br><span class="line"><span class="language-bash"> apt-get install -y wget &amp;&amp; \</span></span><br><span class="line"><span class="language-bash"> wget https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-<span class="variable">$&#123;FILEBEAT_VERSION&#125;</span>-linux-x86_64.tar.gz -O /opt/filebeat.tar.gz &amp;&amp; \</span></span><br><span class="line"><span class="language-bash"> <span class="built_in">cd</span> /opt &amp;&amp; \</span></span><br><span class="line"><span class="language-bash"> <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;FILEBEAT_SHA1&#125;</span> filebeat.tar.gz&quot;</span> | <span class="built_in">sha512sum</span> -c - &amp;&amp; \</span></span><br><span class="line"><span class="language-bash"> tar xzvf filebeat.tar.gz &amp;&amp; \</span></span><br><span class="line"><span class="language-bash"> <span class="built_in">cd</span> filebeat-* &amp;&amp; \</span></span><br><span class="line"><span class="language-bash"> <span class="built_in">cp</span> filebeat /bin &amp;&amp; \</span></span><br><span class="line"><span class="language-bash"> <span class="built_in">cd</span> /opt &amp;&amp; \</span></span><br><span class="line"><span class="language-bash"> <span class="built_in">rm</span> -rf filebeat* &amp;&amp; \</span></span><br><span class="line"><span class="language-bash"> apt-get purge -y wget &amp;&amp; \</span></span><br><span class="line"><span class="language-bash"> apt-get autoremove -y &amp;&amp; \</span></span><br><span class="line"><span class="language-bash"> apt-get clean &amp;&amp; <span class="built_in">rm</span> -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> docker-entrypoint.sh /</span></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="language-bash"> [<span class="string">&quot;/docker-entrypoint.sh&quot;</span>]</span></span><br></pre></td></tr></table></figure>
<span id="more"></span>
<p>容器启动脚本</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-200 filebeat]# vim docker-entrypoint.sh</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">ENV=$&#123;ENV:-&quot;test&quot;&#125;                      # 定义日志收集的环境</span><br><span class="line">PROJ_NAME=$&#123;PROJ_NAME:-&quot;no-define&quot;&#125;     # 定义项目名称</span><br><span class="line">MULTILINE=$&#123;MULTILINE:-&quot;^\d&#123;2&#125;&quot;&#125;        # 多行匹配，限定以2个数字开头的为一行，反之不匹配</span><br><span class="line"></span><br><span class="line">cat &gt; /etc/filebeat.yaml &lt;&lt; EOF</span><br><span class="line">filebeat.inputs:</span><br><span class="line">- type: log</span><br><span class="line">  fields_under_root: true</span><br><span class="line">  fields:</span><br><span class="line">    topic: logm-$&#123;PROJ_NAME&#125;</span><br><span class="line">  paths:</span><br><span class="line">    - /logm/*.log</span><br><span class="line">    - /logm/*/*.log</span><br><span class="line">    - /logm/*/*/*.log</span><br><span class="line">    - /logm/*/*/*/*.log</span><br><span class="line">    - /logm/*/*/*/*/*.log</span><br><span class="line">  scan_frequency: 120s</span><br><span class="line">  max_bytes: 10485760</span><br><span class="line">  multiline.pattern: &#x27;$MULTILINE&#x27;</span><br><span class="line">  multiline.negate: true</span><br><span class="line">  multiline.match: after</span><br><span class="line">  multiline.max_lines: 100</span><br><span class="line">- type: log</span><br><span class="line">  fields_under_root: true</span><br><span class="line">  fields:</span><br><span class="line">    topic: logu-$&#123;PROJ_NAME&#125;</span><br><span class="line">  paths:</span><br><span class="line">    - /logu/*.log</span><br><span class="line">    - /logu/*/*.log</span><br><span class="line">    - /logu/*/*/*.log</span><br><span class="line">    - /logu/*/*/*/*.log</span><br><span class="line">    - /logu/*/*/*/*/*.log</span><br><span class="line">    - /logu/*/*/*/*/*/*.log</span><br><span class="line">output.kafka:</span><br><span class="line">  hosts: [&quot;10.4.7.11:9092&quot;]</span><br><span class="line">  topic: k8s-fb-$ENV-%&#123;[topic]&#125;</span><br><span class="line">  version: 2.0.0      # kafka版本超过2.0，默认写2.0.0 </span><br><span class="line">  required_acks: 0</span><br><span class="line">  max_message_bytes: 10485760</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">set -xe</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">If user don<span class="string">&#x27;t provide any command</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">Run filebeat</span></span></span><br><span class="line">if [[ &quot;$1&quot; == &quot;&quot; ]]; then</span><br><span class="line">     exec filebeat  -c /etc/filebeat.yaml </span><br><span class="line">else</span><br><span class="line">    # Else allow the user to run arbitrarily commands like bash</span><br><span class="line">    exec &quot;$@&quot;</span><br><span class="line">fi</span><br><span class="line">[root@hdss7-200 filebeat]# chmod +x docker-entrypoint.sh</span><br></pre></td></tr></table></figure>

<p>构建镜像</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-200 filebeat]# docker build . -t harbor.od.com/infra/filebeat:v7.5.1</span><br><span class="line">[root@hdss7-200 filebeat]# docker push harbor.od.com/infra/filebeat:v7.5.1</span><br></pre></td></tr></table></figure>

<h3 id="准备资源配置清单"><a href="#准备资源配置清单" class="headerlink" title="准备资源配置清单"></a>准备资源配置清单</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line">[<span class="string">root@hdss7-200</span> <span class="string">filebeat</span>]<span class="comment"># vim /data/k8s-yaml/test/dubbo-demo-consumer/deployment.yaml </span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">dubbo-demo-consumer</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">test</span></span><br><span class="line">  <span class="attr">labels:</span> </span><br><span class="line">    <span class="attr">name:</span> <span class="string">dubbo-demo-consumer</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span> </span><br><span class="line">      <span class="attr">name:</span> <span class="string">dubbo-demo-consumer</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span> </span><br><span class="line">        <span class="attr">app:</span> <span class="string">dubbo-demo-consumer</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">dubbo-demo-consumer</span></span><br><span class="line">      <span class="attr">annotations:</span></span><br><span class="line">        <span class="attr">blackbox_path:</span> <span class="string">&quot;/hello?name=health&quot;</span></span><br><span class="line">        <span class="attr">blackbox_port:</span> <span class="string">&quot;8080&quot;</span></span><br><span class="line">        <span class="attr">blackbox_scheme:</span> <span class="string">&quot;http&quot;</span></span><br><span class="line">        <span class="attr">prometheus_io_scrape:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">        <span class="attr">prometheus_io_port:</span> <span class="string">&quot;12346&quot;</span></span><br><span class="line">        <span class="attr">prometheus_io_path:</span> <span class="string">&quot;/&quot;</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">dubbo-demo-consumer</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">harbor.od.com/app/dubbo-tomcat-web:tomcat_191225_0936</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8080</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">20880</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">JAR_BALL</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">dubbo-client.jar</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">C_OPTS</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">-Denv=fat</span> <span class="string">-Dapollo.meta=http://config-test.od.com</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/opt/tomcat/logs</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">logm</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">filebeat</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">harbor.od.com/infra/filebeat:v7.5.1</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">ENV</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">test</span>             <span class="comment"># 测试环境</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">PROJ_NAME</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">dubbo-demo-web</span>   <span class="comment"># 项目名</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/logm</span>        </span><br><span class="line">          <span class="attr">name:</span> <span class="string">logm</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">emptyDir:</span> &#123;&#125;</span><br><span class="line">        <span class="attr">name:</span> <span class="string">logm</span></span><br><span class="line">      <span class="attr">imagePullSecrets:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">harbor</span></span><br><span class="line">      <span class="attr">restartPolicy:</span> <span class="string">Always</span></span><br><span class="line">      <span class="attr">terminationGracePeriodSeconds:</span> <span class="number">30</span></span><br><span class="line">      <span class="attr">securityContext:</span> </span><br><span class="line">        <span class="attr">runAsUser:</span> <span class="number">0</span></span><br><span class="line">      <span class="attr">schedulerName:</span> <span class="string">default-scheduler</span></span><br><span class="line">  <span class="attr">strategy:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">RollingUpdate</span></span><br><span class="line">    <span class="attr">rollingUpdate:</span> </span><br><span class="line">      <span class="attr">maxUnavailable:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">maxSurge:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">revisionHistoryLimit:</span> <span class="number">7</span></span><br><span class="line">  <span class="attr">progressDeadlineSeconds:</span> <span class="number">600</span></span><br></pre></td></tr></table></figure>

<h3 id="应用资源配置清单"><a href="#应用资源配置清单" class="headerlink" title="应用资源配置清单"></a>应用资源配置清单</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 ~]# kubectl apply -f http://k8s-yaml.od.com/test/dubbo-demo-consumer/deployment.yaml</span><br><span class="line">deployment.extensions/dubbo-demo-consumer configured</span><br></pre></td></tr></table></figure>

<h3 id="检查"><a href="#检查" class="headerlink" title="检查"></a>检查</h3><p>查看filebeat是否跟随启动，logm目录里是否有日志</p>
<p><img src="/image/345679879.png"></p>
<p>看到kafaka-manager里，topic打进来，即为成功</p>
<p><img src="/image/1765432234.png"></p>
]]></content>
      <categories>
        <category>Kubernetes</category>
        <category>ELK</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>部署heapster</title>
    <url>/2019/12/04/%E9%83%A8%E7%BD%B2heapster/</url>
    <content><![CDATA[<p>heapster就是让dashboard好看起来</p>
<h2 id="准备镜像"><a href="#准备镜像" class="headerlink" title="准备镜像"></a>准备镜像</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-200 dashboard]# mkdir /data/k8s-yaml/heapster</span><br><span class="line">[root@hdss7-200 dashboard]# cd /data/k8s-yaml/heapster</span><br><span class="line">[root@hdss7-200 heapster]# docker pull quay.io/bitnami/heapster:1.5.4</span><br><span class="line">[root@hdss7-200 heapster]# docker tag quay.io/bitnami/heapster:1.5.4 harbor.od.com/public/heapster:v1.5.4</span><br><span class="line">[root@hdss7-200 heapster]# docker push harbor.od.com/public/heapster:v1.5.4</span><br></pre></td></tr></table></figure>

 <span id="more"></span>

<h2 id="准备配置清单"><a href="#准备配置清单" class="headerlink" title="准备配置清单"></a>准备配置清单</h2><p>rbac</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-200 heapster]# vi rbac.yaml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ServiceAccount</span><br><span class="line">metadata:</span><br><span class="line">  name: heapster</span><br><span class="line">  namespace: kube-system</span><br><span class="line">---</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1beta1</span><br><span class="line">metadata:</span><br><span class="line">  name: heapster</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: system:heapster</span><br><span class="line">subjects:</span><br><span class="line">- kind: ServiceAccount</span><br><span class="line">  name: heapster</span><br><span class="line">  namespace: kube-system</span><br></pre></td></tr></table></figure>


<p>​    deployment</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-200 heapster]# vi deployment.yaml</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: heapster</span><br><span class="line">  namespace: kube-system</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        task: monitoring</span><br><span class="line">        k8s-app: heapster</span><br><span class="line">    spec:</span><br><span class="line">      serviceAccountName: heapster</span><br><span class="line">      containers:</span><br><span class="line">      - name: heapster</span><br><span class="line">        image: harbor.od.com/public/heapster:v1.5.4</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        command:</span><br><span class="line">        - /opt/bitnami/heapster/bin/heapster</span><br><span class="line">        - --source=kubernetes:https://kubernetes.default</span><br><span class="line">        </span><br><span class="line">[root@hdss7-200 heapster]# vi service.yaml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    task: monitoring</span><br><span class="line">    kubernetes.io/cluster-service: &#x27;true&#x27;</span><br><span class="line">    kubernetes.io/name: Heapster</span><br><span class="line">  name: heapster</span><br><span class="line">  namespace: kube-system</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">  - port: 80</span><br><span class="line">    targetPort: 8082</span><br><span class="line">  selector:</span><br><span class="line">    k8s-app: heapster</span><br></pre></td></tr></table></figure>

<h2 id="创建配置清单"><a href="#创建配置清单" class="headerlink" title="创建配置清单"></a>创建配置清单</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 ~]# kubectl apply -f http://k8s-yaml.od.com/heapster/rbac.yaml</span><br><span class="line">serviceaccount/heapster created</span><br><span class="line">clusterrolebinding.rbac.authorization.k8s.io/heapster created</span><br><span class="line">[root@hdss7-21 ~]# kubectl apply -f http://k8s-yaml.od.com/heapster/deployment.yaml</span><br><span class="line">deployment.extensions/heapster created</span><br><span class="line">[root@hdss7-21 ~]# kubectl apply -f http://k8s-yaml.od.com/heapster/service.yaml</span><br><span class="line">service/heapster created</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
  </entry>
  <entry>
    <title>部署kibana</title>
    <url>/2020/01/08/%E9%83%A8%E7%BD%B2kibana/</url>
    <content><![CDATA[<p>运维主机HDSS7-200.host.com上：</p>
<h3 id="准备镜像"><a href="#准备镜像" class="headerlink" title="准备镜像"></a>准备镜像</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-200 ~]# docker pull kibana:6.8.6</span><br><span class="line">[root@hdss7-200 ~]# docker tag adfab5632ef4 harbor.od.com/infra/kibana:v6.8.6</span><br><span class="line">[root@hdss7-200 ~]# docker push harbor.od.com/infra/kibana:v6.8.6</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h3 id="准备资源配置清单"><a href="#准备资源配置清单" class="headerlink" title="准备资源配置清单"></a>准备资源配置清单</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line">[<span class="string">root@hdss7-200</span> <span class="string">~</span>]<span class="comment"># mkdir /data/k8s-yaml/kibana</span></span><br><span class="line">[<span class="string">root@hdss7-200</span> <span class="string">~</span>]<span class="comment"># cd /data/k8s-yaml/kibana</span></span><br><span class="line">[<span class="string">root@hdss7-200</span> <span class="string">kibana</span>]<span class="comment"># vim deployment.yaml</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kibana</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">infra</span></span><br><span class="line">  <span class="attr">labels:</span> </span><br><span class="line">    <span class="attr">name:</span> <span class="string">kibana</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span> </span><br><span class="line">      <span class="attr">name:</span> <span class="string">kibana</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span> </span><br><span class="line">        <span class="attr">app:</span> <span class="string">kibana</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">kibana</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">kibana</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">harbor.od.com/infra/kibana:v6.8.6</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">5601</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">ELASTICSEARCH_URL</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">http://10.4.7.12:9200</span></span><br><span class="line">      <span class="attr">imagePullSecrets:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">harbor</span></span><br><span class="line">      <span class="attr">securityContext:</span> </span><br><span class="line">        <span class="attr">runAsUser:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">strategy:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">RollingUpdate</span></span><br><span class="line">    <span class="attr">rollingUpdate:</span> </span><br><span class="line">      <span class="attr">maxUnavailable:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">maxSurge:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">revisionHistoryLimit:</span> <span class="number">7</span></span><br><span class="line">  <span class="attr">progressDeadlineSeconds:</span> <span class="number">600</span></span><br><span class="line"></span><br><span class="line">[<span class="string">root@hdss7-200</span> <span class="string">kibana</span>]<span class="comment"># vim service.yaml</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span> </span><br><span class="line">  <span class="attr">name:</span> <span class="string">kibana</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">infra</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">5601</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">5601</span></span><br><span class="line">  <span class="attr">selector:</span> </span><br><span class="line">    <span class="attr">app:</span> <span class="string">kibana</span></span><br><span class="line"></span><br><span class="line">[<span class="string">root@hdss7-200</span> <span class="string">kibana</span>]<span class="comment"># vim ingress.yaml</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">metadata:</span> </span><br><span class="line">  <span class="attr">name:</span> <span class="string">kibana</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">infra</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">kibana.od.com</span></span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">        <span class="attr">backend:</span> </span><br><span class="line">          <span class="attr">serviceName:</span> <span class="string">kibana</span></span><br><span class="line">          <span class="attr">servicePort:</span> <span class="number">5601</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="添加A记录"><a href="#添加A记录" class="headerlink" title="添加A记录"></a>添加A记录</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-11 ~]# vim /var/named/od.com.zone</span><br><span class="line">kibana         A  10.4.7.10</span><br><span class="line">[root@hdss7-11 ~]# systemctl restart named</span><br><span class="line">[root@hdss7-11 ~]# dig -t A kibana.od.com @10.4.7.11 +short</span><br><span class="line">10.4.7.10</span><br></pre></td></tr></table></figure>

<h3 id="创建资源配置清单"><a href="#创建资源配置清单" class="headerlink" title="创建资源配置清单"></a>创建资源配置清单</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-21 ~]# kubectl apply -f http://k8s-yaml.od.com/kibana/deployment.yaml</span><br><span class="line">deployment.extensions/kibana created</span><br><span class="line">[root@hdss7-21 ~]# kubectl apply -f http://k8s-yaml.od.com/kibana/service.yaml</span><br><span class="line">service/kibana created</span><br><span class="line">[root@hdss7-21 ~]# kubectl apply -f http://k8s-yaml.od.com/kibana/ingress.yaml</span><br><span class="line">ingress.extensions/kibana created</span><br></pre></td></tr></table></figure>

<h3 id="web展示"><a href="#web展示" class="headerlink" title="web展示"></a>web展示</h3><p>es监控</p>
<p><img src="/image/457654031.png"></p>
<p>日志展示</p>
<p><img src="/image/8765432445.png"></p>
]]></content>
      <categories>
        <category>Kubernetes</category>
        <category>ELK</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>部署logstash</title>
    <url>/2020/01/08/%E9%83%A8%E7%BD%B2logstash/</url>
    <content><![CDATA[<p>运维主机<a href="http://hdss7-200.host.com/">HDSS7-200.host.com</a>上：</p>
<h3 id="准备镜像"><a href="#准备镜像" class="headerlink" title="准备镜像"></a>准备镜像</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-200 ~]# docker pull logstash:6.8.6</span><br><span class="line">[root@hdss7-200 ~]# docker tag d0a2dac51fcb harbor.od.com/infra/logstash:v6.8.6</span><br><span class="line">[root@hdss7-200 ~]# docker push harbor.od.com/infra/logstash:v6.8.6</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h3 id="准备配置文件"><a href="#准备配置文件" class="headerlink" title="准备配置文件"></a>准备配置文件</h3><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">[</span>root@hdss7<span class="number">-200</span> ~<span class="punctuation">]</span># mkdir /etc/logstash/</span><br><span class="line"><span class="punctuation">[</span>root@hdss7<span class="number">-200</span> ~<span class="punctuation">]</span># vim /etc/logstash/logstash-test.conf</span><br><span class="line">input <span class="punctuation">&#123;</span></span><br><span class="line">  kafka <span class="punctuation">&#123;</span></span><br><span class="line">    bootstrap_servers =&gt; <span class="string">&quot;10.4.7.11:9092&quot;</span></span><br><span class="line">    client_id =&gt; <span class="string">&quot;10.4.7.200&quot;</span></span><br><span class="line">    consumer_threads =&gt; <span class="number">4</span></span><br><span class="line">    group_id =&gt; <span class="string">&quot;k8s_test&quot;</span>               # 为test组</span><br><span class="line">    topics_pattern =&gt; <span class="string">&quot;k8s-fb-test-.*&quot;</span>   # 只收集k8s-fb-test开头的topics</span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line">filter <span class="punctuation">&#123;</span></span><br><span class="line">  json <span class="punctuation">&#123;</span></span><br><span class="line">    source =&gt; <span class="string">&quot;message&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line">output <span class="punctuation">&#123;</span></span><br><span class="line">  elasticsearch <span class="punctuation">&#123;</span></span><br><span class="line">    hosts =&gt; <span class="punctuation">[</span><span class="string">&quot;10.4.7.12:9200&quot;</span><span class="punctuation">]</span></span><br><span class="line">    index =&gt; <span class="string">&quot;k8s-test-%&#123;+YYYY.MM.DD&#125;&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">[</span>root@hdss7<span class="number">-200</span> ~<span class="punctuation">]</span># vim /etc/logstash/logstash-prod.conf</span><br><span class="line">input <span class="punctuation">&#123;</span></span><br><span class="line">  kafka <span class="punctuation">&#123;</span></span><br><span class="line">    bootstrap_servers =&gt; <span class="string">&quot;10.4.7.11:9092&quot;</span></span><br><span class="line">    client_id =&gt; <span class="string">&quot;10.4.7.200&quot;</span></span><br><span class="line">    consumer_threads =&gt; <span class="number">4</span></span><br><span class="line">    group_id =&gt; <span class="string">&quot;k8s_prod&quot;</span>                   </span><br><span class="line">    topics_pattern =&gt; <span class="string">&quot;k8s-fb-prod-.*&quot;</span> </span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line">filter <span class="punctuation">&#123;</span></span><br><span class="line">  json <span class="punctuation">&#123;</span></span><br><span class="line">    source =&gt; <span class="string">&quot;message&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line">output <span class="punctuation">&#123;</span></span><br><span class="line">  elasticsearch <span class="punctuation">&#123;</span></span><br><span class="line">    hosts =&gt; <span class="punctuation">[</span><span class="string">&quot;10.4.7.12:9200&quot;</span><span class="punctuation">]</span></span><br><span class="line">    index =&gt; “k8s-prod-%<span class="punctuation">&#123;</span>+YYYY.MM.DD<span class="punctuation">&#125;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="测试logstash启动"><a href="#测试logstash启动" class="headerlink" title="测试logstash启动"></a>测试logstash启动</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-200 ~]# docker run -d --restart=always --name logstash-test -v /etc/logstash:/etc/logstash  harbor.od.com/infra/logstash:v6.8.6 -f /etc/logstash/logstash-test.conf</span><br><span class="line">5e108d0c638f7c324d7ae95af1b69c03075ac101b9f4f8a2976a753ac9cafd68</span><br><span class="line">[root@hdss7-200 ~]# docker ps -a|grep logstash</span><br><span class="line">5e108d0c638f    [harbor.od.com/infra/logstash:v6.8.6](http://harbor.od.com/infra/logstash:v6.8.6)         &quot;/usr/local/bin/dock…&quot;  14 seconds ago   Up 12 seconds        5044/tcp, 9600/tcp     logstash-test</span><br></pre></td></tr></table></figure>

<h3 id="查看es是否接收数据"><a href="#查看es是否接收数据" class="headerlink" title="查看es是否接收数据"></a>查看es是否接收数据</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-200 ~]# curl http://10.4.7.12:9200/_cat/indices?v</span><br><span class="line">health status index        uuid          pri rep docs.count docs.deleted store.size pri.store.size</span><br><span class="line">green open  k8s-test-2020.01.07 mFEQUyKVTTal8c97VsmZHw  5  0     12      0   78.4kb     78.4kb</span><br></pre></td></tr></table></figure>

<h3 id="这是logstash启动"><a href="#这是logstash启动" class="headerlink" title="这是logstash启动"></a>这是logstash启动</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-200 ~]# docker run -d --restart=always --name logstash-prod -v /etc/logstash:/etc/logstash  harbor.od.com/infra/logstash:v6.8.6 -f /etc/logstash/logstash-prod.conf</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Kubernetes</category>
        <category>ELK</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>部署metrics-server</title>
    <url>/2019/12/04/%E9%83%A8%E7%BD%B2metrics-server/</url>
    <content><![CDATA[<p>从 v1.8 开始，资源使用情况的度量（如容器的 CPU 和内存使用）可以通过 Metrics API 获取。</p>
<p>Metrics API 只可以查询当前的度量数据，并不保存历史数据；</p>
<p>遗憾的是，当前Kubernetes Dashboard还不支持metrics-server。因此如果使用metrics-server替代了heapster，将无法在dashboard中以图形展示Pod的内存和CPU情况；</p>
<h2 id="apiserver配置"><a href="#apiserver配置" class="headerlink" title="apiserver配置"></a>apiserver配置</h2><p>在部署 metrics-server 之前，需要在 kube-apiserver.sh中开启 API Aggregation，即增加以下配置：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">--requestheader-client-ca-file=./cert/ca.pem \</span><br><span class="line">--requestheader-allowed-names=aggregator \</span><br><span class="line">--requestheader-extra-headers-prefix=X-Remote-Extra- \</span><br><span class="line">--requestheader-group-headers=X-Remote-Group \</span><br><span class="line">--requestheader-username-headers=X-Remote-User \</span><br><span class="line">--proxy-client-cert-file=./certs/metrics-server.pem \</span><br><span class="line">--proxy-client-key-file=./cert/metrics-server-key.pem \</span><br><span class="line">--enable-aggregator-routing=true \</span><br></pre></td></tr></table></figure>

<p>注意：如果 kube-apiserver 机器没有运行 kube-proxy，则还需要添加 –enable-aggregator-routing&#x3D;true</p>
<h3 id="创建证书"><a href="#创建证书" class="headerlink" title="创建证书"></a>创建证书</h3><p><strong>创建 metrics-server 证书签名请求</strong></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">[</span>root@ops<span class="number">-200</span> certs<span class="punctuation">]</span># vim metrics-server-csr.json </span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;CN&quot;</span><span class="punctuation">:</span> <span class="string">&quot;aggregator&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hosts&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;algo&quot;</span><span class="punctuation">:</span> <span class="string">&quot;rsa&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="number">2048</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;names&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;C&quot;</span><span class="punctuation">:</span> <span class="string">&quot;CN&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;ST&quot;</span><span class="punctuation">:</span> <span class="string">&quot;BeiJing&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;L&quot;</span><span class="punctuation">:</span> <span class="string">&quot;BeiJing&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;O&quot;</span><span class="punctuation">:</span> <span class="string">&quot;qianyan&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;OU&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ops&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p>注意： CN 名称为 aggregator，需要与 kube-apiserver 的 –requestheader-allowed-names 参数配置一致</p>
<p><strong>证书创建</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 certs]# cfssl gencert \</span><br><span class="line">-ca=ca.pem \</span><br><span class="line">-ca-key=ca-key.pem \</span><br><span class="line">-config=ca-config.json \</span><br><span class="line">-profile=client metrics-server-csr.json | cfssl-json -bare metrics-server</span><br></pre></td></tr></table></figure>

<p>将生成的证书和私钥文件拷贝到 kube-apiserver 节点</p>
<p>然后重启kube-apiserver服务</p>
<h2 id="配置kubelet"><a href="#配置kubelet" class="headerlink" title="配置kubelet"></a>配置kubelet</h2><p>删除 –read-only-port&#x3D;0       # 关闭只读端口(默认 10255)，等效为未指定<br>添加 –authentication-token-webhook&#x3D;true  # 使用 TokenReview API 来确定不记名令牌的身份</p>
<h2 id="配置metrics-server"><a href="#配置metrics-server" class="headerlink" title="配置metrics-server"></a>配置metrics-server</h2><p><a href="https://github.com/kubernetes-sigs/metrics-server/tree/v0.3.6">https://github.com/kubernetes-sigs/metrics-server/tree/v0.3.6</a></p>
<h3 id="准备镜像"><a href="#准备镜像" class="headerlink" title="准备镜像"></a>准备镜像</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 ~]# docker pull bluersw/metrics-server-amd64</span><br><span class="line">[root@ops-200 ~]# docker images|grep metrics-server</span><br><span class="line">bluersw/metrics-server-amd64                                           v0.3.6                                      9dd718864ce6        6 months ago        39.9MB</span><br><span class="line">[root@ops-200 ~]# docker tag 9dd718864ce6  harbor.od.com/public/metrics-server-amd64:v0.3.6</span><br><span class="line">[root@ops-200 ~]# docker push harbor.od.com/public/metrics-server-amd64:v0.3.6</span><br></pre></td></tr></table></figure>

<h3 id="准备资源配置清单"><a href="#准备资源配置清单" class="headerlink" title="准备资源配置清单"></a>准备资源配置清单</h3><p><strong>创建资源目录</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 ~]# mkdir /data/k8s-yaml/dashboard/metrics</span><br><span class="line">[root@ops-200 ~]# cd /data/k8s-yaml/dashboard/metrics</span><br></pre></td></tr></table></figure>

<p><strong>修改yaml添加启动参数</strong></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line">[<span class="string">root@ops-200</span> <span class="string">metrics</span>]<span class="comment"># wget https://github.com/kubernetes-sigs/metrics-server/archive/v0.3.6.tar.gz</span></span><br><span class="line">[<span class="string">root@ops-200</span> <span class="string">metrics</span>]<span class="comment"># tar xf v0.3.6.tar.gz</span></span><br><span class="line">[<span class="string">root@ops-200</span> <span class="string">metrics</span>]<span class="comment"># cd metrics-server-0.3.6/deploy/1.8+</span></span><br><span class="line">[<span class="string">root@ops-200</span> <span class="string">metrics</span>]<span class="comment"># vim metrics-server-deployment.yaml</span></span><br><span class="line">        <span class="attr">args:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">--kubelet-insecure-tls</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">--kubelet-preferred-address-types=InternalIP,Hostname,InternalDNS,ExternalDNS,ExternalIP</span></span><br></pre></td></tr></table></figure>

<p>kubelet-insecure-tls: 跳过验证kubelet的ca证书，暂时开启</p>
<p>kubelet-preferred-address-types：metrics-server连节点时默认是连接节点的主机名，需要加个参数，让它连接节点的IP</p>
<h3 id="应用资源配置清单"><a href="#应用资源配置清单" class="headerlink" title="应用资源配置清单"></a>应用资源配置清单</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 metrics]# kubectl apply -f .</span><br></pre></td></tr></table></figure>

<h3 id="检查数据"><a href="#检查数据" class="headerlink" title="检查数据"></a>检查数据</h3><p>刚搭建完会没有数据，过几分钟就能收集到数据了</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ops-200 metrics]# kubectl top nodes</span><br><span class="line">NAME                CPU(cores)   CPU%   MEMORY(bytes)   MEMORY%   </span><br><span class="line">k8s01-21.host.com   135m         6%     1330Mi          22%       </span><br><span class="line">k8s02-22.host.com   247m         12%    3307Mi          56%       </span><br><span class="line">k8s03-23.host.com   1303m        65%    4860Mi          83%   </span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
  </entry>
  <entry>
    <title>部署签发证书环境</title>
    <url>/2019/11/17/%E9%83%A8%E7%BD%B2%E7%AD%BE%E5%8F%91%E8%AF%81%E4%B9%A6%E7%8E%AF%E5%A2%83/</url>
    <content><![CDATA[<p>HDSS7-200.host.com上部署</p>
<h3 id="安装cfssl"><a href="#安装cfssl" class="headerlink" title="安装cfssl"></a>安装cfssl</h3><p>证书签发工具CFSSL: R1.2</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-200 ~]# wget https://pkg.cfssl.org/R1.2/cfssl_linux-amd64 -O /usr/bin/cfssl</span><br><span class="line">[root@hdss7-200 ~]# wget https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64 -O /usr/bin/cfssl-json</span><br><span class="line">[root@hdss7-200 ~]# wget https://pkg.cfssl.org/R1.2/cfssl-certinfo_linux-amd64  -O  /usr/bin/cfssl-certinfo</span><br><span class="line">[root@hdss7-200 ~]# chmod +x /usr/bin/cfssl*</span><br></pre></td></tr></table></figure>

 <span id="more"></span>

<h3 id="签发CA证书"><a href="#签发CA证书" class="headerlink" title="签发CA证书"></a>签发CA证书</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hdss7-200 ~]# mkdir /opt/certs</span><br><span class="line">[root@hdss7-200 ~]# vim /opt/certs/ca-csr.json</span><br><span class="line">&#123;</span><br><span class="line">    &quot;CN&quot;: &quot;kubernetes-ca&quot;,</span><br><span class="line">    &quot;hosts&quot;: [</span><br><span class="line">    ],</span><br><span class="line">    &quot;key&quot;: &#123;</span><br><span class="line">        &quot;algo&quot;: &quot;rsa&quot;,</span><br><span class="line">        &quot;size&quot;: 2048</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;names&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;C&quot;: &quot;CN&quot;,</span><br><span class="line">            &quot;ST&quot;: &quot;beijing&quot;,</span><br><span class="line">            &quot;L&quot;: &quot;beijing&quot;,</span><br><span class="line">            &quot;O&quot;: &quot;od&quot;,</span><br><span class="line">            &quot;OU&quot;: &quot;ops&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;ca&quot;: &#123;</span><br><span class="line">        &quot;expiry&quot;: &quot;175200h&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@hdss7-200 certs]# cfssl gencert -initca ca-csr.json | cfssl-json -bare ca</span><br><span class="line">2019/11/14 22:11:15 [INFO] generating a new CA key and certificate from CSR</span><br><span class="line">2019/11/14 22:11:15 [INFO] generate received request</span><br><span class="line">2019/11/14 22:11:15 [INFO] received CSR</span><br><span class="line">2019/11/14 22:11:15 [INFO] generating key: rsa-2048</span><br><span class="line">2019/11/14 22:11:17 [INFO] encoded CSR</span><br><span class="line">2019/11/14 22:11:17 [INFO] signed certificate with serial number 187881180802765134832828872272434233634323793351</span><br><span class="line">[root@hdss7-200 certs]# ll</span><br><span class="line">total 16</span><br><span class="line">-rw-r--r-- 1 root root  332 Nov 14 22:04 ca-csr.json</span><br><span class="line">-rw------- 1 root root 1675 Nov 14 22:11 ca-key.pem</span><br><span class="line">-rw-r--r-- 1 root root 1001 Nov 14 22:11 ca.csr</span><br><span class="line">-rw-r--r-- 1 root root 1354 Nov 14 22:11 ca.pem</span><br></pre></td></tr></table></figure>

<p>CN: Common Name，浏览器使用该字段验证网站是否合法，一般写的是域名。非常重要。浏览器使用该字段验证网站是否合法</p>
<p>C: Country， 国家</p>
<p>ST: State，州，省</p>
<p>L: Locality，地区，城市</p>
<p>O: Organization Name，组织名称，公司名称</p>
<p>OU: Organization Unit Name，组织单位名称，公司部门</p>
]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
  </entry>
  <entry>
    <title>阿里云开源项目Sentinel</title>
    <url>/2019/04/05/%E9%98%BF%E9%87%8C%E4%BA%91%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AESentinel/</url>
    <content><![CDATA[<h3 id="sentinel介绍"><a href="#sentinel介绍" class="headerlink" title="sentinel介绍"></a>sentinel介绍</h3><p>Sentinel 是面向分布式服务架构的轻量级流量控制框架，主要以流量为切入点，从流量控制、熔断降级、系统负载保护等多个维度来帮助您保护服务的稳定性。</p>
<p><img src="/image/1554453294-15544532871.png"></p>
 <span id="more"></span>

<h3 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h3><ul>
<li>资源</li>
</ul>
<p>只要通过 Sentinel API 定义的代码，就是资源，能够被 Sentinel 保护起来。大部分情况下，可以使用方法签名，URL，甚至服务名称作为资源名来标示资源。  </p>
<ul>
<li>规则</li>
</ul>
<p>围绕资源的实时状态设定的规则，可以包括流量控制规则、熔断降级规则以及系统保护规则。所有规则可以动态实时调整。</p>
<h3 id="流量控制"><a href="#流量控制" class="headerlink" title="流量控制"></a>流量控制</h3><p>流量控制在网络传输中是一个常用的概念，它用于调整网络包的发送数据。然而，从系统稳定性角度考虑，在处理请求的速度上，也有非常多的讲究。任意时间到来的请求往往是随机不可控的，而系统的处理能力是有限的。我们需要根据系统的处理能力对流量进行控制。</p>
<p>流量控制有以下几个角度:</p>
<ol>
<li><p>资源的调用关系，例如资源的调用链路，资源和资源之间的关系；</p>
</li>
<li><p>运行指标，例如 QPS、线程池、系统负载等；</p>
</li>
<li><p>控制的效果，例如直接限流、冷启动、排队等。</p>
</li>
</ol>
<p>Sentinel 的设计理念是让您自由选择控制的角度，并进行灵活组合，从而达到想要的效果</p>
<h3 id="熔断降级"><a href="#熔断降级" class="headerlink" title="熔断降级"></a>熔断降级</h3><p>由于调用关系的复杂性，如果调用链路中的某个资源出现了不稳定，最终会导致请求发生堆积。</p>
<p>当调用链路中某个资源出现不稳定，例如，表现为 timeout，异常比例升高的时候，则对这个资源的调用进行限制，并让请求快速失败，避免影响到其它的资源，最终产生雪崩的效果。</p>
<p>Sentinel 对这个问题采取了两种手段:</p>
<ul>
<li>通过并发线程数进行限制</li>
</ul>
<p>和资源池隔离的方法不同，Sentinel 通过限制资源并发线程的数量，来减少不稳定资源对其它资源的影响。这样不但没有线程切换的损耗，也不需要您预先分配线程池的大小。当某个资源出现不稳定的情况下，例如响应时间变长，对资源的直接影响就是会造成线程数的逐步堆积。当线程数在特定资源上堆积到一定的数量之后，对该资源的新请求就会被拒绝。堆积的线程完成任务后才开始继续接收请求。</p>
<ul>
<li>通过响应时间对资源进行降级</li>
</ul>
<p>除了对并发线程数进行控制以外，Sentinel 还可以通过响应时间来快速降级不稳定的资源。当依赖的资源出现响应时间过长后，所有对该资源的访问都会被直接拒绝，直到过了指定的时间窗口之后才重新恢复。</p>
<h3 id="系统负载保护"><a href="#系统负载保护" class="headerlink" title="系统负载保护"></a>系统负载保护</h3><p>Sentinel 同时对系统的维度提供保护。防止雪崩，是系统防护中重要的一环。当系统负载较高的时候，如果还持续让请求进入，可能会导致系统崩溃，无法响应。在集群环境下，网络负载均衡会把本应这台机器承载的流量转发到其它的机器上去。如果这个时候其它的机器也处在一个边缘状态的时候，这个增加的流量就会导致这台机器也崩溃，最后导致整个集群不可用。</p>
<p>针对这个情况，Sentinel 提供了对应的保护机制，让系统的入口流量和系统的负载达到一个平衡，保证系统在能力范围之内处理最多的请求</p>
<h3 id="Sentinel工作机制"><a href="#Sentinel工作机制" class="headerlink" title="Sentinel工作机制"></a>Sentinel工作机制</h3><ol>
<li><p>对主流框架提供适配或者显示的 API，来定义需要保护的资源，并提供设施对资源进行实时统计和调用链路分析。</p>
</li>
<li><p>根据预设的规则，结合对资源的实时统计信息，对流量进行控制。同时，Sentinel 提供开放的接口，方便您定义及改变规则。</p>
</li>
<li><p>Sentinel 提供实时的监控系统，方便您快速了解目前系统的状态。</p>
</li>
</ol>
<p><a href="https://github.com/alibaba/Sentinel/wiki/%E4%B8%BB%E9%A1%B5">官方文档</a> </p>
]]></content>
      <categories>
        <category>sentinel</category>
      </categories>
      <tags>
        <tag>sentinel</tag>
      </tags>
  </entry>
</search>
